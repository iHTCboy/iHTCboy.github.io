<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iHTCboy&#39;s blog</title>
  
  <subtitle>Learn something of everything,  Learn everything of something.</subtitle>
  <link href="https://ihtcboy.com/atom.xml" rel="self"/>
  
  <link href="https://ihtcboy.com/"/>
  <updated>2022-02-06T02:46:09.321Z</updated>
  <id>https://ihtcboy.com/</id>
  
  <author>
    <name>iHTCboy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二零二一，三十而立</title>
    <link href="https://ihtcboy.com/2022/01/01/2022-01-01_2021/"/>
    <id>https://ihtcboy.com/2022/01/01/2022-01-01_2021/</id>
    <published>2021-12-31T16:00:01.000Z</published>
    <updated>2022-02-06T02:46:09.321Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>“子曰：<br>‘吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲，不逾矩。’”</p><p>——— 《论语·为政》</p></blockquote><h3 id="一、序言"><a href="#一、序言" class="headerlink" title="一、序言"></a>一、序言</h3><p>2021年也经历了很多事情，正好 <strong>三十而立</strong>，一般的理解 <code>立</code> 是<strong>有所成就</strong>，但每个人对 “有所成就” 的理解并不一样，有人理解为 <code>事业有成</code>，而我理解是 <code>立心</code>。</p><span id="more"></span><p>对于博主来说，<strong>三十岁的立心，是对自己的言行品德的立</strong>，承担更多的角色责任，儿子、丈夫、女婿，甚至是父亲/爷爷。所以，独立承担责任，顶天立地，对自己对他们负责，没有偏见，良好德行等，对生活充满自信，对未来充满期待，这也许就是三十而立的初心。怎么理解三十岁？你应该有自己的见解。</p><h3 id="二、“卷”技术"><a href="#二、“卷”技术" class="headerlink" title="二、“卷”技术"></a>二、“卷”技术</h3><p>关于技术，学习方面已经没有什么说，掘金、公众号等，很多技术学习平台每天都有无数的技术文章分享，学习总是不会结束。而技术方面的问题，可能大家一直争论的都是非技术问题？比如 <code>PHP</code> 是不是最好的语言。</p><ul><li>用 Git 命令，还是 Sourcetree ？</li><li>用 macOS 还是 Windows ？</li><li>挤牙膏 Intel、Arm、M1 谁更未来 ？</li></ul><p>对于技术的争议，有了一定的经验和积累后，都不想多说话了，因为，世界上并没有最好的技术，只有最合适的技术。希望大家以后减少这样的争论，做更多的技术实践和创新，才是正道~</p><p>随着(移动)互联网红利消失，技术红利也消失了，因为互联风的“基建”已经非常的完善，基础的技术已经内卷不得了。建立一个网站、开发一个 app、复制一个小程序，所有服务都上云，留给开发者的红利机会也不再多了。另一方面，技术需要创新，需要突破，但技术发展并不会像技术应用那样，可以快速的迭代。</p><p>十年前云计算概念很火，如今万事皆上云！成为了互联网的基石，而今天，AI/AR/VR/MR/云宇宙等概念，开始火爆。正因为互联网的基建完成，为更多的技术提供了 <code>应用</code> <code>实用</code> 的可能性。就像识别带口罩的人脸，环境和市场的发展，一环扣一环，用发展的眼光看技术未来~</p><h3 id="三、程序员和工程师"><a href="#三、程序员和工程师" class="headerlink" title="三、程序员和工程师"></a>三、程序员和工程师</h3><p>2021年，说的最多的关键字 <code>卷</code>，“卷”技术已经成为如今技术圈里热门的话题。但如果仔细思考，其实卷的还是现有的技术，核心的技术和创新的技术，依然还有非常大的空间，但也需要更多的时间积累。我们还缺少这样的气候，不仅要分到更多的蛋糕，还能把蛋糕做大。</p><p>很多人比较了国内和国外的程序员，但是我认为他们比较的不是同一种岗位。中国 <code>卷</code> 的更多是程序员，更多是满足业务和需求的程序员，因为中国需要大量的开发人员来堆业务，往往只需要实现业务功能就可以，就如工厂的流水线工人。按着标准和固定的步骤，就能完成开发，这就是中国特色的程序员，也是有点无奈，毕竟我们以前家底薄。</p><p>如今 2022 年往后，我们需要怎么样的程序员呢？<strong>工程师</strong>是不是更加高大上的称呼，程序员和工程师有什么区别？以前读大学时，确实没有深入的体会，也没有深入的思考。</p><p>读书时我们按部就班，题海战术，完成每科考试，修够学分，毕业后全部都抛到脑后。工作后，忙碌完成各种需求和业务迭代开发，管中窥豹，接触各种新技术框架，但又不能形成全局观，迷惘又无法参透。相信很多朋友都有这样的体会，如果没有经历和思考，又怎么能想到解决方法？</p><ol><li>高级工程师</li><li>资深工程师（主管）</li><li>专家（经理）</li><li>高级专家（资深经理）</li><li>资深专家（总监）</li><li>研究员（资深总监）</li><li>CTO（CEO）</li></ol><p>我们有没有思考过，以上的职称是怎么衡量，我们又怎么定位自己？</p><p>比如，<strong>技术架构师和业务架构师</strong>，一个技术专家未必是一个优秀的业务架构师。</p><p>对于一个技术人员来说，首先需要更多的技术框架思考和学习，形成良好的系统设计思维，逻辑严谨，纵览全局，从点到线，解决更多问题，积累优秀的解决方案，从线到面，触类旁通，融会贯通，最后给出自己的解决方案！</p><p>技术架构师是技术通用的解决方案，而业务架构师，则需要对行业了如指掌，针对行业的特点定制业务解决方案。感觉成为架构师，可能技术只是基础的一方面，更多的思维和能力。</p><blockquote><p>当然，大家不必一定往技术一路走到黑，对于自己的思考，才是最重要的。</p></blockquote><h3 id="四、工作"><a href="#四、工作" class="headerlink" title="四、工作"></a>四、工作</h3><p>除了我们的技术核心，我们的大部分时间就是工作。其实对于自己来说，工作内容比较敏感不方便说，所以更多谈一下通用性的问题。</p><p><strong>圈子</strong></p><p>当我们在职场工作多年后，我们的圈子基本都相对固定，虽然有微博、抖音、B站、技术群等，越来越多的技术 up 主，但是我们每天跟谁交流？</p><p><strong>摸鱼</strong></p><p><code>摸鱼心态，假装很努力</code>。不需要 8 个小时都努力工作，我们每件事做到了百分百的认真了吗？微信的个人状态，有一个 <code>摸鱼</code> 状态，我至今没有搞明白，它是褒义词、贬义词、中性词。感觉摸鱼变成了一种光明正大的状态，我不清楚这对于广大的青少年是毒害还是磨炼。</p><p><strong>初心</strong></p><p><code>组织的利益和个人利益</code>。我以前为组织做事，总是站在组织的利益角度考虑，如果与个人利益冲突，还是以保证组织利益为先。其实，工作的初心是什么，满足自己金钱的需求，成长发展的需求，而组织的需求到底怎么满足？</p><p><strong>标准</strong></p><p>千差万别，沟通的理解，也有猜测。我们工作中，传达指令时，往往上级或下级，与我们想传达的内容有偏差，甚至相反的效果。所以，从个人角色来说，掌握好标准的沟通技巧，和必要的重复确认沟通，依然是无法通过技术来解决的。</p><p><strong>无限</strong></p><p><code>不缺问题，缺解决方案</code>。以前我总认为，工作可以做完，后来慢慢意思到，工作永远做不完。因为，工作永远不缺问题，缺的是发现问题和解决问题的方案。</p><h3 id="五、生活"><a href="#五、生活" class="headerlink" title="五、生活"></a>五、生活</h3><p>除了工作，我们还有自己的私生活，在公司面对同事老板，在家里面对另一伴、父母或亲友。其实工作也是生活的一部分，我们人际交流的需求，其实是相同的底层逻辑，只是我们忘记或停止了思考，认为理所当然了。</p><p><strong>真诚不装</strong></p><p><code>赞美？表扬？pua？</code>你的另一伴给你买了新衣服，你有没有表扬过 ta 吗？很多时候，工作上你赞扬上级，可能会被人认为拍马屁，久而久之，你就缺乏了表扬的脑回路。回到家，对于一件事，也理所当然的认为是应该的。所以，思考一下，你觉得理所当然？</p><p><strong>努力和毅力</strong></p><p>互联网技术带来的商业红利期逐渐过去了，中彩票式的财富急剧增长故事已不再有。以往可能只需要一点努力就可以获取成就，现在很努力可能已经不可行了。年轻人出头机会少，多劳者并不一定多得，所以，我认为有坚持不懈的毅力，往正确的方向走，才能获得成就。</p><p><strong>明智</strong><br><code>知人者智，自知者明。</code> 如果不了解每个人想要什么，那你怎么给别人。每当别人遇到困难或者不开心时，我们总是从我们过来人的思维，误以为可以给别人解忧。但是奇怪的事，当我们自己遇到困难或心情低落时，我们却无法给自己解脱！知道自己想什么吗？</p><p><strong>心态</strong></p><p>我们生活中有很多闯红灯发生的意外，但是我们在生活中闯红灯的人依然在！他们不吸取教训，依然去抢红灯，通常情况下不会发现意外，但忽视了墨菲定律，生命只有一次。另外一个现象是，聊天群里抢红包，不管抢到多少钱，那怕只有一分钱，只要能抢到就很开心。这样的心理学现象，大家都知道，但被人利用。所以，为什么我们懂了很多道理，却依然过不好这一生？</p><p><strong>定位</strong></p><p><code>用户定位</code>？产品定位？我们经常会给我们开发的项目进行产品定位，目标用户分析等，反过来，我们有没有给自己分析自己？有没有什么方式或指标，对自己的定位，有明确或科学的认识？</p><p>是一直做技术开发，还是换赛道当老板？</p><h3 id="六、思考（格局）"><a href="#六、思考（格局）" class="headerlink" title="六、思考（格局）"></a>六、思考（格局）</h3><p>今年流行的一句话：<code>格局一下子打开了！</code></p><p><strong>认知</strong><br>一个人只能挣到思维认知下的钱，<strong>提升思维认知</strong>。不同收入人群看待问题的角度和起点是不一样的，假如你在世界五百强企业，你见识过业务流水和利益以 <code>亿</code> 为单位计算时，你就会有不一样的认识。</p><p>举例来说，目前谷歌 Play 商店每年前 100 万美元收入抽15%，超过后30%。如果你的企业每个月都超出了 100 万美元，那么这个政策就变得没有那么重要了。相反，你可能想争取更多的权益，这就是今天反垄断不停的源头。资本如果有百分之五十的利润，它就会铤而走险，如果有百分之百的利润，它就敢践踏人间一切法律，如果有百分之三百的利润，它就敢犯下任何罪行。所以，你认知了吗</p><p><strong>理解</strong></p><p>同一个东西，在不同的角度，大家的理解也不相同。面试造飞机，工作造轮子，工作不是拧螺丝吗？举例来说，开发 app 的找回密码、绑定手机功能，从我们技术理解，他们可能就是直白的找回密码、绑定手机。并没有人给他们赋予更加深刻的理解，而产品经理的角度，<code>找回密码</code> 是客服功能，而 <code>绑定手机</code>是用户功能。所以，你理解了吗</p><p><strong>边界</strong></p><p><code>对你们公司到底如何赚钱，你有一个比较清晰的认知吗？</code>。生产要素里面不仅仅有技术要素，同时还有土地要素、资本要素、数据要素等等，工程师，除了技术，还了解什么？</p><p><strong>沸腾</strong></p><p>一直以为自己经历的 2008~2020 年，有比较深的理解，但当我看了《沸腾新十年》，才发现自己经历只是经历了，其实只是过路人的角色，并没有思考和总结，沸腾不起来。</p><p>十年后的自己是怎么样？十年后的行业、世界，又发生了什么变化？</p><p><strong>赛道</strong></p><p>未来 10 年到 20 年的赛道是什么？</p><p>我们可以对当下的技术或问题，发表它们未来的走向和趋势，但是我们没有想象过，它们聚合起来后的未来应该是怎么样？或者可以怎么样？</p><p><strong>速度</strong></p><p><code>欲速则不达</code>。不是不追求速度快，而是有积累经验的快。举例来说，试错的速度更快，距离达成就越近。</p><p><strong>经验</strong><br><code>眼见为实？</code></p><blockquote><p>如果有 10% 的利润，它就保证到处被使用；有 20% 的利润，它就活跃起来；有 50% 的利润，它就铤而走险；为了 100% 的利润，它就敢践踏一切人间法律；有 300% 的利润，它就敢犯任何罪行，甚至冒绞首的危险。</p></blockquote><p><strong>心胸</strong><br><code>求同存异</code>。我们应该尽然做到追求意见一致，如果无法达成也能包含异议。但<code>人往往是自私</code>的，如果不是在危险的情况下，人都会有自私的想法或行为。区别对待的公平性问题，趋利避害人性的博弈论等。<br>心胸：心智和胸怀，如何做到时刻的心胸宽广、胸怀大志？</p><h3 id="七、小结（小抄）"><a href="#七、小结（小抄）" class="headerlink" title="七、小结（小抄）"></a>七、小结（小抄）</h3><p><code>专注</code>，追求极致和追求完美的表现，导致花费更多的时间。当思考和总结时，必然需要花费大量时间，就像平时开发完功能后，我都会把所有测试的情况，所有预知的情况都模拟演示一遍，这需要花费更多的精力，也需要更多的时间，但必然也会给自己和别人，节省更多的返工时间。</p><p>所以，这里跟往年一样，摘抄的一些笔记，希望对大家有帮助。</p><p>以前年少时觉得，能帮就帮的理念，现在觉得没有提问好的问题，基本不想回答。这也理解了以前自己问大神们的问题，无比惭愧。</p><p><strong>向别人求助</strong></p><p>一个好的提问，包含这几点内容：</p><ol><li>谦虚的态度，</li><li>细致的问题背景，</li><li>目前你的进度和结论，</li><li>你期望得到的帮助等。</li></ol><p>问题复现尽可能详细，包括以下内容：</p><ul><li>操作步骤</li><li>重现条件</li><li>最好有截图/数据报告</li><li>最好能提供非业务相关的可复现代码片段</li></ul><p><strong>约局</strong></p><ol><li>先拟定意向时间，给大家做封闭选择“行还是不行”。不适合问大家什么时候有空等开放性问题</li><li>约饭要选择可以预见的时间，以免安排太长久，变数多。</li><li>约好之后要发日历，以免大家忙着忘记了。增加成功率。</li><li>如果还想更好一些，把吃什么、在哪里这些信息都提供了。</li></ol><p>以后知道怎么约饭了不？</p><p><strong>任正非文集</strong></p><blockquote><p>“公司推行效益优先，兼顾公平原则，让优秀分子先富裕起来，但要反对富裕起来后的不良行为，不要做违法乱纪的事，要加强精神文明教育，要作风正派，在公司按公司的纪律办事，在公司以外按国家法律办事，违反公司纪律和国家法律的，公司决不迁就。”<br>《团结奋斗 再创华为佳绩》</p></blockquote><blockquote><p>“对新来员工，因为没有记录，晋升较慢，为此十分歉意。如果您是一个开放系统，善于吸取别人的经验，善于与人合作，借助别人提供的基础，可能进步就会很快。如果封闭自己，怕工分不好算，就需要较长时间，也许到那时，你的工作成果已没有什么意义了。实践是您水平提高的基础，它充分的检验了您的不足，只有暴露出来，您才会有进步。实践再实践，尤其对青年学生十分重要。唯有实践后善于用理论去归纳总结，才会有飞跃的提高。有一句名言，没有记录的公司，迟早要跨掉的，多么尖锐。一个不善于总结的公司会有什么前途，个人也不是如此吗？”<br>《应届毕业生没有基础，公司不看没经验的人，回想自己毕业那时。》</p></blockquote><p><strong>初心</strong></p><p><code>think different</code>，我们总想与别人一样，别人会的，也要学，却不曾想着与别人不同的地方，自己的初心。</p><ol><li>不要去罗马，换个赛道，机会有限，你想要什么：钱 vs 生活/幸福？</li><li>承认自己的普通，和自己和解</li></ol><p><strong>学习</strong></p><p>学得更多，才能走的更远。</p><ol><li>思想落后</li><li>自我设限</li><li>资本兜底（保障/后路）</li></ol><p><strong>做事</strong></p><blockquote><p>我想首先就是，摆脱低自尊的心态，不要以自己为先，而是以事为先。<br>摆正心态，再来就是方法。我认为把事做成，关键是修炼这四个维度的能力：</p><p>认知上，要有认清时机、看到机会的能力看到多大机会做多大事。<br>思维上，必须要有看待问题的模型和清晰的逻辑。模型決定了方向感，逻辑決定精确度。<br>方法上，做任何事都要有一套流程和方法，要先知道怎么把事做对，然后才是开始做。<br>实践上，把事做成也是需要积累经验的。无论是踩过的坑，还是吃到的果实，都要亲自体验过。</p><p>如果确信事情能做好，可以得到别人的夸奖，那就去做。如果事情有做不好的风险，别人可能看不起自己，那么就不去做。这就是，把做一件事的目标，从做事变成了做人。</p><p>——— 张潇雨</p></blockquote><p><strong>人类7大罪</strong></p><ul><li>傲慢</li><li>嫉妒</li><li>愤怒</li><li>懒惰</li><li>贪婪</li><li>暴食</li><li>色欲</li></ul><p><strong>法律</strong></p><blockquote><p>法律的一个重要功能，正是在偏见中寻找平衡之道，<br>就是在各种偏见中形成一种平衡之道，<br>各种对立利益中，寻找出一种合乎中道的恰如其分。</p><p>——— 罗翔</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>疫情常态化下，消费者行为呈现出四大新趋势：消费两极分化明显，消费者圈层细分显著，全渠道呈常态，私域生态持续繁荣。</p><p>正如上文，给出了很多问题，也给出了很多答案，似乎有答案，但又似乎没有答案。这些不确定性，正是人生的魅力所在。正如人一样，人的一生，各种各样，同归，无法复制，正如世上没有两个一样的人。懂的越多，想的越多，就会觉得自己的境界还达不到，从而内心也许更平静、更多憧憬，做好自己的表率，知足。</p><p>我们往往在追求与别人一样时，忽视了自己的异样。</p><p>三十而立，四十不惑，未来十年，希望带着这些问题，传道受业解惑矣！</p><p><strong>最后</strong></p><p>在疫情常态化的大环境下，万物都在快速变化，对于每个人来说，都会有不同的体会。面对内外的环境，往大的方向看，每个人都付出了很多努力，可能因为不可抗拒的原因，得不到结果的日子。正因如此，每个人更加应该 “扎根”。</p><blockquote><p>“每个优秀的人，都有一段沉默的时光。<br>那段时光，是付出了很多努力，却得不到结果的日子。我们把它叫作“扎根”。”<br>——— 习近平</p></blockquote><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><ul><li><a href="https://ihtcboy.com/2021/01/01/2021-01-01_2020/">辞幕2020，前行2021 | iHTCboy’s blog</a></li><li><a href="https://m.weibo.cn/status/4660997389028076">普法达人张三 - 侵犯罪中的同意问题</a></li></ul><blockquote><p>一个技术高手未必是一个优秀的解决方案专家<br> <a href="https://mp.weixin.qq.com/s/MivhBBlwCqrNM3vxuSnI3w">论框架思维</a></p></blockquote><blockquote><p>一个好的提问大体是需要包含这几点内容：谦虚的态度，细致的问题背景，目前你的进度和结论，你期望得到的帮助等。<br><a href="https://mp.weixin.qq.com/s/HWbPbPBPYgFJsM-oc_4tvw">人物访谈 | 老司机周报主编 Parsifal 专访</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;“子曰：&lt;br&gt;‘吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲，不逾矩。’”&lt;/p&gt;
&lt;p&gt;——— 《论语·为政》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、序言&quot;&gt;&lt;a href=&quot;#一、序言&quot; class=&quot;headerlink&quot; title=&quot;一、序言&quot;&gt;&lt;/a&gt;一、序言&lt;/h3&gt;&lt;p&gt;2021年也经历了很多事情，正好 &lt;strong&gt;三十而立&lt;/strong&gt;，一般的理解 &lt;code&gt;立&lt;/code&gt; 是&lt;strong&gt;有所成就&lt;/strong&gt;，但每个人对 “有所成就” 的理解并不一样，有人理解为 &lt;code&gt;事业有成&lt;/code&gt;，而我理解是 &lt;code&gt;立心&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="life" scheme="https://ihtcboy.com/categories/life/"/>
    
    
    <category term="年终总结" scheme="https://ihtcboy.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    <category term="2022" scheme="https://ihtcboy.com/tags/2022/"/>
    
  </entry>
  
  <entry>
    <title>2021掘金年度技术创作者榜单</title>
    <link href="https://ihtcboy.com/2021/12/26/2021-12-26_2021%E6%8E%98%E9%87%91%E5%B9%B4%E5%BA%A6%E4%BA%BA%E6%B0%94%E5%88%9B%E4%BD%9C%E8%80%85%E6%A6%9C%E5%8D%95/"/>
    <id>https://ihtcboy.com/2021/12/26/2021-12-26_2021%E6%8E%98%E9%87%91%E5%B9%B4%E5%BA%A6%E4%BA%BA%E6%B0%94%E5%88%9B%E4%BD%9C%E8%80%85%E6%A6%9C%E5%8D%95/</id>
    <published>2021-12-26T04:00:16.000Z</published>
    <updated>2021-12-26T10:12:38.483Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>想起最近大家的一个讨论：“现在互联网这么多内容，我应该从那里开始学？跟谁学？”，还有很多优秀的技术团队或者开发者博客等很久没有发表新文章了，怎么让技术社区活跃起来等等。</p><p>正值 2021 年结尾，掘金举办《<a href="https://rank.juejin.cn/rank/2021">2021年度人气创作者榜单</a>》活动，让我们程序员狂欢的同时，其实也让优秀的开发者和团队，出现在大众的视野，出现在闪烁光芒的舞台舞台上！</p><p>所以，笔者从掘金的活动页面，梳理了人气创作者榜单，希望大家在投票和狂欢的同时，认识到更多优秀的开发者和团队，关注他们的文章和创新！向优秀学习，是让我们变成自己变得优秀的基础。</p><span id="more"></span><h3 id="二、技术团队"><a href="#二、技术团队" class="headerlink" title="二、技术团队"></a>二、技术团队</h3><p>这里收集了 92 个掘的技术团队，排名不分先后。（注：<code>数据收集时间截止：2021 年 12 月 26 日中午 12 点前。</code>）</p><p>这里列出了每个团队的大部分的简介，需要说的是，因为每个团队的创建时间不一样，所以文章的阅读数、点赞数、账号等级都不一定很高，大家可以根据自己的兴趣找到关注点啊~</p><table><thead><tr><th align="left">团队名</th><th align="left">简介</th><th align="left">标签</th><th align="left">公司</th><th align="left">文章数</th><th align="left">文章被点赞数</th><th align="left">文章被阅读数</th><th align="left">关注数</th><th align="left">等级</th></tr></thead><tbody><tr><td align="left"><a href="https://juejin.cn/user/1002387318511214">37手游iOS技术运营团队</a></td><td align="left">分享技术动态、实践和思考！热爱，开放，严谨，担当~</td><td align="left">iOS技术运营团队</td><td align="left">三七互娱</td><td align="left">11</td><td align="left">429</td><td align="left">42161</td><td align="left">286</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3456520257288974">政采云前端团队</a></td><td align="left">政采云前端 ZooTeam 团队，不掺水的原创。 团队站点：<a href="https://zoo.team/">https://zoo.team</a></td><td align="left">-</td><td align="left">公众号 @ 政采云前端团队</td><td align="left">229</td><td align="left">33875</td><td align="left">1405511</td><td align="left">22382</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3306939878744669">百应前端团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">浙江百应科技有限公司</td><td align="left">15</td><td align="left">499</td><td align="left">13973</td><td align="left">201</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/641770521630270">QiShare</a></td><td align="left">QiShare是一个移动端技术文章分享平台，由奇舞团（360集团大前端团队）的移动端团队运营。</td><td align="left">移动端团队</td><td align="left">奇舞团（360集团大前端团队）</td><td align="left">286</td><td align="left">4654</td><td align="left">653897</td><td align="left">19672</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3104676565234429">IDuxFE</a></td><td align="left"><a href="https://github.com/IDuxFE">https://github.com/IDuxFE</a></td><td align="left">前端</td><td align="left">深信服前端团队</td><td align="left">30</td><td align="left">889</td><td align="left">64033</td><td align="left">293</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139267650141">DevUI团队</a></td><td align="left">DevUI：面向企业中后台的前端开源解决方案。官网：devui.design</td><td align="left">前端组件库</td><td align="left">华为</td><td align="left">95</td><td align="left">3981</td><td align="left">302038</td><td align="left">2052</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3966693685605143">华为云开发者社区</a></td><td align="left">华为云开发者社区，提供全面深入的云计算前景分析、丰富的技术干货</td><td align="left">-</td><td align="left">-</td><td align="left">1758</td><td align="left">4483</td><td align="left">894896</td><td align="left">2705</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/818501527305213">知虾技术团队</a></td><td align="left">-</td><td align="left">开发工程师</td><td align="left">萌啦科技</td><td align="left">2</td><td align="left">53</td><td align="left">594</td><td align="left">75</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4169764695465239">ELab</a></td><td align="left">字节跳动大力教育前端团队，负责教育全线产品前端开发工作。</td><td align="left">前端工程师</td><td align="left">公众号：ELab团队</td><td align="left">87</td><td align="left">2740</td><td align="left">141209</td><td align="left">586</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2392959969672375">NEXTOP前端团队</a></td><td align="left">“NEXTOP前端团队”</td><td align="left">-</td><td align="left">明顶科技</td><td align="left">12</td><td align="left">1074</td><td align="left">35760</td><td align="left">346</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4186596000416094">百度Geek说</a></td><td align="left">公众号：百度Geek说</td><td align="left">架构师</td><td align="left">百度</td><td align="left">88</td><td align="left">1798</td><td align="left">57922</td><td align="left">160</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4046681599903463">比心FE</a></td><td align="left">我们相信在轻松、和谐氛围下，才能激发更多的创造力和积极性  期待你加入我们团队 一起造火箭！！</td><td align="left">研发</td><td align="left">比心APP</td><td align="left">17</td><td align="left">231</td><td align="left">10439</td><td align="left">76</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1935567327597559">专有钉钉前端团队</a></td><td align="left">😎 和我们一起探索大型组织数字化技术最佳实践 ~</td><td align="left">前端</td><td align="left">阿里巴巴集团 - 钉钉事业部</td><td align="left">7</td><td align="left">1406</td><td align="left">52932</td><td align="left">873</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2805609404828375">MobTech开发者</a></td><td align="left">-</td><td align="left">产品运营</td><td align="left">-</td><td align="left">42</td><td align="left">77</td><td align="left">24010</td><td align="left">38</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2664871914644525">雪球工程师团队</a></td><td align="left">陪赌、陪聊、陪改Bug。</td><td align="left">前端</td><td align="left">雪球财经</td><td align="left">20</td><td align="left">482</td><td align="left">30224</td><td align="left">77</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4072246798980567">阅文前端团队</a></td><td align="left">微信公众号 ID: yuewen_YFE，官网：<a href="https://blog.yux.team/">https://blog.yux.team</a></td><td align="left">前端工程师</td><td align="left">上海阅文信息技术有限公司</td><td align="left">49</td><td align="left">7784</td><td align="left">229147</td><td align="left">5866</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/114004940043800">mPaaS</a></td><td align="left">mPaaS 源于蚂蚁集团，致力于提供高效、灵活、稳定的移动研发、管理平台。</td><td align="left">mPaaS 官方专栏号</td><td align="left">蚂蚁集团</td><td align="left">139</td><td align="left">1798</td><td align="left">240880</td><td align="left">6371</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876753923911">ES2049</a></td><td align="left">爱好写代码</td><td align="left">-</td><td align="left">阿里巴巴 - CRO 技术部 - 体验技术</td><td align="left">62</td><td align="left">3849</td><td align="left">199731</td><td align="left">5243</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4089838988440024">微医前端团队</a></td><td align="left">微医集团大前端专栏，分享原创技术干货。</td><td align="left">公众号「 微医大前端技术 」</td><td align="left">-</td><td align="left">78</td><td align="left">4958</td><td align="left">270949</td><td align="left">1113</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3227821868332765">葡萄城技术团队</a></td><td align="left">葡萄城成立于 1980 年，是全球领先的软件开发技术和低代码平台提供商，以“ 赋能开发者”为使命，致力于通过各类软件开发工具和服务，创新开发模式，提升开发效率，推动软件产业发展，为“数字中国”建设提速。</td><td align="left">公众号</td><td align="left">葡萄城社区</td><td align="left">358</td><td align="left">230</td><td align="left">55942</td><td align="left">536</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1742052939018503">LigaAI</a></td><td align="left">做更懂开发者的智能研发管理平台</td><td align="left">-</td><td align="left">LigaAI</td><td align="left">25</td><td align="left">19</td><td align="left">4869</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/61228381124264">ZEGO即构</a></td><td align="left">音视频云服务通信商</td><td align="left">音视频云服务通信商</td><td align="left">ZEGO 即构科技</td><td align="left">48</td><td align="left">132</td><td align="left">18331</td><td align="left">392</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2137106333053912">袋鼠云数栈前端团队</a></td><td align="left">致力于创造、提供更好的 Web 交互体验</td><td align="left">前端开发工程师</td><td align="left">袋鼠云(杭州玳数科技有限公司)</td><td align="left">27</td><td align="left">598</td><td align="left">40352</td><td align="left">1728</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760847567016">网易云音乐大前端团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">网易云音乐</td><td align="left">81</td><td align="left">13430</td><td align="left">633275</td><td align="left">14035</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4275372600866717">快手电商无线团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">快手</td><td align="left">12</td><td align="left">396</td><td align="left">33001</td><td align="left">428</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2277843821933751">腾讯TNTWeb前端团队</a></td><td align="left">TNTWeb腾讯新闻前端团队</td><td align="left">前端</td><td align="left">腾讯</td><td align="left">20</td><td align="left">1034</td><td align="left">39762</td><td align="left">2140</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932942211464">设计稿智能生成代码</a></td><td align="left">imgcook.com 专注以 Sketch、PSD、静态图片等形式的视觉稿作为输入，通过智能化</td><td align="left">阿里巴巴 前端委员会智能化小组</td><td align="left">阿里巴巴</td><td align="left">179</td><td align="left">2418</td><td align="left">276473</td><td align="left">4222</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/949604400000199">Hikvision前端</a></td><td align="left">海康威视前端的技术分享，简历投递请联系 <a href="mailto:&#120;&#x69;&#97;&#x6e;&#x67;&#120;&#x69;&#x61;&#x6f;&#51;&#x40;&#x68;&#105;&#x6b;&#x76;&#x69;&#x73;&#105;&#x6f;&#110;&#46;&#x63;&#111;&#109;">&#120;&#x69;&#97;&#x6e;&#x67;&#120;&#x69;&#x61;&#x6f;&#51;&#x40;&#x68;&#105;&#x6b;&#x76;&#x69;&#x73;&#105;&#x6f;&#110;&#46;&#x63;&#111;&#109;</a></td><td align="left">-</td><td align="left">杭州海康威视数字技术股份有限公司</td><td align="left">36</td><td align="left">247</td><td align="left">26078</td><td align="left">299</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/395479917804733">StreamNative</a></td><td align="left">打造基于Apache Pulsar的下一代流平台</td><td align="left">-</td><td align="left">StreamNative</td><td align="left">170</td><td align="left">54</td><td align="left">55420</td><td align="left">78</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139266336574">融云</a></td><td align="left">安全、可靠的全球互联网通信云服务商</td><td align="left">公众号：融云全球互联网通信云</td><td align="left">-</td><td align="left">209</td><td align="left">46</td><td align="left">22308</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1222312659545351">知晓云</a></td><td align="left">知晓云是国内首家专注于小程序开发的后端云服务，为开发者提供最低门槛的 Serverless 无服务架构接入体验。</td><td align="left">-</td><td align="left">爱范儿</td><td align="left">83</td><td align="left">133</td><td align="left">29247</td><td align="left">112</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4388906147515367">奇舞精选</a></td><td align="left">《奇舞精选》是由奇舞团维护的前端技术社区。除周五外，每天向大家推荐一篇前端相关技术文章，每周五向大家推送汇总的奇舞周刊。</td><td align="left">前端</td><td align="left">奇虎360</td><td align="left">38</td><td align="left">6546</td><td align="left">266947</td><td align="left">7256</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4336129591484647">腾讯AlloyTeam</a></td><td align="left">腾讯 AlloyTeam 团队</td><td align="left">开发工程师</td><td align="left">腾讯</td><td align="left">19</td><td align="left">1099</td><td align="left">68871</td><td align="left">1173</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1275089221067928">AirtestProject</a></td><td align="left">网易游戏AirtestProject团队，开源了airtest和poco2个热门的自动化测试框架，拥有完整的自动化测试解决方案，欢迎咨询</td><td align="left">-</td><td align="left">@网易，公众号：AirtestProject</td><td align="left">106</td><td align="left">137</td><td align="left">147048</td><td align="left">406</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1530175206729016">字节架构前端</a></td><td align="left">字节基础架构前端团队</td><td align="left">FE</td><td align="left">字节跳动</td><td align="left">22</td><td align="left">2059</td><td align="left">87734</td><td align="left">674</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1882007127197694">有道技术团队</a></td><td align="left">有道技术团队，分享有道人的技术思考。<br>小助手微信：ydtech01，欢迎加入有道技术交流群~<br>技术团队邮箱：<a href="mailto:&#x79;&#x64;&#116;&#x65;&#99;&#104;&#x40;&#114;&#100;&#x2e;&#x6e;&#101;&#x74;&#x65;&#x61;&#115;&#101;&#46;&#99;&#111;&#x6d;">&#x79;&#x64;&#116;&#x65;&#99;&#104;&#x40;&#114;&#100;&#x2e;&#x6e;&#101;&#x74;&#x65;&#x61;&#115;&#101;&#46;&#99;&#111;&#x6d;</a></td><td align="left">技术布道师</td><td align="left">网易有道</td><td align="left">41</td><td align="left">352</td><td align="left">32415</td><td align="left">341</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3808363977648493">阿里巴巴云原生</a></td><td align="left">-</td><td align="left">-</td><td align="left">阿里巴巴集团</td><td align="left">860</td><td align="left">3508</td><td align="left">864461</td><td align="left">7087</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2665636828032446">JuiceFS</a></td><td align="left">JuiceFS is a distributed POSIX file system built on top of Redis and S3.</td><td align="left">-</td><td align="left">Juicedata</td><td align="left">18</td><td align="left">19</td><td align="left">1904</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/606586148237431">大转转FE</a></td><td align="left">公众号 - 大转转FE ， 欢迎关注</td><td align="left">大前端</td><td align="left">转转</td><td align="left">189</td><td align="left">7163</td><td align="left">379926</td><td align="left">9034</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3456520290310397">OPPO数智技术</a></td><td align="left">OPPO在大数据、云计算、人工智能等领域的技术干货及活动分享，招聘、内容合作、投稿，请留言~</td><td align="left">-</td><td align="left">OPPO</td><td align="left">93</td><td align="left">459</td><td align="left">98434</td><td align="left">3006</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2392954206960247">得物技术</a></td><td align="left">公众号@得物技术</td><td align="left">-</td><td align="left">-</td><td align="left">47</td><td align="left">765</td><td align="left">61174</td><td align="left">773</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/993614243303053">vivo互联网技术</a></td><td align="left">分享 vivo 互联网技术干货与沙龙活动，推荐最新行业动态与热门会议。欢迎</td><td align="left">vivo互联网技术</td><td align="left">vivo互联网</td><td align="left">215</td><td align="left">3309</td><td align="left">322560</td><td align="left">3882</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2815217981724269">推啊前端团队</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">40</td><td align="left">614</td><td align="left">33589</td><td align="left">126</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2656837431466839">运维开发故事</a></td><td align="left">公众号运维开发故事团队</td><td align="left">公众号运维开发故事</td><td align="left">-</td><td align="left">133</td><td align="left">93</td><td align="left">26324</td><td align="left">18</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/220363785507309">OneFlow一流科技</a></td><td align="left">一流科技OneFlow团队的技术分享账号，专注于深度学习，擅长分布式相关。<br>★ OneFlow深度学习框架：github.com/Oneflow-Inc/oneflow <br>★ OF云平台：oneflow.cloud</td><td align="left">团队</td><td align="left">一流科技</td><td align="left">19</td><td align="left">10</td><td align="left">5300</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/475443452453853">SphereEx</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">62</td><td align="left">24</td><td align="left">4073</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1838039172387262">字节跳动技术团队</a></td><td align="left">字节跳动的技术实践分享</td><td align="left">-</td><td align="left">字节跳动</td><td align="left">115</td><td align="left">5561</td><td align="left">814863</td><td align="left">17499</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1363050146844504">PingCAP</a></td><td align="left">PingCAP 是一家开源的新型分布式数据库公司，秉承开源是基础软件的未来这</td><td align="left">-</td><td align="left"><a href="http://pingcap.com/">http://pingcap.com</a></td><td align="left">533</td><td align="left">1192</td><td align="left">230586</td><td align="left">7329</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3104676535869518">腾讯IVWEB团队</a></td><td align="left">腾讯IVWEB团队，负责腾讯互动视频NOW直播、花样直播等产品。持续招聘前端</td><td align="left">-</td><td align="left">腾讯科技(深圳)有限公司</td><td align="left">92</td><td align="left">18208</td><td align="left">746567</td><td align="left">20722</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2400989126606653">Flutter社区</a></td><td align="left">Flutter: 为所有屏幕构建精美应用。Flutter 是 Google 开源的应用开发框架，通过一套代码库，高效构建出精美、原生平台编译的多平台应用。Flutter 官网: flutter.dev 中文开发者网站: flutter.cn</td><td align="left">开发者社区</td><td align="left">-</td><td align="left">32</td><td align="left">176</td><td align="left">19691</td><td align="left">327</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1732486054034584">CreditFE信用前端</a></td><td align="left">蚂蚁信用前端团队，通过创新和科技的力量，把信用事业普惠到生活、商业、企业中的每个角落，专注于小程序、数据可视化、低代码搭建、NodeJS、智能化、营销互动等技术领域。欢迎大家分享沟通技术，关注前端最新动态！</td><td align="left">developer</td><td align="left">alipay</td><td align="left">29</td><td align="left">697</td><td align="left">43321</td><td align="left">165</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1433418893104455">Conflux中文社区</a></td><td align="left">-</td><td align="left">-</td><td align="left">北京清红微谷技术开发有限责任公司</td><td align="left">133</td><td align="left">232</td><td align="left">153196</td><td align="left">350</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1363050147878503">蚂蚁集团分布式架构</a></td><td align="left">Github 地址：<a href="https://github.com/sofastack%EF%BC%8C%E8%87%B4%E5%8A%9B%E4%BA%8E%E6%89%93%E9%80%A0%E4%B8%80%E6%B5%81%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF%E5%9C%A8%E9%87%91%E8%9E%8D%E5%9C%BA">https://github.com/sofastack，致力于打造一流的分布式技术在金融场</a></td><td align="left">-</td><td align="left">蚂蚁集团</td><td align="left">215</td><td align="left">1672</td><td align="left">270388</td><td align="left">8501</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3966693685339367">NebulaGraph</a></td><td align="left">NebulaGraph：一个开源的分布式图数据库</td><td align="left">图数据库</td><td align="left">欧若数网</td><td align="left">91</td><td align="left">125</td><td align="left">38034</td><td align="left">126</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3210229682022440">声网Agora</a></td><td align="left">声网Agora（NASDAQ:API）是全球实时互动云服务的开创者，是全球最大的专业服</td><td align="left">-</td><td align="left">Agora.io</td><td align="left">213</td><td align="left">3503</td><td align="left">488509</td><td align="left">16043</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3113453493955527">京东前端</a></td><td align="left">-</td><td align="left">全栈工程师</td><td align="left">京东</td><td align="left">1</td><td align="left">159</td><td align="left">8721</td><td align="left">182</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/26044012181448">37手游安卓团队</a></td><td align="left">37手游安卓团队，负责37手游国内发行SDK/海外发行SDK/游戏相关App等产品。技术问题/交流/进群等可以加官方微信AndroidAssistant37</td><td align="left">Android</td><td align="left">37手游</td><td align="left">31</td><td align="left">440</td><td align="left">57057</td><td align="left">272</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/87611052920983">MegEngine</a></td><td align="left">适合工业级研发的开源深度学习框架-旷视天元MegEngine</td><td align="left">-</td><td align="left">-</td><td align="left">44</td><td align="left">58</td><td align="left">12949</td><td align="left">19</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4495228528238279">58技术</a></td><td align="left">58官方技术号，58技术创新、分享与交流平台</td><td align="left">-</td><td align="left">58同城</td><td align="left">2</td><td align="left">3</td><td align="left">729</td><td align="left">21</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3737995266237751">小米有品技术团队</a></td><td align="left">-</td><td align="left">小米有品的技术实践分享</td><td align="left">小米集团</td><td align="left">3</td><td align="left">124</td><td align="left">9783</td><td align="left">129</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2392970477967453">字节大力智能</a></td><td align="left">官微：DaliIntelligenceTech</td><td align="left">研发</td><td align="left">字节跳动</td><td align="left">29</td><td align="left">1345</td><td align="left">82435</td><td align="left">478</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4450420286057022">bigo前端</a></td><td align="left">coding</td><td align="left">前端开发工程师</td><td align="left">bigo</td><td align="left">52</td><td align="left">655</td><td align="left">45432</td><td align="left">86</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3026268632912584">字节跳动视频云技术团队</a></td><td align="left">作为字节跳动的视频中台部门，视频架构支持了字节全系产品的点播、直播、实时通信、图片、多媒体业务发展，目标成为业界多媒体解决方案领导者，构建极致的视频技术/产品服务体验！</td><td align="left">技术运营</td><td align="left">北京字节跳动科技有限公司</td><td align="left">31</td><td align="left">185</td><td align="left">25989</td><td align="left">275</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3051900006845944">飞猪前端团队</a></td><td align="left">前端技术让旅行更美好</td><td align="left">公众号</td><td align="left">fliggyfe</td><td align="left">87</td><td align="left">2265</td><td align="left">275262</td><td align="left">2606</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1494986085377223">自如大前端团队</a></td><td align="left">自如大前端的技术实践分享</td><td align="left">-</td><td align="left">北京自如信息科技有限公司</td><td align="left">42</td><td align="left">914</td><td align="left">115508</td><td align="left">917</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3245414492430023">HMSCore</a></td><td align="left">HMS Core技术团队。分享最新的技术干货，带来最全的能力应用场景，更新热门开发者圈子活动。与开发者一起，同成长，共精彩。</td><td align="left">华为开发者</td><td align="left">-</td><td align="left">125</td><td align="left">41</td><td align="left">10095</td><td align="left">14</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/747323639733511">SecondState</a></td><td align="left">Second State 为云构建 WebAssembly 执行引擎、框架和开发者工具链。</td><td align="left">Second State 技术团队</td><td align="left">-</td><td align="left">7</td><td align="left">11</td><td align="left">3464</td><td align="left">12</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3526889001458910">SugarTurboS</a></td><td align="left">土拨鼠前端技术俱乐部</td><td align="left">SugarTurboS Club</td><td align="left">SugarTurboS</td><td align="left">57</td><td align="left">3140</td><td align="left">258304</td><td align="left">1173</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939080275613">CRMEB技术团队</a></td><td align="left">php  vue mysql redis</td><td align="left">开发工程师</td><td align="left">西安众邦网络科技有限公司</td><td align="left">89</td><td align="left">506</td><td align="left">55681</td><td align="left">362</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2850395271209496">亚马逊云开发者</a></td><td align="left">亚马逊云开发者社区是专注于人工智能领域，开发者交流与互动的平台。在这里，你可以分享和获取一切有关人工智能的相关技术和前沿知识。<br>进入亚马逊云科技开发人员中心：<a href="https://amazonaws-china.com/cn/developer/">https://amazonaws-china.com/cn/developer/</a></td><td align="left">-</td><td align="left">亚马逊云科技</td><td align="left">30</td><td align="left">8</td><td align="left">2254</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876751539896">蚂蚁RichLab前端团队</a></td><td align="left">来自蚂蚁集团花呗借呗的全能型前端团队～</td><td align="left">花呗借呗前端团队</td><td align="left">蚂蚁集团</td><td align="left">69</td><td align="left">4865</td><td align="left">279428</td><td align="left">6867</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/571401776924248">网易云信</a></td><td align="left">来自网易核心架构的通信与视频云服务</td><td align="left">开发</td><td align="left">网易云信</td><td align="left">200</td><td align="left">975</td><td align="left">165456</td><td align="left">1068</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1222312663191752">微众开源</a></td><td align="left">-</td><td align="left">它来了它来了，带着它的开源项目走来了</td><td align="left">webank</td><td align="left">19</td><td align="left">69</td><td align="left">10279</td><td align="left">40</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939080036493">腾讯云云开发</a></td><td align="left">云开发（CloudBase）是云端一体化的后端云服务，采用 serverless 架构，免去了应用开发过程中繁琐的服务器搭建及运维，开发者可以专注于业务逻辑的实现，开发门槛更低，效率更高。</td><td align="left">听说可爱的掘友都关注了(◍°∇°◍)</td><td align="left">腾讯</td><td align="left">263</td><td align="left">584</td><td align="left">104716</td><td align="left">1416</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2251436075786791">去哪儿技术沙龙</a></td><td align="left">-</td><td align="left">去哪儿网@公众号：Qunar技术沙龙</td><td align="left">去哪儿网</td><td align="left">68</td><td align="left">674</td><td align="left">59942</td><td align="left">517</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1257497031878408">闲鱼技术</a></td><td align="left">-</td><td align="left">-</td><td align="left">阿里巴巴集团</td><td align="left">289</td><td align="left">5653</td><td align="left">631124</td><td align="left">54928</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/395479919373991">阿里巴巴淘系技术</a></td><td align="left">机构网站：tech.taobao.org/</td><td align="left">阿里巴巴集团</td><td align="left">淘系技术部隶属于阿里巴巴新零售技</td><td align="left">149</td><td align="left">7959</td><td align="left">609210</td><td align="left">10487</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/386655096935735">字节跳动技术质量</a></td><td align="left">-</td><td align="left">运营</td><td align="left">北京字节跳动网络技术有限公司</td><td align="left">1</td><td align="left">4</td><td align="left">440</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2875978146128984">阿里云云栖号</a></td><td align="left">专注分享云计算内容，助力企业上云！</td><td align="left">技术</td><td align="left">阿里云计算有限公司</td><td align="left">1830</td><td align="left">5045</td><td align="left">786782</td><td align="left">4152</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2762407456024350">HeapDump性能社区</a></td><td align="left">有性能问题，找HeapDump性能社区！<br>PerfMa旗下专注于性能领域的技术社区。为您提供性能领域的知识、问答、课程，以及各种解决性能问题的工具插件。</td><td align="left">-</td><td align="left">PerfMa</td><td align="left">15</td><td align="left">23</td><td align="left">2265</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/694547080554312">APISIX</a></td><td align="left">Apache APISIX 是一个云原生、高性能、可扩展的微服务 API 网关。它是基于 OpenResty 和 etcd 来实现，和传统 API 网关相比，Apache APISIX 具备动态路由和插件热加载，特别适合微服务体系下的 API 管理。</td><td align="left">-</td><td align="left">-</td><td align="left">66</td><td align="left">39</td><td align="left">12713</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2893570337413384">神策技术社区</a></td><td align="left">公众号：神策技术社区。回复“唠嗑”进社群</td><td align="left">-</td><td align="left">神策网络科技 (北京) 有限公司</td><td align="left">57</td><td align="left">138</td><td align="left">26578</td><td align="left">119</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/264321275273357">ShowMeBug技术团队</a></td><td align="left">技术评估与在线 Coding 面试平台 ShowMeBug.com</td><td align="left">-</td><td align="left">深圳至简天成科技有限公司</td><td align="left">29</td><td align="left">130</td><td align="left">8870</td><td align="left">41</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4451276781001799">青云技术社区</a></td><td align="left">汇聚云原生、容器、数据库、存储等前沿技术，关注技术创新，拥抱开发者，乐于分享。Born To Learn And Share ！</td><td align="left">研发工程师</td><td align="left">青云科技</td><td align="left">55</td><td align="left">15</td><td align="left">5137</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1266229795625783">伴鱼技术团队</a></td><td align="left">一群崇尚简单与极致效率的工程师~</td><td align="left">-</td><td align="left">北京读我科技有限公司</td><td align="left">13</td><td align="left">435</td><td align="left">43256</td><td align="left">342</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2277843822969863">Android_开发者</a></td><td align="left">谷歌中国 Android 开发者官方账号，汇集 Android 开发者相关的最新资讯。欢迎</td><td align="left">-</td><td align="left">Google</td><td align="left">640</td><td align="left">9328</td><td align="left">1344187</td><td align="left">24497</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1503787636494509">LiveVideoStack</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">380</td><td align="left">81</td><td align="left">66476</td><td align="left">83</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1574156379622311">又拍云</a></td><td align="left">-</td><td align="left">运维</td><td align="left">又拍云</td><td align="left">175</td><td align="left">566</td><td align="left">83545</td><td align="left">125</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2674478691663143">尔达Erda</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">31</td><td align="left">37</td><td align="left">5966</td><td align="left">16</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1345457961829710">友盟全域数据</a></td><td align="left">友盟+，第三方全域数据服务商。</td><td align="left">-</td><td align="left">-</td><td align="left">32</td><td align="left">32</td><td align="left">9010</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/676954896077789">好享家技术团队</a></td><td align="left">公众号：好享家技术团队</td><td align="left">微信公众号：好享家技术团队</td><td align="left">好享家技术团队</td><td align="left">21</td><td align="left">127</td><td align="left">38355</td><td align="left">61</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/861606743903895">前端狗聚集地</a></td><td align="left">产品经理&amp;前端开发</td><td align="left">-</td><td align="left">-</td><td align="left">1</td><td align="left">0</td><td align="left">9</td><td align="left">1</td><td align="left">0</td></tr></tbody></table><h3 id="三、个人创作者-开发者"><a href="#三、个人创作者-开发者" class="headerlink" title="三、个人创作者(开发者)"></a>三、个人创作者(开发者)</h3><p>而个人开发者，只收集了前 350 个，基本上都是非常活跃的开发者。大家可以根据自己的兴趣找到关注点啊~</p><table><thead><tr><th align="left">开发者</th><th align="left">简介</th><th align="left">标签</th><th align="left">公司</th><th align="left">文章数</th><th align="left">文章被点赞数</th><th align="left">文章被阅读数</th><th align="left">关注数</th><th align="left">等级</th></tr></thead><tbody><tr><td align="left"><a href="https://juejin.cn/user/1908407915780989">iHTCboy</a></td><td align="left">learn something of everything, <br>learn everything of something.</td><td align="left">移动金栈工程师</td><td align="left">-</td><td align="left">38</td><td align="left">216</td><td align="left">76554</td><td align="left">127</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2612095355996743">宫水三叶的刷题日记</a></td><td align="left">公众号: 「宫水三叶的刷题日记 」</td><td align="left">Software Engineer</td><td align="left">微软</td><td align="left">386</td><td align="left">1857</td><td align="left">234119</td><td align="left">1008</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3104676570214286">Big shark@LX</a></td><td align="left">公众号:前端鲨鱼哥</td><td align="left">前端</td><td align="left">外企</td><td align="left">38</td><td align="left">12075</td><td align="left">522829</td><td align="left">6021</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1943592288395479">前端要努力</a></td><td align="left">微信号：lisawhy0706，或扫码沸点二维码</td><td align="left">公粽号：前端要努力</td><td align="left">-</td><td align="left">44</td><td align="left">4368</td><td align="left">284612</td><td align="left">3251</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1292681407377624">Sunshine_Lin</a></td><td align="left">一名Rapper，一位历史迷，一位前端菜鸟</td><td align="left">-</td><td align="left">公众号：前端之神 &amp; B站：林三心的挖掘机</td><td align="left">68</td><td align="left">21627</td><td align="left">785402</td><td align="left">8229</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3913917126415166">小傅哥</a></td><td align="left">沉淀、分享、成长，让自己和他人都能有所收获！GitHub：<a href="https://github.com/fuzhengwei/CodeGuide/wiki">https://github.com/fuzhengwei/CodeGuide/wiki</a></td><td align="left">后端-🥇公众号</td><td align="left">bugstack虫洞栈</td><td align="left">238</td><td align="left">3680</td><td align="left">336165</td><td align="left">2911</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2339399368751325">饼干_</a></td><td align="left">关注公众号：饼干前端，获取更多前端知识</td><td align="left">掘金优秀码农</td><td align="left">git</td><td align="left">35</td><td align="left">3646</td><td align="left">73077</td><td align="left">306</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1415826704971918">若川</a></td><td align="left">每周一起学200行左右的源码共读活动，加微信 ruochuan12 参与</td><td align="left">关注我参加源码共读活动，加微信 ruochuan12 参与</td><td align="left">-</td><td align="left">45</td><td align="left">6821</td><td align="left">454394</td><td align="left">5986</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2955079655898093">大帅老猿</a></td><td align="left">热爱编程，喜欢开发各种有趣的产品。希望写代码到70岁~</td><td align="left">公众号</td><td align="left">大帅老猿</td><td align="left">68</td><td align="left">16712</td><td align="left">614289</td><td align="left">7781</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/122766317588637">谦虚的小K</a></td><td align="left">让小伙伴们都变得更强！vx：wchswchs</td><td align="left">技术专家</td><td align="left">阿里巴巴</td><td align="left">19</td><td align="left">424</td><td align="left">33107</td><td align="left">648</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3544481220801815">CUGGZ</a></td><td align="left">微信：CUG-GZ，添加好友一起学习~</td><td align="left">🏆公众号：前端充电宝</td><td align="left">-</td><td align="left">67</td><td align="left">11541</td><td align="left">796353</td><td align="left">4268</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139234359182">冴羽</a></td><td align="left">理想主义者，个人微信：mqyqingfeng ，带你看技术与生活的诗与远方</td><td align="left">公众号@yayujs</td><td align="left">淘宝</td><td align="left">98</td><td align="left">21322</td><td align="left">923052</td><td align="left">31901</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/307518987049112">19组清风</a></td><td align="left">Wechat: toxicant_2</td><td align="left">FE</td><td align="left">19组</td><td align="left">66</td><td align="left">1527</td><td align="left">41762</td><td align="left">225</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2805609403518600">liupl</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">-</td><td align="left">6</td><td align="left">863</td><td align="left">147735</td><td align="left">91</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2040341402229751">海拥</a></td><td align="left">个人微信【wh18363】QQ交流群：151836911</td><td align="left">🥇公众号：海拥</td><td align="left">水系全栈🥈</td><td align="left">-</td><td align="left">399</td><td align="left">9502</td><td align="left">414179</td><td align="left">945</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4424090519078430">战场小包</a></td><td align="left">个人微信: li444186976 欢迎大佬们来交流</td><td align="left">研究僧</td><td align="left">-</td><td align="left">56</td><td align="left">3423</td><td align="left">127027</td><td align="left">686</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1521379823340792">掘金安东尼</a></td><td align="left">目前关注：函数式编程、程序员成长、资源收集、掘金翻译、算法等；沸点长期抽奖，交个朋友吧🖖 anthony1453</td><td align="left">黄金矿工</td><td align="left">CMIC</td><td align="left">114</td><td align="left">13950</td><td align="left">489849</td><td align="left">3136</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/325111174926350">杨村长</a></td><td align="left"><a href="https://space.bilibili.com/480140591">https://space.bilibili.com/480140591</a></td><td align="left">公众号「村长学前端」</td><td align="left">B站「前端杨村长」</td><td align="left">17</td><td align="left">3341</td><td align="left">147067</td><td align="left">2867</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2805609406402798">Fly</a></td><td align="left">图形爱好者</td><td align="left">公众号</td><td align="left">前端图形</td><td align="left">数据可视化</td><td align="left">34</td><td align="left">2167</td><td align="left">86132</td><td align="left">805</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3438928099549352">前端胖头鱼</a></td><td align="left">会一点点前端</td><td align="left">FE</td><td align="left">公众号: 前端胖头鱼</td><td align="left">52</td><td align="left">9167</td><td align="left">304811</td><td align="left">6935</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/131597123993358">程序猿DD</a></td><td align="left">写代码即是工作也是爱好，写作一本书《Spring Cloud微服务实战》，国企科技4年，互联网6年，任架构师/公司合伙人，腾讯云TVP，阿里云MVP</td><td align="left">自由程序员</td><td align="left">公众号：程序猿DD</td><td align="left">274</td><td align="left">3051</td><td align="left">484343</td><td align="left">17520</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1952321752812344">HelloWorld杰少</a></td><td align="left">红鲤鱼绿鲤鱼与驴</td><td align="left">公众号: HelloWorld杰少</td><td align="left">-</td><td align="left">94</td><td align="left">1479</td><td align="left">244416</td><td align="left">500</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/817692379985752">恋猫de小郭</a></td><td align="left">写代码的老二次猿</td><td align="left">《Flutter 开发实战详解》</td><td align="left">GSYTech</td><td align="left">146</td><td align="left">17871</td><td align="left">1405506</td><td align="left">26076</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2401775480472973">Tom弹架构</a></td><td align="left">《Spring 5核心原理》、《Netty 4核心原理》、《设计模式就该这样学》作者，不只做一个技术者，更要做一个思考者<br>关注微信公众号『 Tom弹架构 』可获取更多技术干货！</td><td align="left">技术总监</td><td align="left">公众号Tom弹架构</td><td align="left">57</td><td align="left">104</td><td align="left">8782</td><td align="left">76</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3131864320584888">兴趣使然的草帽路飞</a></td><td align="left">我是路飞，一个双非本科出身的Java程序员，22届校招收获阿里、美团、哔哩哔哩意向书，目前是阿里大家庭中的一名全栈开发工程师。CSDN博客社区10万粉丝博主，CSDN博客地址：<a href="https://blog.csdn.net/weixin_43591980">https://blog.csdn.net/weixin_43591980</a></td><td align="left">全栈开发工程师</td><td align="left">阿里巴巴</td><td align="left">180</td><td align="left">205</td><td align="left">18550</td><td align="left">62</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536976321422269">zuozewei</a></td><td align="left">「7DGroup」技术公众号作者，CSDN博客专家、测试领域优质创作者，华为云·云享专家，极客时间《全链路压测实战30讲》专栏作者之一，极客时间《性能测试实战30讲》、《高楼的性能工程实战课》专栏编委。</td><td align="left">测试及性能领域创作者</td><td align="left">公众号@7DGroup</td><td align="left">-</td><td align="left">110</td><td align="left">248</td><td align="left">14845</td><td align="left">46</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3368559359825448">沐华</a></td><td align="left">技术栈：Vue全家桶、React全家桶、JS、TS</td><td align="left">前端</td><td align="left">公众号：一沐年华</td><td align="left">-</td><td align="left">28</td><td align="left">5422</td><td align="left">184503</td><td align="left">1170</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1662117313262776">Cache技术分享</a></td><td align="left">分享，开源，总结</td><td align="left">软件工程师</td><td align="left">东华</td><td align="left">681</td><td align="left">1535</td><td align="left">59720</td><td align="left">147</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/606586150596360">AlexV525</a></td><td align="left">Flutter</td><td align="left">职业劝退师</td><td align="left">CFUG</td><td align="left">14</td><td align="left">980</td><td align="left">103981</td><td align="left">870</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1750078239809790">岛民小强</a></td><td align="left">前端段子手、小说写手</td><td align="left">公众号：岛民小强</td><td align="left">高级切图工程师</td><td align="left">!BAT</td><td align="left">52</td><td align="left">488</td><td align="left">39967</td><td align="left">126</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3122268755206334">iwhao</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">前端技术战（是战斗的战呦）@公众号</td><td align="left">45</td><td align="left">1783</td><td align="left">52006</td><td align="left">150</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1451011080727639">捡田螺的小男孩</a></td><td align="left">公众号:捡田螺的小男孩</td><td align="left">公众号:捡田螺的小男孩</td><td align="left">-</td><td align="left">101</td><td align="left">9802</td><td align="left">620482</td><td align="left">12612</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/96412752681079">前端周同学</a></td><td align="left">不会写代码的保洁不是一个好厨子～<br>V: zhoudeyou945</td><td align="left">公众号/视频号: 前端周同学</td><td align="left">非著名👨‍🍳厨师专业学校</td><td align="left">55</td><td align="left">4603</td><td align="left">300644</td><td align="left">909</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3878732755375742">前端bubucuo</a></td><td align="left">专注前端，公众号bubucuo</td><td align="left">-</td><td align="left">-</td><td align="left">9</td><td align="left">90</td><td align="left">9494</td><td align="left">160</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2418581313687390">我不是外星人</a></td><td align="left">小册《React进阶实践指南》已上线～，公众号: 前端Sharing， 不蹭热度，不发水文。进 React进阶技术交流群 请加微信 TH0000666</td><td align="left">公众号: 前端Sharing</td><td align="left">公众号: 前端Sharing</td><td align="left">36</td><td align="left">12979</td><td align="left">371450</td><td align="left">4658</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2040300414187416">小阿杰</a></td><td align="left">一个爱鼓捣的程序猿，JAVA开发者和爱好者。公众号【Java全栈架构师】维护者，自建微信小程序【软考真题解析】【实用在线工具箱】，欢迎阅读交流。</td><td align="left">🥇🏆掘金达人</td><td align="left">公众号：Java全栈架构师</td><td align="left">92</td><td align="left">1735</td><td align="left">72494</td><td align="left">226</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3491704662919207">刘悦的技术博客</a></td><td align="left">python,ruby,前端</td><td align="left">python讲师</td><td align="left">v3u.cn</td><td align="left">116</td><td align="left">217</td><td align="left">93490</td><td align="left">71</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3755587450709592">NewBoy</a></td><td align="left">虽不年少，艳阳高照</td><td align="left">coder</td><td align="left">-</td><td align="left">98</td><td align="left">705</td><td align="left">34510</td><td align="left">75</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2682464104616023">六脉神剑</a></td><td align="left">种一棵树最好的时间是十年前，其次是现在</td><td align="left">欢聚YY@Java开发工程师</td><td align="left">微信搜：六脉神剑的程序人生</td><td align="left">212</td><td align="left">2416</td><td align="left">235132</td><td align="left">3125</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4011435956644013">TechMerger</a></td><td align="left">微信「ELC1020」，公众号「TechMerger」</td><td align="left">Android Developer</td><td align="left">Fujitsu</td><td align="left">26</td><td align="left">1116</td><td align="left">86902</td><td align="left">478</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1407028359070766">奔波儿灞取经</a></td><td align="left">语言底层是算法，系统底层是架构，算法跟架构都是思想。</td><td align="left">Profile Page</td><td align="left">AndroidUFO</td><td align="left">56</td><td align="left">1381</td><td align="left">43045</td><td align="left">250</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/149189280672616">Viktor</a></td><td align="left">微信关注“程序员自习室”，👨🏻‍💻交个朋友，get 更多精彩！</td><td align="left">前端</td><td align="left">微信搜：程序员自习室</td><td align="left">18</td><td align="left">1123</td><td align="left">116339</td><td align="left">219</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2858385963749223">荣顶</a></td><td align="left">面向快乐编程~😉</td><td align="left">公众号：前端超人</td><td align="left">-</td><td align="left">10</td><td align="left">1696</td><td align="left">60219</td><td align="left">315</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/598591926699358">阿Tya</a></td><td align="left">曾许少年凌云志，誓做人间第一流. 一起加入Flutter技术交流群532403442 进来摸鱼唠嗑~ 小T目前主攻Android与Flutter, 通常会搞搞人工智能、SpringBoot 、Mybatiys等.</td><td align="left">Flutter工程师</td><td align="left">-</td><td align="left">16</td><td align="left">1946</td><td align="left">132208</td><td align="left">665</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1978776660216136">全栈然叔</a></td><td align="left">刻意学习者、IT老兵</td><td align="left">-</td><td align="left">公众号： 前端大班车</td><td align="left">51</td><td align="left">8185</td><td align="left">390992</td><td align="left">7539</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1011206426986158">前端开发仔</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">-</td><td align="left">3</td><td align="left">3</td><td align="left">851</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/870468939942311">Asscre</a></td><td align="left">专注于Vue、Flutter、Go。<br></td><td align="left">见过前端，了解Flutter， 看了看Go</td><td align="left">雷酷互动</td><td align="left">48</td><td align="left">293</td><td align="left">69214</td><td align="left">133</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3650034333668302">江湖不渡i</a></td><td align="left">干啥啥不行，摸鱼第一名</td><td align="left">前端切图仔</td><td align="left">切图仔收留所</td><td align="left">15</td><td align="left">606</td><td align="left">24096</td><td align="left">65</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2173082302688222">小王曾是少年</a></td><td align="left">南京大学 通信与信息系统master<br>@N小王日记</td><td align="left">Java后端开发</td><td align="left">阿里巴巴</td><td align="left">83</td><td align="left">303</td><td align="left">23483</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/747323635537159">道爷</a></td><td align="left">嘿，有点东西。</td><td align="left">客户端开发</td><td align="left">..</td><td align="left">29</td><td align="left">1080</td><td align="left">61768</td><td align="left">366</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/501033033545053">干货满满张哈希</a></td><td align="left">Mycat 和 Java JFRUnit 的核心贡献者，贡献过 OpenJDK，Spring，Spring Cloud，Apache Bookkeeper，Apache RocketMQ，Ribbon 和 Lettuce 等项目，后台 Leader</td><td align="left">后台负责人</td><td align="left">网易</td><td align="left">216</td><td align="left">1839</td><td align="left">1087216</td><td align="left">1504</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1152708464877896">HUALEI</a></td><td align="left">光明前途定义只有一条，而对选择赋予的美好定义不止一种。</td><td align="left">-</td><td align="left">-</td><td align="left">34</td><td align="left">445</td><td align="left">18682</td><td align="left">39</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3360527239635373">快跑啊小卢_</a></td><td align="left">日日有著數 時時百事通 （微信号:WEIJUNFAT）</td><td align="left">公众号 「前端快快跑」</td><td align="left">Apifox</td><td align="left">48</td><td align="left">3752</td><td align="left">124484</td><td align="left">753</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2717648474610360">前端郭德纲</a></td><td align="left">程序猿，码农，单身狗，世界上最值得保护的短命无害生物。</td><td align="left">程序员</td><td align="left">爱好单口喜剧</td><td align="left">能力有限公司</td><td align="left">77</td><td align="left">1693</td><td align="left">19018</td><td align="left">31</td></tr><tr><td align="left"><a href="https://juejin.cn/user/782508010775198">三年没洗澡</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">袋鼠云</td><td align="left">15</td><td align="left">1051</td><td align="left">44194</td><td align="left">442</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1195904305474007">hollyzhang</a></td><td align="left">白天不懂夜的黑</td><td align="left">PM打工妹</td><td align="left">掘金</td><td align="left">6</td><td align="left">9</td><td align="left">1045</td><td align="left">37</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/430664257636407">ikoala</a></td><td align="left">-</td><td align="left">伪全栈</td><td align="left">程序员成长指北</td><td align="left">33</td><td align="left">11485</td><td align="left">504921</td><td align="left">12255</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1169536103245454">菁芜</a></td><td align="left">民风淳朴哥谭市</td><td align="left">农民工</td><td align="left">新时代</td><td align="left">12</td><td align="left">165</td><td align="left">10318</td><td align="left">65</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/862444316796024">hawleyHuo</a></td><td align="left">无力反驳的搬砖者</td><td align="left">前端</td><td align="left">京东</td><td align="left">7</td><td align="left">159</td><td align="left">13727</td><td align="left">35</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/642537280772456">石云升</a></td><td align="left">用文字记录成长，做时间的朋友。</td><td align="left">技术转型的产品</td><td align="left">公众号：石云升SYS</td><td align="left">25</td><td align="left">74</td><td align="left">3627</td><td align="left">13</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967170907751">一个被摄影耽误的程序猿</a></td><td align="left">写最长的BUG，做最长的搬砖工。</td><td align="left">Android Bug制造机</td><td align="left">-</td><td align="left">11</td><td align="left">580</td><td align="left">35308</td><td align="left">369</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939081065816">服部</a></td><td align="left">服部平次，日本漫画《名侦探柯南》的角色，剑道高手。<br>“关东的工藤，关西的服部”。<br>擅长推理、剑道、摩托车车技、枪械、游泳、潜水、滑雪、英语、在古董店杀价、猜女孩子的泳衣、投掷、装蒜、国际象棋、英文等 。</td><td align="left">人类灵魂设计工程师</td><td align="left">-</td><td align="left">62</td><td align="left">1503</td><td align="left">47404</td><td align="left">60</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2084329775958248">在剥我的壳</a></td><td align="left">擅长拍人像，<br>擅长画人像，<br>擅长做菜，<br>擅长写小说，<br>这都是一技之长。<br><br>噢，忘说了，我是一名前端开发，一技之长那种。<br></td><td align="left">大前端</td><td align="left">-</td><td align="left">22</td><td align="left">3578</td><td align="left">260161</td><td align="left">1554</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/105972016875911">Ned</a></td><td align="left">个人V：ned020329</td><td align="left">大三在校生</td><td align="left">前端一年练习生</td><td align="left">-</td><td align="left">43</td><td align="left">1418</td><td align="left">54092</td><td align="left">139</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876722450696">Tony沈哲</a></td><td align="left">关注领域：Java/Kotlin 服务端、桌面端 、Android 、 机器学习、端侧智能</td><td align="left">全干工程师</td><td align="left">搬砖</td><td align="left">93</td><td align="left">3716</td><td align="left">244217</td><td align="left">2978</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2735240661441591">ClyingDeng</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">公众号：今天你敲代码了吗</td><td align="left">102</td><td align="left">2902</td><td align="left">61579</td><td align="left">179</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2867982785579102">速冻鱼</a></td><td align="left">大家好，我是速冻鱼🐟，一条水系前端💦，喜欢花里胡哨💐，持续沙雕🌲。 [微信:sudongyuer］</td><td align="left">🐟公众号:前端速冻鱼</td><td align="left">成都</td><td align="left">-</td><td align="left">66</td><td align="left">2057</td><td align="left">100548</td><td align="left">477</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2568933151092030">XiaoLin_Java</a></td><td align="left">问啥啥都会，干啥啥不行。公众号：不掉发进大厂，个人v：l18923403603，联系我免费加入督学班，视频作业不间断</td><td align="left">Java开发工程师</td><td align="left">👉不掉发进大厂👈</td><td align="left">99</td><td align="left">2601</td><td align="left">85119</td><td align="left">606</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1688472903498189">狗比玩意</a></td><td align="left">叫我奶糖就好啦</td><td align="left">web前端</td><td align="left">-</td><td align="left">6</td><td align="left">171</td><td align="left">16080</td><td align="left">135</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2524134427858205">居然🌾</a></td><td align="left">Python全栈工程师</td><td align="left">极客夜读  欢迎关注~</td><td align="left">逻辑教育</td><td align="left">28</td><td align="left">157</td><td align="left">8931</td><td align="left">92</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2119514117904295">小姐姐味道</a></td><td align="left">不羡鸳鸯不羡仙，一行代码调半天</td><td align="left">🏆掘金首批签约作者</td><td align="left">公众号：xjjdog</td><td align="left">261</td><td align="left">15898</td><td align="left">1275403</td><td align="left">24860</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/976022056736765">ndz</a></td><td align="left">因上努力，果上随缘。</td><td align="left">全栈</td><td align="left">从此掘金就是我的抖音</td><td align="left">14</td><td align="left">698</td><td align="left">58586</td><td align="left">102</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2409780510207133">YK菌</a></td><td align="left">大家好，我是YK菌 🐷 ，一个微系前端 ✨，爱思考，爱总结，爱记录，爱分享 🏹，欢迎关注我呀 😘 ~ [微信号: yk2012yk2012，微信公众号：ykyk2012]</td><td align="left">前端领域终身学习者</td><td align="left">欢迎一键三连哦~</td><td align="left">127</td><td align="left">1815</td><td align="left">71640</td><td align="left">321</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/219558054476792">Flywith24</a></td><td align="left">🍜 铁厂干饭人<br>📸 业余 vlogger<br>🏀 篮球爱好者</td><td align="left">Android Developer</td><td align="left">快手</td><td align="left">63</td><td align="left">2531</td><td align="left">232487</td><td align="left">3724</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1591748568562829">尽管如此世界依然美丽</a></td><td align="left">-</td><td align="left">天命</td><td align="left">👻</td><td align="left">12</td><td align="left">397</td><td align="left">18943</td><td align="left">96</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/140339735966695">一颗雷布斯</a></td><td align="left">多学一点知识，少写一行代码。</td><td align="left">公众号</td><td align="left">知否技术</td><td align="left">31</td><td align="left">645</td><td align="left">48642</td><td align="left">100</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/166781498952974">vaelcy</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">某上市公司</td><td align="left">33</td><td align="left">1258</td><td align="left">38817</td><td align="left">168</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/123624772082791">纪先生</a></td><td align="left">公众号：纪先生笔记(时刻雕刻你的身体&amp;&amp;灵魂)</td><td align="left">服务端｜公众号:纪先生笔记</td><td align="left">-</td><td align="left">34</td><td align="left">1048</td><td align="left">26152</td><td align="left">94</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3016715636842622">扫地盲僧</a></td><td align="left">行走在键盘上的钢琴师</td><td align="left">💥懂点产品的全栈工程师</td><td align="left">UU跑腿</td><td align="left">6</td><td align="left">614</td><td align="left">23679</td><td align="left">297</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1134351731144231">loongwind</a></td><td align="left">主要从事Android、Flutter、前端开发</td><td align="left">大前端开发工程师</td><td align="left">-</td><td align="left">11</td><td align="left">195</td><td align="left">20139</td><td align="left">271</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2717648473821736">CookieBoty</a></td><td align="left">工资到位，四皇干废</td><td align="left">前端小兵成长营</td><td align="left">-</td><td align="left">37</td><td align="left">4793</td><td align="left">272373</td><td align="left">2157</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3562846812382206">浪漫主义码农</a></td><td align="left">有人辞官归故里 有人星夜赶科考 前途似海来日方长。满怀希望就会所向披靡</td><td align="left">摸鱼小白</td><td align="left">-</td><td align="left">43</td><td align="left">368</td><td align="left">22596</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2840793777447358">nathan_ll</a></td><td align="left">世界和平</td><td align="left">QDGCS</td><td align="left">-</td><td align="left">21</td><td align="left">124</td><td align="left">12891</td><td align="left">28</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3702810893364350">why技术</a></td><td align="left">用匠心敲代码，对每一行代码负责。</td><td align="left">java工程师</td><td align="left">公众号【why技术】</td><td align="left">92</td><td align="left">4109</td><td align="left">274315</td><td align="left">5438</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4002681548190045">mirsle马新杰</a></td><td align="left">-</td><td align="left">前端</td><td align="left">-</td><td align="left">2</td><td align="left">37</td><td align="left">2376</td><td align="left">6</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2084329779387864">大鱼丶</a></td><td align="left">每天进步一点点，慢一点，才能更快！</td><td align="left">Java  @公众号（全员格子）</td><td align="left">-</td><td align="left">109</td><td align="left">4553</td><td align="left">193886</td><td align="left">548</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3747583696308350">小虚竹and掘金</a></td><td align="left">Java领域优质创作者🏆，CSDN博客专家🏆，华为云享专家🏆<br>个人微信【xiamenzhw】欢迎问题咨询和技术交流</td><td align="left">-</td><td align="left">-</td><td align="left">74</td><td align="left">1941</td><td align="left">40130</td><td align="left">139</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1151943918501767">Angus安格斯</a></td><td align="left">将梦想用代码照进现实，🐛！</td><td align="left">前端工程师</td><td align="left">网易</td><td align="left">11</td><td align="left">468</td><td align="left">19353</td><td align="left">111</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2119514147536087">小黑说Java</a></td><td align="left">我是小黑，一个Java程序员。</td><td align="left">公众号@小黑说Java</td><td align="left">-</td><td align="left">58</td><td align="left">2168</td><td align="left">38443</td><td align="left">147</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1187128288217262">前端奶爸</a></td><td align="left">滴水之恩，当涌泉相报。</td><td align="left">前端小学生</td><td align="left">宇宙无敌不加班有限责任公司</td><td align="left">20</td><td align="left">343</td><td align="left">11503</td><td align="left">33</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2198625067468664">月夕</a></td><td align="left">代码绝不止能跑就行。QQ&amp;WX:1571356682</td><td align="left">前端研发工程师</td><td align="left">Baidu</td><td align="left">20</td><td align="left">502</td><td align="left">18298</td><td align="left">96</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760848090664">究极逮虾户</a></td><td align="left">不干正经事   WMRouter Contributor</td><td align="left">Android</td><td align="left">小破站</td><td align="left">51</td><td align="left">1802</td><td align="left">173331</td><td align="left">1434</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/659362706101735">yechaoa</a></td><td align="left">Android、前端、小程序、Flutter</td><td align="left">Android</td><td align="left">阿里巴巴</td><td align="left">24</td><td align="left">427</td><td align="left">42278</td><td align="left">183</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3069492194710797"><em>代码诗人</em></a></td><td align="left">路漫漫其修远兮，吾将上下而求索</td><td align="left">八阿哥终结者</td><td align="left">月弦笙音</td><td align="left">59</td><td align="left">713</td><td align="left">34626</td><td align="left">66</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1591748567762776">渔翁莫小尚</a></td><td align="left">还有几根头发的前端攻城狮🦁<br>期待大家的关注，我们一起进步😊<br>『公众号：JavaScript_mxshang』</td><td align="left">公众号@ 前端渔翁莫小尚</td><td align="left">-</td><td align="left">23</td><td align="left">80</td><td align="left">2990</td><td align="left">4</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760845468296">夏天要喝冰可乐</a></td><td align="left">种一棵树最好的时机是十年前，其次是现在</td><td align="left">前端</td><td align="left">武汉某公司</td><td align="left">19</td><td align="left">189</td><td align="left">37154</td><td align="left">53</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1380642337591822">Cora</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">-</td><td align="left">3</td><td align="left">22</td><td align="left">897</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3808363977640301">LinkedBear</a></td><td align="left">手撕源码。。。算爱好吗[狗头]</td><td align="left">柯基小册四件套作者 &amp; 底层技术研究者与分享者</td><td align="left">-</td><td align="left">9</td><td align="left">357</td><td align="left">20608</td><td align="left">859</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4169810296974189">Lucifer三思而后行</a></td><td align="left">一枚喜欢学习，专研，输出的数据库DBA，专注于各种数据库、Linux等后端技术，分享各种干货实战文！<br><br>灵感来源于生活，故而热爱生活~</td><td align="left">微信公众号：Lucifer三思而后行</td><td align="left">-</td><td align="left">132</td><td align="left">5043</td><td align="left">177099</td><td align="left">278</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1556564195161725">字节流动</a></td><td align="left">Android  音视频开发。熟悉 OpenGL ES 、FFmpeg、Camera、OpenCL 。</td><td align="left">公众号: 字节流动</td><td align="left">字节流动</td><td align="left">67</td><td align="left">647</td><td align="left">144124</td><td align="left">1065</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4029089079886935">肉包子_子</a></td><td align="left">来者犹可追</td><td align="left">来者犹可追</td><td align="left">-</td><td align="left">46</td><td align="left">67</td><td align="left">3575</td><td align="left">7</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3562073406058808">ITEM</a></td><td align="left">微信: hello-node；公众号：前端搬砖工</td><td align="left">知乎：前端周刊</td><td align="left">深大智能</td><td align="left">10</td><td align="left">5098</td><td align="left">127827</td><td align="left">1492</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876754422039">许进进</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">43</td><td align="left">335</td><td align="left">18077</td><td align="left">44</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2955949488212014">一条coding</a></td><td align="left">关注公众号「一条coding」获取100本电子书、Java学习路线、10G学习资料</td><td align="left">公众号：一条coding</td><td align="left">-</td><td align="left">63</td><td align="left">2225</td><td align="left">39327</td><td align="left">210</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3324570057847880">JaylenL</a></td><td align="left">前端/nodejs/python/C++，探索从未停止</td><td align="left">前端工程师@有赞</td><td align="left">杭州有赞科技有限公司</td><td align="left">36</td><td align="left">699</td><td align="left">20353</td><td align="left">68</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536217406942206">前端破坏球</a></td><td align="left">视界之外，想象之中</td><td align="left">杭州-搬砖</td><td align="left">-</td><td align="left">10</td><td align="left">283</td><td align="left">15499</td><td align="left">47</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3325387851438670">空格de鱼</a></td><td align="left">做自己喜欢的事情</td><td align="left">前端开发</td><td align="left">-</td><td align="left">10</td><td align="left">56</td><td align="left">5307</td><td align="left">9</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/607347248750103">前端老实人</a></td><td align="left">个人微：【 wx2646921615 】华为云云享专家，阿里云专家博主，c站优质创作者，一名前端狂热爱好者，有需要资料或者有问题的同学可以直接私信我哦，做你的私人小家教！</td><td align="left">公众号</td><td align="left">前端老实人</td><td align="left">-</td><td align="left">99</td><td align="left">2596</td><td align="left">39468</td><td align="left">188</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139267643054">JavaGieGie</a></td><td align="left">专注系列教程，目前在更课程有《并发编程系列》《mysql系列》，后期会持续更新系列《花哥与redis》《花哥与mq》，文章内容诙谐幽默，同时不失技术深度</td><td align="left">公众号 @ 花哥编程</td><td align="left">-</td><td align="left">66</td><td align="left">1663</td><td align="left">118146</td><td align="left">535</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/835284568644983">滑稽诺夫</a></td><td align="left">-</td><td align="left">-</td><td align="left">摸鱼科技</td><td align="left">18</td><td align="left">9</td><td align="left">1456</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/254742426041422">勇敢牛牛2021</a></td><td align="left">-</td><td align="left">Android开发</td><td align="left">-</td><td align="left">124</td><td align="left">314</td><td align="left">30358</td><td align="left">59</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2524134386185736">扔物线</a></td><td align="left">rengwuxian.com 给高级 Android 工程师的进阶手册</td><td align="left">Android &amp; Kotlin GDE</td><td align="left">扔物线学堂</td><td align="left">43</td><td align="left">8501</td><td align="left">374206</td><td align="left">13706</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4177799915777389">北斗落凡尘</a></td><td align="left">-</td><td align="left">前端刨食</td><td align="left">-</td><td align="left">92</td><td align="left">1608</td><td align="left">25026</td><td align="left">43</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2330620350432110">JowayYoung</a></td><td align="left">[玩转CSS的艺术之美]作者，[IQ前端]号主</td><td align="left">资深前端，总结大师</td><td align="left">网易</td><td align="left">21</td><td align="left">23003</td><td align="left">687276</td><td align="left">16219</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1099167357226904">zxhtom</a></td><td align="left">是时候底层结构了解了。不能仅仅局限于curd</td><td align="left">公众号</td><td align="left">zxhtom</td><td align="left">公众号，微信同名</td><td align="left">160</td><td align="left">3659</td><td align="left">295083</td><td align="left">433</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1908407918660359">伊人a</a></td><td align="left">前端面试有个很好的公众号推荐给大家☛前端面试官☚<br><br>爱玩游戏、爱生活、爱技术、爱自己。</td><td align="left">打野无敌</td><td align="left">王者峡谷</td><td align="left">3</td><td align="left">4156</td><td align="left">176017</td><td align="left">1765</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/800878606427239">Onion韩</a></td><td align="left">-</td><td align="left">一捆前端小韭菜🚗</td><td align="left">-</td><td align="left">28</td><td align="left">453</td><td align="left">13562</td><td align="left">40</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/96412754251390">lio_zero</a></td><td align="left">来一场好运设计 岑寂中侧耳倾听</td><td align="left">无</td><td align="left">无</td><td align="left">78</td><td align="left">848</td><td align="left">32020</td><td align="left">79</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2137106333044861">黄轶</a></td><td align="left">公众号[老黄的前端私房菜]</td><td align="left">前端架构师</td><td align="left">zoom.us</td><td align="left">22</td><td align="left">9286</td><td align="left">402895</td><td align="left">12634</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1742080815409336">香菜聊游戏</a></td><td align="left">写了十来年的代码，当过小兵，创过业，<br>公众号:香菜聊游戏，关注我，有干货和游戏源码哦，带你走进游戏圈</td><td align="left">公众号：香菜聊游戏</td><td align="left">-</td><td align="left">113</td><td align="left">215</td><td align="left">19354</td><td align="left">34</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999123452123181">蛙人</a></td><td align="left">永远做个学生，保持终生学习</td><td align="left">公众号: 前端娱乐圈</td><td align="left">-</td><td align="left">33</td><td align="left">5252</td><td align="left">183340</td><td align="left">929</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1239904845577757">樱舞</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">-</td><td align="left">61</td><td align="left">153</td><td align="left">18196</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3378167164966920">学习react中</a></td><td align="left">-</td><td align="left">前端</td><td align="left">科技有限公司</td><td align="left">7</td><td align="left">4</td><td align="left">379</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/764915820276439">ZeroFlutter</a></td><td align="left">6 年 App 开发经验，18 年自学 Flutter，目前主导上线了 4 款企业级 Flutter App，当前负责的 App 累计用户超百万 ，关注我学习优质 Flutter 内容</td><td align="left">Flutter 高级工程师</td><td align="left">班级小管家</td><td align="left">40</td><td align="left">630</td><td align="left">47956</td><td align="left">377</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4054654613988718">夕水</a></td><td align="left">喜欢代码，读书，文学</td><td align="left">web前端开发</td><td align="left">-</td><td align="left">25</td><td align="left">337</td><td align="left">24383</td><td align="left">104</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4265760844943479">芝麻粒儿</a></td><td align="left">需要各种资源分享（网站、工具、素材、源码、游戏等），欢迎联系交朋友。</td><td align="left">微信：XQL8686</td><td align="left">-</td><td align="left">105</td><td align="left">1386</td><td align="left">51936</td><td align="left">83</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1046390799088622">前端恶霸</a></td><td align="left">积淀，如麦熟雨落，静默却磅礴</td><td align="left">前端工程师</td><td align="left">前端恶霸</td><td align="left">20</td><td align="left">760</td><td align="left">23261</td><td align="left">61</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3210229682022888">sweetying</a></td><td align="left">Android 开发者，专注技术提升</td><td align="left">公众号 @ sweetying</td><td align="left">-</td><td align="left">20</td><td align="left">1840</td><td align="left">54667</td><td align="left">448</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3051900006837213">Gracker</a></td><td align="left">专注于 Android 性能、功耗、稳定性、内存、框架技术等，个人简介：<a href="https://www.androidperformance.com/about%EF%BC%8C%E6%AC%A2%E8%BF%8E%E5%8A%A0%E5%A5%BD%E5%8F%8B%E4%BA%A4%E6%B5%81">https://www.androidperformance.com/about，欢迎加好友交流</a></td><td align="left">Android 系统工程师</td><td align="left">Pied Piper</td><td align="left">39</td><td align="left">390</td><td align="left">47653</td><td align="left">999</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3227821827961806">glmapper</a></td><td align="left">GitHub:<a href="https://github.com/glmapper">https://github.com/glmapper</a></td><td align="left">公众号：PeomByte</td><td align="left">HM</td><td align="left">118</td><td align="left">5275</td><td align="left">430865</td><td align="left">8395</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3500461756268285">前端罗纳尔多</a></td><td align="left">互相学习，互相帮助，互相分享</td><td align="left">前端工程师 加qq群343051772进微信学习群</td><td align="left">-</td><td align="left">10</td><td align="left">126</td><td align="left">2338</td><td align="left">28</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1460594842018446">小丞同学</a></td><td align="left">电子信息类大二学生，目前学习方向前端，有兴趣的可以一起学习交流噢，也可以私聊添加我的微信一起探讨合作</td><td align="left">前端开发</td><td align="left">微信：Ljc-10c</td><td align="left">-</td><td align="left">95</td><td align="left">2250</td><td align="left">64262</td><td align="left">254</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3931509310625214">起小就些熊</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">那年那时那片云</td><td align="left">16</td><td align="left">739</td><td align="left">31440</td><td align="left">119</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1574156383551629">前端卞同学</a></td><td align="left">-</td><td align="left">前端开发工程师</td><td align="left">漫蝌网</td><td align="left">19</td><td align="left">75</td><td align="left">902</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967171943598">李三火</a></td><td align="left">-</td><td align="left">前端</td><td align="left">360</td><td align="left">3</td><td align="left">23</td><td align="left">982</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1556564197255975">付十一</a></td><td align="left">日知为智，爱技术爱生活</td><td align="left">Android开发者</td><td align="left">-</td><td align="left">29</td><td align="left">1262</td><td align="left">91203</td><td align="left">537</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967174569134">风信子FE</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">7</td><td align="left">14</td><td align="left">3934</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876752066653">hauk0101</a></td><td align="left">折腾不止于前端</td><td align="left">攻城狮</td><td align="left">公众号闲散将军府</td><td align="left">12</td><td align="left">115</td><td align="left">15990</td><td align="left">23</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1433418892058333">于五五</a></td><td align="left">写作，让自己能去阅读更多的知识</td><td align="left">前端开发工程师</td><td align="left">是个小秘密</td><td align="left">30</td><td align="left">275</td><td align="left">34570</td><td align="left">39</td><td align="left">2</td></tr><tr><td align="left"><br>WX: KC_Cooci</td><td align="left">前端、iOS重度爱好者、专治跳槽加薪</td><td align="left">LG</td><td align="left">63</td><td align="left">2469</td><td align="left">230436</td><td align="left">4751</td><td align="left">3</td><td align="left"></td></tr><tr><td align="left"><a href="https://juejin.cn/user/2788017216685118">zxg_神说要有光</a></td><td align="left">小册《babel插件通关秘籍》已上线</td><td align="left">公号「神光的编程秘籍」</td><td align="left">-</td><td align="left">116</td><td align="left">8001</td><td align="left">412884</td><td align="left">4018</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2524134427070071">木亦Sam</a></td><td align="left">一定要拿出做旅游攻略的热忱来计划每天。liluanhui-site</td><td align="left">Web前端工程师</td><td align="left">普方立民</td><td align="left">51</td><td align="left">2813</td><td align="left">94464</td><td align="left">282</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/325111173102669">慕枫技术笔记</a></td><td align="left">CSDN博客专家、专注源码分析、架构设计、分享所思所想</td><td align="left">公众号：慕枫技术笔记</td><td align="left">Alibaba</td><td align="left">28</td><td align="left">208</td><td align="left">15273</td><td align="left">47</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2647279731751255">jjjona0215</a></td><td align="left">像风一样</td><td align="left">前端</td><td align="left">京东</td><td align="left">39</td><td align="left">654</td><td align="left">54979</td><td align="left">143</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2084329779108062">陈_杨</a></td><td align="left">大家好，我叫陈杨，是一名老实吧啦的程序员，微信公众号：程序员直通车</td><td align="left">前端工程师</td><td align="left">程序员直通车</td><td align="left">42</td><td align="left">709</td><td align="left">48776</td><td align="left">96</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/686575843556008">IT学习日记v</a></td><td align="left">只搞干货,专注JAVA、数据库领域等后端领域知识。个人微信【yyuuyy1235】获取实战源码，学习、交流、合作、交友请联系！</td><td align="left">-</td><td align="left">公众号: IT学习日记</td><td align="left">26</td><td align="left">942</td><td align="left">30615</td><td align="left">103</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/114004940034056">敲代码的小菜鸡</a></td><td align="left">Q</td><td align="left">web前端</td><td align="left">不知名小厂</td><td align="left">9</td><td align="left">135</td><td align="left">4769</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4001878053227127">JeffreyAI</a></td><td align="left">Android Developer - Yokagames<br>Ex - RavenTech（YC W15）<br>AI、Arts、music、sketch、outdoor<br><br>Email:<br><a href="mailto:&#106;&#101;&#102;&#102;&#114;&#101;&#x79;&#x78;&#x75;&#x2e;&#119;&#111;&#x72;&#108;&#100;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;">&#106;&#101;&#102;&#102;&#114;&#101;&#x79;&#x78;&#x75;&#x2e;&#119;&#111;&#x72;&#108;&#100;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a><br><br>Github:<br><a href="https://github.com/jeffreyxuworld">https://github.com/jeffreyxuworld</a></td><td align="left">Android开发</td><td align="left">杭州游卡网络技术有限公司</td><td align="left">7</td><td align="left">38</td><td align="left">2238</td><td align="left">14</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932942224398">金色小芝麻</a></td><td align="left">不畏惧，不将就，未来的日子好好努力</td><td align="left">Web前端开发</td><td align="left">-</td><td align="left">72</td><td align="left">4673</td><td align="left">246085</td><td align="left">4615</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3386151546961294">zz</a></td><td align="left">-</td><td align="left">前端</td><td align="left">布谷鸟工作室</td><td align="left">28</td><td align="left">2713</td><td align="left">249158</td><td align="left">479</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2233819792682760">zhouhuandev</a></td><td align="left">不忘初心，方得始终。</td><td align="left">Android</td><td align="left">小万达</td><td align="left">2</td><td align="left">25</td><td align="left">2046</td><td align="left">14</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/588993963758215">i听风逝夜</a></td><td align="left">假设这里有简介</td><td align="left">Jvav攻城狮</td><td align="left">-</td><td align="left">73</td><td align="left">555</td><td align="left">61237</td><td align="left">104</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/78820569533070">Quyunshuo</a></td><td align="left">特长：腿</td><td align="left">Android developer</td><td align="left">中孚信息</td><td align="left">14</td><td align="left">711</td><td align="left">35248</td><td align="left">227</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2963939081348958">小码哥Damon</a></td><td align="left">长期从事微服务架构设计，结合Docker、K8s做微服务容器化，自动化部署等一站式项目部署、落地。目前主要从事基于K8s云原生架构研发的工作。Golang语言开发，长期研究边缘计算框架KubeEdge、调度框架Volcano等。</td><td align="left">基础架构工程师</td><td align="left">-</td><td align="left">47</td><td align="left">545</td><td align="left">17158</td><td align="left">81</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/940837682025896">Ving</a></td><td align="left">幡然醒悟之时，却已反常到无话不谈。</td><td align="left">厨子码农</td><td align="left">飞常准</td><td align="left">10</td><td align="left">17</td><td align="left">2447</td><td align="left">15</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/43636195606333">小小乔</a></td><td align="left">一个热爱技术、喜欢专研新领域的技术小姐姐</td><td align="left">前端开发</td><td align="left">-</td><td align="left">12</td><td align="left">18</td><td align="left">3240</td><td align="left">8</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/773647863649895">Duncan</a></td><td align="left">只分享干货</td><td align="left">前端搬砖达人</td><td align="left">-</td><td align="left">3</td><td align="left">286</td><td align="left">15281</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/413072103836279">小小俊</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">19</td><td align="left">27</td><td align="left">1585</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139267910237">树酱</a></td><td align="left">唱跳rap工程🌲 ( 微信:Little_tree_o )</td><td align="left">Apifox</td><td align="left">API管理神器</td><td align="left">54</td><td align="left">8747</td><td align="left">411464</td><td align="left">5849</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2981531263709735">izsm</a></td><td align="left">-</td><td align="left">iOS</td><td align="left">-</td><td align="left">35</td><td align="left">128</td><td align="left">15112</td><td align="left">68</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1838039171075352">彭道宽</a></td><td align="left">小册《Electron + React 从 0 到 1 实现简历平台实战》作者，江湖人称“彭于晏广州分晏”</td><td align="left">SugarTurboS Club 成员</td><td align="left">CVTE</td><td align="left">36</td><td align="left">3078</td><td align="left">157360</td><td align="left">1134</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/254742429175352">红尘炼心</a></td><td align="left">Vue、React、uni-app、Webpack</td><td align="left">web前端工程师</td><td align="left">··</td><td align="left">114</td><td align="left">12937</td><td align="left">574139</td><td align="left">3399</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1063982987230392">彭丑丑</a></td><td align="left">🔥Hi，我是丑丑。这里有 Android 进阶成长路线笔记 &amp; 博客，欢迎跟着彭丑丑一起成长。（联系方式 &amp; 入群方式在 GitHub）</td><td align="left">Android搬砖师</td><td align="left">加微信进小彭的 Android 交流群，私聊简历</td><td align="left">87</td><td align="left">2355</td><td align="left">195092</td><td align="left">1281</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4099449610050717">孤寒者</a></td><td align="left">公众号不定时免费分享学习及项目资源！</td><td align="left">微信公众号【孤寒者】</td><td align="left">-</td><td align="left">125</td><td align="left">4129</td><td align="left">46248</td><td align="left">253</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1117561754756488">HashTang</a></td><td align="left">一位不知名的前端小开发</td><td align="left">前端小开发</td><td align="left">-</td><td align="left">3</td><td align="left">112</td><td align="left">5450</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/958429868858622">xmanlin</a></td><td align="left">循序渐进，预留退路</td><td align="left">公众号</td><td align="left">旅行中的程序员</td><td align="left">30</td><td align="left">3080</td><td align="left">126932</td><td align="left">3359</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2304992131153981">4ye酱</a></td><td align="left">定个小目标，写个3年先 ！！</td><td align="left">公众号</td><td align="left">Java4ye</td><td align="left">79</td><td align="left">1263</td><td align="left">47478</td><td align="left">142</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1151943918492855">蚂蚁背大象</a></td><td align="left">要有遥不可及的梦想,也要有脚踏实地的本事</td><td align="left">Java开发</td><td align="left">-</td><td align="left">34</td><td align="left">39</td><td align="left">19895</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3659602937780621">学不完的前端_卷它</a></td><td align="left">WORK <br>HARD<br>DREAM<br>BIG</td><td align="left">web前端 大四</td><td align="left">-</td><td align="left">23</td><td align="left">89</td><td align="left">6228</td><td align="left">20</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/852876722177533">优弧</a></td><td align="left">关于掘金的任何反馈都可以找我哈！可以加微信：chnyifan 或者 zwcatfly 进作者推荐群 个人主页：<a href="https://bkbll.notion.site/">https://bkbll.notion.site/</a></td><td align="left">管理员</td><td align="left">运营负责人</td><td align="left">掘金</td><td align="left">50</td><td align="left">2106</td><td align="left">246220</td><td align="left">22492</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3034307823148718">saucxs</a></td><td align="left">「松宝写代码」公众号作者，watermark-dom包700+ star，字节内推1w+，爱好折腾，致力于全栈，喜欢挑战自己的字节研发工程师。欢迎关注和咨询，和松宝一起写代码，冲冲冲！</td><td align="left">美工队</td><td align="left">ByteDance</td><td align="left">85</td><td align="left">902</td><td align="left">49376</td><td align="left">196</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3790771824128190">xn213</a></td><td align="left">-</td><td align="left">头号沸猿在线摸鱼</td><td align="left">-</td><td align="left">128</td><td align="left">660</td><td align="left">33895</td><td align="left">56</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4142615541321928">coder_pig</a></td><td align="left">二流本科结业，略懂Android、Python、搞机逆向、写过书，喜欢蕾姆，有个「抠腚男孩」的公号</td><td align="left">摸鱼王</td><td align="left">Android补全计划</td><td align="left">115</td><td align="left">4921</td><td align="left">397394</td><td align="left">8295</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2771185768884824">二当家的白帽子</a></td><td align="left">一起加油吧，希望我们大家都能每天进步一点点，成为我们想要成为的那个人～～～～～</td><td align="left">高级系统架构师</td><td align="left">-</td><td align="left">57</td><td align="left">2136</td><td align="left">19450</td><td align="left">111</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2875978150314408">Eagle_Clark</a></td><td align="left">专注大前端<br>致疯狂的人：他们特立独行，他们桀骜不驯，他们惹是生非，他们格格不入，他们用与众不同的眼光看待事物。他们不喜欢墨守成规，他们也不愿安于现状……</td><td align="left">大前端开发工程师</td><td align="left">-</td><td align="left">52</td><td align="left">92</td><td align="left">18731</td><td align="left">26</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3474112476363405">kkkkkkk3</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">11</td><td align="left">50</td><td align="left">2924</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2216256522422541">十九万里</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">上海铨芯半导体</td><td align="left">146</td><td align="left">361</td><td align="left">20640</td><td align="left">80</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4177799914989325">无双3</a></td><td align="left">What’s stopping you?</td><td align="left">iOS研发</td><td align="left">-</td><td align="left">37</td><td align="left">137</td><td align="left">17296</td><td align="left">35</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3465271329953806">小魔童哪吒</a></td><td align="left">可以关注公众号：小魔童哪吒       擅长c/c++，golang</td><td align="left">关注 公众号  小魔童哪吒 ， 交个朋友</td><td align="left">-</td><td align="left">170</td><td align="left">3170</td><td align="left">93815</td><td align="left">339</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2023569536854269">inline705</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">17</td><td align="left">424</td><td align="left">20265</td><td align="left">75</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2330620350437678">chokcoco</a></td><td align="left">擅长从删库到跑路</td><td align="left">坎坷切图仔</td><td align="left">iCSS前端趣闻</td><td align="left">118</td><td align="left">31169</td><td align="left">812587</td><td align="left">18777</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1116759543515485">獨釣寒江雪</a></td><td align="left">🦅 个人博客：<a href="https://king-hcj.github.io/">https://king-hcj.github.io/</a><br>🤝  内推、技术交流，可通过个人博客页面扫码添加我的微信<br>👑  Nothing is given, Everything is earned！</td><td align="left">前端研发</td><td align="left">字节跳动</td><td align="left">15</td><td align="left">1020</td><td align="left">52180</td><td align="left">589</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/70822370479901">叶一一</a></td><td align="left">苍生涂涂，天下缭燎，诸子百家，唯我纵横。</td><td align="left">前端开发</td><td align="left">-</td><td align="left">11</td><td align="left">76</td><td align="left">3137</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3227821870692216">吾非同</a></td><td align="left">公众号「吾非同」关注测试技术、Python编程，程序员基础技能分享</td><td align="left">Python测试开发工程师</td><td align="left">-</td><td align="left">33</td><td align="left">217</td><td align="left">27433</td><td align="left">58</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/43636198487725">埃及</a></td><td align="left">专注前端开发</td><td align="left">公众号：惠shop平台</td><td align="left">-</td><td align="left">9</td><td align="left">92</td><td align="left">5227</td><td align="left">15</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3861140568811576">九儿的小书屋</a></td><td align="left">世界美好与你环环相扣</td><td align="left">Snine</td><td align="left">Snine</td><td align="left">8</td><td align="left">656</td><td align="left">65509</td><td align="left">155</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1239904849499911">小学生study</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">广州才华有限公司</td><td align="left">18</td><td align="left">916</td><td align="left">59085</td><td align="left">179</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3482892898169437">努力的IT小胖子</a></td><td align="left">喜欢做一些放松的事情，比如 听歌，看综艺，看书</td><td align="left">Java初级程序员</td><td align="left">-</td><td align="left">113</td><td align="left">600</td><td align="left">20741</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/756900414357528">forever_Mamba</a></td><td align="left">-</td><td align="left">Get busy living，Or get busy dying</td><td align="left">-</td><td align="left">99</td><td align="left">528</td><td align="left">21511</td><td align="left">19</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2278604206253021">只想要周末双休</a></td><td align="left">寻求一技傍身,吃喝不愁</td><td align="left">java</td><td align="left">-</td><td align="left">45</td><td align="left">378</td><td align="left">13215</td><td align="left">14</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1196740419010279">了凡</a></td><td align="left">需要学习资料找我，我们一起加油！</td><td align="left">微信公号：了凡银河系</td><td align="left">-</td><td align="left">1</td><td align="left">4</td><td align="left">134</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1777277273907431">布小禅</a></td><td align="left">CSDN后端领域优质创作者，华为云云享专家，HDZ核心成员，阿里云博客专家<br>公众号：布小禅</td><td align="left">CSDN后端领域优质创作者，华为云云享专家，HDZ核心成员，阿里云博客专家</td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">公众号：布小禅</td><td align="left">无</td><td align="left">51</td><td align="left">328</td><td align="left">5931</td><td align="left">19</td><td align="left">2</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://juejin.cn/user/2164257578290398">程序员小杰</a></td><td align="left">种一棵树最好的时间是十年前,其次是现在<br>微信号👉YJSWXKA</td><td align="left">公众号：程序员小杰</td><td align="left">-</td><td align="left">61</td><td align="left">1812</td><td align="left">47421</td><td align="left">217</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1714893869557512">郑鱼咚</a></td><td align="left">coding太忙，人生苦短。就不写介绍了哈～</td><td align="left">前端工程师</td><td align="left">一家不知道的还以为是杨幂当老板的神奇公司</td><td align="left">12</td><td align="left">446</td><td align="left">26815</td><td align="left">87</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1881992245286237">青Cheng序员石头</a></td><td align="left">不积跬步，无以至千里。【器，术，得道，传道】</td><td align="left">微信公众号</td><td align="left">Java同道中人</td><td align="left">159</td><td align="left">4835</td><td align="left">163077</td><td align="left">281</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3069492197590541">Mark_Zoe</a></td><td align="left">普通青年，喜欢打篮球。</td><td align="left">-</td><td align="left">-</td><td align="left">109</td><td align="left">708</td><td align="left">27568</td><td align="left">65</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/958429870173240">达摩会武术</a></td><td align="left">未来藏在迷雾中，有时还会让人胆怯，但当你努力踏足其中，可能很快就会云开雾散。<br>大音希声，大道至简。以大多数人的努力程度之低，根本轮不到拼天赋。</td><td align="left">极 简</td><td align="left">GAMEBOY</td><td align="left">140</td><td align="left">152</td><td align="left">26301</td><td align="left">25</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/817692383644750">马男波杰克</a></td><td align="left">人只要认真努力，生活总会变好的</td><td align="left">后端</td><td align="left">Bug生产队</td><td align="left">6</td><td align="left">170</td><td align="left">15540</td><td align="left">67</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/26044010866535">聪莞</a></td><td align="left">iOS 、OpenGL OpenGL_ES Metal图像处理、 音视频编解码</td><td align="left">iOS高级工程师</td><td align="left">-</td><td align="left">50</td><td align="left">92</td><td align="left">35992</td><td align="left">60</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1003213540560990">多喝烫水_</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">3</td><td align="left">1</td><td align="left">265</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2946346894254094">jerryfans</a></td><td align="left">一个iOS开发者，现在在研究Flutter跨平台技术.</td><td align="left">iOS Developer</td><td align="left">逸风</td><td align="left">12</td><td align="left">69</td><td align="left">15020</td><td align="left">17</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2946346894254094">jerryfans</a></td><td align="left">一个iOS开发者，现在在研究Flutter跨平台技术.</td><td align="left">iOS Developer</td><td align="left">逸风</td><td align="left">12</td><td align="left">69</td><td align="left">15020</td><td align="left">17</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3852312492642861">摸鱼专家</a></td><td align="left">-</td><td align="left">高级摸鱼工程师</td><td align="left">-</td><td align="left">54</td><td align="left">7658</td><td align="left">394602</td><td align="left">226</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1063982988795911">HanpengChen</a></td><td align="left">-</td><td align="left">公众号</td><td align="left">前端极客技术</td><td align="left">34</td><td align="left">153</td><td align="left">13912</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/342703356518632">Mitscherlich</a></td><td align="left">“💩”.length === 2</td><td align="left">前端</td><td align="left">康博嘉云</td><td align="left">8</td><td align="left">72</td><td align="left">11007</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1556564193327112">我是胖虎</a></td><td align="left">-</td><td align="left">web前端</td><td align="left">-</td><td align="left">23</td><td align="left">4289</td><td align="left">138951</td><td align="left">3126</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1196744246822605">盼小辉丶</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">53</td><td align="left">976</td><td align="left">62770</td><td align="left">54</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1204720472953240">jsmask</a></td><td align="left">科班出身的散修</td><td align="left">前端修仙者</td><td align="left">-</td><td align="left">69</td><td align="left">1026</td><td align="left">60282</td><td align="left">246</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/219558057873005">南玖</a></td><td align="left">公众号：前端南玖</td><td align="left">微信公众号：前端南玖</td><td align="left">-</td><td align="left">16</td><td align="left">345</td><td align="left">17958</td><td align="left">42</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2673620576140030">德育处主任</a></td><td align="left">国服第一极快瑞</td><td align="left">打杂</td><td align="left">-</td><td align="left">27</td><td align="left">868</td><td align="left">38499</td><td align="left">128</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1433418895458439">JV</a></td><td align="left">-</td><td align="left">小白</td><td align="left">-</td><td align="left">3</td><td align="left">4</td><td align="left">1267</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4001878052973400">Marno</a></td><td align="left">追求极简主义的 App 开发者</td><td align="left">程序员</td><td align="left">公众号 Marno</td><td align="left">51</td><td align="left">7381</td><td align="left">292816</td><td align="left">4414</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1486195453343943">OwenZhang</a></td><td align="left">I actually hate programming, but I love solving problems. Phper &amp; Gopher. <a href="https://gitee.com/owenzhang24">https://gitee.com/owenzhang24</a>            Email: <a href="mailto:&#x6f;&#119;&#101;&#x6e;&#64;&#111;&#119;&#101;&#x6e;&#x7a;&#104;&#x61;&#x6e;&#103;&#x2e;&#99;&#x6f;&#109;">&#x6f;&#119;&#101;&#x6e;&#64;&#111;&#119;&#101;&#x6e;&#x7a;&#104;&#x61;&#x6e;&#103;&#x2e;&#99;&#x6f;&#109;</a></td><td align="left">Phper &amp; Gopher</td><td align="left">Owen Internet Technology Co., Ltd.</td><td align="left">286</td><td align="left">3258</td><td align="left">35098</td><td align="left">119</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/166781499739358">凉城a</a></td><td align="left">公众号:「前端面试官」<br><br>热爱技术也热爱生活</td><td align="left">一个前端</td><td align="left">steam</td><td align="left">37</td><td align="left">1369</td><td align="left">68406</td><td align="left">312</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1143954398258541">阿华12年</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">61</td><td align="left">953</td><td align="left">43410</td><td align="left">268</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1468603264145911">帅地</a></td><td align="left">我是帅地，<br>公众号：帅地玩编程<br>微信号： iamshuaidi3<br>人生格言：make the life that you love.<br><br>欢迎来玩耍</td><td align="left">后端</td><td align="left">帅地玩编程</td><td align="left">94</td><td align="left">4393</td><td align="left">266039</td><td align="left">7703</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4125023356609022">Gundy</a></td><td align="left">Talk is cheap, show me your code.</td><td align="left">全栈开发工程师</td><td align="left">小道视野</td><td align="left">96</td><td align="left">1069</td><td align="left">145428</td><td align="left">517</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999123453419294">Better</a></td><td align="left">努力! 奋斗!</td><td align="left">前端工程师</td><td align="left">某游戏公司</td><td align="left">43</td><td align="left">399</td><td align="left">14167</td><td align="left">35</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/588993964030574">1024肥宅</a></td><td align="left">学习是一件快乐的事!</td><td align="left">微信公众号：1024肥宅｜某外企</td><td align="left">-</td><td align="left">46</td><td align="left">456</td><td align="left">25650</td><td align="left">60</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3526889031075454">单总不会亏待你</a></td><td align="left">-</td><td align="left">Flutter/Android开发工程师</td><td align="left">-</td><td align="left">17</td><td align="left">163</td><td align="left">9672</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2612095357298727">Axjy</a></td><td align="left">技术沉淀与分享（正在努力看买的一堆小册子….📖）</td><td align="left">前端开发工具人</td><td align="left">又是不想上班的一天</td><td align="left">105</td><td align="left">603</td><td align="left">38974</td><td align="left">105</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2849562994940046">西瓜watermelon</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">127</td><td align="left">706</td><td align="left">18941</td><td align="left">28</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1978776660503102">八道</a></td><td align="left">本是青灯不归客，却因浊酒留风尘，星光不问赶路人，岁月不负有心人</td><td align="left">-</td><td align="left">hy</td><td align="left">27</td><td align="left">13</td><td align="left">5184</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4142615543166653">用户名xxx</a></td><td align="left">摸鱼，烤鱼，炸鱼，炒鱼，钓鱼，买鱼，养鱼，除了摸鱼其他都不会</td><td align="left">渣渣前端</td><td align="left">垮掉的公司</td><td align="left">3</td><td align="left">7</td><td align="left">962</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/923245496789255">qyjandroid</a></td><td align="left">Android、React、Flutter</td><td align="left">前端工程师</td><td align="left">竞技世界</td><td align="left">13</td><td align="left">547</td><td align="left">26229</td><td align="left">62</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4476867078522910">修之竹子</a></td><td align="left">公众号【修之竹】关注Android 技术，还有成长道路上的点滴记录、思考，欢迎关注，与我一同成长，一同收获幸福~  微信号 xiuzhizhu ~</td><td align="left">Android 公众号 @修之竹</td><td align="left">-</td><td align="left">7</td><td align="left">27</td><td align="left">2845</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2981531266857262">JayYuen</a></td><td align="left">干饭人!</td><td align="left">前端干饭人</td><td align="left">对啊网</td><td align="left">6</td><td align="left">327</td><td align="left">74460</td><td align="left">79</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/61228381386487">Java中文社群</a></td><td align="left">公众号：Java中文社群</td><td align="left">公众号</td><td align="left">Java中文社群</td><td align="left">183</td><td align="left">6152</td><td align="left">639821</td><td align="left">11850</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1574156383557255">法医</a></td><td align="left">我是法医，一只治疗系前端码猿🐒，与代码对话，倾听它们心底的呼声，期待着大家的点赞👍与关注➕。 [微信:wKavin］</td><td align="left">🏆公众号@前端猎手</td><td align="left">-</td><td align="left">22</td><td align="left">301</td><td align="left">21892</td><td align="left">66</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/387508638324510">乱码三千</a></td><td align="left">把复杂的事情简单化</td><td align="left">公众号:乱码三千</td><td align="left">-</td><td align="left">101</td><td align="left">139</td><td align="left">19559</td><td align="left">21</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/342703359661944">mayoha</a></td><td align="left">记录自己的成长历程</td><td align="left">FE</td><td align="left">-</td><td align="left">43</td><td align="left">1796</td><td align="left">73239</td><td align="left">250</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3438928104021463">耳东蜗牛</a></td><td align="left">前端学习，前端负责人培养，前端架构设计。</td><td align="left">公众号</td><td align="left">前端耳东蜗牛</td><td align="left">61</td><td align="left">3058</td><td align="left">132532</td><td align="left">939</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4239336857152989">小松同学哦</a></td><td align="left">公众号：小松同学哦</td><td align="left">-</td><td align="left">-</td><td align="left">5</td><td align="left">556</td><td align="left">32700</td><td align="left">63</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3052665287739005">Captaincc</a></td><td align="left">有任何关于掘金的问题可以咨询我微信：229199157</td><td align="left">问题解决官</td><td align="left">juejin.cn</td><td align="left">2</td><td align="left">37</td><td align="left">6340</td><td align="left">111</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3350967174838701">一碗周</a></td><td align="left">古之立大事者，不惟有超世之才，亦必有坚韧不拔之志！</td><td align="left">前端造梦师</td><td align="left">-</td><td align="left">138</td><td align="left">496</td><td align="left">47738</td><td align="left">96</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/993614243314551">老表</a></td><td align="left">老表，Python终身学习者，数据分析爱好者，后端烧脑开发者，肝！</td><td align="left">数据分析</td><td align="left">简说Python</td><td align="left">43</td><td align="left">206</td><td align="left">22003</td><td align="left">61</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1855631359481847">辉夜真是太可爱啦</a></td><td align="left">个人网站:<a href="https://www.cooldream.fun/">https://www.cooldream.fun</a></td><td align="left">公众号：前端大食堂</td><td align="left">-</td><td align="left">28</td><td align="left">978</td><td align="left">39581</td><td align="left">213</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/26044012176424">JavaEdge在掘金</a></td><td align="left">关注回复“面试”，白嫖大厂求职必过资源</td><td align="left">公众号</td><td align="left">JavaEdge</td><td align="left">203</td><td align="left">900</td><td align="left">133037</td><td align="left">483</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2172290708548078">快乐的小贾同学</a></td><td align="left">跌跌撞撞 - 总是在成长 , 却总是长不大！</td><td align="left">Android开发</td><td align="left">.</td><td align="left">6</td><td align="left">56</td><td align="left">5041</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4424090520391758">小雨淅淅淅</a></td><td align="left">源码个👻哦，大道至简懂不懂</td><td align="left">JAVA高级程序员</td><td align="left">BATJ</td><td align="left">12</td><td align="left">82</td><td align="left">2695</td><td align="left">15</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3773179638852798">前端阿飞</a></td><td align="left">Stay Hungry, Stay Foolish</td><td align="left">前端探索者</td><td align="left">云启智慧</td><td align="left">14</td><td align="left">2889</td><td align="left">113394</td><td align="left">533</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/475453640152126">最爱吃鱼罐头</a></td><td align="left">余愿遥望，梦幻星空。愿你韶华不负，青春无悔。</td><td align="left">-</td><td align="left">-</td><td align="left">84</td><td align="left">2287</td><td align="left">97718</td><td align="left">313</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2946346894759959">流码</a></td><td align="left">-</td><td align="left">web前端</td><td align="left">-</td><td align="left">2</td><td align="left">11</td><td align="left">450</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3949903997058168">哨兵巨像</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">1</td><td align="left">2</td><td align="left">89</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/694547078999149">Zioyi</a></td><td align="left">-</td><td align="left">后端搬砖</td><td align="left">-</td><td align="left">54</td><td align="left">796</td><td align="left">27912</td><td align="left">34</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3976283440810919">Android_程序猿</a></td><td align="left">安卓,java,框架,结构,</td><td align="left">安卓开发工程师</td><td align="left">江苏云学堂网络科技有限公司</td><td align="left">29</td><td align="left">66</td><td align="left">6384</td><td align="left">4</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1591748570383438">无语听梧桐</a></td><td align="left">我姓同，所以叫无语听梧桐～</td><td align="left">前端复制粘贴工😁</td><td align="left">-</td><td align="left">28</td><td align="left">887</td><td align="left">24894</td><td align="left">36</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932941685885">惠惠子_</a></td><td align="left">自我总结大师</td><td align="left">-</td><td align="left">-</td><td align="left">10</td><td align="left">160</td><td align="left">7906</td><td align="left">19</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999123450007710">墩墩大魔王丶</a></td><td align="left">擅长给自己挖坑</td><td align="left">前端导弹工程师</td><td align="left">派盟军火库</td><td align="left">84</td><td align="left">239</td><td align="left">17861</td><td align="left">29</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2340239856907927">小騎士</a></td><td align="left">工作三连击：查BUG，改BUG，写BUG</td><td align="left">工具人</td><td align="left">炊事班丨背锅侠</td><td align="left">38</td><td align="left">46</td><td align="left">3896</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/958429872534056">gyx_这个杀手不太冷静</a></td><td align="left">老规矩，只用大家看得懂的内容来诠释前端技术。</td><td align="left">前端工程师</td><td align="left">腾讯</td><td align="left">28</td><td align="left">1559</td><td align="left">69057</td><td align="left">489</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2066737588867223">一行舟</a></td><td align="left">在实践中探索航行，撰写最实用的技术文章</td><td align="left">公众号:一行舟</td><td align="left">理想汽车</td><td align="left">34</td><td align="left">135</td><td align="left">13379</td><td align="left">48</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2313028192703303">丁大忽悠</a></td><td align="left">你只管发光发热，剩下的交给时间就好</td><td align="left">Android搬砖人</td><td align="left">某上市小公司</td><td align="left">17</td><td align="left">198</td><td align="left">11654</td><td align="left">21</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3957856403462989">LBJ</a></td><td align="left">一名90后，爱看美剧、做美食、对技术有兴趣</td><td align="left">坚持原创</td><td align="left">用心写文</td><td align="left">129</td><td align="left">8244</td><td align="left">182919</td><td align="left">1052</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3984285871118728">元宇宙</a></td><td align="left">只活在元年宇宙里</td><td align="left">一个不想 coding 的 coder</td><td align="left">-</td><td align="left">103</td><td align="left">99</td><td align="left">13357</td><td align="left">13</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/993614241734270">程序员内点事</a></td><td align="left">-</td><td align="left">公众号：程序员内点事</td><td align="left">-</td><td align="left">78</td><td align="left">6318</td><td align="left">449901</td><td align="left">7258</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1794818405041079">雪月</a></td><td align="left">唱、跳、Rap、篮球、王者</td><td align="left">工具人</td><td align="left">某公司</td><td align="left">5</td><td align="left">442</td><td align="left">24394</td><td align="left">110</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2840793779295133">南方者</a></td><td align="left">一个热爱计算机，更热爱祖国的南方人。</td><td align="left">v：NanFangZhe404 公众号：鞍排</td><td align="left">-</td><td align="left">93</td><td align="left">1052</td><td align="left">13463</td><td align="left">24</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3087084378135613">唐子玄</a></td><td align="left">移动客户端 bug 贡献者。</td><td align="left">Android，Flutter</td><td align="left">Bug 工厂</td><td align="left">78</td><td align="left">3429</td><td align="left">289433</td><td align="left">5413</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1679709499309960">少年纪</a></td><td align="left">-</td><td align="left">前端开发</td><td align="left">-</td><td align="left">1</td><td align="left">1</td><td align="left">124</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1398234521016328">吃猫的鱼_</a></td><td align="left"><a href="https://lijunyi2.github.io/blog/">https://lijunyi2.github.io/blog/</a></td><td align="left">JAVA</td><td align="left">信产</td><td align="left">4</td><td align="left">16</td><td align="left">418</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2559318798916264">程序员无缺</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">6</td><td align="left">5</td><td align="left">512</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2101921963839678">ChanningHyl🙌</a></td><td align="left">wanna be marvelous</td><td align="left">⚡️强迫症切图工具人🛠</td><td align="left">-</td><td align="left">6</td><td align="left">1706</td><td align="left">55080</td><td align="left">541</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/131597122679661">云的世界</a></td><td align="left">天空系。看世界，听世界，问世界。  <br>微信：dirge-cloud</td><td align="left">-</td><td align="left">公号：云的程序世界</td><td align="left">67</td><td align="left">11758</td><td align="left">430020</td><td align="left">1525</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4089838987914456">柏炎</a></td><td align="left">热爱hiphop,热爱酒精</td><td align="left">公众号：柏炎大叔</td><td align="left">-</td><td align="left">36</td><td align="left">1195</td><td align="left">50998</td><td align="left">334</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2840793776918375">小铭子</a></td><td align="left">如果这世界真有奇迹，那是努力的另一个名字</td><td align="left">前端开发工程师</td><td align="left">-</td><td align="left">49</td><td align="left">869</td><td align="left">71041</td><td align="left">271</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/377887729924872">MinXie</a></td><td align="left">-</td><td align="left">后端 看山不是山</td><td align="left">-</td><td align="left">4</td><td align="left">10</td><td align="left">1365</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/588993964541288">CoderStar</a></td><td align="left">Think more, Code less</td><td align="left">公众号：CoderStar</td><td align="left">iOS开发工程师</td><td align="left">iOS 摸鱼周报联合编辑</td><td align="left">28</td><td align="left">326</td><td align="left">29619</td><td align="left">149</td></tr><tr><td align="left"><a href="https://juejin.cn/user/201965867640862">JinBeen</a></td><td align="left">你所有的问题都有答案</td><td align="left">Android开发</td><td align="left">bevol</td><td align="left">13</td><td align="left">490</td><td align="left">34175</td><td align="left">98</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1626932940385368">林深鹿</a></td><td align="left">林深时见鹿，海蓝时见鲸，梦醒时见你</td><td align="left">公众号：第六十六封信</td><td align="left">-</td><td align="left">104</td><td align="left">1555</td><td align="left">43555</td><td align="left">114</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1293455879050157">Finbird</a></td><td align="left">-</td><td align="left">大前端</td><td align="left">-</td><td align="left">21</td><td align="left">33</td><td align="left">3343</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/43636193770071">卤蛋实验室</a></td><td align="left">-</td><td align="left">公众号</td><td align="left">卤蛋实验室</td><td align="left">20</td><td align="left">2621</td><td align="left">97302</td><td align="left">814</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/836068767437245">执久呀</a></td><td align="left">CSDN账号：执久呀</td><td align="left">-</td><td align="left">-</td><td align="left">5</td><td align="left">6</td><td align="left">189</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3412492674665367">归子莫</a></td><td align="left">一枚从后端过来的前端开发工程师，对前端（VR、视觉效果、动画、框架）和后端有兴趣。公众号：归子莫。</td><td align="left">前端玩全栈</td><td align="left">公众号【归子莫】</td><td align="left">72</td><td align="left">461</td><td align="left">23201</td><td align="left">32</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4283353031783015">枸杞菊花保温杯</a></td><td align="left">-</td><td align="left">iOS</td><td align="left">Flutter</td><td align="left">NULL</td><td align="left">98</td><td align="left">266</td><td align="left">102385</td><td align="left">221</td></tr><tr><td align="left"><a href="https://juejin.cn/user/493043443054494">WangScaler</a></td><td align="left">a small developer !</td><td align="left">CV/API增删改查工程师</td><td align="left">China</td><td align="left">83</td><td align="left">479</td><td align="left">27524</td><td align="left">40</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3957869870592685">星始流年</a></td><td align="left">路漫漫，上下求索。</td><td align="left">前端工程师</td><td align="left">-</td><td align="left">45</td><td align="left">692</td><td align="left">51973</td><td align="left">152</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1187911064884935">我先测了</a></td><td align="left">你好，我叫尤勇，我喜欢下棋；<br>你好，我叫夏琪，我喜欢游泳。</td><td align="left">神级白月光</td><td align="left">美梦公司</td><td align="left">39</td><td align="left">206</td><td align="left">5069</td><td align="left">17</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1636485994149022">三掌柜</a></td><td align="left">一分耕耘，不一定有一份收获，但十分耕耘，一定会有一分收获</td><td align="left">架构师</td><td align="left">某某某科技有限责任公司</td><td align="left">167</td><td align="left">267</td><td align="left">35487</td><td align="left">34</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3025489497950094">明无生</a></td><td align="left">无怨无悔我走我路，走不尽天涯路。</td><td align="left">侠客</td><td align="left">武林</td><td align="left">95</td><td align="left">22</td><td align="left">9256</td><td align="left">6</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3747558609661213">小只前端攻城狮</a></td><td align="left">Web全栈开发、持续学习者，关注公众号第一时间接收最新文章，也经常分享一些好用的工具</td><td align="left">公众号：小攻城狮学前端</td><td align="left">滴滴</td><td align="left">前端研发工程师</td><td align="left">140</td><td align="left">1994</td><td align="left">54940</td><td align="left">170</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1336628107814488">零一01</a></td><td align="left">我是「零一」，记录技术成长过程中的点点滴滴，请大家见证我从0到1的过程吧</td><td align="left">公众号「前端印象」</td><td align="left">字节跳动</td><td align="left">29</td><td align="left">4928</td><td align="left">219209</td><td align="left">1895</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2999926721615966">不吃鱼d猫</a></td><td align="left">正在学习js</td><td align="left">前端实习生</td><td align="left">-</td><td align="left">20</td><td align="left">106</td><td align="left">1793</td><td align="left">7</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1390249158639911">呆呆敲代码的小Y</a></td><td align="left">主要关注Unity引擎的项目开发引用</td><td align="left">公众号：呆呆敲代码的小Y</td><td align="left">-</td><td align="left">105</td><td align="left">3341</td><td align="left">187164</td><td align="left">214</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2172290705131016">Antway</a></td><td align="left">专注开源库。公司大数据行业，大量岗位招人。wx：Antway1024</td><td align="left">研发工程师</td><td align="left">-</td><td align="left">52</td><td align="left">560</td><td align="left">49941</td><td align="left">222</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4107431172383597">阿加西卡机嘛</a></td><td align="left">刷子游戏爱好者= =</td><td align="left">前端工程师</td><td align="left">某外企</td><td align="left">2</td><td align="left">29</td><td align="left">1967</td><td align="left">11</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/712139265547598">Ichmag</a></td><td align="left">-</td><td align="left">前端</td><td align="left">-</td><td align="left">27</td><td align="left">292</td><td align="left">24914</td><td align="left">38</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4019470243477719">这可还行</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">30</td><td align="left">5</td><td align="left">2084</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1257497031092862">我是绿色大米呀</a></td><td align="left">-</td><td align="left">Android搬砖人</td><td align="left">教小朋友说话公司</td><td align="left">66</td><td align="left">2148</td><td align="left">125135</td><td align="left">631</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/624178334797934">胡七筒</a></td><td align="left">码代码，码文字，从不偷工减料。 有着一副人畜无害的皮囊，还有着一颗沁人心脾的有趣灵魂。</td><td align="left">码文字的程序猿</td><td align="left">你猜</td><td align="left">66</td><td align="left">4563</td><td align="left">540972</td><td align="left">4574</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/729731453434696">飞翔的cookie</a></td><td align="left">-</td><td align="left">前端工程师</td><td align="left">某某树</td><td align="left">1</td><td align="left">32</td><td align="left">1224</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2445792987055518">DarkKing</a></td><td align="left">Java技术架构师，熟悉大数据，分布式，高并发等领域</td><td align="left">技术经理</td><td align="left">-</td><td align="left">46</td><td align="left">45</td><td align="left">6531</td><td align="left">7</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3193419847964990">全能干饭猿</a></td><td align="left">In my life Ijust smile !</td><td align="left">-</td><td align="left">勇敢牛牛-不怕困难</td><td align="left">2</td><td align="left">4</td><td align="left">140</td><td align="left">3</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/70787819648695">岛上码农</a></td><td align="left">从南飘到北，从北游到南的业余码农</td><td align="left">公众号</td><td align="left">岛上码农</td><td align="left">203</td><td align="left">4699</td><td align="left">296717</td><td align="left">1219</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/325111174941383">浅_梦</a></td><td align="left">¢</td><td align="left">前端开发</td><td align="left">-</td><td align="left">8</td><td align="left">10</td><td align="left">882</td><td align="left">4</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3377343099308552">小道安全</a></td><td align="left">公众号:小道安全</td><td align="left">公众号：小道安全</td><td align="left">-</td><td align="left">53</td><td align="left">998</td><td align="left">29972</td><td align="left">104</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2462537381852910">吃蟹黄的Thilo</a></td><td align="left">蟹黄吃到饱，前端搞的好，一个梦想能吃蟹黄吃到饱的前端程序员</td><td align="left">前端 @电商</td><td align="left">-</td><td align="left">13</td><td align="left">1721</td><td align="left">46755</td><td align="left">247</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1336634687882958">Arrom</a></td><td align="left">生命太短暂，没时间遗憾，一分钟都不要留给那些让你不快的人或事。若不是终点，请一直微笑向前!</td><td align="left">研发工程师</td><td align="left">-</td><td align="left">113</td><td align="left">159</td><td align="left">11100</td><td align="left">9</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3579665589747287">杨建国啦</a></td><td align="left">虾皮内推</td><td align="left">公众号：七溜八溜</td><td align="left">-</td><td align="left">6</td><td align="left">70</td><td align="left">7625</td><td align="left">4</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3334168064041383"><em>祯不错</em></a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">10</td><td align="left">0</td><td align="left">236</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2225067265891902">贰拾壹先生</a></td><td align="left">可以随心所欲，但不能随波逐流</td><td align="left">前端工程师</td><td align="left">平安</td><td align="left">122</td><td align="left">156</td><td align="left">19597</td><td align="left">11</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2541726616791037">绝了</a></td><td align="left">与其不分青红皂白地一味否定，不如在肯定现状的基础上，寻找并提出能带来改善的建议。</td><td align="left">sql工程师</td><td align="left">小厂</td><td align="left">9</td><td align="left">164</td><td align="left">13310</td><td align="left">66</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/61228381382391">程序猿阿朗</a></td><td align="left">Hello world :) 早睡早起，坚持不懈</td><td align="left">微信：程序猿阿朗</td><td align="left">Alibaba</td><td align="left">63</td><td align="left">600</td><td align="left">91254</td><td align="left">329</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1239904848713592">HaiJun</a></td><td align="left">前端领域贡献者</td><td align="left">前端工程师</td><td align="left">公众号： 前端自学社区</td><td align="left">31</td><td align="left">1089</td><td align="left">73475</td><td align="left">275</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3052689406040605">BennuCTech</a></td><td align="left">公众号：BennuCTech</td><td align="left">公众号：BennuCTech</td><td align="left">小盒</td><td align="left">44</td><td align="left">85</td><td align="left">12268</td><td align="left">20</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1688446223255640">盗道</a></td><td align="left">-</td><td align="left">资深前端开发</td><td align="left">-</td><td align="left">11</td><td align="left">207</td><td align="left">12868</td><td align="left">20</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/624955633174733">Sometimes</a></td><td align="left">个人博客：<a href="https://bookbook.cc/">https://bookbook.cc</a></td><td align="left">前端</td><td align="left">小厂</td><td align="left">1</td><td align="left">1</td><td align="left">32</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/729731449230711">丨隋堤倦客丨</a></td><td align="left">我挥舞着键盘和本子，发誓要把这世界写个明明白白！！！</td><td align="left">前端工程师</td><td align="left">zoom</td><td align="left">43</td><td align="left">311</td><td align="left">19063</td><td align="left">75</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/474627279698541">小伙子vae</a></td><td align="left">keep going forward, keep going up, never stop</td><td align="left">研发工程师</td><td align="left">-</td><td align="left">88</td><td align="left">1240</td><td align="left">42753</td><td align="left">124</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1275089218702142">劲风君</a></td><td align="left">爬山、跑步、羽毛球</td><td align="left">Python开发工程师</td><td align="left">-</td><td align="left">72</td><td align="left">13</td><td align="left">7858</td><td align="left">5</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3790771823848935">芒果啊</a></td><td align="left">Endless knowledge, endless learning</td><td align="left">前端ing</td><td align="left"><a href="mailto:&#x78;&#x39;&#x35;&#51;&#x33;&#51;&#64;&#115;&#x6f;&#104;&#x75;&#46;&#x63;&#x6f;&#109;">&#x78;&#x39;&#x35;&#51;&#x33;&#51;&#64;&#115;&#x6f;&#104;&#x75;&#46;&#x63;&#x6f;&#109;</a></td><td align="left">36</td><td align="left">83</td><td align="left">8694</td><td align="left">10</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/361064813312728">扁鹊</a></td><td align="left">活着就行🤪</td><td align="left">Java后端开发</td><td align="left">-</td><td align="left">9</td><td align="left">0</td><td align="left">325</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536217406407710">伟大的兔神</a></td><td align="left">HTML、CSS、JS、VUE</td><td align="left">公众号丨长耳朵兔兔进击前端</td><td align="left">能干</td><td align="left">43</td><td align="left">809</td><td align="left">43255</td><td align="left">218</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/536217405895149">王大呀呀</a></td><td align="left">是个学技术的小学生，只想为行业做一点微不足道的</td><td align="left">学生</td><td align="left">-</td><td align="left">627</td><td align="left">3612</td><td align="left">223070</td><td align="left">107</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3913917127985240">Zhujiang</a></td><td align="left">《Jetpack Compose：Android全新UI编程》作者，公众号：江江安卓</td><td align="left">《Jetpack Compose：Android全新UI编程》</td><td align="left">联想</td><td align="left">38</td><td align="left">1205</td><td align="left">135606</td><td align="left">2181</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3175045314389278">Benbinbin</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">72</td><td align="left">138</td><td align="left">23984</td><td align="left">23</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3668388983878573">我犟不过你</a></td><td align="left">java开发，微服务，数据库，架构~<br><br>除了个高一无是处，没事打打篮球，写写bug，写写博客。</td><td align="left">java</td><td align="left">求哈尔滨或能远程办公的收留啊</td><td align="left">77</td><td align="left">125</td><td align="left">12003</td><td align="left">25</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1028798614873447">阿Q说代码</a></td><td align="left">阿Q是公众号“阿Q说代码”作者、码农，专注分享java技术干货：多线程、JVM、Spring Boot、Spring Cloud、Redis、ElasticSearch、Zookeeper、消息队列、面试题等。</td><td align="left">Java开发</td><td align="left">-</td><td align="left">82</td><td align="left">202</td><td align="left">26618</td><td align="left">58</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2753622735323159">菜菜bu菜</a></td><td align="left">一起做一件很酷的事情</td><td align="left">互联网种菜</td><td align="left">银河系干饭有限公司</td><td align="left">28</td><td align="left">741</td><td align="left">14495</td><td align="left">41</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2692076826529383">吴梦青</a></td><td align="left">公众号：见过你的反馈。写书评、记录生活。代码是我的自由，文字是我的远方。</td><td align="left">-</td><td align="left">-</td><td align="left">23</td><td align="left">3</td><td align="left">991</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4309700183594366">欧怼怼</a></td><td align="left">Talk is cheap.</td><td align="left">前端</td><td align="left">-</td><td align="left">17</td><td align="left">636</td><td align="left">22366</td><td align="left">112</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/571401777200855">青莲使者</a></td><td align="left">公众号：前端北极星</td><td align="left">高级前端开发</td><td align="left">不大不小公司</td><td align="left">91</td><td align="left">1120</td><td align="left">35995</td><td align="left">54</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3905939872951085">Android帅次</a></td><td align="left">掘金行必有我师焉。</td><td align="left">知识的搬运工</td><td align="left">公众号：帅次</td><td align="left">81</td><td align="left">2240</td><td align="left">85659</td><td align="left">270</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/149189312913511">芦航</a></td><td align="left">Android稳定性，高通，复旦</td><td align="left">-</td><td align="left">-</td><td align="left">26</td><td align="left">476</td><td align="left">76650</td><td align="left">547</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2541726614695704">零狐冲</a></td><td align="left">撸铁</td><td align="left">搬砖人</td><td align="left">-</td><td align="left">23</td><td align="left">1154</td><td align="left">15209</td><td align="left">62</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1204720443862887">依然范特稀西</a></td><td align="left">一个喜欢篮球、音乐、电影的程序员，Android工程师。欢迎关注我的微信公众</td><td align="left">公众号 @技术最TOP</td><td align="left">-</td><td align="left">106</td><td align="left">17756</td><td align="left">660781</td><td align="left">16053</td><td align="left">6</td></tr><tr><td align="left"><a href="https://juejin.cn/user/386677132243320">代尔码夫</a></td><td align="left">我是一名程序员，天天写代码。</td><td align="left">Android 工程师</td><td align="left">-</td><td align="left">23</td><td align="left">36</td><td align="left">4143</td><td align="left">6</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3544481218435549">左耳咚</a></td><td align="left">-</td><td align="left">-</td><td align="left">-</td><td align="left">1</td><td align="left">17</td><td align="left">502</td><td align="left">6</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2049902560674295">陈言必行</a></td><td align="left">个人微信：czy59421；关注公众号：领取我为你精心准备的程序书籍，另有几十款经典游戏源码等你来取哦~</td><td align="left">公众号</td><td align="left">开发同学留步</td><td align="left">224</td><td align="left">2114</td><td align="left">27221</td><td align="left">59</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3853127158081144">Hydra</a></td><td align="left">公众号“码农参上”作者，爱好美食、运动、摄影、ACG的程序猿。</td><td align="left">公众号【码农参上】</td><td align="left">-</td><td align="left">66</td><td align="left">182</td><td align="left">17473</td><td align="left">22</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4485631602599495">那些年丶ny</a></td><td align="left">某某公司的小小前端</td><td align="left">小小前端</td><td align="left">-</td><td align="left">49</td><td align="left">973</td><td align="left">28849</td><td align="left">68</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4248168662568120">前段切图仔</a></td><td align="left">-</td><td align="left">前端开发攻城狮</td><td align="left">-</td><td align="left">15</td><td align="left">21</td><td align="left">1991</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2216217609507229">5加H</a></td><td align="left">-</td><td align="left">前端代码工</td><td align="left">-</td><td align="left">34</td><td align="left">81</td><td align="left">9173</td><td align="left">16</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/316285295010925">水鳜鱼肥</a></td><td align="left">找点乐子让自己开心开心</td><td align="left">面向漂亮PM编程</td><td align="left">-</td><td align="left">12</td><td align="left">186</td><td align="left">11264</td><td align="left">42</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4160207732616669">uWydnA</a></td><td align="left">-</td><td align="left">一个静态语言的灵魂</td><td align="left">-</td><td align="left">7</td><td align="left">37</td><td align="left">2279</td><td align="left">7</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1680474815073805">RiemannHypo</a></td><td align="left">来都来了，点个赞呗！公众号RiemannHypo</td><td align="left">QA</td><td align="left">Citi Group</td><td align="left">18</td><td align="left">299</td><td align="left">4059</td><td align="left">18</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4459274891172327">今阳</a></td><td align="left">一个Android开发</td><td align="left">公众号「今阳说」</td><td align="left">-</td><td align="left">112</td><td align="left">319</td><td align="left">34769</td><td align="left">73</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/668101431009496">RicardoMJiang</a></td><td align="left">-</td><td align="left">Android Developer</td><td align="left">-</td><td align="left">60</td><td align="left">3045</td><td align="left">275311</td><td align="left">1147</td><td align="left">4</td></tr><tr><td align="left"><a href="https://juejin.cn/user/8451824316670">Halifax</a></td><td align="left">星光不问赶路人，岁月不负有心人</td><td align="left">Android @ 微信号: fuqiang2020</td><td align="left">-</td><td align="left">21</td><td align="left">1080</td><td align="left">36247</td><td align="left">186</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3069492197078279">吴文周</a></td><td align="left">前端开发</td><td align="left">南京前端</td><td align="left">云学堂</td><td align="left">50</td><td align="left">319</td><td align="left">37312</td><td align="left">123</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4353721778057997">season_zhu</a></td><td align="left">Swift/OC/Flutter/Python/Vue</td><td align="left">大前端API调用工程师</td><td align="left">Otaku</td><td align="left">105</td><td align="left">2287</td><td align="left">132673</td><td align="left">359</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3984285870859614">神奇的程序员</a></td><td align="left">今天的努力只为未来</td><td align="left">前端开发</td><td align="left">广州某中型公司</td><td align="left">128</td><td align="left">7631</td><td align="left">553909</td><td align="left">3381</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4063433943168343">陈煮酒</a></td><td align="left">React / Node.js / 前端工程化</td><td align="left">前端工程师</td><td align="left">-</td><td align="left">3</td><td align="left">65</td><td align="left">3055</td><td align="left">13</td><td align="left">1</td></tr><tr><td align="left"><a href="https://juejin.cn/user/650530414137534">小科比_</a></td><td align="left">我爱学习，谁tm都别想打扰我学习</td><td align="left">前端研发工程师</td><td align="left">字节跳动</td><td align="left">22</td><td align="left">1077</td><td align="left">55438</td><td align="left">249</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/1662117313775806">前端自学驿站</a></td><td align="left">业精于勤，荒于嬉。</td><td align="left">公众号「前端自学驿站」</td><td align="left">-</td><td align="left">31</td><td align="left">2697</td><td align="left">106772</td><td align="left">1036</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4318537404123688">同学小强</a></td><td align="left">🔐 🏎  一个上了年纪的新人 🚁 ⛹🏻‍♂️</td><td align="left">React/JavaScript/Nodejs搬运工</td><td align="left">公众号「同学小强」</td><td align="left">7</td><td align="left">112</td><td align="left">4608</td><td align="left">24</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/4248168660735310">wangly19</a></td><td align="left">学习中</td><td align="left">🏆 掘金签约作者</td><td align="left">一起学习&amp;微信：Rzicon</td><td align="left">60</td><td align="left">7195</td><td align="left">367884</td><td align="left">2308</td><td align="left">5</td></tr><tr><td align="left"><a href="https://juejin.cn/user/2357827986264942">hqk</a></td><td align="left">技术这条路，并不只是一比高下，而是一同成长！</td><td align="left">Android</td><td align="left">-</td><td align="left">56</td><td align="left">777</td><td align="left">42231</td><td align="left">173</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/3324525301727949">海的对岸</a></td><td align="left">Vue.js</td><td align="left">公众号：超哥在学习</td><td align="left">-</td><td align="left">52</td><td align="left">1832</td><td align="left">39268</td><td align="left">202</td><td align="left">3</td></tr><tr><td align="left"><a href="https://juejin.cn/user/281912383374237">Aaron_hj</a></td><td align="left">想要成为某一领域技术大牛的前端人，欢迎交流～</td><td align="left">前端</td><td align="left">滴滴</td><td align="left">16</td><td align="left">321</td><td align="left">10924</td><td align="left">64</td><td align="left">2</td></tr><tr><td align="left"><a href="https://juejin.cn/user/870468939424205">搬砖_胖子</a></td><td align="left">我走过你走过的路，我即将走你走过的路，我走过你要走的路，我即将走你没走过的路。</td><td align="left">前端</td><td align="left">搬砖学院</td><td align="left">10</td><td align="left">119</td><td align="left">15070</td><td align="left">16</td><td align="left">2</td></tr></tbody></table><h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>当我看到优秀文章内容的时候，总是欣喜若狂！那种感觉大家应该都体会过，所以，希望本文可以让大家能收获到一些优秀的创作者，学习到更多的干货，总结 2021，向优秀学习，勇敢向往 2021！</p><p>最后，如果大家还有多余投票次数，欢迎给我们的团队投票，或者给笔者投票：</p><ul><li><a href="https://rank.juejin.cn/rank/2021/1002387318511214">37手游iOS技术运营团队 - 2021年度人气创作者榜单</a></li><li><a href="https://rank.juejin.cn/rank/2021/1908407915780989">iHTCboy - 2021年度人气创作者榜单</a></li></ul><p>最后，感谢掘金举办的这次活动，让开发者欢聚一堂，同时也让活跃的开发者呈现在大家面前，正如掘金活动页面写的：</p><blockquote><p>相信技术，传递价值，这是掘金每一个技术创作者的动力与信念。<br>他们分享前沿的技术创新，输出最佳的生产实践，影响着每一个上进的开发者</p></blockquote><h3 id="五、参考引用"><a href="#五、参考引用" class="headerlink" title="五、参考引用"></a>五、参考引用</h3><ul><li><a href="https://rank.juejin.cn/rank/2021">掘金 - 2021年度人气创作者榜单</a></li><li><a href="https://rank.juejin.cn/rank/2021/1002387318511214">37手游iOS技术运营团队 - 2021年度人气创作者榜单</a></li><li><a href="https://rank.juejin.cn/rank/2021/1908407915780989">iHTCboy - 2021年度人气创作者榜单</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;想起最近大家的一个讨论：“现在互联网这么多内容，我应该从那里开始学？跟谁学？”，还有很多优秀的技术团队或者开发者博客等很久没有发表新文章了，怎么让技术社区活跃起来等等。&lt;/p&gt;
&lt;p&gt;正值 2021 年结尾，掘金举办《&lt;a href=&quot;https://rank.juejin.cn/rank/2021&quot;&gt;2021年度人气创作者榜单&lt;/a&gt;》活动，让我们程序员狂欢的同时，其实也让优秀的开发者和团队，出现在大众的视野，出现在闪烁光芒的舞台舞台上！&lt;/p&gt;
&lt;p&gt;所以，笔者从掘金的活动页面，梳理了人气创作者榜单，希望大家在投票和狂欢的同时，认识到更多优秀的开发者和团队，关注他们的文章和创新！向优秀学习，是让我们变成自己变得优秀的基础。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="掘金" scheme="https://ihtcboy.com/tags/%E6%8E%98%E9%87%91/"/>
    
    <category term="技术博客" scheme="https://ihtcboy.com/tags/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="技术团队" scheme="https://ihtcboy.com/tags/%E6%8A%80%E6%9C%AF%E5%9B%A2%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>安卓商店和应用市场上架指北-2021</title>
    <link href="https://ihtcboy.com/2021/03/11/2021-03-11_%E5%AE%89%E5%8D%93%E5%95%86%E5%BA%97%E5%92%8C%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E4%B8%8A%E6%9E%B6%E6%8C%87%E5%8C%97/"/>
    <id>https://ihtcboy.com/2021/03/11/2021-03-11_%E5%AE%89%E5%8D%93%E5%95%86%E5%BA%97%E5%92%8C%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E4%B8%8A%E6%9E%B6%E6%8C%87%E5%8C%97/</id>
    <published>2021-03-11T15:26:16.000Z</published>
    <updated>2021-10-05T08:56:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>不得不佩服国内的安卓市场，除了华为应用市场被拒后能<strong>回复</strong>和<strong>申诉</strong>，其它市场就是一个消息通知你，根本不给你申诉的机会，小小开发者完全是处于弱势群体，真的一言难尽！</p><p>事情是这样的：作为番茄钟的爱好者，之前在GitHub 创建了一个Flutter项目：<strong>爱番茄</strong>(iPomodoro)<br> <a href="https://github.com/iHTCboy/iPomodoro-Flutter">https://github.com/iHTCboy/iPomodoro-Flutter</a> ，然后上架苹果AppStore后，就想着分享快乐让更多人使用，所以考虑上架到安卓商店，然后发现，这里的坑比苹果商店还严重！果然，免费的永远是最差的~  <code>（苹果开发者年费688人民币）</code> </p><p>所以，本文就是一起来踩踩坑，吐吐槽吧！（如果想看结果，直接跳到本文尾~）</p><span id="more"></span><h3 id="二、安卓App上架指北"><a href="#二、安卓App上架指北" class="headerlink" title="二、安卓App上架指北"></a>二、安卓App上架指北</h3><p>首先，我们要看看目前主流(非主流)的安卓商店：</p><table><thead><tr><th>市场</th><th>开放平台官网</th></tr></thead><tbody><tr><td>Google Play</td><td><a href="https://play.google.com/apps/publish/?hl=zh-CN">https://play.google.com/apps/publish/?hl=zh-CN</a></td></tr><tr><td>应用宝</td><td><a href="http://open.qq.com/">http://open.qq.com/</a></td></tr><tr><td>百度手机助手</td><td><a href="http://app.baidu.com/">http://app.baidu.com/</a></td></tr><tr><td>360 手机助手</td><td><a href="http://dev.360.cn/">http://dev.360.cn/</a></td></tr><tr><td>vivo 应用商店</td><td><a href="https://dev.vivo.com.cn/">https://dev.vivo.com.cn/</a></td></tr><tr><td>OPPO 软件商店（一加）</td><td><a href="http://open.oppomobile.com/">http://open.oppomobile.com/</a></td></tr><tr><td>小米应用商店</td><td><a href="https://dev.mi.com/">https://dev.mi.com/</a></td></tr><tr><td>华为应用市场</td><td><a href="http://developer.huawei.com/consumer/cn/">http://developer.huawei.com/consumer/cn/</a></td></tr><tr><td>阿里应用分发平台（豌豆荚）</td><td><a href="http://open.uc.cn/">http://open.uc.cn/</a></td></tr><tr><td>搜狗手机助手</td><td><a href="http://zhushou.sogou.com/open/">http://zhushou.sogou.com/open/</a></td></tr><tr><td>锤子应用商店</td><td><a href="http://dev.smartisan.com/">http://dev.smartisan.com/</a></td></tr><tr><td>魅族应用商店</td><td><a href="http://open.flyme.cn/">http://open.flyme.cn/</a></td></tr><tr><td>金立软件商店</td><td><a href="http://open.appgionee.com/">http://open.appgionee.com/</a></td></tr><tr><td>安智市场</td><td><a href="http://dev.anzhi.com/">http://dev.anzhi.com/</a></td></tr><tr><td>酷安市场</td><td><a href="https://developer.coolapk.com/">https://developer.coolapk.com</a></td></tr><tr><td>联想乐商店</td><td><a href="http://open.lenovo.com/">http://open.lenovo.com/</a></td></tr><tr><td>三星应用开发者平台</td><td><a href="http://support-cn.samsung.com/App/DeveloperChina/Home/Index">http://support-cn.samsung.com/App/DeveloperChina/Home/Index</a></td></tr></tbody></table><h3 id="Google-Play（谷歌商店）"><a href="#Google-Play（谷歌商店）" class="headerlink" title="Google Play（谷歌商店）"></a>Google Play（谷歌商店）</h3><p>谷歌商店作为全球最大安卓支持商店，除了需要一次性支付 25 美元的注册费，目前功能最完善，暂无尿点！需要注意的是美元，所以只支持以下银行卡(信用卡)：</p><ul><li>万事达卡</li><li>Visa</li><li>American Express</li><li>Discover（仅限美国）</li><li>Visa Electron（美国以外的国家/地区）</li></ul><p>注册传送门：</p><ul><li><a href="https://support.google.com/googleplay/android-developer/answer/9875040?hl=zh-Hans&ref_topic=7072535">开发者帐号注册的付款方式和收据 - Play 管理中心帮助</a></li><li><a href="https://play.google.com/console/u/0/signup">注册 Play Console</a></li></ul><p>需要人工审核，谷歌后台有明显的提示：</p><blockquote><p><strong>目前的审核时间会比平时更长</strong></p><p>由于目前工作时间有所调整，因此应用的审核时间可能会比平时更长。</p></blockquote><p><strong>总结</strong></p><p>谷歌商店从去年开始，实行人工应用审核，所以第一次审核比较久，目前大概要4~5天。后续版本更新，目前大概半小时就过审。整合来说谷歌商店没有什么难度，商店后台的完整性是最好的，功能很多，但是界面很清晰，这里就不多说了，给100分！你可以自己选择想要的操作功能：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/add58b29bd5840d5a9b69ab6a936cc8d~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>下载地址：</p><ul><li><a href="https://play.google.com/store/apps/details?id=com.iHTCboy.iPomodoro">爱番茄 - iPomodoro - Google Play 上的应用</a></li></ul><h3 id="腾讯应用宝"><a href="#腾讯应用宝" class="headerlink" title="腾讯应用宝"></a>腾讯应用宝</h3><p>应用宝就是坑，提交几次，依然被拒，<strong>必须《计算机软件著作权》</strong></p><blockquote><p>尊敬的开发者，您好：</p><p>您上传的移动应用上线审核不通过，请查阅。</p><p>应用名称：爱番茄</p><p>安装包：com.iHTCboy.iPomodoro</p><p>理由：该应用存在版权问题，需提供应用软件著作权证书，请在版权证明处上传相关材料扫描件或上传电子版权证书后重新提交。 <a href="http://crm2.qq.com/page/portalpage/wpa.php?uin=800013811&cref=http://100.66.23.68:8080/v1/appinfo/notify_mobile_app_change&dm=qq.com&&f=1&ty=1">问题咨询</a></p><p>详见wiki：<a href="http://wiki.open.qq.com/wiki/%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%E8%A7%84%E5%88%99">http://wiki.open.qq.com/wiki/%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%E8%A7%84%E5%88%99</a></p><p>请到<a href="http://op.open.qq.com/mobile_appinfov2/detail?appid=1111481385">应用总览页</a>查看并修改。</p><p>系统自动发出，请勿回复。</p></blockquote><p>本来是打算放弃的，然后上架其它商店后，发现在提审审核时，提示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/afe34afd6ae44eb0aca3820e444f3f8c~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>这很腾讯！直接把其它商店的应用爬过来了！tmd！开发者自己上架多次拒绝！你竟然自己偷偷从别人那里拿，完全无视App的主人！你说气不气！更加气人的事，还在后头！</p><p>你说“认领应用”，咱们自己就去认领呗，个人开发者自己开发的应用，还要自己去认领，可笑？</p><p>点击“认领应用”后显示：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b09660910a4492497eaf33c342765ca~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>还要问你用新id还是旧id，我辛苦的编写的应用资料，你让用我新id，脑子不好使吧！<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1161787073344631ab58af72c259845f~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>最后一步，需要用自己的包签名给到腾讯验证，那就给吧！<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5b3c54434d9642aa90d08e77fd11228c~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p><strong>用指定的 keystore 签名apk：</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verbose -keystore xxx<span class="selector-class">.jks</span> -signedjar xxx_signed<span class="selector-class">.apk</span> xxx<span class="selector-class">.apk</span> alias_key</span><br></pre></td></tr></table></figure><blockquote><p>注：最后一个参数是 keyalias，也就是该签名文件的别名。</p></blockquote><p>结果，你想不到，这样的认领后，竟然不通过！你说说，我证明了我自己就是我自己，然后你告诉我，我们还是不认识你，mmp！</p><blockquote><p><strong>审核通知：认领应用审核不通过通知</strong><br>尊敬的开发者：<br>您好！<br>您提交的移动应用 “爱番茄”(1111481385) 认领未通过审核，原因为：您好，该应用无法进行线上认领，需要提供外市场后台截图走认领工单操作，如有疑问请咨询企业QQ： 800013811-人工客服转应用宝支持，谢谢！，请修改相关信息后再次提交认领应用操作。 </p><p>系统自动发出，请勿回复。</p></blockquote><p>最气人的是：企业QQ： 800013811 -&gt;  人工客服  -&gt; 应用宝支持</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d3106b46cab449e98ff25334f645d445~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>注意到这些字了吧！一个聊天软件自家的东西都不兼容？？?</p><blockquote><p>低版本QQ、企业QQQQMac版、QQ轻聊版、TIM可能无法接入人工，请使用最新版本WindowsQQ，请谅解~</p></blockquote><p>正好使用的是 TIM，加好友，点击“移动应用 -&gt; 人工客服”，果然！没有任何反应！还是切换到QQ，最后，你真的想不到，他告诉你什么答案！！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/056cdf9aaed742c1bc1cf4729a81eb6d~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><blockquote><p>关于您反馈应用认领的问题，请您点击此处(<a href="https://wiki.open.qq.com/index.php?title=%E5%BA%94%E7%94%A8%E8%AE%A4%E9%A2%86)%EF%BC%8C%E5%90%8C%E6%97%B6%E6%8F%90%E9%86%92%E6%82%A8%EF%BC%8C%E8%8B%A5%E7%BA%BF%E4%B8%8A%E8%AE%A4%E9%A2%86%E4%B8%8D%E6%88%90%E5%8A%9F%EF%BC%8C%E8%AF%B7%E6%82%A8%E6%A0%B9%E6%8D%AE%E9%93%BE%E6%8E%A52.2%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%BA%94%E7%94%A8%E8%AE%A4%E9%A2%86%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E4%B8%BA1%E4%B8%AA%E5%B7%A5%E4%BD%9C%E6%97%A5%EF%BC%8C%E8%8B%A5%E6%82%A8%E5%B7%B2%E7%BB%8F%E6%8F%90%E4%BA%A4%E5%B7%A5%E5%8D%95%EF%BC%8C%E5%BB%BA%E8%AE%AE%E6%82%A8%E8%80%90%E5%BF%83%E7%AD%89%E5%BE%85%E5%A4%84%E7%90%86%E7%BB%93%E6%9E%9C%EF%BC%8C%E6%84%9F%E8%B0%A2">https://wiki.open.qq.com/index.php?title=%E5%BA%94%E7%94%A8%E8%AE%A4%E9%A2%86)，同时提醒您，若线上认领不成功，请您根据链接2.2进行操作，应用认领处理时间为1个工作日，若您已经提交工单，建议您耐心等待处理结果，感谢</a>~</p></blockquote><p>真是大爷！认领应用审核不通过通知！然后让你 QQ 联系，然后他才告诉你，要点击此处(<a href="https://wiki.open.qq.com/index.php?title=%E5%BA%94%E7%94%A8%E8%AE%A4%E9%A2%86)%EF%BC%8C%E6%9F%A5%E7%9C%8B%E6%96%87%E6%A1%A3%EF%BC%81">https://wiki.open.qq.com/index.php?title=%E5%BA%94%E7%94%A8%E8%AE%A4%E9%A2%86)，查看文档！</a></p><p>你回复的通知，就不能带上这个文档的链接吗！</p><p>就这么个文档，为了提高 QQ 的活跃度？还是客服的KPI？想过多年以前就吐槽过 <a href="https://ihtcboy.com/2015/02/27/2015_iOS%E5%8D%95%E7%8B%AC%E9%9B%86%E6%88%90QQ%E5%88%86%E4%BA%AB%E5%8A%9F%E8%83%BD%E7%9A%84%E8%8B%A6%E9%80%BC%E7%BB%8F%E9%AA%8C/">iOS单独集成QQ分享功能的苦逼经验 | iHTCboy’s blog</a>。</p><p>还要注意：</p><blockquote><p>对不起，客服小宝未能定位到您问题的解决方案~ 您可以尝试换一种方式提问，或发送“人工”进入人工客服，人工客户在线时间：09:30 - 18:00</p></blockquote><p>如果你不是 09:30 - 18:00，那么你还要等到明天才能拿到这个 <a href="https://wiki.open.qq.com/index.php?title=%E5%BA%94%E7%94%A8%E8%AE%A4%E9%A2%86">应用认领 - 腾讯开放平台</a> 文档！想想就笑了~</p><p><strong>若线上认领不成功，则需进行人工认领，可申请认领工单处理</strong></p><blockquote><p>申请入口：开发者帐号登录→创建需认领的应用→进入应用管理页面→基础服务→工单系统→应用宝商务类→应用人工认领→填单提交</p></blockquote><p>如果你没有用过腾讯开放平台或者很少了解，我保证根本找不到入口！找了一会时间后：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9bbf52b42395463fbd3652e32e04e29f~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>实话说，腾讯开放平台 OPEN.QQ.COM 的UI界面和适配，感觉跟2015年的没有区别！或者说没有改版过。界面相当难受~ 对比微信就不多说了。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/588587e6b93f4683bb7676ea08c5d9bf~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><blockquote><p>客服反馈<br>您好，应用人工认领需要上传应用的【软著】以及需提供完整的外市场正常上线同名称应用的前、后台截图（外市场应用作者需跟开平作者一致）；经核实<br>（1）未提供软著原件扫描件；<br>（2）未提供完整的外市场正常上线同名称应用的前、后台截图（外市场应用作者需跟开平作者一致）；</p><p>请整改后重新提交工单以及相关证明需提供在一张工单内，请悉知，谢谢。<br>注：请提供该应用在外市场（华为、小米、OPPO、vivo四大厂商之一）前、后台上架截图至工单截图处</p></blockquote><p><strong>总结</strong><br>最后，应用宝还在要《计算机软件著作权》才能上架和认领！开发者自己上不了架，但是竞争对手上架的话，腾讯还是会偷偷“抄”，至于开发者，算个皮？放弃应用宝！</p><p>注：最后，不得不再吐槽一个(跑：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6195c52aef5e4d0493ad8f0a3b15448c~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>32位安装包是必须的！作为开发者，我不得不服，这是因为后台不改版，导致一致保留这样的强制选项？还是应用宝已经没有人用了？？</p><h3 id="百度手机助手"><a href="#百度手机助手" class="headerlink" title="百度手机助手"></a>百度手机助手</h3><p>百度这后台也很傻，点击“应用分发”，然后等弹登陆界面，登陆成功，又跳转回来，结果是没有登陆成功，一直反复这样，因为用苹果电脑以为是用 Safari 浏览器导致，换了 Google Chrome 还是一样，难道是要下载“百度浏览器”？？ 反正，我就不下载了，所以，百度应用商店，再见吧！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d35d9af58a1b47f68670c77d3de0c9e3~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h3 id="360-手机助手"><a href="#360-手机助手" class="headerlink" title="360 手机助手"></a>360 手机助手</h3><p>360 平时就不用，一直用苹果电脑和手机，已经7年多了，360手机估计也没有了，360的软件商店，流量应该不大，所以就没有去申请啊。</p><h3 id="vivo-应用商店"><a href="#vivo-应用商店" class="headerlink" title="vivo 应用商店"></a>vivo 应用商店</h3><p>vivo手机现在上综艺比较多，打算是申请一下的。结果tmd，个人账号暂不开放注册！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6b5ba562990d41d2b74f6227a7789f32~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>果然是牛逼！个人开发者都不要了！</p><h3 id="OPPO-软件商店"><a href="#OPPO-软件商店" class="headerlink" title="OPPO 软件商店"></a>OPPO 软件商店</h3><p>用 Safari 一直登陆失败，结果网站顶部提示：</p><blockquote><p>为保证您获得更好的用户体验，建议您使用chrome浏览器或QQ,360等浏览器的极速模式进行浏览。</p></blockquote><p>好！你牛逼！你行！结果竟然是，不好意思！我们不欢迎个人开发者：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b7ff2129ca894e48a50473ecd5dc72b1~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h3 id="小米应用商店"><a href="#小米应用商店" class="headerlink" title="小米应用商店"></a>小米应用商店</h3><p>小米也一样被拒，理由不是说要 《计算机软件著作权》 ，而是直接拒绝了：</p><blockquote><p>尊敬的开发者 iHTCboy：<br>您好！</p><p>我们非常遗憾的通知您：您的应用“爱番茄 - iPomodor‪o” (包名：com.iHTCboy.iPomodoro) 未通过审核。<br>我们在审核中发现您的应用存在以下问题，并请您尽快修改后再次提交给我们，我们十分乐意为您再次审核是否符合小米应用商店的要求：<br>1、应用不得是简单的网站页面打包或套用模板、内容聚合或罗列链接</p><p>请您到<a href="https://dev.mi.com/">小米开放平台</a>根据驳回原因修改您的应用，并再次提交测试。</p><p>如果您对审核结果有任何疑问，欢迎您联系小米应用商店&amp;小米游戏中心团队为您解决。开发者审核问题请提供您的注册邮箱及注册手机号，应用审核问题请提供您的应用名称及包名，并说明详细问题后反馈至<a href="https://www.sobot.com/ticketclient/index.html?sysNum=5d7e332c4f994cf295cbfb0e81851038&deployId=c0f1bc054da94ddb9ce2ca56795d8d50&partnerId">问题工单系统</a>。</p><p>游戏应用问题，请联系小米游戏中心团队为您解决，邮箱：<a href="mailto:&#109;&#x69;&#x2d;&#103;&#97;&#x6d;&#101;&#98;&#100;&#x40;&#120;&#105;&#97;&#111;&#109;&#105;&#x2e;&#99;&#x6f;&#109;">&#109;&#x69;&#x2d;&#103;&#97;&#x6d;&#101;&#98;&#100;&#x40;&#120;&#105;&#97;&#111;&#109;&#105;&#x2e;&#99;&#x6f;&#109;</a>。</p><p>小米应用商店&amp;小米游戏中心团队<br>2021-03-04</p></blockquote><p>提交了2次，还是一样的：“应用不得是简单的网站页面打包或套用模板、内容聚合或罗列链接！”</p><p>真的是服了这些后台，连一个直接回复的功能都没有，非要让你填写反馈表单，等他们主动才回复！再次表明，开发者就是弱势群体！</p><p>但是，最后还是过审啦！所以，如果我不说，大家可能永远都不会猜到！我是怎么过审小米商店的，最后我竟然就是依靠一句话：</p><blockquote><p><strong>本app已经上架苹果和谷歌商店</strong>，可在商店搜索，并非模板app，希望你们能看到。<a href="https://apps.apple.com/cn/app/ipomodoro/id1439666929">https://apps.apple.com/cn/app/ipomodoro/id1439666929</a> ，  <a href="https://play.google.com/store/apps/details?id=com.iHTCboy.iPomodoro">https://play.google.com/store/apps/details?id=com.iHTCboy.iPomodoro</a></p></blockquote><p>在这里填写备注：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b50a6026532241f5be32a2665beb7251~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p><strong>总结</strong><br>所以，小米商店还是比较人性和灵活变通的！告知他们应用上架苹果和谷歌都通知的情况下，这个应用应该是一个完整的App！</p><p>最后，不得不吐槽一下小米商店的图片要求，一定要按要求的尺寸上传，不然上传了也不提示，并且是需要<strong>一张一张的上传</strong>，真的是你想不到web不支持多图片上传，你也搞一个拖拽上传框吧！<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7a05fd76a5d24191aa2c355efeb9b418~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>小米下载地址：<br><a href="http://app.xiaomi.com/detail/1341005">http://app.xiaomi.com/detail/1341005</a></p><h3 id="华为应用市场"><a href="#华为应用市场" class="headerlink" title="华为应用市场"></a>华为应用市场</h3><p>华为应用市场注册是比较顺利，后台也是很现代化。</p><blockquote><p>需要注册的是，注册时不要挂vpn，不然就注册成外国地区的账号。外国的账号与国内不一样，政策和条款更加好，但是没有外国身份证实名不了。</p></blockquote><p>如果你像我一样，不小心注册成外国账号，也不用担心，后台提供了注销账号的功能。注销后，马上就可以重新注册新账号：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e55dbc4e15e4558a5118d19b5b6af16~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>目前来看，华为应用市场是需要人工审核，并且是比较严格，但是不需要提供《计算机软件著作权》 。后台的管理界面，比较清晰：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d8869b03adbb49fa829dfae94e71c0ba~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>然而，被拒了几次：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a5ea140e3d614b75babf13b819a584ad~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>非常体贴的是，华为审核后，会提供对应指出问题，并且提供了一个视频操作演示，是真的很棒！还有相应的审核要求文件都列出来，对开发者很好！是唯一一家，国内商店，对开发者最好的了！</p><p>之前不太清楚，不确定是不是跟美国封杀有关？华为要发展 AppGallery，是应该与开发者好好合作，目前来看是做的很棒啦！</p><p>第一次说，隐私条款链接打不开：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95cbd9df71334997971011781b301c0e~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>大家知道GitHub国内经常访问不了，最后改为了本地的html文件显示。</p><p>第二次被拒:</p><blockquote><p>您的应用审核未通过。<br>应用ID：103911977<br>应用名称：爱番茄<br>应用版本：2.0.0<br>被拒绝原因：详细描述：我们发现您应用的隐私政策未以明示同意的方式征得用户同意。请参考《审核指南》第7.5相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a><br>­测试步骤：打开应用，隐私弹窗无拒绝选项；<br>­修改建议：应用的隐私政策需以明示同意的方式征得用户同意（如提供主动勾选按钮或点击&gt; “同意”按钮）。<br>如有疑问，可直接回复本条通知进行咨询</p></blockquote><p>第三次：</p><blockquote><p>您的应用审核未通过。<br>应用ID：103911977<br>应用名称：爱番茄<br>应用版本：2.1.1<br>被拒绝原因：详细描述：我们发现您应用的隐私政策未以明示同意的方式征得用户同意。请参考《审核指南》第7.5相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a><br>测试步骤：弹窗内点击同意之前无可见隐私政策，请参考录屏<br>修改建议：应用的隐私政策需以明示同意的方式征得用户同意（如提供主动勾选按钮或点击“同意”按钮）<br>如有疑问，可直接回复本条通知进行咨询</p></blockquote><p>因为首次打开应用的提示没有让用户打开条款内容的入口：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84880dfeba13474ead627591f8c68792~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p><strong>总结</strong></p><p>华为应用市场是体验过这么多商店，要求最严，同时也是最人性化的商店。虽然已经过审，不需要《计算机软件著作权》。</p><p>下载地址：<br><a href="https://appgallery.huawei.com/#/app/C103911977">https://appgallery.huawei.com/#/app/C103911977</a></p><p>另外，华为提供了非赏赞的应用测试服务，提供了1000分钟的免费云调试：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9144594a8a1048acbbfa692b661b27c2~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>支持的机型也满足大部分华为设备的需求：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f606b4531af4b238035287a6e0f903c~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>还提供免费的云测试：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/36597292d0a64d619dff3f9f1f195f91~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>总之，华为牛逼！</p><h3 id="阿里应用分发平台（豌豆荚、PP助手）"><a href="#阿里应用分发平台（豌豆荚、PP助手）" class="headerlink" title="阿里应用分发平台（豌豆荚、PP助手）"></a>阿里应用分发平台（豌豆荚、PP助手）</h3><p>本为以为阿里系的没有手机平台，也没有软件服务平台，上架会放水吧。结果大跌眼镜！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7e30285cd7594811817a7b85c4b3c164~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>当前市场已存在大量相似的此类应用，如需收录，请补充提交《计算机软件著作权》。<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0899bd713a254db6a7d26344fe0e4838~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>提交了几次，一直被拒，打算也放弃了，阿里收购PP助手、豌豆荚，看来是做什么都不成了，我想从这里也能看出来一点，对开发者不友好！一个流水生态，上流的水源都不珍惜，怎么能做到水流不息！多少自来水（钱）也保持不了平衡~</p><h3 id="搜狗手机助手"><a href="#搜狗手机助手" class="headerlink" title="搜狗手机助手"></a>搜狗手机助手</h3><p>搜狗也很多年不用了，从搜狗输入法转到讯飞语音输入法后，这才是我想要的输入法！目前搜狗的手机助力好像没有听说过了，所以，搜狗的商店市场应该也不太，也没有去注册啦~</p><h3 id="锤子应用商店"><a href="#锤子应用商店" class="headerlink" title="锤子应用商店"></a>锤子应用商店</h3><p>本着交一个朋友的想法，以前就有锤子的账号啦，所以就去申请了开发者，结果发现已经没有人审核了：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/341d2833a62445688f3167c1056ad238~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>最后一代的坚果 R2 估计是绝唱了，结果也没有支持老罗一把，交个锤子！</p><p>其实，为什么想上锤子商店，是因为本身 爱番茄 - iPomodoro 是一个拟物化的Logo，非常符合锤子系统的风格：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2295de51e6b54431a231d2a98d084ebd~tplv-k3u1fbpfcp-zoom-1.image" alt="icon-216.png"></p><p><strong>总结</strong><br>再见了，老罗！</p><h3 id="魅族应用商店"><a href="#魅族应用商店" class="headerlink" title="魅族应用商店"></a>魅族应用商店</h3><p>魅族比较常规，开发者账号实名认证后，就可以提交应用审核，目前提交时暂未发现需要《计算机软件著作权》 ，等待审核结果中：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4dae94412ca24e109a05ed3e766a2315~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>比较人性化的是，可以看到一个审核的记录：<br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/008c59b434ec41928b37e9fcb71d5547~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>最终还是不过审！垃圾~</p><blockquote><ol><li>个人开发者账号暂只支持工具类应用，若坚持上传此应用，请更换企业开发者账号上传</li></ol></blockquote><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44fb9c59b0de4d5da118b1692fd490e6~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>我现在上传的就是工具类应用啊！真搞不懂，所以就不搞了，再见！路转黑~</p><h3 id="金立软件商店"><a href="#金立软件商店" class="headerlink" title="金立软件商店"></a>金立软件商店</h3><p>金立手机？暂时忽略此商店~</p><h3 id="安智市场"><a href="#安智市场" class="headerlink" title="安智市场"></a>安智市场</h3><blockquote><p>2021-03-04<br>2020年2月起，安智市场不再免费收录软件（包括新软件/下架重新上架），软件必须付费上架或CPD推广且软件需要符合上架审核标准，如需付费合作，请联系商务QQ：455561771（非合作者勿加），谢谢。 如有其他问题请咨询审核客服：<a href="mailto:&#107;&#101;&#x66;&#117;&#64;&#97;&#110;&#122;&#104;&#105;&#x2e;&#x63;&#111;&#x6d;">&#107;&#101;&#x66;&#117;&#64;&#97;&#110;&#122;&#104;&#105;&#x2e;&#x63;&#111;&#x6d;</a>；</p></blockquote><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e366e148f1744524a2876c23f86d2c14~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h3 id="酷安市场"><a href="#酷安市场" class="headerlink" title="酷安市场"></a>酷安市场</h3><p>目前此商店是最快上架，并且提供展示页面和直接下载apk的链接：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/41b241683ef6425fa349992f82d0dee7~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>展示下载页面：<br><a href="https://www.coolapk.com/apk/282769">爱番茄 - iPomodor‪o(com.iHTCboy.iPomodoro) - 2.1.1 - 应用 - 酷安</a></p><p><strong>总结</strong></p><p>对于需要快速上架和提供下载链接的朋友，不需要自己搭建h5官网，然后酷安的app展示界面也非常简洁，<strong>推荐使用！</strong> </p><h3 id="联想乐商店"><a href="#联想乐商店" class="headerlink" title="联想乐商店"></a>联想乐商店</h3><p>暂未考虑，联想手机估计也没有戏了~</p><h3 id="三星应用开发者平台"><a href="#三星应用开发者平台" class="headerlink" title="三星应用开发者平台"></a>三星应用开发者平台</h3><p>三星国内估计也没戏了，国外还是谷歌商店为主吧~</p><h3 id="安卓App上架总结"><a href="#安卓App上架总结" class="headerlink" title="安卓App上架总结"></a>安卓App上架总结</h3><p>最后，咱们来一个大总结吧！</p><table><thead><tr><th>市场</th><th>开放平台官网</th><th>审核条款</th><th>审核要求</th><th>费用要求</th></tr></thead><tbody><tr><td>App Store</td><td><a href="https://developer.apple.com/">https://developer.apple.com</a></td><td><a href="https://developer.apple.com/cn/app-store/review/guidelines/">App Store 审核指南 - Apple Developer</a></td><td>不需要《计算机软件著作权》</td><td>每年年费￥688元</td></tr><tr><td>Google Play</td><td><a href="https://play.google.com/apps/publish/?hl=zh-CN">https://play.google.com/apps/publish/?hl=zh-CN</a></td><td><a href="https://support.google.com/googleplay/android-developer/topic/9858052?hl=zh-Hans">政策中心 - Play 管理中心帮助</a></td><td>不需要《计算机软件著作权》</td><td>一次性支付 25 美元的注册费</td></tr><tr><td>应用宝</td><td><a href="http://open.qq.com/">http://open.qq.com/</a></td><td><a href="https://wiki.open.qq.com/wiki/%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%E8%A7%84%E5%88%99">应用上架规则 - 腾讯开放平台</a></td><td>必须《计算机软件著作权》</td><td>无</td></tr><tr><td>百度手机助手</td><td><a href="http://app.baidu.com/">http://app.baidu.com/</a></td><td><a href="http://app.baidu.com/docs?id=18&frompos=401009">审核规范 - 百度移动应用平台</a></td><td>注册不成功，原因：网站bug</td><td>无</td></tr><tr><td>360 手机助手</td><td><a href="http://dev.360.cn/">http://dev.360.cn/</a></td><td><a href="http://dev.360.cn/wiki/index/id/18">应用发布规则 - 360移动开放平台</a></td><td>未知</td><td>未知</td></tr><tr><td>vivo 应用商店</td><td><a href="https://dev.vivo.com.cn/">https://dev.vivo.com.cn/</a></td><td>-</td><td>不接受个人开发者注册</td><td>未知</td></tr><tr><td>OPPO 软件商店（一加）</td><td><a href="http://open.oppomobile.com/">http://open.oppomobile.com/</a></td><td><a href="https://open.oppomobile.com/wiki/doc#id=10071">OPPO开放平台</a></td><td>不接受个人开发者发布应用</td><td>未知</td></tr><tr><td>小米应用商店</td><td><a href="https://dev.mi.com/">https://dev.mi.com/</a></td><td><a href="https://dev.mi.com/console/doc/detail?pId=879">应用审核规范</a></td><td>不需要《计算机软件著作权》。但应用不得是简单的网站页面打包或套用模板、内容聚合或罗列链接，参考<a href="https://dev.mi.com/console/doc/detail?pId=879">小米应用商店审核规范</a></td><td>无</td></tr><tr><td>华为应用市场</td><td><a href="http://developer.huawei.com/consumer/cn/">http://developer.huawei.com/consumer/cn/</a></td><td><a href="https://developer.huawei.com/consumer/cn/doc/50104">华为应用市场审核指南</a></td><td>不需要《计算机软件著作权》</td><td>无</td></tr><tr><td>阿里应用分发平台（豌豆荚）</td><td><a href="http://open.uc.cn/">http://open.uc.cn/</a></td><td>-</td><td>当前市场已存在大量相似的此类应用，如需收录，请补充提交《计算机软件著作权》。</td><td>无</td></tr><tr><td>搜狗手机助手</td><td><a href="http://zhushou.sogou.com/open/">http://zhushou.sogou.com/open/</a></td><td>-</td><td>未知</td><td>未知</td></tr><tr><td>锤子应用商店</td><td><a href="http://dev.smartisan.com/">http://dev.smartisan.com/</a></td><td>-</td><td>未知</td><td>无</td></tr><tr><td>魅族应用商店</td><td><a href="http://open.flyme.cn/">http://open.flyme.cn/</a></td><td><a href="http://open-wiki.flyme.cn/doc-wiki/index#id?110">审核规范 - 魅族开放平台</a></td><td>不需要《计算机软件著作权》。但个人开发者账号暂只支持工具类应用，若其它应用请更换企业开发者账号上传。</td><td>无</td></tr><tr><td>金立软件商店</td><td><a href="http://open.appgionee.com/">http://open.appgionee.com/</a></td><td>-</td><td>未知</td><td>无</td></tr><tr><td>安智市场</td><td><a href="http://dev.anzhi.com/">http://dev.anzhi.com/</a></td><td>-</td><td>2020年2月起，安智市场不再免费收录软件（包括新软件/下架重新上架），软件必须付费上架或CPD推广且软件需要符合上架审核标准。</td><td>无</td></tr><tr><td>酷安市场</td><td><a href="https://developer.coolapk.com/">https://developer.coolapk.com</a></td><td>-</td><td>不需要《计算机软件著作权》</td><td>无</td></tr><tr><td>联想乐商店</td><td><a href="http://open.lenovo.com/">http://open.lenovo.com/</a></td><td>-</td><td>未知</td><td>未知</td></tr><tr><td>三星应用开发者平台</td><td><a href="http://support-cn.samsung.com/App/DeveloperChina/Home/Index">http://support-cn.samsung.com/App/DeveloperChina/Home/Index</a></td><td>-</td><td>未知</td><td>未知</td></tr></tbody></table><h3 id="iPomodoro-爱番茄"><a href="#iPomodoro-爱番茄" class="headerlink" title="iPomodoro(爱番茄)"></a>iPomodoro(爱番茄)</h3><p>🍅 番茄工作法是一种时间管理法方法，在上世纪八十年代由Francesco Cirillo创立。 该方法使用一个定时器来分割出一个一般为25分钟的工作时间和5分钟的休息时间，而那些时间段被称为pomodori，为意大利语单词pomodoro之复数。</p><p>GitHub:</p><ul><li><a href="https://github.com/iHTCboy/iPomodoro-Flutter">iHTCboy/iPomodoro-Flutter</a></li></ul><p>目前已经上架的商店：</p><table><thead><tr><th>已上架的商店</th><th>下载地址</th></tr></thead><tbody><tr><td>苹果商店</td><td><a href="https://apps.apple.com/cn/app/ipomodoro/id1439666929">https://apps.apple.com/cn/app/ipomodoro/id1439666929</a></td></tr><tr><td>谷歌商店</td><td><a href="https://play.google.com/store/apps/details?id=com.iHTCboy.iPomodoro">https://play.google.com/store/apps/details?id=com.iHTCboy.iPomodoro</a></td></tr><tr><td>华为商店</td><td><a href="https://appgallery.huawei.com/#/app/C103911977">https://appgallery.huawei.com/#/app/C103911977</a></td></tr><tr><td>小米商店</td><td><a href="http://app.xiaomi.com/detail/1341005">http://app.xiaomi.com/detail/1341005</a></td></tr><tr><td>酷安商店</td><td><a href="https://www.coolapk.com/apk/282769">https://www.coolapk.com/apk/282769</a></td></tr></tbody></table><p>注：因为苹果开发者账号需要 ￥688 年费，所以 AppStore下载收费1元。介意的朋友可以下载本项目代码在macOS系统编译安装。</p><p>另外，提供10个免费 iOS 促销代码:</p><ul><li>A9R963X9E9Y7</li><li>XPM7LWWTJNYN</li><li>YJ6TLY7RHF3N</li><li>TYJFE3KLLRE6</li><li>F7KTE4MKHW97</li><li>KX3RFJJYEKPA</li><li>RWMEMJEMMLN7</li><li>HE7AH4JWK93W</li><li>3A3KA34E3YJ9</li><li>39F36YP4JWAP</li></ul><p>注：如果以上促销代码已经被使用，需要促销代码的同学，可以私信给我~</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总体来说，<strong>安卓商店和市场目前已经稳定在头部几个手机厂商和几个互联网入口巨头中！</strong> 对于用户来说，不用太担心找不到应用，他们应该会相互抢(偷)的吧~</p><p>对于开发者来说，最大的问题是，每个商店的规则不一定，要求也不一样，这是最令人头痛的。比如App图标，有些商店要128x128，有一些是要256x256，有要512x512的，还有要119x119等，一个图标，不同商店就要不同的规格，还有App的商店截图5张图片就不用说！都是泪~</p><p>对于苹果来说，就是一个商店，所以规则和规格都是稳定并不变的，也不用去考虑上架多个商店的情况，另外，苹果是最早的App商店人工审核的，所以审核的规范最好！而安卓的审核，目前来看，谷歌商店和华为是最牛逼，其它的商店就优点缺点很多，希望他们能改变一下吧！</p><p>个人开发者，弱势群体的哭了。。。<br>祝好~ </p><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;不得不佩服国内的安卓市场，除了华为应用市场被拒后能&lt;strong&gt;回复&lt;/strong&gt;和&lt;strong&gt;申诉&lt;/strong&gt;，其它市场就是一个消息通知你，根本不给你申诉的机会，小小开发者完全是处于弱势群体，真的一言难尽！&lt;/p&gt;
&lt;p&gt;事情是这样的：作为番茄钟的爱好者，之前在GitHub 创建了一个Flutter项目：&lt;strong&gt;爱番茄&lt;/strong&gt;(iPomodoro)&lt;br&gt; &lt;a href=&quot;https://github.com/iHTCboy/iPomodoro-Flutter&quot;&gt;https://github.com/iHTCboy/iPomodoro-Flutter&lt;/a&gt; ，然后上架苹果AppStore后，就想着分享快乐让更多人使用，所以考虑上架到安卓商店，然后发现，这里的坑比苹果商店还严重！果然，免费的永远是最差的~  &lt;code&gt;（苹果开发者年费688人民币）&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;所以，本文就是一起来踩踩坑，吐吐槽吧！（如果想看结果，直接跳到本文尾~）&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="安卓商店" scheme="https://ihtcboy.com/tags/%E5%AE%89%E5%8D%93%E5%95%86%E5%BA%97/"/>
    
    <category term="应用市场" scheme="https://ihtcboy.com/tags/%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA/"/>
    
    <category term="App上架" scheme="https://ihtcboy.com/tags/App%E4%B8%8A%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>辞幕2020，前行2021</title>
    <link href="https://ihtcboy.com/2021/01/01/2021-01-01_2020/"/>
    <id>https://ihtcboy.com/2021/01/01/2021-01-01_2020/</id>
    <published>2020-12-31T16:00:01.000Z</published>
    <updated>2022-01-29T10:25:21.142Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>“罪莫大于可欲，祸莫大于不知足，咎莫大于欲得。故<code>知足之足</code>，常足矣。”<br>——— 老子</p></blockquote><h4 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h4><p>又回到一年之初，2020年发生的事情太多了，如今已尘埃落定，在记忆封存之前，再来回顾一下，不管是痛苦还是艰苦，无一帆风顺的大海，但一定会有成功的彼岸！</p><p>题句的内容，大概意思是:“罪过没有比行私纵欲更为严重的，祸患没有比贪得无厌更为严重的，灾难没有比贪欲必得更为惨痛的。所以懂的<code>知足知止而心无贪求</code>，永远是觉得满足的。”</p><p>回到2020年1月，因为<code>新型冠状病毒肺炎</code>，武汉成为全球关注的中心点，那会大家应该都在家过年、远程办公，有时候一直都扮演吃瓜群众，李文亮事件，官员疫情披露不及时？xxx政府不作为？哪些方面的问题、隐患、漏洞？口罩暴利高价贩卖？假口罩劣质口罩回收二次口罩？非法捕猎、运输、买卖野生动物？恶意造谣或发布误导信息？患者故意隐瞒病例或未按规定进行居家隔离？</p><p>暴露出的问题，人性、历史、事实、缺陷、短板、监管、素养。如今疫苗已经上市，那些人那些事，还有多少人会记得？在历史的长河中，大家慢慢忘记，忘记2020年的经历，忘记那些问题，真正解决的又有多少？还有多少次教训在等待我们？</p><p><code>知足知止而心无贪求</code>，身体健康，平安无事，作为一个普通人，这是我们可以做到的！所以，敬畏自然，敬畏生命，遵守社会秩序，尊重他人生命，不给国家、社会、他人制造麻烦，这就是 <code>常足矣</code>！</p><span id="more"></span><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>今年是特别的一年，回想回首如今，博主已经毕业6年有余，今年开始奔三了！没有想到 30 岁来的这么早！芳华易老，人生易逝~</p><p>所以，今年的反思总结，尽量用不同的思考角色和理论方法，帮助大家解答一些疑问，或有触发一点的思考，足矣！也希望为下一个五年计划做好准备！人无远虑，必有近结~</p><h4 id="第一章-程序员的工作"><a href="#第一章-程序员的工作" class="headerlink" title="第一章 程序员的工作"></a>第一章 <strong>程序员的工作</strong></h4><p>关于程序员的工作，之前的年度总结 <a href="https://ihtcboy.com/2020/01/01/2020-01-01_2019year/">2020，爱你爱你</a> 已经写很多，今年，有没有什么新的思维呢？那肯定会有不一样的想法，写代码是程序员的基本工作。而更多的工作内容，到底是什么？</p><p>很多人从大学毕业到工作，一直就是靠写代码赚钱，想当然的说，用技术就能赚钱。但其实，能赚钱的不是技术，而是业务或产品。<code>IT是服务，这服务能控制成本，创造收益。</code></p><p>公司不是慈善机构，如果业务不好，员工随时都有可能丢饭碗。我们程序员，就是一颗螺丝钉的角色，影响不了业务的好坏，但裁员，却跑不了。</p><p>所以，我们的工作是什么？在于你的角色是什么，能做什么工作，也决定你能成为怎么样的角色。</p><p>关于程序员的工作的总结，不在于，2020年我做了什么工作内容，而在于为公司控制了成本吗？创造了收益吗？，<code>一颗螺丝钉如果没有价值，那就只是一颗螺丝钉。</code></p><h4 id="第二章-程序员的学习"><a href="#第二章-程序员的学习" class="headerlink" title="第二章 程序员的学习"></a>第二章 <strong>程序员的学习</strong></h4><p>关于学习，一般程序员想到的学习，会是技术，今年有什么新技术，学习了什么技术，追求“技术”，而不是学习。关于学习技巧，今年写了一篇文章 <a href="https://ihtcboy.com/2020/02/02/2020-02-02_%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/">如何建立你自己的开发知识体系</a> ，希望大家会有不一样的学习思考。</p><p>对于程序员的学习，有了几年工作经验，应该可以把学习当成一种方法，能把学习的内容知识，构建成一个模型或体系，然后开始形成自己的架构思想，最后还能<code>输出更抽象更具体的知识</code>，这个应该就是学习的最高境界。可能你会认为做不到，因人而异吧！也许有人要5年，有人要一辈子，这就是现实的本质，学习没有起跑线~</p><p>还有一些同学，没有太多的经验，“什么都想要，什么都想学！”，这是一个新人都有的想法，我想说，不忘初心，从根本开始，想清楚什么时你现在最缺的东西，就从那里开始，不要被外界各种高大上的技术所诱引。</p><h4 id="第三章-程序员的思考"><a href="#第三章-程序员的思考" class="headerlink" title="第三章 程序员的思考"></a>第三章 <strong>程序员的思考</strong></h4><p>学习是死的！知识是死的！，学习过程，一定是需要动脑！一定是需要思考！<code>没有思考的学习，终将只是纸上谈兵！</code></p><p>简单来说，比如看了一本关于如何“说话”的书，如果没有思考，那么这些都只是知识，看一百本“说话”的书，它就是一百本书。但是如果思考它们的灵魂，“说话”的本质就是：“时间、地点、对象、态度、措辞”，也就是说话n要素！在翻开那些书，无非就是围绕着这些点展开。这也许就是学习的本质，思考的重要性。</p><p>除了对于学习的思考，我认为还要对这个客观或主观的世界进行思考。当我们在讨论“公平”时，我们有很多公平或不公平的事实，但也会忽视很多。我们往往错误把一个概念一分为二，而不是相对性。比如，“公平”就一定是“公平”吗，“公平”的反面，一定是不公开吗？</p><p><code>公平是规则上的公平，而不是条件上的公平。</code> 比如参加体育比赛，只能说规则是公平的，但是运动员自身的素质、训练条件，本身是不可能做到完全一样的。所以，希望大家能对世界的思考，有更多的角度，思考的更完整，你的认知偏差就越少，做对事件的概率就更高！</p><p>最后，关于思考的作用，会带来不同的结果，<code>思考的深度和广度，决定了人的深度和广度。</code> 比如“垃圾分类”，想必大家一定已经非常的熟悉，大多数人看到“垃圾分类”的新闻，想到的可能是垃圾怎么分类？什么垃圾是什么分类？什么时候要分类？可不可不分类？甚至抱怨。但是仔细想一下，你是什么时候获取到这个信息？有没有意识到这是一个商机？什么时候意识到其中蕴含的商机？你现在意识到了吗？如果在垃圾分类政策出来前，你已经做好准备，比如最早开发了一个垃圾分类的小程序，可能就已经有百万级流量啦。不要怀疑新闻联播的价值，多思考~</p><p>对于过去，我们学习，我们思考，历史的意义，作用在于我们今天如何改变“历史”，值得每个人思考，这就是人生来的意义，活着的意义吧。</p><h4 id="第四章-程序员的焦虑"><a href="#第四章-程序员的焦虑" class="headerlink" title="第四章 程序员的焦虑"></a>第四章 <strong>程序员的焦虑</strong></h4><blockquote><p>如果你在马路上，看到一辆疾驶的汽车迎面而来时，我们会感到恐惧，心跳加速，快速横穿马路到达安全地带。</p><p>而当我们处于朝不同方向疾驶的汽车流，被困在马路中央时，我们心跳加剧却又无所适从，心里产生一种深深的空洞感，这就是焦虑。</p><p>简单来说，感觉到威胁、找不到突破口，内心空洞，这就是焦虑。技术生活何尝不是如此？</p><p> — 《焦虑的意义》罗洛•梅（美国著名心理学家）</p></blockquote><p>去年谈到焦虑的问题，说到了“快”，因为世界在追求快，所以，只有更快才能解决焦虑的问题。</p><p>而博主今年将要30了，步入所谓的“中年危机”，才开始有所感触，有些思考，需要到了那个年龄才能体会到，所以，也许博主写的内容，可能还没有到达那个年龄，大家可能还是不太懂。那就慢慢来，人生漫漫长路。</p><p>“快” 不是解决所有焦虑的方法，天下武功为快不破，最重要还是知足。华山论剑，不可能自己永远都是剑法最快的人，所以，认识到自己到底有多快，还能多快，也许可以解答你的焦虑之心。</p><p>简单来说，你焦虑的是什么？你想清楚了吗？想明白了吗？</p><p>吃瓜：明星八卦，时事新闻，年轻焦虑，如何赚钱？</p><p><code>程序员的焦虑到底是什么？</code>还是钱，赚钱，赚快钱？</p><p>怕什么？裁员，失业，下岗，赚不到快钱！</p><p>什么是快钱？就是相比其它行业更高的工资钱</p><p>现在很多知识付费的内容，一边吓唬你的“中年危机”，一边让你加入知识会员，知识它重要吗？它重要，但是有知识，你就不焦虑了吗？还是焦虑，为什么？</p><p>因为关于如何赚钱。他们问心有愧，能赚快钱，我会告诉你吗？</p><p>所以就卖焦虑，让人死循环，甚至开始，内卷~</p><p>所以，我是想说，滴水穿石，不是只靠最后一滴水穿！快钱也不是付个费就能赚钱。</p><p>往往事实更加让人心痛，和难以接受。那么就从理性的角度，尝试来减少程序员的焦虑：</p><ol><li>我的职场优势是</li><li>降低工资收入占比</li><li>机会只给有准备的人</li><li>坚持，你就打败了95%的人</li></ol><h4 id="第五章-程序员的管理"><a href="#第五章-程序员的管理" class="headerlink" title="第五章 程序员的管理"></a>第五章 <strong>程序员的管理</strong></h4><p>今年学习了 <code>管理</code> 和 <code>领导</code> 的不同见解。</p><p>管理层，领导者。一个是管理的“层”，一个是领导“者”。</p><p>管理是一个金字塔的每一层的指挥员，而领导者是这个金字塔的宏大愿景的灵魂者，是打工人心灵的导师。</p><p>程序员可能觉得技术最重要，什么都会一直用“技术”来进行pk比较，比如，“<code>上级的技术不如自己</code>” 的感觉！很多程序员，一定是这样想的，甚至不服气！因为他们往往忽略了，领导更重要的是赋能，知道做什么事情有价值。有长远的目光，舍得投入。要资源给资源，要时间给时间的。还能从公司高层那里争取到足够的资源。所以，你想做上级，就要从上级学习非技术的东西，讲讲武德，不要什么都用技术来思考。</p><p>所以，如果一个程序员所有问题都只是从技术角度思考，必然是井底之蛙！除了技术，还是技术，那就潜心技术研究，不要想太多。而技术管理人员，也不必说所有的技术一定比下属利害，这是不可能做到的，每个人的技术面都必然有自己不熟悉的知识，明白一个管理和领导的意义，才能做的更好的管理。</p><p>程序员的管理，必然是比单纯的技术线要难！<code>技术就是死知识的活运用，而管理是活人活事的活运用。</code></p><p>管理与微信群很像，我们一般加的技术群，如果达到300人以上，要不这个群里整天是吹水多过聊技术，最后就那几个人整天吹水，或者大家都保持沉默，一个月可能就有一个人发一个推广软文。作为群主，你如何管理这个群？</p><p>管理之路的晋升，比技术之路难得多，尤其要成为 CTO，除了一些特例，一般需要熟悉全栈技术，需要精通架构设计，需要具备全局思维，需要懂商业模式等等。做管理，不同于做技术，除了要管理团队，也要管理项目，其实就是管理人和事。管理人，核心在于管理人心；管理事，核心是要做正确的事。</p><h4 id="第六章-程序员的分享"><a href="#第六章-程序员的分享" class="headerlink" title="第六章 程序员的分享"></a>第六章 <strong>程序员的分享</strong></h4><p>关于程序员的分享，从内心来说，也是“赚钱”，这无可厚非。写文章分享会，一方面得到大家的认同点赞，内心的喜悦，是多少钱都带不来的，这就是正向的促进，更好的学习和进步。另一方面，可以扩大自己的影响力影响面，实现所谓的粉丝变现也好，知识变现也罢。综上，对于一个程序员来说，不管你技术是什么水平，你写的文章，一定是有它存在的价值。你只管分享！</p><p>关于分享，如果想做的更好，可以参考技术分享的要点：</p><ul><li>Who: 自我介绍，让听众了解自己，建立连接；</li><li>What&amp;When: 今天要分享的主题，通过简短介绍吸引听众的注意力、好奇心；</li><li>Why: 为什么要做这个架构改造、技术升级，整个项目的背景是什么样的，结合对听众的了解，做特定的介绍；</li><li>How: 深入浅出 3<del>4 个最核心的内容点，当然为了全面性，你可以都罗列出来，但介绍的重点建议控制在 3</del>4 项；</li><li>Future: 让大家了解你未来的计划，你对技术趋势的看法等等；</li><li>Recap: 对今天的主题再做一个回顾，让听众加深对核心内容记忆。</li></ul><h4 id="第七章-程序员的课堂"><a href="#第七章-程序员的课堂" class="headerlink" title="第七章 程序员的课堂"></a>第七章 <strong>程序员的课堂</strong></h4><p>很多人可能都会想着公司或上级能不能提供学习培训的机会，总是想着从更高层面的获取到好的知识，比如想通过大牛，传授高级的知识，就像武侠小说里主角一样，通过某次偶遇世外高人，然后一小时就能传授绝世功夫的秘籍，让自己一下子就成为江湖人物，开始走向逆转的开挂人生。（这样的剧情戏尽量少看~）</p><p>我想说，如果抱有这种想法，那么永远无法成为大牛高手。培训，不可能把我们懂的都教大家，只能给大家一些明确的方向，只有通过大家自己主动学，有问题问我们，在经过我们这个平台，动手实践，然后积累经验，一步一脚印，实打实的练习。</p><p>所以，关于程序员的课堂，更多的是自己的磨练，师傅领进门，修行坚持才行~</p><h4 id="第八章-程序员的生活"><a href="#第八章-程序员的生活" class="headerlink" title="第八章 程序员的生活"></a>第八章 <strong>程序员的生活</strong></h4><p>关于程序员的生活，博主也在思考生活和工作的关系。</p><p>这个社会随着商品化思维的加深，每个人都有一种交易心态。</p><ol><li>买房看政府</li><li>生子看早教</li><li>养老看理财</li></ol><p>互联网让交易的发生，更加的容易，更加的简单，更加的快捷。所以就有那句：“没有钱解决不了的问题”，交钱交易，已经是市场经济的深深印记。已经没有人记得大锅饭，计划经济的那些。</p><p>首先，说说我所理解的“商业”，如果要做老板，我认为需要3个前提：</p><ul><li>收入稳定（有相对固定）</li><li>客源（有地理位置，声誉原因……）</li><li>货源（特色，特殊，持久性…）</li></ul><p>我所理解的工作，也是如此。一切都是在交易中发生。生活处处都要钱，很多时候我们焦虑，是因为我们焦虑钱，而如果你能理性的面对钱，那么也许可以减少你的焦虑感。如果你想赚更多的钱，它也是有规律，可以看看之前的文章：<a href="https://mp.weixin.qq.com/s/Ayq6P6fxqMDYuTy8xyFzqw">财务自由的本质</a>，也许你不能所有的事情都得到，实现财务自由，记住自己尽力而行就好，财务自由不是目的，自由才是。</p><p>其次，今年疫情原因，大家开始论论<code>副业</code>，这个副业，也是前面焦虑中提到的“降低工资收入占比”，因为如果你的收入就是每个月发的工资，因为收入来源单一，所以如果发生任何意外，你的收入就断了，所以，副业也是为了解决这个问题吧。我认为副业，不止是大家想的接私活，副业应该一个光明的事情。比如投资、知识付费、直播卖货、粉丝经济等，总之，能利用自己的技能、兴趣、爱好赚到钱，也是副业。比如今年在家办公，未来是不是让在家办公成为主流？如果未来都在家办公，是不是你就不止是在一家公司应聘就职，而是可以同时在多家公司就职？没有不可能，只有想不到！</p><p>另外，普通人应该把自己的钱分到5个账户，这样更加的合理理财，具体可以看之前写的文章：<a href="https://mp.weixin.qq.com/s/MdL-PPwEuLb6Ico0UmQRag">一个家庭必须拥有的5个账户</a>。</p><p>最后，生活是没有考试的，不需要你必须考够100分才能生活或者找到工作。也没有必要生活和工作是完全分离，<code>工作是为了更好的生活，更好的生活需要更努力地工作！</code></p><h4 id="第九章-程序员的未来"><a href="#第九章-程序员的未来" class="headerlink" title="第九章 程序员的未来"></a>第九章 <strong>程序员的未来</strong></h4><p>程序员的“中午危机”一直都在，文章给了一些方法，不知道你理解了没有。任何行业都有危机，只是互联网刚刚30多年，越来越多人进入，必然会淘汰一批老人。就像老一辈的人，如果他们现在学不会用微信，也不会用智能手机，那么注定他们与现在的时代脱钩，必然最终被淘汰。这个事情，是人都会有些伤感，但优胜劣汰，是这个自然界的丛林法则。在时代的浪潮中，有人顺应潮流，冲上浪潮之巅，也必然有人被淘汰出局。</p><p><strong>80%的程序员确实谈不上什么创造性，就只是代码工人而已，这种人肯定面临35岁问题。</strong></p><p>人的一生很奇妙，有非常多的学者对人类进行研究，也会有一些理论：</p><ul><li>埃里克森社会心理发展阶段</li><li>皮亚杰的认知道德发展理论</li><li>柯尔伯格的道德发展阶段论</li></ul><blockquote><p><code>埃里克森社会心理发展阶段</code>是根据爱利克·埃里克森描述，将正常人的一生，从婴儿期到成人晚期，分为8个发展阶段。在每个阶段，个人都面临、并克服新的挑战。每个阶段都建筑在成功完成较早的阶段任务的基础之上。如果未能成功完成本阶段的挑战，则会在将来再次造成问题。<br><a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E9%87%8C%E5%85%8B%E6%A3%AE%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%8F%91%E5%B1%95%E9%98%B6%E6%AE%B5">埃里克森社会心理发展阶段 - 维基百科</a></p></blockquote><table><thead><tr><th>大约年龄</th><th>德性</th><th>社会心理危机</th><th>显著关系</th><th>存在问题</th><th>例子</th></tr></thead><tbody><tr><td>0-2岁</td><td>希望</td><td>信任对不信任</td><td>母亲</td><td>我能不能信任这个世界？</td><td>喂食、遗弃</td></tr><tr><td>2-4岁</td><td>意志</td><td>自主独立对羞怯怀疑</td><td>双亲</td><td>我可不可以成为我自己？</td><td>如厕训练、自行着装</td></tr><tr><td>4-5岁</td><td>目的</td><td>主动对内疚</td><td>家庭</td><td>为我自己而做、移动和行动是可以的吗？</td><td>探索、使用工具或创作艺术</td></tr><tr><td>5-12岁</td><td>能力</td><td>勤奋对自卑</td><td>邻居、学校</td><td>我能不能在全世界的人与事物做什么事？</td><td>学校活动、运动</td></tr><tr><td>13-19岁</td><td>忠诚</td><td>身份对角色混乱</td><td>同侪、模范</td><td>我是谁？我能成为什么？</td><td>人际关系</td></tr><tr><td>20-39岁</td><td>爱</td><td>亲密对孤独</td><td>朋友、伴侣</td><td>我能不能去爱？</td><td>亲密关系</td></tr><tr><td>40-64岁</td><td>关怀</td><td>爱心关怀对颓废迟滞</td><td>家庭成员、工作伙伴</td><td>如何完成我所认为的人生？</td><td>工作、伙伴</td></tr><tr><td>65岁-死亡</td><td>智慧</td><td>完美无缺对悲观沮丧</td><td>人类、我的同类</td><td>对于成为我自己的过程是否满意？</td><td>回顾人生</td></tr></tbody></table><p>程序员的未来在那里？人的一生就是如此，所以，从长远来看，过于担心未来，还不如早点认识到未来是什么，准备好自己。</p><blockquote><p>中国用中国式的薪水支付中国式的工作时间。<br>—–《中国的崛起与动荡》</p></blockquote><p>如果你现在还没有确认你喜欢做什么，应该怎样选择你未来的路，可以看看之前的文章： <a href="https://mp.weixin.qq.com/s/d6fex5uGpJ1qLFDCp356Yw">如何选择职业道路？</a> 。</p><p>最后，对于未来，多想想几个为什么，<code>要看到变化，要变化</code>，还年轻的时候，少说话，多做事！</p><h4 id="第十章-少有人走的路"><a href="#第十章-少有人走的路" class="headerlink" title="第十章 少有人走的路"></a>第十章 <strong>少有人走的路</strong></h4><p>最后，会列出2020年收集的有趣的内容，有一些是大学时摘写的笔记，原因是去年腾讯微云宣布回收空间时在网盘又找回来的，可能部分内容没有引用的来源，但是非常的棒，在这里列出来（如有侵权，请联系删），这些话依然有非常大的力量，特别是针对大学生或者刚刚毕业的同学，愿坚持学习的你，必定发光发热，找到热爱的路~</p><h5 id="优秀工程师习惯"><a href="#优秀工程师习惯" class="headerlink" title="优秀工程师习惯"></a>优秀工程师习惯</h5><ol><li>独立思考的能力</li><li>敢于冒险的勇气</li><li>接受新事物的能力</li><li>坚持到底的信念</li></ol><p><strong>思考模型:</strong></p><ol><li>系统化，实例化，具体化</li><li>顺其自然，看发展（好坏，优劣，高低……）</li><li>暮然回首，看起因（抓名词，找对象，全关系）</li></ol><p><strong>当今社会最容易被淘汰的12种人</strong></p><ol><li>没有想法</li><li>不懂合作</li><li>适应力差</li><li>犹豫不决</li><li>不愿沟通</li><li>不重资讯</li><li>没有礼貌</li><li>只会妒忌</li><li>知识面窄</li><li>忽视健康</li><li>消极思维</li><li>自我设限</li></ol><h5 id="大学生"><a href="#大学生" class="headerlink" title="大学生"></a>大学生</h5><blockquote><p>选定了专业，一定要把专业领域的前三本书读得滚瓜烂熟，把三本书任何一个思想观点都转化成你自己的思想观点，最后你就有可能变成这个专业的顶级人士。奠定了所有的理论和理论框架基础，未来你想要在这中间纵深发展，是绝对有无穷无尽的潜力的。</p></blockquote><blockquote><p>在大学除了读专业书籍，还有就是要广泛地读书。文科的读理科，理科的读文科。哲学史、科学史、文学史、生物史，然后是社会学、地理学、心理学、政治学、经济学，还有所有的随笔、散文、诗歌，大家都得去读。读书其实很简单，一个星期读两本书是轻轻松松的事情，毕竟要你精读的书很少。大学要读多少才算大学毕业生呢？同学们至少要读400本以上。</p></blockquote><blockquote><p>梅贻琦曾经说过一句话:“所谓大学者，非谓有大楼之谓也，有大师之谓也。”一个大学如果有伟大的老师，这个大学的学生必然伟大。但是我还想再说一下，大学非为有大楼之谓也，而是读书变成大学问之大雅。好像一张纸上写满了字，不管写多少字，就只是一张纸，薄薄的。但是，如果你读了大量的书，你就会变成一本书，厚厚的，让人一看就很厚重，让人一看就有学识，让人一看就愿意觉得你是值得交往的人。</p></blockquote><p><strong>实习要做的事：</strong></p><blockquote><p>杜子建老师</p></blockquote><ol><li>我要在企业里体验到，我到底学了什么对自己未来有用;</li><li>我要搞清楚，我自己还有那些方面不行;</li><li>我在实习这个阶段能为企业做一点那些小的贡献;</li><li>带上一个目标，实习完后，我回去该学什么。</li></ol><blockquote><p>年轻人的发展空间是很大的。社会在不断进步，需要人才不断去创新。80后、90后基本上都受过高等教育，知识比我们这代人丰富，视野也比较开阔，但就是太急躁了。要知道，很多人过的苦日子比你更苦，经历的苦日子比你还长。当年，我在校办企业做业务员，到处跟人家谈生意，多次被别人看不起。所以，<code>你不可能大学一毕业就拥有一切，这不符合社会发展的规律。</code></p></blockquote><h5 id="规律"><a href="#规律" class="headerlink" title="规律"></a>规律</h5><p>批评应该有建设性，高度诚意，而不是为批评而批评，为辩论而批评。</p><p><strong>拥抱变化</strong></p><ul><li>主动思考并解决公司级别的技术（业务）痛点问题</li><li>负责公司级别的技术规划</li><li>提升公司的技术影响力</li></ul><p><strong>成长改变突破</strong></p><ul><li>做你没做过的事情，叫做成长！</li><li>做你不愿意做的事情，叫做改变！</li><li>做你不敢做的事情，叫做突破！</li></ul><p><strong>交到好朋友有两个最重要的前提条件:</strong></p><ol><li>你自己本身是一个好人；</li><li>追随比你更加厉害的人。</li></ol><p><strong>创业需要几个基础:</strong></p><ol><li>你需要知道如何处理人和事的关系，这个你必须工作一段时间才有这个本领；</li><li>你需要熟悉一个行业的经验和运作的模式。</li></ol><p><strong>谈判技巧：</strong></p><ol><li>零和游戏。所以，试图让对方对卖买感兴趣的同时做出最大的让步。</li><li>谈判开始时，就要报出高价，并且尽力争取实现最佳目标。</li><li>谈判开始时，不要只是问“他们要什么”，应不断思考“他们为什么要它”。重视理解各自的利益所在，事半功倍。</li><li>对方总是使用苛刻的语言与你讨价还价，请不要生气，这恰恰证明他们要买你的商品。</li><li>如果对方抱很强的成见或高度情绪化，最好的办法就是在他们说完之后你仍然保持沉默。</li><li>卖方希望采用分期付，而买方希望一次性付款。主要原因，加速资金周转，增加利息收入和避免汇率变动风险。</li></ol><p><strong>积累人脉</strong></p><blockquote><p>微信可能有5000个好友，你能准确说出好友是做什么的，有多少个？是的，别人和你一样，没记住几个。那重点就在于如何让对方记住你，或者在需要的时候可以搜索到你，答案就是一个好的自我介绍。</p><p>每加一个群，每加一个好友，都是自我介绍的好时机。自我介绍至少应该体现以下几点：你是做什么的，能提供什么价值，需要什么资源。一定要真诚，让对方感受到你的真诚。</p></blockquote><p><strong>《入职新公司后，怎么做你才能崭露头角？》— 覃超</strong></p><blockquote><p>大家好，我是覃超。”进入新公司后如何快速找准自己的定位，最大程度发挥自己的技术实力？”</p></blockquote><blockquote><p>如果是作为公司里的新人，最重要的是以谦卑的态度向周围”老人“多请教多学习。千万不能端着，也注意别隐形装A。自己多多积极地融入团队，特别是和周末近距离工作的同事搞好关系。更为重要的是：预先去了解新公司里的项目代码，主动多花时间熟悉公司的业务细节；如果能在一周内对于你负责的核心代码非常了解，2~3周对于整个项目代码比较了解，基本上你在技术上就开始能够有效地融入新公司。</p></blockquote><blockquote><p>一个月左右时间，如果已经能提交代码完成一些技术问题时，主动和直属领导了解项目里的待解决问题的优先级。同时结合积极让自己的兴趣和公司“高优先级的任务”，能有所交集，达到共赢。</p></blockquote><blockquote><p>对于自己的技术学习一定要坚持四个字：“不设边界”；主动去看和了解公司技术栈的最新动向，下班后坚持学习，以及保持修炼程序员的内功 - 算法。</p></blockquote><blockquote><p>最后，沟通能力和情商也非常重要，和同事（特别是产品/运营）记得要保持好关系，一定要谦卑，切记！ 即使在互联网公司里，很多时候也是三分做事、七分做人。（不然没好的任务给你，你天天007也很难升职加薪）。</p></blockquote><p><strong>面试和简历</strong></p><p><a href="https://weibo.com/u/1640297597">@kejunz</a> 在微博发了关于<a href="https://m.weibo.cn/1640297597/4534609532685129">招聘的心得</a>：</p><p>不知道怎么深入下去？怎么让自己“升值”？</p><ul><li>现象：迷失在各种“技术栈”里…</li><li>现象：一直搞业务，技术上没亮点…</li><li>现象：有实践没理论，被说是理解不深；有理论没实践，又被说是经验不足…</li></ul><p>什么值得写进简历里，分四个面：</p><ol><li><p>业务面：晒结果，晒数字。包括交互创新、用户满意度、性能优化、质量 &amp; 稳定性、运营效率 / 效果等。不见得手段多高深，重要是见效，有数字佐证。</p></li><li><p>应用面：多碰复杂问题。复杂问题有两种，一种是真的很难，一种是真的很烦。不见得是多高大上的问题，看的是踩过的坑，搭过的桥，解决的彻不彻底。</p></li><li><p>工具面：丰富性，先进性。盘一盘自己的技术栈 &amp; 工具链，用法要高级（不是冷门、生僻、小众），团队不用至少自己调研过。这部分最引人关注，要避免流于使用。从问题、场景和特点出发，找到最适合、最匹配而不是大而全的方案。博采众长或是另辟蹊径的自研当然给力。但不见得自己造轮子就一定牛逼，低水平的重复反倒适得其反，误入歧途还不如一张白纸。</p></li><li><p>代码面：架构、重构、CodeReview。想想日常开发这几个方面都做过什么，能说出来什么，如果还没有就主动去做。最朴实无华的往往最硬。</p></li></ol><p>怎么把空想变成实事？个人能做什么（力所能及的折腾事，多碰复杂的事）-&gt; 可以做什么（主动寻找机会）-&gt; 想做什么（拓展个人的能力边界，学习和实践）</p><h4 id="第十一章-总结"><a href="#第十一章-总结" class="headerlink" title="第十一章 总结"></a>第十一章 总结</h4><p>2020年看过的剧：</p><ul><li>《安家》</li><li>《法证先锋4》</li><li>《隐藏的角落》</li><li>《沉默的真相》</li><li>《幸福，触手可及!》</li><li>《盲侠大律师》（2020）</li><li>《我们的歌》（第2季）</li></ul><p>最后，终于到了最后的总结啦！总结很美妙，你感觉不到自己思想的转变，到底是更好还是更坏了？了解了越多后发现自己什么都还是不懂，这就是每天起床的意义，每天都能进步，这就是自己最好的状态了吧！还是有很多内容不知道怎么写，也希望明年能写一些不同的观点，希望在每年的年初，用一个新的方式，新的开始，有一段新的历程！</p><p>总结，是为了更好的开始！</p><p>在最后，我还想来在聊聊3个IT的事情，算是自己的思考与总结吧：</p><ol><li>AI换面</li><li>美国制裁中国</li><li>微信的定位</li></ol><p>首先，AI换面的技术已经达到以假乱真，从此，<code>眼见不再为实！</code> 连视频也可以实时换面，在面对每天都有技术再发明、创造、变革，我们作为技术心喜若狂，像疯子一样去探索。与此同时，大家还没有意识到技术对于人类的影响远远超出了我们个体的想像，我们可能习惯无隐私意识，或者认证被政府或者巨头控制数据已经无力反击。 但恰恰相反的是，我想说，假如某天你突然被警察带走了，涉嫌一宗刑事案件，想想就觉得可怕，那种无力感只有发生在你身上时，你也许才感受到，才意识到。沉淀技术的同时，不要让技术局限了你的眼光，尝试着提高你的非技术能力!</p><p>其次，美国制裁中国，这个话题已经有无数人讨论过。放在几年前，我也会认为 <code>技术无国界！</code>。直到我又看到了很久以前的2句话：</p><p><strong>IT铁律</strong></p><ol><li>技术不可隐藏</li><li>不可超越美国</li></ol><p>作为一个普通的程序员，也许我们没有能力改变这个世界，但是，如果你能为中国创造技术，那么，这个铁律就能被打破，我是说如果！希望有生之年，这个如果能真！</p><p>最后，关于微信，已经变得非常的庞大，每天都有人教张小龙做微信！微信的“看一看”、“视频号”、“附近的直播” 功能，从我来看，不会有大的发展。<code>天下人苦微信久矣！</code>，微信已经占据了一天玩手机时间的一半以上，但是微信，还是希望我把更多的时间花在里面！与张小龙几年前提出的“用于即走”的理念完全相背！我已经把最近这些新功能关闭了，因为，它不符合隐私交流的出发点，比如你看了一篇八卦的公众号，然后在“看一看”里显示给朋友看，本身你就是对这个文章八卦一下，结果微信把这个内容推给你的微信好友！在比如刷视频号，你的点赞也好，你的观看也罢，其实，你看的视频是你喜欢的类型，但不一定是你微信好友喜欢的类型，或者直白的说，你看的视频就是不希望你朋友知道！而微信却想着通过这些熟悉人的关系，做这些智能的推送，我认为，对于工作和生活用同一个微信号的朋友，一定有跟我一样的疑惑。所以，想在微信里在做出一个“抖音”，完全不再可能的事情，刷视频更喜欢偷偷的刷~ 就像当年火的一把的摇一摇，也是陌生人社交，熟人的社交，能做的事情要想清楚，一脑子的为了对抗抖音，也无济于事。不信，咱们在过几年回来看看~ </p><blockquote><ul><li>2021.01.25 更新<br>微信在后来的 8.0 版本增加了“私密赞”。另外的是，取消悬浮按钮后，你在聊天时想边看文章/刷视频，结果发现不可以了！微信所有功能都想要，但是进入的层级越来越深了，必然导致更多的人放弃点击。再见~</li></ul></blockquote><p>很多时候，我们太过于较真，导致我们的精力用在错误的地方，所以，别太认真，无需辩解。<code>少考虑你是谁，多想想你每天会变成什么样！</code></p><p>年轻也好，中年也罢，30焦虑，35裁员，不管如何，我们准备好迎接，那么结果，一定会更好！多锻炼身体，少生病。管他什么事，提升自己才是王道！为一名程序员，能感知到新变化和趋势，可能带来新机遇，同时未雨绸缪，让自己在不断变化的环境中，发光发热！</p><p>2020年，手机只是小小一部分，智慧家居大屏、穿戴、车机、音响、手表、PC等等各种各样设备，作为开发者，我们不要只关注自己开发的App，编译器知识是所有设备的基础，应该去理解这个世界发生什么变化，为什么变化，怎么变化，抓住变化！当然我承认世界是掌握于小数人，但能先抓住自己！这就是好的开始~</p><h4 id="最后的开始"><a href="#最后的开始" class="headerlink" title="最后的开始"></a>最后的开始</h4><p>最后用一首诗，为我们一起打开2021年的大门，一起加油一起努力吧！</p><blockquote><p>我不去想是否能够成功，既然选择了远方，便只顾风雨兼程。<br>我不去想能否赢得爱情，既然钟情于玫瑰，就勇敢地吐露真诚。</p><p>—-《热爱生命》汪国真</p></blockquote><h4 id="参考阅读"><a href="#参考阅读" class="headerlink" title="参考阅读"></a>参考阅读</h4><p>博主文章：</p><ul><li><a href="https://ihtcboy.com/2020/01/01/2020-01-01_2019year/">2020，爱你爱你</a></li><li><a href="https://ihtcboy.com/2020/02/02/2020-02-02_%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/">如何建立你自己的开发知识体系 | iHTCboy’s blog</a></li><li><a href="https://mp.weixin.qq.com/s/MdL-PPwEuLb6Ico0UmQRag">一个家庭必须拥有的5个账户</a></li><li><a href="https://mp.weixin.qq.com/s/d6fex5uGpJ1qLFDCp356Yw">如何选择职业道路？</a></li><li><a href="https://mp.weixin.qq.com/s/Ayq6P6fxqMDYuTy8xyFzqw">财务自由的本质</a></li></ul><blockquote><p>管理之路的晋升，比技术之路难得多，尤其要成为 CTO，除了一些特例，一般需要熟悉全栈技术，需要精通架构设计，需要具备全局思维，需要懂商业模式等等。做管理，不同于做技术，除了要管理团队，也要管理项目，其实就是管理人和事。管理人，核心在于管理人心；管理事，核心是要做正确的事。</p><ul><li><a href="https://keeganlee.me/post/career/20200201/">程序猿们那些可选的职业发展路线 | Keegan小钢</a></li></ul></blockquote><blockquote><p>在《我也可以是流浪诗人》中有几段话，很有意思，摘录一些分享给大家：<br>做你没做过的事情，叫做成长<br>做你不愿意做的事情，叫做改变<br>做你不敢做的事情，叫做突破</p><ul><li><a href="https://mp.weixin.qq.com/s/Gv1fAO7piU7pB8oU9zBHng">如何消除油腻的技术焦虑？</a></li></ul></blockquote><blockquote><p>公司不是慈善机构，如果业务不好，员工随时都有可能丢饭碗。我们都属于基层员工，也就是一个螺丝钉的角色，影响不了业务的好坏，但裁员，却跑不了份。</p><ul><li><a href="https://zhuanlan.zhihu.com/p/88364522">如何把副业打造成一台月入5万元的赚钱机器？</a></li></ul></blockquote><ul><li><p><a href="https://mp.weixin.qq.com/s/YoRf5Ui1ktOJ8MkeZXk_Aw">技术人如何自我成长？</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/t1P0mw9Hf4y27EiZB2biXw">如何快速成长为技术大牛？阿里资深技术专家的总结亮了</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/EvhSeFQES8Ws8qo9xd4yug">30岁做什么，可以在5年之后受益匪浅？</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/jxUIMkWolezmHMbWL-Ji5w">走出焦虑！40岁大龄码农该何去何从？</a></p></li><li><p><a href="https://juejin.cn/post/6844903701069430798">一个40岁老码农的人生总结</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E9%87%8C%E5%85%8B%E6%A3%AE%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%8F%91%E5%B1%95%E9%98%B6%E6%AE%B5">埃里克森社会心理发展阶段 - 维基百科</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E6%9F%AF%E5%B0%94%E4%BC%AF%E6%A0%BC%E9%81%93%E5%BE%B7%E5%8F%91%E5%B1%95%E9%98%B6%E6%AE%B5">柯尔伯格道德发展阶段 - 维基百科</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E8%AA%8D%E7%9F%A5%E7%99%BC%E5%B1%95%E8%AB%96">认知发展论 - 维基百科</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;“罪莫大于可欲，祸莫大于不知足，咎莫大于欲得。故&lt;code&gt;知足之足&lt;/code&gt;，常足矣。”&lt;br&gt;——— 老子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h4&gt;&lt;p&gt;又回到一年之初，2020年发生的事情太多了，如今已尘埃落定，在记忆封存之前，再来回顾一下，不管是痛苦还是艰苦，无一帆风顺的大海，但一定会有成功的彼岸！&lt;/p&gt;
&lt;p&gt;题句的内容，大概意思是:“罪过没有比行私纵欲更为严重的，祸患没有比贪得无厌更为严重的，灾难没有比贪欲必得更为惨痛的。所以懂的&lt;code&gt;知足知止而心无贪求&lt;/code&gt;，永远是觉得满足的。”&lt;/p&gt;
&lt;p&gt;回到2020年1月，因为&lt;code&gt;新型冠状病毒肺炎&lt;/code&gt;，武汉成为全球关注的中心点，那会大家应该都在家过年、远程办公，有时候一直都扮演吃瓜群众，李文亮事件，官员疫情披露不及时？xxx政府不作为？哪些方面的问题、隐患、漏洞？口罩暴利高价贩卖？假口罩劣质口罩回收二次口罩？非法捕猎、运输、买卖野生动物？恶意造谣或发布误导信息？患者故意隐瞒病例或未按规定进行居家隔离？&lt;/p&gt;
&lt;p&gt;暴露出的问题，人性、历史、事实、缺陷、短板、监管、素养。如今疫苗已经上市，那些人那些事，还有多少人会记得？在历史的长河中，大家慢慢忘记，忘记2020年的经历，忘记那些问题，真正解决的又有多少？还有多少次教训在等待我们？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;知足知止而心无贪求&lt;/code&gt;，身体健康，平安无事，作为一个普通人，这是我们可以做到的！所以，敬畏自然，敬畏生命，遵守社会秩序，尊重他人生命，不给国家、社会、他人制造麻烦，这就是 &lt;code&gt;常足矣&lt;/code&gt;！&lt;/p&gt;</summary>
    
    
    
    <category term="life" scheme="https://ihtcboy.com/categories/life/"/>
    
    
    <category term="年终总结" scheme="https://ihtcboy.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    <category term="2021" scheme="https://ihtcboy.com/tags/2021/"/>
    
  </entry>
  
  <entry>
    <title>Apple Silicon(苹果芯片)从 DTK 到 M1 Mac 的入门总结</title>
    <link href="https://ihtcboy.com/2020/12/06/2020-12-06_DTK_Apple_Silicon_Mac/"/>
    <id>https://ihtcboy.com/2020/12/06/2020-12-06_DTK_Apple_Silicon_Mac/</id>
    <published>2020-12-06T07:49:16.000Z</published>
    <updated>2021-01-01T02:05:15.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><blockquote><p>Apple 宣布 Mac 采用 Apple 芯片的转移计划</p></blockquote><p>2020 年 06 月 22 日 <code>WWDC20</code>（苹果全球开发者大会）苹果宣布将会推出基于 ARM 架构自研处理器的 Mac，未来转向使用 <code>Apple Silicon</code> 的 Mac。苹果表示：开发者可以轻松将现有的 app 转换为基于 Apple 芯片运行，从而充分利用其强大的技术和性能。此外，开发者将首次可以在不做任何修改的情况下，<strong>直接将其 iOS 和 iPadOS app 带到 Mac 上。</strong></p><p>为了帮助开发者着手采用 Apple 芯片，Apple 还将推出 <code>Universal App Quick Start</code> 项目，提供各种文档、论坛支持、测试版 macOS Big Sur 和 Xcode 12，以及限定使用的 <code>Developer Transition Kit</code> (<code>DTK</code>)，即基于 Apple A12Z 仿生片上系统 (SoC) 的一款 Mac 开发系统。</p><span id="more"></span><h3 id="2、入门"><a href="#2、入门" class="headerlink" title="2、入门"></a>2、入门</h3><h4 id="Apple-Silicon（苹果芯片）"><a href="#Apple-Silicon（苹果芯片）" class="headerlink" title="Apple Silicon（苹果芯片）"></a>Apple Silicon（苹果芯片）</h4><blockquote><p>Apple 于 1984 年推出 Macintosh，为个人技术带来了巨大变革。今天，Apple 凭借 iPhone、iPad、Mac、Apple Watch 和 Apple TV 引领全球创新。Apple 的五个软件平台，iOS、iPadOS、macOS、watchOS 和 tvOS，带来所有 Apple 设备之间的顺畅使用体验，同时以 App Store、Apple Music、Apple Pay 和 iCloud 等突破性服务赋予人们更大的能力。Apple 的 100,000 名员工致力于打造全球顶尖的产品，并让世界更加美好。</p></blockquote><p>为什么苹果会从 Intel 芯片的 Mac 转移到 Apple 芯片？</p><p>本文就不去分析 Intel 的问题，就看看 ARM 架构的 Apple 芯片，苹果带来的改变:</p><ol><li>Mac SoC 产品系列将带来强大的新功能和卓越的性能；</li><li>Universal 2 可以轻松地创建一款兼容 Intel 芯片和 ARM 芯片 app；</li><li>Rosetta 2 的转译技术，用户将能够运行尚未更新的现有 Mac app；</li><li>利用虚拟化技术，用户则能够运行 Linux（目前证明 Windows 也可以）；</li><li>开发者无需进行任何修改，即可直接将其 iOS 和 iPadOS app 带到 Mac 上。</li></ol><p>从以上特点，可以看出，依赖 macOS Big Sur 系统，以确保流畅无缝地过渡至 Apple 芯片，Apple Silicon SoC 芯片带来性能更强劲的图形处理器、神经网络引擎，建立一个跨所有 Apple 产品的通用架构，大大降低开发者为整个 Apple 生态系统编写和优化软件的难度。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6cadeea951e4bc1a8d457e36e1bb8c1~tplv-k3u1fbpfcp-zoom-1.image" alt="1.jpg"></p><p>对于苹果开发者来说，苹果生态系统，完成了 iOS 、iPadOS 、 watchOS 、 tvOS 、macOS 的统一！虽然目前依然困难重重，但是，大家已经看到了未来的样子，也许就是这个样子！</p><blockquote><p>CPU，GPU 和 T2 这三个芯片太过分散，且架构不同，直接后果是互相之间能交流的信息有限。那有没有更好的解决方案，让它们能协同起来做事，被统一调度，在同一时间内能一起处理共有信息？答案是有的，这个方案叫做 SoC 片上系统，也就是手机芯片用了十来年的技术。<br>引用来源： <a href="https://sspai.com/post/61274">为什么 ARM 版 Mac 运行效率很高？ - 少数派</a></p></blockquote><h4 id="Universal-App-Quick-Start（通用应用快速启动）"><a href="#Universal-App-Quick-Start（通用应用快速启动）" class="headerlink" title="Universal App Quick Start（通用应用快速启动）"></a>Universal App Quick Start（通用应用快速启动）</h4><p>为了第一时间体验这个 Developer Transition Kit (<code>DTK</code>) ，楼主申请加入了 <code>Universal App Quick Start</code> 项目。</p><p>Quick Start 项目计划条款如下：</p><ol><li>可提供各种文档、论坛支持、测试版 macOS Big Sur 和 Xcode 12，并包括限定使用的 DTK；</li><li>开发者可构建并测试自己的 Universal 2 app；</li><li>DTK 由内置 Apple A12Z 仿生 SoC 的 Mac mini 组成（包括 16GB 内存、512GB 固态硬盘和多种 Mac I/O 端口）；</li><li>项目结束时须将 DTK 归还给 Apple（DTK被严格限定为一个租赁物品而非销售给开发者）；</li><li>项目总费用为：500 美元（ <strong>人民币 3699</strong>）</li></ol><p>备注：<strong>通用应用程序快速启动计划条款和条件</strong>：<a href="https://developer.apple.com/terms/universal-app-quick-start-program/Developer-Universal-App-Quick-Start-Program.pdf">Universal App Quick Start Program terms and conditions</a></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b513455a375f45c5a5a374bcd26c55cf~tplv-k3u1fbpfcp-zoom-1.image" alt="2.jpeg"></p><h5 id="到底值不值"><a href="#到底值不值" class="headerlink" title="到底值不值"></a>到底值不值</h5><p>当时，大家关注最多的就是费用，开发者支付 $500 获得的是 DTK 的有限使用权，相当于是从苹果租借，而非购买！用完了还得还回去！</p><p>所以，到底值不值？￥3699/1年，大概是 ￥10/1天，然后网上就有人翻出了有趣的历史：</p><blockquote><p>在2005年苹果上一次从 PowerPC 架构转向英特尔 x86 的时候，也推出过一台 DTK，是用当时的 Power Mac G5 电脑改装来的。开发者返还苹果DTK后，苹果给了一台 iMac 。</p></blockquote><p>所以，在2020年的DTK归还后，苹果还会送一台新的 ARM Mac 给开发者吗？</p><p>为了探索当年到底是怎么样，在维基百科找到了答案：</p><blockquote><p>开发人员实际上从苹果租用了999美元的硬件(DTK)，为期约18个月。苹果要求开发人员计划在2006年12月31日一周内将系统退还给苹果。</p></blockquote><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a809e9ee3dcb463798935175e7f93d5d~tplv-k3u1fbpfcp-zoom-1.image" alt="3.jpg"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe91f3b513ca473aa9c97415057fba9b~tplv-k3u1fbpfcp-zoom-1.image" alt="4.jpeg"></p><p>2005 年 6 月份，苹果公司宣布他们将会在一年之内，让旗下的 Mac 设备从 PowerPC 过渡到 Intel CPU，这条消息震惊了整个 Mac 行业。而 2006 年 1 月份的 Macworld Expo 上苹果公司推出了他们的第一款 Intel Mac。苹果过渡的速度之快令很多人倍感意外。（而 ARM Mac 第一款 M1 Mac，在11月就推出来，比2015年还快了，说明苹果这次准备的时间可能往前推几年吧！）</p><p>2006年1月10日，苹果推出了一部配备英特尔处理器的 iMac 电脑，iMac 价格从 1299 美元起。并推出一部配备英特尔处理器，并代替 PowerBook 的专业型笔记本电脑，新电脑名为 MacBook Pro。 </p><p>所以，今年的 DTK，明年开发者归回时，苹果会给开发者一台 ARM 的 Mac mini 吗？</p><table><thead><tr><th align="center">对比</th><th align="center">2005</th><th align="center">2020</th></tr></thead><tbody><tr><td align="center">DTK</td><td align="center">Power Mac G5 (3.6 GHz Pentium 4)</td><td align="center">Mac mini (Apple A12Z Bionic)</td></tr><tr><td align="center">租期</td><td align="center">2006年12月31日后一星期内</td><td align="center">一年(收货开始) 到期后30天内</td></tr><tr><td align="center">费用</td><td align="center">$999</td><td align="center">$500</td></tr><tr><td align="center">新产品</td><td align="center">Intel iMac ($1299）</td><td align="center">M1 Mac mini ($699)</td></tr></tbody></table><p>其实，我们可能比较纠结，当然，楼主写本文时，苹果已经停止了 DTK 的申请计划。所以，我找到了2005年第一代 DTK 发布时，乔布斯的解读：</p><blockquote><p>在2005年的WWDC上，苹果CEO 史蒂夫·乔布斯：强调这一原型硬件并没有任何商业发售计划，称：“这只是个开发平台（Apple Development Platform），它不是个产品也永远不会被当成产品来卖。我们只是让你们拿它来尽快开始开发。实际上你们要在2006年年底前把它还给我们。我们不想让这东西满地都是。这东西不是个产品。”</p></blockquote><p>所以，DTK 不是产品！只是开发者工具~</p><p>答案，大家可以期待一下吧！2005是乔帮主作主，如今现在的苹果公司一直不差钱，明年就看库克的表现啦！</p><h5 id="到底保密严格"><a href="#到底保密严格" class="headerlink" title="到底保密严格"></a>到底保密严格</h5><p>苹果在 <a href="https://developer.apple.com/terms/universal-app-quick-start-program/Developer-Universal-App-Quick-Start-Program.pdf">通用应用程序快速启动计划的条款</a> 中加入了<strong>严格的保密规定</strong>和各种各样字面上颇为夸张的限制。附加了包括禁止拆解、禁止做性能跑分测试和禁止用于非开发用途等的条款。</p><blockquote><ol start="2"><li>Licenses and Restrictions</li><li>2 No Other Permitted Uses</li></ol><p>您（和您的授权开发人员）只能出于本附录明确允许的目的和方式并根据文档使用开发人员转换套件。您同意您和您的授权开发人员均不会：<br>（a）对开发人员转换套件或其任何部分进行任何更改或更改；<br>（b）全部或部分反编译，反向工程，解密或反汇编Developer Transition Kit，或者尝试全部或部分反汇编Developer Transition Kit，或衍生（或尝试衍生）源代码或以其他方式将Developer Transition Kit的软件部分简化为人类可理解的形式（除非且仅在适用法律禁止上述限制的范围内，或在许可条款允许的范围内，否则）规范任何此类软件随附的开源组件的使用）；<br>（c）复制，修改或创建以下内容的衍生作品： 开发人员过渡套件或其任何部分；<br>（d）在开发人员过渡工具包上显示，演示，视频，照片，对开发人员过渡工具包进行任何绘图或渲染，或对其进行任何图像或测量，或进行任何基准测试（或允许其他任何人进行上述任何一项操作），除非另外苹果公司书面授权；<br>（e）讨论，公开撰写或发布有关开发人员迁移工具包（或您对开发人员迁移工具包的使用）的任何反应，无论是在线，书面，亲自还是在社交媒体上进行，除非另行书面授权苹果公司；<br>（f）租金，租赁，贷款，出售，转让，再许可，分发，转让或以其他方式分享（第2.1节所允许的给您的授权开发人员除外），或允许在开发人员转换套件中放置任何留置权；<br>（g）未经苹果事先书面同意，将开发者迁移工具包从其原始交付国家转移到该国家；<br>（h）或导出，重新导出或导入开发人员转换套件（或任何部分）。 </p></blockquote><p>所以，刚开始几个月时，楼主也不敢透漏太多的内容，现在2020年12月了，苹果 <a href="https://www.apple.com.cn/mac/">M1 Mac - Apple</a> 已经开售，相对来说，这些保密规定就意义不大了。所以，这也是楼主写本文的一个意义，让更多的人关注苹果平台，为苹果开发者创造更多的价值，与苹果的开发者理念是一致的，有冲突但是有意义。</p><h4 id="DTK（Developer-Transition-Kit）"><a href="#DTK（Developer-Transition-Kit）" class="headerlink" title="DTK（Developer Transition Kit）"></a>DTK（Developer Transition Kit）</h4><p>DTK（Developer Transition Kit，开发人员过渡工具包）</p><table><thead><tr><th align="center">技术规格</th><th align="center"></th></tr></thead><tbody><tr><td align="center">处理器</td><td align="center">Apple A12Z Bionic</td></tr><tr><td align="center">内存</td><td align="center">16GB</td></tr><tr><td align="center">硬盘</td><td align="center">512GB SSD</td></tr><tr><td align="center">I/O</td><td align="center">Two USB-C ports (up to 10 Gbps) <br>Two USB-A ports (up to 5 Gbps)<br>HDMI 2.0 port</td></tr><tr><td align="center">网络</td><td align="center">802.11ac Wi-Fi<br>Bluetooth 5.0（蓝牙5.0）<br>Gigabit Ethernet（千兆以太网）</td></tr><tr><td align="center">租费</td><td align="center">$500/年</td></tr></tbody></table><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7cc1619f6a1c48c599148c7184626144~tplv-k3u1fbpfcp-zoom-1.image" alt="5.JPG"></p><p>DTK 与普通的 Intel Mac mini 的包装是一样的，外形区别不大。特别有趣的是，打开包装说明书正面写着：</p><p>“The future of Mac is yours to write”（你来书写 Mac 的未来！）<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4f49680feb744fc8b9df8371232a5c70~tplv-k3u1fbpfcp-zoom-1.image" alt="6.JPG"></p><p>包装盒里面有一张字条写着：</p><p>“Congratulations on being one of the first developers for Mac powered by Apple silicon.”（祝贺您成为首批Apple芯片的Mac开发者）</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/13b0cb2e833a49e48a7b0918911014a7~tplv-k3u1fbpfcp-zoom-1.image" alt="7.JPG"></p><p>说实话，简简单单几个字，非常的打动人心~</p><h4 id="Mac-环境兼容"><a href="#Mac-环境兼容" class="headerlink" title="Mac 环境兼容"></a>Mac 环境兼容</h4><p>一个新架构的系统，首先要看的就是兼容性，虽然前面提到 Rosetta 2 的转译技术，但是因为是转译，所以不是所有的指令都兼容或者转换成功，比如内核扩展、x86_64虚拟化指令等。对于不兼容的app，可以使用 Rosetta 2转译，详细可以看看苹果文档：<a href="https://developer.apple.com/documentation/apple_silicon/about_the_rosetta_translation_environment">About the Rosetta Translation Environment | Apple Developer Documentation</a>。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e78cc47061e4d79ba19e70761a09bb6~tplv-k3u1fbpfcp-zoom-1.image" alt="8.png"></p><p>在 ARM 版的 Mac 上，软件有如下运作方式：</p><ol><li>所有 Apple 自家应用，包括系统本身以 ARM 原生模式运行，无任何性能折损；</li><li>所有 iOS 和 iPadOS 应用，以 ARM 原生模式运行，无任何性能折损；</li><li>所有 Catalyst 应用，需重新编译为 Universal 应用，无任何性能折损；</li><li>所有虚拟机应用，运行在 Big Sur 提供的虚拟机环境下；</li></ol><p>x86-64 软件运作方式：</p><ul><li>所有 32 位 x86 应用，已在三年前被 Apple 淘汰，无法运行；</li><li>所有 64 位 x86 应用，若以应用商店分发，则下载的便是已翻译版本；</li><li>所有 64 位 x86 应用，若在网络上下载安装，则在安装时翻译；</li><li>所有 64 位 x86 应用，若以拖拽形式安装，则在首次运行时翻译。</li></ul><blockquote><p>以上引用来源：<a href="https://sspai.com/post/61274">为什么 ARM 版 Mac 运行效率很高？ - 少数派</a></p></blockquote><p>在 GitHub 上有一个项目：<a href="https://github.com/ThatGuySam/doesitarm">ThatGuySam/doesitarm</a> 是一个 Apple Silicon 芯片架构的兼容情况的 app 列表，展示了原生兼容、Rosetta 2转译、不兼容但开发中，暂未计划等状态。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/457d567358c74b53a6425369d7f12211~tplv-k3u1fbpfcp-zoom-1.image" alt="9.png"></p><h5 id="到底过渡多久"><a href="#到底过渡多久" class="headerlink" title="到底过渡多久"></a>到底过渡多久</h5><p>那么，大家可能关注的另一个问题，<strong>Intel Mac 的系统支持更新还能多久？</strong></p><p>苹果表示，未来会继续支持 Intel Mac 的更新维护，但目前没有给出一个具体的时间节点。我们可以参考2005年 Mac 电脑从 PowerPC 转为 x86 架构，用了6年时间：</p><ul><li>2005年的 Mac OS X 10.4版（Tiger）同时有 PowerPC 和 Intel 两个版</li><li>2011年的 Mac OS X 10.7 （Lion）才不再支持 PowerPC。</li></ul><p>所以，这次从 x86 转为 ARM 架构，估计也需要同样长的时间，大约 5~6 年。</p><p>另外，我想很多人一定会问，“我现在适合购买 M1 Mac 吗” ？</p><ul><li>如果你现在已经有 Mac 电脑，暂时建议 2021年6月后在考虑吧，至少1年时间，到时候，大多数软件都兼容了，迁移才是真的生产力工具！否则，现在就是买一个玩具不断折腾的过程~</li><li>如果你之前没有使用过 Mac 电脑，那么可以购买啊，现在兼容 iOS/iPadOS 的app，需要是兼容性不太好，但是性价比是比 Intel Mac 高！</li><li>如果你是开发者且之前没有用过 Mac 电脑，那建议你等等！现在入手 M1 ，开发软件兼容性是一个头痛的问题。虽然从可参考历史上，Intel Mac的 macOS 系统还可以支持更新5代左右，如果入手 Intel Mac，有点像 49 年入国民d（<em>个人感受，不喜勿喷</em>）。</li></ul><h4 id="安装-iOS-iPadOS-app"><a href="#安装-iOS-iPadOS-app" class="headerlink" title="安装 iOS / iPadOS app"></a>安装 iOS / iPadOS app</h4><p>最初在 macOS Big Sur 11.0 beta 10 之前，只需要将 iOS 应用经过砸壳、关SIP、关AMFI、重签名之后能直接运行。</p><p>具体步骤：</p><ol><li>关闭 <strong>SIP</strong></li><li>关闭 <strong>AMFI</strong>（终端输入：<code>sudo nvram boot-args=&quot;amfi_get_out_of_my_way=1&quot;</code>，然后重启以生效）</li><li>在 DTK 上安装开发证书，然后用 <code>codesign</code> 命令重签</li></ol><p>重签的脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">codesign -d --entitlements :- <span class="string">&quot;<span class="variable">$1</span>&quot;</span> &gt; temp.xcent</span><br><span class="line">codesign -f -s <span class="string">&quot;Apple Development: xxx (xxx)&quot;</span> --entitlements temp.xcent <span class="string">&quot;<span class="variable">$1</span>&quot;</span>/Frameworks/*</span><br><span class="line">codesign -f -s <span class="string">&quot;Apple Development: xxx (xxx)&quot;</span> --entitlements temp.xcent <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br></pre></td></tr></table></figure><p>判断是否砸壳的脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cryptid 0（砸壳） 1（未砸壳）</span></span><br><span class="line">otool -l <span class="string">&quot;<span class="variable">$1</span>&quot;</span> | grep crypt </span><br></pre></td></tr></table></figure><p>常规的关闭 <code>SIP</code> 的步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 进入 recovery 模式</span><br><span class="line">2. 选择左上角的 “苹果图标” —— “Startup Disk” —— “System” —— “Security Policy” —— “Reduced Security &amp;&amp; Allow kernel extensions from identified developers”</span><br><span class="line">3. 退出启动磁盘，在Utilities选项卡中选择Terminal</span><br><span class="line">4. 输入：csrutil <span class="built_in">disable</span></span><br><span class="line">5. 重启电脑</span><br></pre></td></tr></table></figure><p>而 DTK 关闭 <code>SIP</code> 的步骤有所不同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 进入 recovery 模式</span><br><span class="line">2. 选择 “硬盘” 图标</span><br><span class="line">3. 选择 “Security Policy”（安全策略） -- “Reduced Security”（降低安全性） -- “Allow kernel extensions from identified developers”（允许用户管理来自被认可开发者的内核扩展）</span><br><span class="line">4. 然后退出，返回 recovery 模式</span><br><span class="line">5. 选择 “选项” 图标</span><br><span class="line">6. 选择 Terminal</span><br><span class="line">7. 输入：csrutil disable</span><br><span class="line">8. 重启电脑</span><br></pre></td></tr></table></figure><p>注：关于 <code>SIP</code> 详细的内容可自行搜索，<code>$1</code> 就是 ipa 解压后的 app 目录。</p><p><strong>在 macOS Big Sur 11 beta 10 上无法运行用上面的方法直接运行 iOS app 了</strong><br>打开提示：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/616b8a94e5304a5bbf31e7d9c2b2e132~tplv-k3u1fbpfcp-zoom-1.image" alt="10.png"></p><p>重签的 app 都显示禁止了：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cfd10f85cd44193971110265afc31bc~tplv-k3u1fbpfcp-zoom-1.image" alt="11.png"></p><p>日志输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LAUNCH:Application cannot be launched because its unsupported bit is <span class="built_in">set</span>, com.facebook.Facebook node=&lt;private&gt; status=-10661</span><br><span class="line"></span><br><span class="line">handle LS launch error: &#123;\n    Action = oapp;\n    AppPath = <span class="string">&quot;/Users/iHTCboy/Downloads/iOSApp/Facebook.app&quot;</span>;\n    ErrorCode = <span class="string">&quot;-10661&quot;</span>;\</span><br></pre></td></tr></table></figure><p>解决方法：<br>需要把ARM Mac的 uuid 添加到开发者证书中，用包含此 Mac uuid 的证书重签ipa文件，然后双击ipa文件系统就会自动安装，然后在自动添加到 Applications 里，可以直接打开 app。</p><p>Mac uuid 位置：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/411399d722614eed9f83ea675f8c612a~tplv-k3u1fbpfcp-zoom-1.image" alt="12.png"></p><p>双击 ipa 文件安装：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/91e9f613cb6745dca3ab262ea18965b1~tplv-k3u1fbpfcp-zoom-1.image" alt="13.png"></p><p>如果重签后证书不正常也会提示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b7bee27c8a954169991bb5a9fb561a7d~tplv-k3u1fbpfcp-zoom-1.image" alt="14.png"></p><p>安装成功：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8f4b0fd1ce14626acf980fafc187239~tplv-k3u1fbpfcp-zoom-1.image" alt="15.png"></p><h4 id="运行-iOS-iPadOS-app"><a href="#运行-iOS-iPadOS-app" class="headerlink" title="运行 iOS / iPadOS app"></a>运行 iOS / iPadOS app</h4><p>iOS app 可以在 macOS 上原生运行，这个对于 macOS 生态来说非常的重要和兴奋！因为 macOS 一直以来的 app 质量高，但是数量一直都没有大的提高。所以，这次 ARM Mac，对于苹果和用户来说，都是双赢的局面！</p><p>运行 iOS app，基本上UI兼容上没有问题，因为支持 iPadOS 的话，其实，在 macOS 上，可以理解为更大屏幕的 iPad 吧了！</p><p>楼主录了一个在 DTK 上用鼠标玩王者荣耀的视频： <a href="https://www.bilibili.com/video/BV1SZ4y1G7UE">DTK 苹果芯片 Arm Apple Silicon Mac mini 试玩王者荣耀游戏 - bilibili</a>。从视频可以看出来，因为手游一般是双手操作，所以鼠标上多点触按是无法实现的，就是图一个新鲜感吧。</p><p>运行王者：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/33db9ad6c16f4d3e883e27cbc7cd2e8b~tplv-k3u1fbpfcp-zoom-1.image" alt="16.png"></p><p>运行多个应用并不会卡顿，因为都是原生运行：<br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e6f87dae5bff497aab98d34deb0e90cb~tplv-k3u1fbpfcp-zoom-1.image" alt="17.png"></p><p>抖音：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8dd0fbbf096d4504a7e0d85821399a8e~tplv-k3u1fbpfcp-zoom-1.image" alt="18.png"></p><p>特别有意义的是，TikTok 可以正常打开，在 iPhone 是无法正常访问的。说明识别 DTK 时获取不到一些物理关键信息，导致无法直接屏蔽。所以，DTK 导致的安全问题不容忽视！<br><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f3ea7ff5c00448fb425d190d16f5950~tplv-k3u1fbpfcp-watermark.image" alt="19.png"></p><p>微信读书：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/31682b41197f46f79b67e11dd9d29b8a~tplv-k3u1fbpfcp-zoom-1.image" alt="20.png"></p><p>所以，对于交互少的 iOS app，体验感与 iPhone 上感觉差别不大，就是一个大屏幕的iPhone，比如视频app、读书app，无缝对接，这也许就是苹果生态，未来的优势！</p><p>最后，以微信 iOS 版本，来了解一下具体的体验：</p><p>打开会显示 for iPad 的界面，因为屏幕变大了，完全不是 iPhone 的尺寸：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e12a3e8187a3417a97dc7e1f91a9da7b~tplv-k3u1fbpfcp-zoom-1.image" alt="21.png"></p><p>首页界面：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cbe90e01ff7c4cd881c634dd1f3f561f~tplv-k3u1fbpfcp-zoom-1.image" alt="22.png"></p><p>朋友圈界面：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a48cb946f844be48e7523381b69ed20~tplv-k3u1fbpfcp-zoom-1.image" alt="23.png"></p><p>访问相册权限时：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9499d4f312e84417ba7effc38ea43c9e~tplv-k3u1fbpfcp-zoom-1.image" alt="24.png"></p><p>访问相机权限时：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2266eed3f74546ecadfb73c424132abb~tplv-k3u1fbpfcp-zoom-1.image" alt="25.png"></p><p>发朋友圈：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4803367fec824e348944ce45d7ddf18f~tplv-k3u1fbpfcp-zoom-1.image" alt="26.png"></p><p>也能打开小程序，目前bug比较多，部分页面会闪退：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/17a7f370ac1943d691344fba1f086d64~tplv-k3u1fbpfcp-zoom-1.image" alt="27.png"></p><p>微信读书体验还是非常顺畅的：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8f7cd0093d5f4c3bb8ff8cecedd8f33a~tplv-k3u1fbpfcp-zoom-1.image" alt="28.png"></p><p>最后，通过 UTM 虚拟机启动的 Windows XP 系统，目前还是非常卡顿，期待未来优化，相信可以做到的！：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4bc33ad77b9a4aee82810296210f6bb7~tplv-k3u1fbpfcp-zoom-1.image" alt="29.png"></p><h4 id="iOS-iPadOS-app-原理和安全性"><a href="#iOS-iPadOS-app-原理和安全性" class="headerlink" title="iOS / iPadOS app 原理和安全性"></a>iOS / iPadOS app 原理和安全性</h4><p>那么，除了 ARM 架构，运行 iOS app 必须是需要系统层级的支持，macOS Big Sur 风格与 iOS 雷同化，所以 iOS app 运行在 macOS 上并不会显得突兀，提示框或UI保持了一致，比如经典的 Mac 图标，现在都开始变成圆角图标。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a86a9cb2b2c4ae7ba3b7f2ceb94749d~tplv-k3u1fbpfcp-zoom-1.image" alt="30.JPG"></p><p>macOS提供了 iOS 运行时需要的内核环境和运行时框架，在系统目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/System/iOSSupport/System/Library/Frameworks/</span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8a5d3df2d910442499b9b59b1cce347a~tplv-k3u1fbpfcp-watermark.image" alt="31.png"></p><p>而 iOS app 安全保障的沙盒环境，在 macOS 下则是完全暴露，目前苹果并没有对 iOS app 沙盒目录进行加密或者保护，普通用户权限就可以随意访问 iOS app 的目录，对于 iOS app 来说，如果已经上架，或者未来上架 Mac 平台，建议对沙盒目录的内容和文件做好加密，避免用户的数据泄露，安全风险增加等问题。</p><p>iOS app 沙盒目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/Library/Containers/</span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a53e81f360e146198bcc126f17d7f205~tplv-k3u1fbpfcp-watermark.image" alt="32.png"></p><p>DTK 最初的app沙盒目录是直接用app的名字：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f73719fbf58848d29164aba79a19d934~tplv-k3u1fbpfcp-watermark.image" alt="33.png"></p><p>Big Sub 10.1 beta 10 和后续的正式版本，改回与 iPhone 一样的目录 id 名字：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4ca4c1dff3d948ed9f20a245255ab1ac~tplv-k3u1fbpfcp-watermark.image" alt="34.png"></p><p>另外，macOS 支持 iOS app 的 Scheme 调用，王者荣耀的微信登陆授权，可以跳到 iOS 微信 app授权，所以，可以说苹果把 iOS 整个系统直接搬到了 macOS，未来是不是还会调整，需要市场来验证。</p><p>对于苹果生态的开发者来说，除了生态更加完善，可以直接 macOS 运行 iOS app，不用在像以前那样支持 i386/x86 框架的模拟器外，更需要关注安全问题。iOS 以前因为成本高，所以黑灰产更多是用安卓机群，安卓有相应的防护，而 iOS 如果以前没有太多关注安全性，都是交给系统沙盒保护，越狱用户毕竟是少数。而现在 M1 Mac，无沙盒，进程可控，系统可控，所以从现在开始，开发者体验统一的苹果生态时，必须开始关注 AppleOS 安全生态。</p><h4 id="M1-for-Mac"><a href="#M1-for-Mac" class="headerlink" title="M1 for Mac"></a>M1 for Mac</h4><p>2020 年 11 月 11 日苹果发布使用命名为 M1 处理器的 Mac，Apple 正式启动了 Mac 电脑从 Intel 处理器到 Apple 芯片的过渡。</p><p>搭载 Apple 芯片的 Mac 电脑：</p><ul><li>MacBook Pro（13 英寸，M1，2020 年）</li><li>MacBook Air（M1，2020 年）</li><li>Mac mini（M1，2020 年）</li></ul><table><thead><tr><th>属性</th><th>规格</th></tr></thead><tbody><tr><td>制程</td><td>5 纳米 (160 亿晶体管)</td></tr><tr><td>CPU</td><td>8 核 (四个高性能核心/四个高能效核心)</td></tr><tr><td>GPU</td><td>8 核 (一次可执行近 25000 个线程)</td></tr><tr><td>NPU</td><td>16 核 (最高达每秒 11 万亿次的惊人运算能力)</td></tr><tr><td>内存</td><td>统一内存架构 (UMA)</td></tr></tbody></table><h4 id="Mac-AppStore"><a href="#Mac-AppStore" class="headerlink" title="Mac AppStore"></a>Mac AppStore</h4><p>M1 Mac 电脑苹果已经开放了搜索和下载 iOS 和 iPadOS 的 App。方法也很简单，与 iPadOS 上一样， Mac AppStore 增加了一个切换标签：“iPad 与 iPhone App”，安装流程一样。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/df6557c14f6343d19a6e0148dd4a9abb~tplv-k3u1fbpfcp-zoom-1.image" alt="35.JPG"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/27cc2cb179c6431c9dc62b8afa2ae651~tplv-k3u1fbpfcp-zoom-1.image" alt="36.JPG"></p><p>关于兼容性，这样就不多说了，毕竟苹果推出 M1 Mac 也就半个月，这个 iOS App 兼容性，不同的开发者的应用不一样。但是，我相信，给点时间，兼容性问题并不大，毕竟，现在至少是能运行起来。</p><p>对于开发者，可以在 AppStoreConnect 后台设置自己的 App 是否允许在 Mac AppStore 下载：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8d2c779d09941ef9087a699762fd6bf~tplv-k3u1fbpfcp-watermark.image" alt="37.png"></p><p>在 App 详细页面的“价格和销售范围”可以配置：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb0c71adf671470cbd2c1c674174ac97~tplv-k3u1fbpfcp-watermark.image" alt="38.png"></p><p><strong>在 macOS 中验证您的 app</strong>。默认情况下，Mac App Store 中的 iPhone 和 iPad app 会带有“未针对 macOS 验证”标签。当您在搭载 Apple 芯片的 Mac 上测试过您的 app，并确认它能正常运行后，您可以在 App Store Connect 确认其兼容性已受验证，以此移除 App Store 上的相关标签。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/41108c5c1630441b9e1bd247b887097f~tplv-k3u1fbpfcp-watermark.image" alt="39.png"></p><p><strong>注意事项：</strong></p><ul><li><strong>评分和评论。</strong> Mac App Store 与 iPhone 和 iPad 版 App Store 有针对各自平台的评分和评论，查看您 app 的用户仅会看到同一平台其他用户发表的评论。</li><li><strong>通用购买。</strong> 如果您的 iPhone 或 iPad app 在 Mac App Store 中提供，您之后可以在 App Store Connect 中为您的 app 添加 macOS 平台，将它替换为专门的 Mac 版本。替换后，在 Mac 上使用您的 iPhone 或 iPad app 的现有用户在更新该 app 时，即会更换至新的 Mac app。如果您的 iPhone 或 iPad app 已经在通用购买中提供了 Mac app，那么您将无法使用在 Mac App Store 中提供 iPhone 或 iPad app 的选项。</li></ul><p>更多内容可查看官方文档：<a href="https://developer.apple.com/cn/macos/iphone-and-ipad-apps/">面向搭载 Apple 芯片的 Mac 的 iPhone 和 iPad app - Apple Developer</a></p><h3 id="3、Restoring-Developer-Transition-Kit（恢复DTK）"><a href="#3、Restoring-Developer-Transition-Kit（恢复DTK）" class="headerlink" title="3、Restoring Developer Transition Kit（恢复DTK）"></a>3、Restoring Developer Transition Kit（恢复DTK）</h3><p>最后，在来说说重装系统的事。</p><p>DTK 的更新需要通过苹果的 <code> Beta Access Utility</code> 应用来更新，如果你在系统偏好设置里取消了 Beta 版本更新，那么需要重新下载安装 <a href="https://developer.apple.com/services-account/download?path=/WWDC_2020/macOS_10.16_Developer_Beta_Access_Utility/macOSDeveloperBetaAccessUtility.dmg">Beta Access Utility</a> (注：需要符合计划的开发者才能打开)。</p><p>而 DTK 的系统崩溃了，无法启动的话，那么就需要重新安装系统。而 DTK 本身不是成熟的产品，所以，DTK 的恢复模式与现在的 Mac 完全不一样的步骤，因为使用 ARM 架构，所以苹果是把 iOS、iPadOS 的安全引导架构直接搬到了 ARM Mac。具体这样不展开了，大家有兴趣可以看看今年的 WWDC20 有讲解 <a href="https://developer.apple.com/videos/play/wwdc2020/10686/">Explore the new system architecture of Apple silicon Macs - WWDC 2020</a>（视频15分钟开始）。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/59f6de81130947f19f9c077708e6cc46~tplv-k3u1fbpfcp-zoom-1.image" alt="40.png"></p><p>DTK 恢复系统要求：</p><ol><li>需要准备一台正常使用的 macOS Big Sur 系统的 Mac</li><li>下载和安装 Xcode 12.2 Beta 2 和 Apple Configurator 2.13.1</li><li>通过 Universal App Quick Start Program 页面下载 macOS Big Sur beta installer IPSW 文件</li></ol><p>注：苹果的DTK恢复随着beta版本的迭代，要求会生成变化，比如开始只需求准备一台  macOS Catalina 10.15.5 or later的Mac，需要必须是 macOS Big Sur 了。另外苹果提供了一份教程文档：<a href="https://download.developer.apple.com/Documentation/Universal_App_Quick_Start_Program_Resources/Restoring_Developer_Transition_Kit.pdf">Restoring Developer Transition Kit.pdf</a>  (注：需要符合计划的开发者才能打开)。</p><p>DTK 恢复系统步骤：</p><ol><li>Place the DTK in “DFU” mode</li><li>Connect DTK to Host Mac</li><li>Restoring the device</li></ol><p>简单来说，用一台装有 Apple Configurator 2 的 macOS Big Sur 系统的 Mac，通过 Tpye-C 连接 DTK 来恢复。需要注意，首先需要让 DTK 进入 “DFU” 模式，然后需要先关闭 DTK，拨掉 DTK 的电源线，再按住 DTK 的开机键不放，然后重新链接 DTK 电源线，继续按住 DTK 开机键2~3秒再放手。然后用 Type-C 数据线连接 DTK 的 Type-C 接口（靠近 HDMI 接口的那个）。然后打开 Apple Configurator，会显示一个 DFU 的窗口，然后拖拽 IPSW 系统文件到 DFU 窗口中，点击“恢复”就可以了。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79182f2ca4464ab5be577bbbff4d7e8b~tplv-k3u1fbpfcp-zoom-1.image" alt="41.png"></p><p>当然，以上是理论基础，实际的操作，就会遇到各种各样的问题，比如遇到报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The operation couldn’t be completed. (AMRestoreErrorDomain error 10 - Failed to handle message <span class="built_in">type</span> StatusMsg) [AMRestoreErrorDomain – 0xA (10)]</span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d54779621f13480fa5536f9d1489dfe1~tplv-k3u1fbpfcp-zoom-1.image" alt="42.png"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e979f771f789471a88195a02c531e19a~tplv-k3u1fbpfcp-zoom-1.image" alt="43.png"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c1327fc0ba2b46c399f3dc2bfd710ef0~tplv-k3u1fbpfcp-zoom-1.image" alt="44.png"></p><p>这个时候，只能是查看苹果最新的DTK恢复说明文档，在仔细对比一下，用的 beta 软件版本是不是最新了，操作是不是漏掉了等等。</p><p>如果您在更新到 macOS Big Sur 11.0.1 之前抹掉了搭载 Apple M1 芯片的 Mac，您可能无法 <a href="https://support.apple.com/zh-cn/HT204904">通过 macOS 恢复功能重新安装 macOS</a>。系统可能会显示信息“准备更新时出错。未能个性化软件更新。请再试一次。”</p><p>可以使用以下任一解决方案来重新安装 macOS：<a href="https://support.apple.com/zh-cn/HT211983">如果您在搭载 Apple M1 芯片的 Mac 上重新安装 macOS 时收到个性化错误 - Apple 支持</a></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0385d95a1a034f338a61a936017153ec~tplv-k3u1fbpfcp-watermark.image" alt="45.png"></p><p>可以看出，目前 Apple M1 芯片的 Mac 的 macOS 系统刚刚开始适配，所以很多东西并不完美，如果买了 M1 Mac 暂时尽量少折腾吧，让系统升级几个小版本先啊。</p><h3 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h3><p>从 DTK 到 Apple M1 芯片的 Mac，苹果用 “One more thing” 来定义这次 Mac 的变革。从历史来看，苹果应该早几年前就有意识到 ARM 架构的生态，从淘汰32位到64位，从 Swift 到 MacCatalyst, 再到 SwiftUI，从 OpenGL 到 Metal，从 iOS 到 iPadOS，自研 GPU/NPU，苹果一直为 AppleOS（苹果生态）铺路，这一切都是以 iOS 强大的生态系统为基础，而借助苹果强大的系统和工具链，推动全平台生态融合统一并不是一件非常难的事情。</p><p>最后，作为多年的苹果开发者，虽然按苹果规则是不应用公开DTK，但是现在 M1 Mac 发售，所以楼主认为，让大家了解更多的 ARM Mac，一起开发未来的 Mac，也许是苹果现在希望我们做的，感受到苹果生态工具链的统一，应该与苹果的理念不谋而合！</p><p>Mac 的未来，由我们一起开发！一起加油吧！</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a50a0c5d378b461c97f25f6579746110~tplv-k3u1fbpfcp-zoom-1.image" alt="46.png"></p><h3 id="5、参考文章"><a href="#5、参考文章" class="headerlink" title="5、参考文章"></a>5、参考文章</h3><ul><li><a href="https://developer.apple.com/programs/universal/">Universal App Quick Start Program - Apple Developer</a></li><li><a href="https://www.apple.com.cn/newsroom/2020/06/apple-announces-mac-transition-to-apple-silicon/">Apple 宣布 Mac 改用 Apple 芯片 - Apple (中国大陆)</a></li><li><a href="https://developer.apple.com/documentation/apple_silicon">Apple Silicon | Apple Developer Documentation</a></li><li><a href="https://www.apple.com.cn/mac/m1/">Apple M1 芯片 - Apple (中国大陆)</a></li><li><a href="https://support.apple.com/zh-cn/HT211814">搭载 Apple 芯片的 Mac 电脑 - Apple 支持</a></li><li><a href="https://zh.m.wikipedia.org/zh-hans/Apple_Silicon">Apple Silicon - 维基百科</a></li><li><a href="https://zh.m.wikipedia.org/zh-hans/Mac%E5%90%91%E8%8B%B9%E6%9E%9C%E8%8A%AF%E7%89%87%E8%BF%81%E7%A7%BB">Mac向苹果芯片迁移 - 维基百科</a></li><li><a href="https://iosre.com/t/dtk-macos-big-sur-11-beta-10-ios-app/18196">DTK 在 macOS Big Sur 11 beta 10 上无法运行 iOS app 了？- iOSRE</a></li><li><a href="http://magicdian.cn/?p=67">ARM Mac使用技巧 – 有魔法的典</a></li><li><a href="https://sspai.com/post/62092">用 UTM 虚拟机在 iPad 上运行 Windows 和 Linux，拓展生产力新可能 - 少数派</a></li><li><a href="https://github.com/utmapp/UTM">utmapp/UTM: Virtual machines for iOS</a></li><li><a href="https://getutm.app/">UTM</a></li><li><a href="https://www.qemu.org/">QEMU</a></li><li><a href="https://getutm.app/vms/">UTM - VMs</a></li><li><a href="https://www.spice-space.org/download.html">virtual machine using SPICE - Download</a></li><li><a href="https://post.smzdm.com/p/adwneo5z/">果粉的硬核工具：Apple DTK 2020，一台ARM架构的Mac Mini_笔记本电脑_什么值得买</a></li><li><a href="https://www.v2ex.com/t/684712">关于 Apple DTK 申请，到时真的会给一台 Mac mini 吗 - V2EX</a></li><li><a href="https://www.v2ex.com/t/687827">Apple DTK 细节流出 - V2EX</a></li><li><a href="https://www.cnbeta.com/articles/465527.htm">与Intel结缘10年 苹果Mac越来越强 - Apple 苹果 - cnBeta.COM</a></li><li><a href="https://zh.m.wikipedia.org/zh-hans/Developer_Transition_Kit">Developer Transition Kit - 维基百科</a></li><li><a href="https://zh.m.wikipedia.org/wiki/Mac%E5%90%91%E8%8B%B1%E7%89%B9%E5%B0%94%E5%B9%B3%E5%8F%B0%E8%BF%81%E7%A7%BB">Mac向英特尔平台迁移 - 维基百科</a></li><li><a href="https://appleinsider.com/articles/05/06/23/inside_apples_intel_based_dev_transition_kit_photos">Inside Apple’s Intel-based Dev Transition Kit (Photos) | AppleInsider</a></li><li><a href="https://www.macstories.net/stories/this-is-not-a-product-the-apple-developer-transition-kit/">“This Is Not a Product”: The Apple Developer Transition Kit - MacStories</a></li><li><a href="https://www.youtube.com/watch?v=ghdTqnYnFyg">Apple WWDC 2005-The Intel Switch Revealed - YouTube</a></li><li><a href="https://www.youtube.com/watch?v=Inog4syoHho">Apple WWDC 2005 - YouTube</a></li><li><a href="https://apple.fandom.com/wiki/Developer_Transition_Kit">Developer Transition Kit - Apple Wiki</a></li><li><a href="http://news.bbc.co.uk/2/hi/technology/4600442.stm">Apple debuts Intel-powered Macs - BBC</a></li><li><a href="https://github.com/ThatGuySam/doesitarm">ThatGuySam/doesitarm</a></li><li><a href="https://www.bilibili.com/video/BV1SZ4y1G7UE">DTK 苹果芯片 Arm Apple Silicon Mac mini 试玩王者荣耀游戏 - bilibili</a></li><li><a href="https://zhuanlan.zhihu.com/p/151786064">Apple Silicon——未来已来 - 知乎</a></li><li><a href="https://support.apple.com/zh-cn/HT201300">识别 MacBook Pro 机型 - Apple 支持</a></li><li><a href="https://www.ruanyifeng.com/blog/2020/06/cpu-architecture.html">苹果电脑为什么要换 CPU：Intel 与 ARM 的战争 - 阮一峰的网络日志</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2020/10686/">Explore the new system architecture of Apple silicon Macs - WWDC 2020 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/apple_silicon/about_the_rosetta_translation_environment">About the Rosetta Translation Environment | Apple Developer Documentation</a></li><li><a href="https://support.apple.com/zh-cn/HT204904">通过 macOS 恢复功能重新安装 macOS</a></li><li><a href="https://support.apple.com/zh-cn/HT211983">如果您在搭载 Apple M1 芯片的 Mac 上重新安装 macOS 时收到个性化错误 - Apple 支持</a></li><li><a href="https://support.apple.com/zh-cn/HT204904">如何重新安装 macOS - Apple 支持</a></li><li><a href="https://support.apple.com/zh-cn/HT201372">如何创建可引导的 macOS 安装器 - Apple 支持</a></li><li><a href="https://sspai.com/post/61274">为什么 ARM 版 Mac 运行效率很高？ - 少数派</a></li><li><a href="https://developer.apple.com/cn/macos/iphone-and-ipad-apps/">面向搭载 Apple 芯片的 Mac 的 iPhone 和 iPad app - Apple Developer</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Apple 宣布 Mac 采用 Apple 芯片的转移计划&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2020 年 06 月 22 日 &lt;code&gt;WWDC20&lt;/code&gt;（苹果全球开发者大会）苹果宣布将会推出基于 ARM 架构自研处理器的 Mac，未来转向使用 &lt;code&gt;Apple Silicon&lt;/code&gt; 的 Mac。苹果表示：开发者可以轻松将现有的 app 转换为基于 Apple 芯片运行，从而充分利用其强大的技术和性能。此外，开发者将首次可以在不做任何修改的情况下，&lt;strong&gt;直接将其 iOS 和 iPadOS app 带到 Mac 上。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了帮助开发者着手采用 Apple 芯片，Apple 还将推出 &lt;code&gt;Universal App Quick Start&lt;/code&gt; 项目，提供各种文档、论坛支持、测试版 macOS Big Sur 和 Xcode 12，以及限定使用的 &lt;code&gt;Developer Transition Kit&lt;/code&gt; (&lt;code&gt;DTK&lt;/code&gt;)，即基于 Apple A12Z 仿生片上系统 (SoC) 的一款 Mac 开发系统。&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="Mac" scheme="https://ihtcboy.com/tags/Mac/"/>
    
    <category term="DTK" scheme="https://ihtcboy.com/tags/DTK/"/>
    
    <category term="Apple Silicon" scheme="https://ihtcboy.com/tags/Apple-Silicon/"/>
    
    <category term="ARM" scheme="https://ihtcboy.com/tags/ARM/"/>
    
    <category term="M1" scheme="https://ihtcboy.com/tags/M1/"/>
    
  </entry>
  
  <entry>
    <title>Apple Developer 开发者账号申请&amp;实名认证【2020】</title>
    <link href="https://ihtcboy.com/2020/10/12/2020-10-12_AppleDeveloper%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7%E5%92%8C%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81/"/>
    <id>https://ihtcboy.com/2020/10/12/2020-10-12_AppleDeveloper%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7%E5%92%8C%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81/</id>
    <published>2020-10-12T15:29:16.000Z</published>
    <updated>2020-10-13T14:59:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>想当年自己在大学时开通苹果账号可谓一波三拆，最头痛的是没有信用卡！而且是 master 或 visa 的信用卡啊！问了几个银行都不能申请那种“大学生信用卡 ”，最后还是靠朋友父母的信用卡来第一次交费，并且开发者名字与信用卡持有人名字不匹配时，还要联系开发者客服人工审核，然后等待几天账号才生效。一次￥688，也有点痛，因为第一次的经历其实体验非常差的，好再是一年就一次。</p><p>所以在当年开通苹果开发者，最头痛的就是支付方式，而如今，时间来到2020年，苹果的开发者账号申请已经非常的简单的，结合最近一年来，苹果要求的实名认证，还有最新的 Apple Developer  App 内购支付开发者年费，身边的朋友都有很多疑问，咱们一起来看看，你的问题解决了吗！</p><span id="more"></span><h3 id="二、旧账号续费"><a href="#二、旧账号续费" class="headerlink" title="二、旧账号续费"></a>二、旧账号续费</h3><p><strong>如果您是通过 Apple Developer 网站完成的注册，则不支持通过 Apple Developer app 续订会员资格。</strong></p><p>如果你的开发者账号一开始就是在苹果页面申请的，那么就只能继续使用 Apple Developer 网站，点按 “Renew Membership”(续订会员资格) 按钮续费。详细见：<a href="https://developer.apple.com/cn/support/renewal/">开发者计划续订</a></p><p>未来，是否会支持网站端使用支付宝或微信进行续费？可能意义不大了，因为现在新 Apple Developer App 的出现（下文会详细说到）。使用支付宝或微信还要给手续费，<strong>苹果用自家的内购续订订阅它不香吗</strong>！（虽然，我也认为支付宝或者微信更方便，当然，）</p><h3 id="三、身份证实名认证"><a href="#三、身份证实名认证" class="headerlink" title="三、身份证实名认证"></a>三、身份证实名认证</h3><p>苹果邮件《您的开发者计划会员资格要求进行身份验证。》</p><blockquote><p>您好，</p><p>根据当地政策，自 2019 年起，所有本人位于中国大陆或所在组织位于中国大陆的帐户持有人皆需要进行一次性的身份验证。现在，您必须通过该验证才能续订 Apple Developer Program 的会员资格；自 2020 年 7 月 1 日起，无论会员资格何时过期，您都需要通过该验证才能访问您开发者计划的权益。 </p><p>为避免您的开发者计划权益的中断，请在 7 月 1 日前完成验证。 </p></blockquote><p>从2019年10月开始，陆陆续续有开发者出现续费不成功的情况，后面就出现 <strong>身份证实名认证</strong> 的要求。 为什么需要身份证实名认证？有2方面的原因：</p><ul><li>国家部门要求，从事网络活动，实名认证</li><li>打击账号乱用，也就是所谓的“超级签名”证书，需要大量的开发者账号</li></ul><p>那么怎么实名认证呢？</p><p>2019 年 11 月 18 日苹果推出 Apple Developer App，从原来的 <strong>WWDC app</strong> 更名为 <strong>Apple Developer app</strong> </p><p>app 定位：</p><blockquote><p>全年推送由 Apple 专家提供的深度资讯，方便您及时获取最新的开发者新闻、信息丰富的视频和 WWDC 内容等。美国的开发者还可以通过该 app 在 iPhone 或 iPad 上轻松注册 Apple Developer Program，此功能之后会逐步向更多国家和地区开放。此外，您还可以选择自动续订会员资格，轻松地让您的帐户保持在有效状态。</p></blockquote><ul><li>来源：<a href="https://developer.apple.com/cn/news/?id=11182019a">现已推出 Apple Developer App - 新闻 - Apple Developer</a></li></ul><p>苹果将 WWDC app 重命名为 “Apple Developer”，在 iPhone 或 iPad 上轻松注册 Apple Developer Program！所以，实名认证的重任也交给了 <strong>Apple Developer App</strong>！</p><h4 id="3-1-验证身份的准备"><a href="#3-1-验证身份的准备" class="headerlink" title="3.1 验证身份的准备"></a>3.1 验证身份的准备</h4><p>苹果官方的要求 <a href="https://developer.apple.com/cn/support/app-account/#verify">验证身份 - Apple Developer</a>：<br>您需要做好以下准备：</p><ul><li>一台运行 iOS 12.4、iOS 13.1 或更高版本的 iPhone 或者运行 iPadOS 13.1 或更高版本的 iPad，并确保其已启用锁屏密码、触控 ID 或面容 ID。</li><li>启用了 <a href="https://developer.apple.com/cn/support/authentication/">双重认证</a> 的 Apple ID。</li><li>设备上装有最新版本的 <a href="https://apps.apple.com/cn/app/apple-developer/id640199958">Apple Developer app</a>。</li><li>在您的设备上登录 iCloud。*</li></ul><h4 id="3-2-验证身份的流程"><a href="#3-2-验证身份的流程" class="headerlink" title="3.2 验证身份的流程"></a>3.2 验证身份的流程</h4><ol><li>打开 Apple Developer app。</li><li>轻点“帐户”标签页。</li><li>使用与您的申请或 Apple Developer 帐户关联的 Apple ID 登录。</li><li>轻点“验证身份”。</li><li>输入您的名字、姓氏、身份证号和电话号码。请勿输入别名、昵称或公司名称作为您的姓氏或名字，错误地输入您的法定姓名将导致注册审核延误。</li><li>拍摄自拍照：**</li><li>确保您的脸部清楚地显示在取景框内，然后轻点“拍摄”。</li><li>查看您的自拍照以确保照片清晰，然后轻点“确认”。</li><li>检查您提交的信息，然后轻点“继续”。</li></ol><p>注：</p><ul><li> * 您在设备上登录 iCloud 的帐户必须启用双重认证。如果设备运行的是 iOS 12.4，则必须使用注册所用的同一 Apple ID 在设备上登录 iCloud。</li><li>** Apple 只会使用这些信息来验证您的身份和防止欺诈。Apple 可能会安全地与第三方身份验证服务提供商分享这类信息，并会严禁这些提供商将这类信息用于身份验证和防范欺诈以外的用途。Apple 要求，只要不再需要并且法律不要求保留，第三方服务提供商必须立即删除这类信息，以及从中获取的任何信息。如果您希望使用 Apple Developer app 以外的方法进行验证，请 <a href="https://developer.apple.com/contact/">联系 Apple</a>。有关在注册和身份验证时如何使用您的信息的详细信息，请阅读 <a href="https://developer.apple.com/cn/support/privacy/">Apple 的开发者计划和您的隐私</a>。</li></ul><h4 id="3-3-验证身份的坑"><a href="#3-3-验证身份的坑" class="headerlink" title="3.3 验证身份的坑"></a>3.3 验证身份的坑</h4><p>未实名认证的账号，下载 <a href="https://apps.apple.com/cn/app/apple-developer/id640199958">App Store 上的“Apple Developer App”</a> 后，登陆账号后可以看到 “验证您的身份”，说明账号还没有实名认证！</p><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/97a2e652f59b441ead10a2a4fccaa43c~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>然后就会提示验证您的身份：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d548ef9a8fcb445c8e633b8a96521de7~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>输入实名认证的身份信息和电话：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9453a65958254979850c8bddfa9a0b0e~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>人脸认识！自拍照（不是录视频）：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca89c82b9d0e4d27974f3d2e4b3bbe8a~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>提交中，等待片刻：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/271ee0e6a1ab46408481929c9a0e48f5~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>然而，你以为强制 “实名认证” 就能让你认证成功吗？<strong>太天真了！</strong></p><p>网上有很多人反馈，实名认证只有一次机会！咱们就试试吧！结果就变成这样：</p><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10c195a2785f4171b2d1902e89a85b85~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>未能验证证件！<br>未能验证证件！！<br><strong>未能验证证件！！！</strong></p><p>这里的坑，应该是只有老账号才遇到，现在新注册的账号都要实名认证才能注册下来（下文会详细说）。这里的办法，就是邮件、电话等方式联系苹果客服，最简单就是点击上图的“联系支持团队”。</p><p>为了追求实事求是的精神，<strong>博主与苹果客服邮件来回的探究，也算是基本摸清套路！</strong></p><h4 id="3-4-验证身份的坑-—-解答"><a href="#3-4-验证身份的坑-—-解答" class="headerlink" title="3.4 验证身份的坑 — 解答"></a>3.4 验证身份的坑 — 解答</h4><h5 id="3-4-1-“未能验证证件”-是什么原因？要怎么处理？"><a href="#3-4-1-“未能验证证件”-是什么原因？要怎么处理？" class="headerlink" title="3.4.1 “未能验证证件” 是什么原因？要怎么处理？"></a>3.4.1 “未能验证证件” 是什么原因？要怎么处理？</h5><p><strong>苹果回复</strong>：</p><blockquote><p>您收到的错误信息表明，您使用 Apple Developer App 提交的个人身份信息存在问题。请<a href="https://developer.apple.com/cn/support/identity-verification/" title="https://developer.apple.com/cn/support/identity-verification/">查看我们的个人身份验证要求</a>，然后重新提交您的个人信息。</p><p>重新提交时，请注意以下事项：</p><p>• 请勿使用共用设备。<br>• 仅输入您自己的<a href="https://developer.apple.com/cn/support/app-account/#verify" title="https://developer.apple.com/cn/support/app-account/#verify">个人信息</a>。<br>• 请仔细查看 App 内说明，以确保您输入的所有个人信息准确有效。</p><p>如果有相关的错误提示，请告知具体的错误提示，或使用截图的方式让我们知晓。</p><p>您可以选择回复此封邮件或者通过以下链接预约我们的电话：</p><p><a href="https://developer.apple.com/contact/">https://developer.apple.com/contact/</a></p><p>我们的办公时间是北京时间周一至周五，09:00 至 17:00。</p><p>感谢您对 Apple Developer Program 的支持。</p></blockquote><p><strong>结果</strong>：结果苹果客服又重置了一次，在 Apple Developer app 里，又可以重新认证一次，结果不出意外，还是未能验证证件！未能验证证件！！</p><p><strong>分析</strong>：很明显，我们填写的信息肯定正确，不太可能是名字拼写或者信息错误吧！所以，我看到了 <strong>请勿使用共用设备</strong>，所以，我是怀疑，<strong>一个开发者账号最好是单独一台设备上实名认证</strong>，为了求证，我又联系了客服！</p><h5 id="3-4-2-实名认证失败的原因？"><a href="#3-4-2-实名认证失败的原因？" class="headerlink" title="3.4.2 实名认证失败的原因？"></a>3.4.2 实名认证失败的原因？</h5><p><strong>苹果回复</strong>：</p><blockquote><p>我们必须先确认您满足以下两个条件，然后才能为您提供进一步协助：</p><p>• 您使用这个 App 验证的是您自己的身份。<br>• 您以前不曾使用另一个 Apple ID 在 Apple Developer App 中验证过身份。</p><p>如果您正在尝试代表另一位开发者验证身份，或者您已使用另一个 Apple ID 完成了身份验证，请<a href="https://developer.apple.com/contact/" title="https://developer.apple.com/contact/">给我们打电话</a>，以了解更多信息。</p><p>如果不满足上述两个条件，请向我们提供以下文件，以便我们验证您的身份：</p><p>• 您的居民身份证（正反面）<br>• 手持居民身份证的清晰自拍照</p><p>您可以通过以下链接将文件安全地上传给我们：<a href="https://developer.apple.com/contact/file-upload/?teamId=xxxxx">https://developer.apple.com/contact/file-upload/?teamId=xxxx</a></p><p>上传您的文件后，请回复这封电子邮件。请在您的回复中包含下列信息：</p><p>• 您的名字和姓氏（罗马字符）<br>• 您的中国大陆电话号码 (+86)</p><p>我们将在收到所有请求的信息后继续处理您的请求。</p></blockquote><p><strong>结果</strong>：还是失败，再次联系时，客服给我的邮件模版改为了这样：</p><blockquote><p>请在上传文件后回复本电子邮件。在您的回复中，包括：</p><p>• 您的名字和姓氏（拼音或英文字符）<br>• 您的中国大陆电话号码 (+86)<br>• 设备 SEID（可在“设置”“通用”“关于本机”“SEID”中找到）</p></blockquote><p><strong>分析</strong>：很明显！ SEID，SEID 是苹果手机近场通信NFC的系列号，NFC唯一识别码，Security environment identifier 安全环境标识。NFC唯一识别码NFC是近场通信技术。具体，这个标识设备的目的是为什么？不得而知，了解的朋友，可以在评论区说说啊~</p><p>至此，知道了一个设备只能验证一个账号后，换一个新手机验证身份，最终就通过了！</p><h5 id="3-4-3-一个身份证只能认证一个帐号吗？"><a href="#3-4-3-一个身份证只能认证一个帐号吗？" class="headerlink" title="3.4.3 一个身份证只能认证一个帐号吗？"></a>3.4.3 一个身份证只能认证一个帐号吗？</h5><p>最后，还有一个问题，就是一个身份证只能验证一个开发者账号吗?</p><p>从上面也可以知道，苹果的意思是的，但是一定必须是吗？ 我与客服电话沟通时，得到的答案是，不一定，但是可能需要特殊说明原因，反正就是关联客服就是了。</p><p>标准答案是什么？ <strong>一个身份证可以认证多个开发者帐号</strong>，具体，大家如果认证过程失败，可以关联客服解决！因为，当时博主就举了一个例子，一个法人可能拥有多间公司或组织，所以，一个身份证认证多个开发者帐号是没有问题的，正当使用途径的朋友不用担心！</p><blockquote><p>如果您正在尝试代表另一位开发者验证身份，或者您已使用另一个 Apple ID 完成了身份验证，请<a href="https://developer.apple.com/contact/" title="https://developer.apple.com/contact/">给我们打电话</a>，以了解更多信息。</p></blockquote><h3 id="四、新-Apple-Developer-App"><a href="#四、新-Apple-Developer-App" class="headerlink" title="四、新 Apple Developer App"></a>四、新 Apple Developer App</h3><p>而就在2019年 12月17日，苹果宣布：</p><blockquote><p>位于中国大陆的开发者现在可以通过 Apple Developer app 更加轻松地注册 Apple Developer Program，并在 iPhone 或 iPad 上使用当地付款方式购买会员资格。现在会员资格更提供自动续订，轻松地让您的帐户保持在有效状态。</p><p>此外，根据当地政策，为了提高开发者和客户的安全性，所有本人位于中国大陆或所在组织位于中国大陆的现任帐户持有人现皆需要进行一次性的身份验证，才能更新会员资格。帐户持有人可通过 Apple Developer app 验证其身份。</p></blockquote><p>官方公告详细：<a href="https://developer.apple.com/cn/news/?id=12172019b">针对中国大陆的 Apple Developer App 更新 - Apple Developer</a></p><p>从此！Apple Developer 应用程序现在支持在中国大陆的注册，<strong>允许开发人员使用iPhne或iPad上的本地付款方式进行其会员购买</strong>。而且由于会员是作为可自动续订的订阅提供的，因此保持您的帐户有效很容易，也不用担心账号过期的问题~</p><h4 id="4-1-下载-Apple-Developer-App"><a href="#4-1-下载-Apple-Developer-App" class="headerlink" title="4.1 下载 Apple Developer  App"></a>4.1 下载 Apple Developer  App</h4><p>首先需要下载 Developer App </p><ul><li>下载地址：<a href="https://apps.apple.com/cn/app/apple-developer/id640199958">App Store 上的“Apple Developer”</a></li></ul><table><thead><tr><th>2019 WWDC app</th><th>2019 Apple Developer  app</th><th>2020 Apple Developer  app</th></tr></thead><tbody><tr><td><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9700e089aedd42d0bd8aedfba4eb8e5c~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></td><td><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe683fe02dc54863a5cad6a681682fab~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></td><td><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e722b2c91cfa40649ca2143b53ca3471~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></td></tr></tbody></table><p>关于 Apple Developer  App 定位之前已经提到过：</p><blockquote><p>全年推送由 Apple 专家提供的深度资讯，方便您及时获取最新的开发者新闻、信息丰富的视频和 WWDC 内容等。美国的开发者还可以通过该 app 在 iPhone 或 iPad 上轻松注册 Apple Developer Program，此功能之后会逐步向更多国家和地区开放。此外，您还可以选择自动续订会员资格，轻松地让您的帐户保持在有效状态。</p></blockquote><p>未来，苹果会开放给全世界国家和地区的开发者，到时候一个 Apple Developer  App 就能解决很多问题，这也是我们希望看到的，苹果更加注重开发者体验！</p><blockquote><p><strong>面向英国和爱尔兰的 Apple Developer app 更新</strong><br>2020 年 10 月 08 日<br>现在，位于英国和爱尔兰的开发者能更轻松地进行 Apple Developer Program 注册了。Apple Developer app 现已支持以上地区的开发者计划注册流程；开发者还能在 iPhone 或 iPad 上，以本地付款方式进行并完成其会员资格的付款流程。此外，会员资格将默认提供自动续订，让您轻松保持会籍的活跃状态。</p></blockquote><ul><li><a href="https://developer.apple.com/cn/news/?id=ac1va5jx">面向英国和爱尔兰的 Apple Developer app 更新 - 新闻 - Apple Developer</a></li></ul><h3 id="五、新账号申请流程（Apple-Developer-App）"><a href="#五、新账号申请流程（Apple-Developer-App）" class="headerlink" title="五、新账号申请流程（Apple Developer  App）"></a>五、新账号申请流程（Apple Developer  App）</h3><h4 id="5-1-打开-Apple-Developer-App"><a href="#5-1-打开-Apple-Developer-App" class="headerlink" title="5.1 打开 Apple Developer  App"></a>5.1 打开 Apple Developer  App</h4><p>需要准备的内容：</p><ul><li>  一台运行 iOS 12.4 或更高版本的 iPhone 或者运行 iPadOS 13.1 或更高版本的 iPad，并确保其已启用锁屏密码、触控 ID 或面容 ID。</li><li>  启用了<a href="https://developer.apple.com/cn/support/authentication/">双重认证</a>的 Apple ID。</li><li>  最新版本的 <a href="https://apps.apple.com/app/id640199958?pt=2003&ct=da_support&mt=8">Apple Developer app</a>。</li><li>  在您的设备上登录 iCloud。*</li></ul><h4 id="5-2-切换到账户标签"><a href="#5-2-切换到账户标签" class="headerlink" title="5.2 切换到账户标签"></a>5.2 切换到账户标签</h4><p>然后登陆苹果账号</p><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dac7879b53e54336b92c8dd205ec2eb0~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-3-注册所需准备内容"><a href="#5-3-注册所需准备内容" class="headerlink" title="5.3 注册所需准备内容"></a>5.3 注册所需准备内容</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/362196dc26d841b28173030c5ee2388d~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>全员权益介绍（第一次详细的知道开发者还有这么多权限！）：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e701f9db104b4003a020e70d1fcc5592~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-4-输入详细个人信息"><a href="#5-4-输入详细个人信息" class="headerlink" title="5.4 输入详细个人信息"></a>5.4 输入详细个人信息</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/45346718cece406aa3871299b10b4a74~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-5-拍摄自拍照（实名）"><a href="#5-5-拍摄自拍照（实名）" class="headerlink" title="5.5 拍摄自拍照（实名）"></a>5.5 拍摄自拍照（实名）</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6b2866ba0131495b9380231cd3b5b2a1~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>注意下面小字，提供的照片向第三方服务来做验证，不知道是那个第三方呢？</p><p>然后等待：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c820f0ce1c4d40adba0166a3a2f545ef~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-6-完成详细的法人档案"><a href="#5-6-完成详细的法人档案" class="headerlink" title="5.6 完成详细的法人档案"></a>5.6 完成详细的法人档案</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/45f5093e38b8441b91fad462391ea97f~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-7-选择账号类型"><a href="#5-7-选择账号类型" class="headerlink" title="5.7 选择账号类型"></a>5.7 选择账号类型</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d1d3b397f494587978a8e498f3e678b~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-8-同意协议"><a href="#5-8-同意协议" class="headerlink" title="5.8 同意协议"></a>5.8 同意协议</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/39a6d207facd4ec6bdff5bab2f5e3cc5~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-9-账号功能和付费"><a href="#5-9-账号功能和付费" class="headerlink" title="5.9 账号功能和付费"></a>5.9 账号功能和付费</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e4e2b66efe549be93aaf8481e708cab~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>详细权益：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be328869470b4fd082580f066159954e~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-10-使用应用内购买（IAP）支付"><a href="#5-10-使用应用内购买（IAP）支付" class="headerlink" title="5.10 使用应用内购买（IAP）支付"></a>5.10 使用应用内购买（IAP）支付</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b3c01fddd8544699f5f1fa0729f3ea8~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="5-11-完成注册和付费"><a href="#5-11-完成注册和付费" class="headerlink" title="5.11 完成注册和付费"></a>5.11 完成注册和付费</h4><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71b20f5b32e940cc936e3a05e70df5b7~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>通过简单的10步，就能完成一个开发者账号的开通，Apple Developer  App 的能力把注册流程简化到极致，对于新手 Apple 开发者来说，这是一个好消息！当然，针对公司或企业开发者账号就要复杂一些，在这里就不在提了，大家动手试试，有不懂的电话给苹果客服，没有解决不了的问题~</p><h3 id="六、其它账号答疑"><a href="#六、其它账号答疑" class="headerlink" title="六、其它账号答疑"></a>六、其它账号答疑</h3><h4 id="6-1-取消订阅"><a href="#6-1-取消订阅" class="headerlink" title="6.1 取消订阅"></a>6.1 取消订阅</h4><ul><li>方法一：<br>邮件收到订阅的确认，可以点击“查看您的订阅”，来取消订阅：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2fa6ab3dc48c4fdfbb2fc00f95f379cb~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></li></ul><p>点击后会跳转到 AppStore App 的订阅详细页面，点击取消订阅就好：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fa4cc4e8848e4055802fab053a3d66f9~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><ul><li>方法二：<br>在 AppStore App 的个人账户页面点击“订阅”：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/441ea6ef69604239a1b2437b9c7e038e~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></li></ul><p>点击订阅的 App：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0db8927392334aa5b28b4a584ae04ce5~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>然后点击对应的App，在详细页面里的“取消订阅”按钮就会提示：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a6eb3512664f4027a7d2c60568edb772~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>成功时：<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/af68bc0ff3b243e2a7669d62789aef0c~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><p>重新订阅<br>如果想续订，点击选项“1年”，就可以重新订阅<br><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/93778f4111084dac82c0ff3c64aae1ea~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><h4 id="6-2-可以不用交年费吗？"><a href="#6-2-可以不用交年费吗？" class="headerlink" title="6.2 可以不用交年费吗？"></a>6.2 可以不用交年费吗？</h4><p>Apple Developer Program 会员资格费用豁免</p><blockquote><p>符合条件的组织可免费加入 Apple Developer Program。计划在 App Store 上仅发布免费 app 并位于获准国家的非营利组织、获认可的教育机构和政府部门可以申请豁免年度会费。</p></blockquote><h5 id="6-2-1-资格"><a href="#6-2-1-资格" class="headerlink" title="6.2.1 资格"></a>6.2.1 资格</h5><ul><li>非营利组织</li><li>被认可的教育机构</li><li>被认可的政府机构</li></ul><p><strong>位于获准国家的非营利组织、被认可的教育机构和政府机构</strong>，如计划在 App Store 上仅发布免费 app，则可申请豁免其 Apple Developer Program 会员资格年费。Apple 将审核您的请求，并会联系您以告知请求是否获批。</p><ul><li>获准国家或地区：澳大利亚、巴西、加拿大、中国大陆、法国、德国、以色列、意大利、日本、韩国、墨西哥、英国以及美国。</li></ul><h5 id="6-2-2-不能豁免的情况"><a href="#6-2-2-不能豁免的情况" class="headerlink" title="6.2.2 不能豁免的情况"></a>6.2.2 不能豁免的情况</h5><p>Apple 会审核所有会费豁免请求。在会费豁免请求获批后，如果您在 App Store 上分发付费 app 或含有 App 内购买项目的 app，则您需要支付 99 美元的年度会费。</p><p><strong>会费豁免不适用于</strong>：</p><ul><li>在 App Store 上分发付费 app 或所分发的 app 中含有 App 内购买项目的组织</li><li>Apple Developer Enterprise Program 会员</li><li>个人和独资企业/一人公司</li></ul><p>详细：<a href="https://developer.apple.com/cn/support/membership-fee-waiver/">Apple Developer Program 会员资格费用豁免 - Apple Developer</a></p><h3 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h3><h4 id="7-1-苹果的改变"><a href="#7-1-苹果的改变" class="headerlink" title="7.1 苹果的改变"></a>7.1 苹果的改变</h4><p>说起苹果，当年很多人认为苹果不会针对中国区做出改变，更加不会有特殊化的处理，比如游戏的出版物号！大家觉得中国市场的遵守，苹果审核人员要单独针对中国地区的游戏做审核？？？ 现在就变成这样了：</p><p><img src="//p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cd2936e98f94454bde41ad16ed4dfa5~tplv-k3u1fbpfcp-zoom-1.image" alt="image.png"></p><blockquote><p><strong>在中国大陆的供应情况</strong></p><p>根据中国法律，游戏需获得<a href="http://www.nppa.gov.cn/nppa/contents/329/46004.shtml">中国国家新闻出版署</a>的网络游戏出版物号。如果您提供或计划提供付费游戏或包含 App 内购买项目的游戏，请提供网络游戏出版物号和相关证明文件，以确保您的 App 能够在中国大陆 App Store 中供应。</p></blockquote><h4 id="7-2-苹果的不变"><a href="#7-2-苹果的不变" class="headerlink" title="7.2 苹果的不变"></a>7.2 苹果的不变</h4><p>苹果采用 Apple 芯片的 Mac 的 <code>Universal App Quick Start Program</code> 计划会员，我在支付费用时，是可以选择用“支付宝” 或“微信”支付。</p><p>在苹果商店或者官网购买，本质就是 <strong>Apple Store</strong>，现在其实是支持使用“支付宝” 或“微信”支付的，对于开发者账号续费理论上应该支持，但是用应用内购支付，也许更加，大家可以会笑问：“苹果自家的内购服务，是不是也3/7分成！” </p><h4 id="7-3-最后的开始"><a href="#7-3-最后的开始" class="headerlink" title="7.3 最后的开始"></a>7.3 最后的开始</h4><p>所以，苹果在中国的改变，大家有目共睹的，越来越多的文档翻译成中文，第一时间的 WWDC 视频有中文字幕，<a href="https://developer.apple.com/cn/news/?id=zzqb4otp">WWDC20 视频现已提供简体中文字幕- Apple Developer</a>。希望苹果少给开发者坑，反面的例子就是微软了吧，最后，希望中国的Apple开发者越来越多，苹果对中国区开发者的关爱也越来越多，Apple 全家桶（ Apple Mac/ iPhone / iPad / Watch / TV ），一个强大的生态渐渐到来！</p><h3 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h3><ul><li><a href="https://developer.apple.com/cn/support/renewal/">开发者计划续订 - 支持 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/support/app-account/">使用 Apple Developer App 注册和管理您的帐户 - 支持 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=11182019a">现已推出 Apple Developer App - 新闻 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/support/identity-verification/">身份验证 - 支持 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/support/authentication/">双重认证</a></li><li><a href="https://developer.apple.com/cn/support/membership-fee-waiver/">Apple Developer Program 会员资格费用豁免 - 支持 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=ac1va5jx">面向英国和爱尔兰的 Apple Developer app 更新 - 新闻 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=12172019b">针对中国大陆的 Apple Developer App 更新 - 新闻 - Apple Developer</a></li><li><a href="https://developer.apple.com/cn/news/?id=ac1va5jx">面向英国和爱尔兰的 Apple Developer app 更新 - 新闻 - Apple Developer</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;想当年自己在大学时开通苹果账号可谓一波三拆，最头痛的是没有信用卡！而且是 master 或 visa 的信用卡啊！问了几个银行都不能申请那种“大学生信用卡 ”，最后还是靠朋友父母的信用卡来第一次交费，并且开发者名字与信用卡持有人名字不匹配时，还要联系开发者客服人工审核，然后等待几天账号才生效。一次￥688，也有点痛，因为第一次的经历其实体验非常差的，好再是一年就一次。&lt;/p&gt;
&lt;p&gt;所以在当年开通苹果开发者，最头痛的就是支付方式，而如今，时间来到2020年，苹果的开发者账号申请已经非常的简单的，结合最近一年来，苹果要求的实名认证，还有最新的 Apple Developer  App 内购支付开发者年费，身边的朋友都有很多疑问，咱们一起来看看，你的问题解决了吗！&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="Apple Developer" scheme="https://ihtcboy.com/tags/Apple-Developer/"/>
    
    <category term="iOS Developer" scheme="https://ihtcboy.com/tags/iOS-Developer/"/>
    
    <category term="苹果实名认证" scheme="https://ihtcboy.com/tags/%E8%8B%B9%E6%9E%9C%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式知识总结</title>
    <link href="https://ihtcboy.com/2020/10/02/2020-10-02_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>https://ihtcboy.com/2020/10/02/2020-10-02_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</id>
    <published>2020-10-02T07:49:16.000Z</published>
    <updated>2020-10-09T15:09:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><p>正则表达式，如果有一定编程经验的同学，一定知道，可能你知道，但又说不出个所以然来，平时不经常使用，很容易就忘记，有一部分原因，我认为是总结的内容，不够简单和深刻。所以，自己尝试总结一下正则表达式的基础知识点，对于大部分的编程场景应该足够使用啦。另外，也希望通过总结，以便后续忘记时，能快速的记忆起来，这就是本文章的主要内容。</p><span id="more"></span><h3 id="2、正则表达式"><a href="#2、正则表达式" class="headerlink" title="2、正则表达式"></a>2、正则表达式</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/10/RegularExpression.png" alt="RegularExpression.png"></p><h4 id="匹配字符集"><a href="#匹配字符集" class="headerlink" title="匹配字符集"></a>匹配字符集</h4><table><thead><tr><th>语法</th><th>匹配</th><th>示例</th></tr></thead><tbody><tr><td><code>.</code></td><td>匹配任意字符（除了<code>\n</code>）</td><td>表达式：<code>.</code> 匹配任意一个字符</td></tr><tr><td><code>[...]</code></td><td>匹配字符集(<code>...</code> 表示任意字符)</td><td>表达式:<code>[a-zA-Z]</code> 匹配任意一个小写或大写的字母。<br>表达式:<code>[iHTC]</code> 匹配 “i”, “H”, “T” 和 “C”。<br>表达式:<code>[e-k]</code> 匹配 “e” 到 “k” 之间的字符。</td></tr><tr><td><code>\d</code></td><td>匹配数字</td><td>表达式：<code>a\d</code>，匹配字符串 “aaa123” 中的 <strong>a1</strong> 。<br>表达式：<code>a.\d</code>，匹配字符串 “aaa123” 中的 <strong>aa1</strong> 。</td></tr><tr><td><code>\D</code></td><td>匹配非数字</td><td>表达式：<code>a.\D</code>，匹配字符串 “aaa123” 中的 <strong>aaa</strong> 。</td></tr><tr><td><code>\s</code></td><td>匹配空白字符（包括空格、制表符、换页符等空白字符，<code>[ \t\n\r\f]</code>）</td><td>表达式：<code>a.\s</code>，匹配字符串 “aaa 123” 中的 <code>aa </code>（最后是空格） 。</td></tr><tr><td><code>\S</code></td><td>匹配非空白字符</td><td>表达式：<code>a.\S</code>，匹配字符串 “aaa 123” 中的 <strong>aaa</strong> 。</td></tr><tr><td><code>\w</code></td><td>匹配单词字符（[a-zA-Z0-9_]和汉字）</td><td>表达式：<code>a.\w</code>，匹配字符串 “aaa 123” 中的 <strong>aaa</strong> 。</td></tr><tr><td><code>\W</code></td><td>匹配非单词字符</td><td>表达式：<code>a.\W</code>，匹配字符串 “aaa 123” 中的 <code>aa </code>（最后是空格） 。</td></tr><tr><td><code>\</code></td><td>转义字符</td><td><code>\r</code>, <code>\n</code> 代表回车和换行符; <code>\t</code> 制表符; <code>\\</code> 代表 “&quot; 本身; <code>\^</code> 匹配 ^ 符号本身; <code>\$</code> 匹配 $ 符号本身; <code>\.</code> 匹配小数点（.）本身。</td></tr></tbody></table><h4 id="匹配量词（Quantifier）"><a href="#匹配量词（Quantifier）" class="headerlink" title="匹配量词（Quantifier）"></a>匹配量词（Quantifier）</h4><table><thead><tr><th>语法</th><th>匹配</th><th>示例</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配表达式出现 0次或者无限次，相当于 {0,}</td><td>表达式：<code>a*</code>，匹配字符串 “aaa123” 中的 <strong>aaa</strong> 。</td></tr><tr><td><code>+</code></td><td>匹配表达式至少出现 1次或者无限次，相当于 {1,}</td><td>表达式：<code>a+</code>，匹配字符串 “aaa123” 中的 <strong>aaa</strong> 。</td></tr><tr><td><code>?</code></td><td>匹配表达式 0次或者 1次，相当于 {0,1}</td><td>表达式：<code>a?</code>，匹配字符串 “aaa123” 中的 <strong>a</strong> 。</td></tr><tr><td><code>&#123;m,n&#125;</code></td><td>匹配表达式至少重复 m 次，最多重复 n 次</td><td>表达式：<code>a&#123;1,2&#125;</code>，匹配字符串 “aaa123” 中的 <strong>aa</strong> 。</td></tr><tr><td><code>&#123;m&#125;</code></td><td>匹配表达式重复 m 次</td><td>表达式：<code>a&#123;3&#125;</code>，匹配字符串 “aaa123” 中的 <strong>aaa</strong> 。</td></tr><tr><td><code>&#123;m,&#125;</code></td><td>匹配表达式至少重复 m 次</td><td>表达式：<code>a&#123;1,&#125;</code>，匹配字符串 “aaa123” 中的 <strong>aaa</strong> 。</td></tr><tr><td><code>*?</code></td><td>匹配模式变为非贪婪（尽可能少匹配字符），匹配表达式可以为 0次，也可以是无限次</td><td>表达式：<code>a[0-9]*?23&#39;</code>，匹配字符串 “aaa123” 中的 <strong>a123</strong> 。<br>如果匹配字符串 “aaa23” 则为 <strong>a23</strong> 。<br>如果匹配字符串 “aaa456123” 则为 <strong>a456123</strong> 。</td></tr><tr><td><code>+?</code></td><td>匹配模式变为非贪婪（尽可能少匹配字符），匹配表达式至少 1次，也可以是无限次</td><td>表达式：<code>a[0-9]+?23</code>，匹配字符串 “aaa123” 中的 <strong>a123</strong> 。<br>如果匹配字符串 “aaa23” 则匹配失败 。<br>如果匹配字符串 “aaa456123” 则为 <strong>a456123</strong> 。</td></tr><tr><td><code>??</code></td><td>匹配模式变为非贪婪（尽可能少匹配字符），匹配表达式最多 1次，也可以是 0次</td><td>表达式：<code>a[0-9]??23</code>，匹配字符串 “aaa123” 中的 <strong>a123</strong> 。<br>如果匹配字符串 “aaa23” 则为 <strong>a23</strong> 。<br>如果匹配字符串 “aaa456123” 则匹配失败。</td></tr><tr><td><code>&#123;m,n&#125;?</code></td><td>非贪婪模式，匹配符合的最短的字符串</td><td>表达式：<code>a[0-9]&#123;1,4&#125;?23</code>，匹配字符串 “aaa123” 中的 <strong>a123</strong> 。<br>如果匹配字符串 “aaa23” 则匹配失败 。<br>如果匹配字符串 “aaa456123” 则为 <strong>a456123</strong></td></tr></tbody></table><h4 id="匹配边界"><a href="#匹配边界" class="headerlink" title="匹配边界"></a>匹配边界</h4><table><thead><tr><th>语法</th><th>匹配</th><th>示例</th></tr></thead><tbody><tr><td><code>^</code></td><td>匹配字符串开头</td><td>表达式：<code>^\d</code> 表示必须以数字开头。<br>表达式：<code>[^abc]</code> 匹配 <code>a</code>, <code>b</code>, <code>c</code> 之外的任意一个字符。</td></tr><tr><td><code>$</code></td><td>匹配字符串结尾</td><td>表达式：<code>*.com$</code> 匹配 .com 结尾的字符串。<br> <code>\d$</code>表示必须以数字结束。</td></tr><tr><td><code>\A</code></td><td>指定的字符串匹必须出现在开头</td><td>表达式：<code>\Aa</code>，匹配字符串 “aaa123” 中的 <strong>a</strong> 。</td></tr><tr><td><code>\Z</code></td><td>指定的字符串匹必须出现在结尾。如果是存在换行，只匹配到换行前的结束字符串。</td><td>表达式：<code>\d\Z</code>，匹配字符串 “aaa123” 中的 <strong>3</strong> 。</td></tr><tr><td><code>\b</code></td><td>匹配一个单词边界，但只在单词开始或结尾的位置，即匹配 <code>\w</code> 和 <code>\W </code> 之间。（本身不匹配任何字符）</td><td>表达式：<code>\b4</code>，匹配字符串 “aaa123 456” 中的 <strong>4</strong> 。<br>表达式：<code>\b5</code>，匹配字符串 “aaa123 456” 则为失败。</td></tr><tr><td><code>\B</code></td><td>匹配非单词边界，但不能在词的开头或者结尾，即匹配 <code>[^\b]</code> 。（本身不匹配任何字符）</td><td>表达式：<code>\B4</code>，匹配字符串 “aaa123 456” 则为失败。<br>表达式：<code>\B5</code>，匹配字符串 “aaa123 456” 中的 <strong>5</strong> 。</td></tr></tbody></table><h4 id="匹配条件分组"><a href="#匹配条件分组" class="headerlink" title="匹配条件分组"></a>匹配条件分组</h4><table><thead><tr><th>语法</th><th>匹配</th><th>示例</th></tr></thead><tbody><tr><td><code>⎮</code></td><td>或关系，匹配左右任意一个表达式</td><td>表达式：<code>a⎮b</code>，匹配字符串 “aaa123” 中的 <strong>a</strong> 。</td></tr><tr><td><code>(ab)</code></td><td>括号中表达式作为一个分组</td><td>表达式：<code>(a1)</code>，匹配字符串 “aaa123” 中的 <strong>a1</strong> 。<br>表达式：<code>(P⎮p)ython</code>，可以匹配 <strong>Python</strong> 或者 <strong>python</strong>。</td></tr><tr><td><code>(?:exp)</code></td><td>表示非捕获分组，匹配 pattern 但不获取匹配结果。</td><td>表达式：<code>([a-z]*)([0-9]*)([a-z]*)</code>，匹配字符串 <code>&quot;aaa123def456&quot;</code> 中的 <strong>‘aaa’, ‘123’, ‘def’</strong> 。<br>表达式：<code>(?:[a-z]*)([0-9]*)([a-z]*)</code>，匹配字符串 “aaa123def456” 中的 <strong>‘123’, ‘def’</strong> 。</td></tr><tr><td><code>\&lt;number&gt;</code></td><td>引用编号为 number 的分组(规则)匹配到的字符串</td><td>表达式：<code>(\d)def\1</code>，匹配字符串 “aaa123def321” 中的 <strong>3def3</strong> 。</td></tr><tr><td><code>(?P&lt;name&gt;)</code></td><td>给分组起一个别名 name</td><td>表达式：<code>(?P&lt;tag&gt;\d)def(?P=tag)</code>，匹配字符串 “aaa123def321” 中的 <strong>3def3</strong> 。</td></tr><tr><td><code>(?P=name)</code></td><td>引用别名为 name 的分组匹配字符串</td><td>表达式：<code>&lt;(?P&lt;tag&gt;\w*)&gt;.*&lt;/(?P=tag)&gt;</code>，匹配字符串 <code>&lt;html&gt;&lt;h1&gt;www.iHTCboy.com&lt;/h1&gt;&lt;html&gt;</code> 中的 <code>&lt;h1&gt;www.iHTCboy.com&lt;/h1&gt;</code> 。</td></tr></tbody></table><h4 id="预搜索"><a href="#预搜索" class="headerlink" title="预搜索"></a>预搜索</h4><table><thead><tr><th>语法</th><th>匹配</th><th>示例</th></tr></thead><tbody><tr><td><code>(?=exp)</code></td><td>断言自身出现的位置的后面能匹配表达式 exp，exp1(?=exp2)：查找 exp2 前面的 exp1。</td><td>表达式：<code>Windows(?=7)</code> 能匹配<strong>Windows7</strong> 中的 “Windows”，但不能匹配 <strong>Windows10</strong> 中的“Windows”。</td></tr><tr><td><code>(?!exp)</code></td><td>断言自身出现的位置的后面不能匹配表达式 exp，exp1(?!exp2)：查找后面不是 exp2 的 exp1。</td><td>表达式：<em>Windows(?!7)</em>  能匹配<strong>Windows10</strong> 中的“Windows”，但不能匹配 <strong>Windows7</strong> 中的“Windows”。</td></tr><tr><td><code>(?&lt;=exp)</code></td><td>断言自身出现的位置的前面能匹配表达式 exp，(?&lt;=exp2)exp1：查找 exp2 后面的 exp1。</td><td>表达式：<code>(?&lt;=7)Windows</code> 能匹配 <strong>7Windows</strong> 中的“Windows”，但不能匹配 <strong>10Windows</strong> 中的“Windows”。</td></tr><tr><td><code>(?&lt;!exp)</code></td><td>断言自身出现的位置的前面不能匹配表达式 exp，(?&lt;!=exp2)exp1：查找前面不是 exp2 的 exp1。</td><td>表达式：<code>(?&lt;!7)Windows</code> 能匹配 <strong>10Windows</strong> 中的“Windows”，但不能匹配 <strong>7Windows</strong> 中的“Windows”。</td></tr></tbody></table><blockquote><p>exp ：expression（表达式）</p></blockquote><h4 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h4><table><thead><tr><th>类型</th><th>模式</th><th>说明</th></tr></thead><tbody><tr><td><code>IGNORECASE</code></td><td>忽略大小写模式</td><td>匹配时忽略大小写。（正则默认是区分大小写的）</td></tr><tr><td><code>SINGLELINE</code></td><td>单行模式</td><td>整个文本看作一个字符串，只有一个开头一个结尾</td></tr><tr><td><code>MULTILINE</code></td><td>多行模式</td><td>每行都是一个字符串。在多行模式下，如果需要仅匹配字符串开始和结束位置，可以使用 \A 和 \Z</td></tr></tbody></table><h3 id="3、Python-正则表达式"><a href="#3、Python-正则表达式" class="headerlink" title="3、Python 正则表达式"></a>3、Python 正则表达式</h3><p>如果使用编辑语言来执行正则表达式呢？所有语言都是相通的，这是记录了之前使用 Python 的 re 模块做正则匹配的功能。</p><h4 id="compile-和-match-函数"><a href="#compile-和-match-函数" class="headerlink" title="compile 和 match 函数"></a>compile 和 match 函数</h4><p><code>re.compile</code> 函数用于编译正则表达式，生成一个正则表达式（ Pattern ）对象，供 match()、search() 等函数使用。<br><code>re.match</code> 尝试从字符串的起始位置匹配一个模式，如果字符串开始不符合正则表达式，就返回 None 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = re.match(pattern, string)</span><br></pre></td></tr></table></figure><p>等价于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">prog = re.compile(pattern)</span><br><span class="line">result = prog.match(string)</span><br></pre></td></tr></table></figure><blockquote><p>注：如果需要多次使用这个正则表达式的话，使用 <code>re.compile()</code> 保存这个正则对象以便复用匹配多个字符串，可以让程序更加高效。</p></blockquote><h4 id="search-函数"><a href="#search-函数" class="headerlink" title="search 函数"></a>search 函数</h4><p><code>re.search</code> 扫描整个字符串并返回第一个成功的匹配。如果没有匹配，就返回一个 None 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.search(pattern, string, flags=0)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; re.search(&#x27;iHTCboy&#x27;, &#x27;www.iHTCboy.com&#x27;)</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">&lt;re.Match object; span=(4, 11), match=&#x27;iHTCboy&#x27;&gt;</span><br></pre></td></tr></table></figure><p>我们可以使用 <code>group(num)</code> 或 <code>groups()</code> 匹配对象函数来获取匹配表达式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; searchObj = re.search( r&#x27;(.*) are (.*?) .*&#x27;, &quot;iHTCboy are my nikename)</span><br><span class="line">&gt;&gt;&gt; print(searchObj.group())</span><br><span class="line">&gt;&gt;&gt; print(searchObj.groups())</span><br><span class="line">&gt;&gt;&gt; print(searchObj.group(1))</span><br><span class="line">&gt;&gt;&gt; print(searchObj.group(2))</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">iHTCboy are my nikename</span><br><span class="line">(&#x27;iHTCboy&#x27;, &#x27;my&#x27;)</span><br><span class="line">iHTCboy</span><br><span class="line">my</span><br></pre></td></tr></table></figure><h4 id="findall-函数"><a href="#findall-函数" class="headerlink" title="findall 函数"></a>findall 函数</h4><p><code>re.findall</code> 在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.findall(pattern, string, flags=0)</span><br></pre></td></tr></table></figure><blockquote><p>对 <code>string</code> 返回一个不重复的 <code>pattern</code> 的匹配列表， <code>string</code> 从左到右进行扫描，匹配按找到的顺序返回。如果样式里存在一到多个组，就返回一个组合列表；就是一个元组的列表（如果样式里有超过一个组合的话）。空匹配也会包含在结果里。</p></blockquote><p>比如查找字符串中的所有数字：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; result2 = re.findall(r&#x27;\d+&#x27;, &#x27;abc123d4efg567&#x27;)</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">[&#x27;123&#x27;, &#x27;4&#x27;, &#x27;567&#x27;]</span><br></pre></td></tr></table></figure><p>查找不是以 4、7 结尾的手机号码(11位)手机号码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; result2 = re.findall(r&#x27;^1\d&#123;9&#125;[0-35-68-9]$&#x27;, &#x27;xxxxx&#x27;)</span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure><h4 id="finditer-函数"><a href="#finditer-函数" class="headerlink" title="finditer 函数"></a>finditer 函数</h4><p>和 findall 类似，在字符串中找到正则表达式所匹配的所有子串，并把它们作为一个迭代器返回。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.finditer(pattern, string, flags=0)</span><br></pre></td></tr></table></figure><p>搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器：</p><figure class="highlight python-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt;</span> <span class="python"><span class="keyword">for</span> m <span class="keyword">in</span> re.finditer(<span class="string">r&#x27;\d+&#x27;</span>, <span class="string">&#x27;abc123d4efg567&#x27;</span>):</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt;</span> <span class="python"><span class="built_in">print</span>(m.group())</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt;</span> <span class="python"> </span></span><br><span class="line">123</span><br><span class="line">4</span><br><span class="line">567 </span><br></pre></td></tr></table></figure><h4 id="split-函数"><a href="#split-函数" class="headerlink" title="split 函数"></a>split 函数</h4><p><code>re.split</code> 方法按照能够匹配的子串将字符串分割后返回列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.split(pattern, string, maxsplit=0, flags=0)</span><br></pre></td></tr></table></figure><blockquote><p>用 <code>pattern</code> 分开 <code>string</code> 。如果 <code>maxsplit</code> 非零， 最多进行 <code>maxsplit</code> 次分隔， 剩下的字符全部返回到列表的最后一个元素。</p></blockquote><p>对于规则的字符串，比如 <code>abc</code> 我们一般可以用 split 函数分割，但是如果遇到 <code>a b   c</code> 这样的字符串，得到的结果就是 <code>[&#39;a&#39;, &#39;b&#39;, &#39;&#39;, &#39;&#39;, &#39;c&#39;]</code>。所以，你可能需要人工来自己再次过滤，而使用正则表达式来处理，就显示很轻松：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; re.split(r&#x27;[\s\,]+&#x27;, &#x27;a,b, c  d&#x27;)</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span><br></pre></td></tr></table></figure><p>上面的 <code>[\s\,]+</code> 表示匹配 <code>\s</code> (空格）和 <code>,</code> 中任意一个至少一次的分割。</p><p>对于一个找不到匹配的字符串而言，split 不会对其作出分割。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; re.split(&#x27;a*&#x27;, &#x27;hello iHTCboy&#x27;)</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">[&#x27;hello iHTCboy&#x27;]</span><br></pre></td></tr></table></figure><h4 id="sub-函数"><a href="#sub-函数" class="headerlink" title="sub 函数"></a>sub 函数</h4><p><code>re.sub</code> 用于替换字符串中的匹配项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.sub(pattern, repl, string, count=0, flags=0)</span><br></pre></td></tr></table></figure><blockquote><p>返回通过使用 <code>repl</code> 替换在 <code>string</code> 最左边非重叠出现的 <code>pattern</code> 而获得的字符串。 如果样式没有找到，则不加改变地返回 string。 <code>repl</code> 可以是字符串或函数；如为字符串，则其中任何反斜杠转义序列都会被处理。 也就是说，<code>\n</code> 会被转换为一个换行符，<code>\r</code> 会被转换为一个回车附，依此类推。 </p></blockquote><p>比如电话号码格式可能带有空格或者-时，可以替换为空字符串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; re.sub(r&#x27;\D&#x27;, &quot;&quot;, &quot;188-8888-8888&quot;)</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">18888888888</span><br></pre></td></tr></table></figure><p><code>repl</code> 参数可以是一个函数，用于对匹配的内容进行更多的逻辑处理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 将匹配的数字乘以 2</span><br><span class="line">&gt;&gt;&gt; def double(matched):</span><br><span class="line">&gt;&gt;&gt;     value = int(matched.group(&#x27;value&#x27;))</span><br><span class="line">&gt;&gt;&gt;     return str(value * 2)</span><br><span class="line">&gt;&gt;&gt;  </span><br><span class="line">&gt;&gt;&gt; re.sub(&#x27;(?P&lt;value&gt;\d+)&#x27;, double, &#x27;abc123d4efg567&#x27;)</span><br><span class="line">&gt;&gt;&gt; </span><br><span class="line">abc246d8efg1134</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>正则表达式的内容有非常的多，如果不经常使用的话，可以就会很快忘记。所以，正则其实是不是应该记住呢？其实，应该是要记住，如果记不住，要不要紧？其实，是不要紧，因为正则就想查表一下，你如果之前已经比较系统的学习过，忘记了规则，看一下本文就大概记起来了。所以，这就是本文的目的，总结性的文章，不需要太多的复杂，简单又快捷的总结。</p><p>国庆中秋双节快乐！这篇文章应该是去年9月就定下来但迟迟没有动手，现在又过一年了，感叹生活真快。好好学习，天天快乐~</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.imooc.com/learn/550">python正则表达式_python正则表达式教程_python正则表达式视频教程-慕课网</a></li><li><a href="https://docs.python.org/zh-cn/3/library/re.html#">re — 正则表达式操作 — Python 3.8.6 文档</a></li><li><a href="https://ihtcboy.com/NotesEveryDay/Development/RegularExpression.html">正则表达式 - 笔记</a></li></ul><br><ul><li>如有疑问，欢迎在评论区一起讨论！</li><li>如有不正确的地方，欢迎指导！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;p&gt;正则表达式，如果有一定编程经验的同学，一定知道，可能你知道，但又说不出个所以然来，平时不经常使用，很容易就忘记，有一部分原因，我认为是总结的内容，不够简单和深刻。所以，自己尝试总结一下正则表达式的基础知识点，对于大部分的编程场景应该足够使用啦。另外，也希望通过总结，以便后续忘记时，能快速的记忆起来，这就是本文章的主要内容。&lt;/p&gt;</summary>
    
    
    
    <category term="induction" scheme="https://ihtcboy.com/categories/induction/"/>
    
    
    <category term="正则表达式" scheme="https://ihtcboy.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    <category term="Regular Expression" scheme="https://ihtcboy.com/tags/Regular-Expression/"/>
    
    <category term="Regex" scheme="https://ihtcboy.com/tags/Regex/"/>
    
  </entry>
  
  <entry>
    <title>商业模式和盈利模式的思考</title>
    <link href="https://ihtcboy.com/2020/07/05/2020-07-05_%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E5%92%8C%E7%9B%88%E5%88%A9%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>https://ihtcboy.com/2020/07/05/2020-07-05_%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E5%92%8C%E7%9B%88%E5%88%A9%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%80%9D%E8%80%83/</id>
    <published>2020-07-05T04:09:16.000Z</published>
    <updated>2020-09-13T13:45:37.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><p>增长？变现？数据？产品？</p><p>你们的商业模式是什么？盈利模式是什么？有产品有盈利吗？</p><p>听过风口、闭环、流量入口、增长黑客、私域流量？</p><span id="more"></span><h3 id="2、探索"><a href="#2、探索" class="headerlink" title="2、探索"></a>2、探索</h3><p>产品是不是诞生之初就要考虑盈利模式？</p><ul><li><strong>CAC</strong> ：用户获取成本 <code>Customer Acquisition Cost</code> 的缩写；</li><li><strong>LTV</strong> ：用户终生价值 <code>Life Time Value</code> 的缩写；</li><li><strong>PBP</strong> ：投资回收期 <code>Payback Period</code> 的缩写；</li><li><strong>BEP</strong>：盈亏平衡点 <code>Break Even Point</code> 的缩写。</li></ul><p> 商业模式和盈利模式：</p><ul><li> 产品收费</li><li> 产品免费  <em>（广告或数据变现？）</em></li></ul><p>互联网产品想要盈利，流量是关键，很多公司的产品都是先有了流量慢慢探索商业模式。但是，能不能“慢慢”的熬下来，就不一定的。</p><p>比如微信读书，2015年推出，到2020年，依旧靠推出各式活动，其中2018年推出的免费无限卡，可以看成当年360宣布杀毒软件免费使用一样！基本上可以薅羊毛，而且没有难度，如今我的免费无限卡已经到2025年啦，基本上如果微信不反转，就能一直免费读书。大家知道电子书行业发展到如今，微信读书依靠腾讯自身，坚持到现在，用户体量应该是国内最大的；但是如何变现，培养中国人读书的习惯，你每个月会读几本书？读书的需求真的“旺盛”吗？这应该是微信读书目前一直在探索思考的，微信读书最近也抓紧了付费无限卡，还有应用内广告或信息流的广告入口等，未来的商业模式将怎么发展？<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/05_WeRead.jpg" alt="WeRead.jpg"></p><p>另外一个，<strong>京东 Plus 会员</strong>，在诞生之前，最重要的是<strong>免邮费</strong>，钻石、企业会员最早全场可无限额免费运费，金牌会员及以下级别订单满39元即可免运费。2014年2月27日起，注册会员、铜牌会员、银牌会员、金牌会员购买自营商品满59元免运费，钻石会员、企业会员购买自营商品满39元免运费。2015年4月2日起，分别调整为79元和59元。而推送了 <strong>京东 Plus 会员</strong> 后，都是99元起不收取基础运费。而 Plus 会员每月可得到 5 张免运费券，如今是改为 5 张价值 ￥6 运费券。同时，京东在推广 Plus 会员时，采用了多种方式推广，其中 99 元一年，或者与爱奇艺、腾讯视频、知乎等推出联合会员。如今也基本饱和，并且由于会员人数增多，所谓的会员福利并没有看到太多大优势。未来，京东会员还能怎么发展？另外，京东的当天或次日达的优势渐渐的被打破，未来又怎么应对？<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/05_JD-Plus.jpg" alt="JD-Plus.jpg"></p><p>而在视频类App中，爱奇艺和腾讯视频也经常在618，双11等搞半价年费会员，刚开始大家觉得很便宜，有经常看电影和电视剧的朋友就会购买多年了。目前，视频类和音乐类，因为版本问题，依然是竞争最激烈的行业，有没有可能像打车、团购、外卖这样合并做大的可能呢？<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/05_iQiyi-Vip.jpg" alt="iQiyi-Vip.jpg"></p><p>另外，视频类App 去年开始推送<strong>超前点播</strong>，激起了网友的吐槽，现在依然无人治理。同时，如今网上的盗版获取成本非常低，我认为部分VIP会员会有部分人放弃超前点播，选择不付费，因为VIP后，SVIP，未来是不是还有SSVIP？？未来如果盗版成本还是很低，那么付费的会员流失只会更多。对于用户来说，每一部综艺节目或电视剧，可能要在不同的平台开会员，这是选择盗版的最大的挑战，未来应该如何应对？<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/05_iQiyi-Super_Vip.jpg" alt="iQiyi-Super_Vip.jpg"></p><p>完整的商业模式包括九大模块：</p><ul><li>1.客户细分</li><li>2.价值主张</li><li>3.渠道通路</li><li>4.客户关系</li><li>5.收入来源</li><li>6.核心资源</li><li>7.关键业务</li><li>8.重要合作</li><li>9.成本结构</li></ul><p>具体，也可以参考博主之前的读书笔记：</p><ul><li><a href="https://ihtcboy.com/2019/03/03/2019-03-03_%E3%80%8A%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E6%96%B0%E7%94%9F%E4%BB%A3%EF%BC%88%E4%B8%AA%E4%BA%BA%E7%AF%87%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">《商业模式新生代（个人篇）》读书笔记 | iHTCboy’s blog</a></li><li><a href="https://ihtcboy.com/2019/02/27/2019-02-27_%E3%80%8A%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E6%96%B0%E7%94%9F%E4%BB%A3%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">《商业模式新生代》读书笔记 | iHTCboy’s blog</a></li></ul><h3 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h3><p>没有创过业的同学，可能看到移动互联网的现在巨头产品，觉得产品好，然后就会有足够多用户，最后就可以赚钱！这是很 naive 的想法~</p><p>比如，最近<strong>地摊经济</strong>很火，你进货后就去摆摊吗？</p><p>如果思考一下，会有2种选择：</p><ul><li>先计算好能赚多少钱，进货去摆摊？</li><li>先进货，看能卖多少在再计算能赚多少钱？</li></ul><p>回到前面提的问题，产品是不是诞生之初就考虑盈利模式？显示是必须的！盈利当做和产品一样重要！</p><p>因为创业就是要先活下来，然后才能持久战。</p><p><strong>Who Care?</strong><br>从 TCD（以技术为核心的设计）、BCD（以商业为核心的设计），到 UCD（以用户为核心的设计）。</p><p>消费者既需要物美，又需要价廉。企业只能不断的精益求精，降低成本来满足消费者的需求。</p><p>所以，想要成功，<strong>即要为用户创造价值，为企业产生足够的利润，最后，如果可以也推动社会进步！</strong></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="http://www.woshipm.com/operate/1059026.html">互联网盈利，有什么商业模式？ | 人人都是产品经理</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;p&gt;增长？变现？数据？产品？&lt;/p&gt;
&lt;p&gt;你们的商业模式是什么？盈利模式是什么？有产品有盈利吗？&lt;/p&gt;
&lt;p&gt;听过风口、闭环、流量入口、增长黑客、私域流量？&lt;/p&gt;</summary>
    
    
    
    <category term="life" scheme="https://ihtcboy.com/categories/life/"/>
    
    
    <category term="产品" scheme="https://ihtcboy.com/tags/%E4%BA%A7%E5%93%81/"/>
    
    <category term="商业模式" scheme="https://ihtcboy.com/tags/%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="盈利模式" scheme="https://ihtcboy.com/tags/%E7%9B%88%E5%88%A9%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="地摊经济" scheme="https://ihtcboy.com/tags/%E5%9C%B0%E6%91%8A%E7%BB%8F%E6%B5%8E/"/>
    
  </entry>
  
  <entry>
    <title>iOS Handle Refunds 处理退款 --- WWDC20（Session 10661）</title>
    <link href="https://ihtcboy.com/2020/07/01/2020-07-01_WWDC20_in-app-purchase/"/>
    <id>https://ihtcboy.com/2020/07/01/2020-07-01_WWDC20_in-app-purchase/</id>
    <published>2020-07-01T14:40:16.000Z</published>
    <updated>2020-08-22T03:15:33.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><p>今年 WWDC 2020 苹果全球开发者大会，苹果宣布所有的内购品项类型，当用户退款成功时，开发者都能收到退款通知！！！退款通知！！！退款通知！！！</p><blockquote><p><strong>针对 App 内购买项目的退款通知现已可用</strong></p><p>2020 年 06 月 24 日<br>App Store 服务器通知现在包含所有类型的 App 内购买项目的退款通知 (包括消耗型项目、非消耗型项目和非续期订阅)。这些信息能帮助您采取相应的行动，并告知他们相关的优惠更改，以及如何重新订阅。</p><p><a href="https://developer.apple.com/cn/news/?id=tv3bhra6">针对 App 内购买项目的退款通知现已可用 - 新闻 - Apple Developer</a></p></blockquote><span id="more"></span><h3 id="2、处理退款"><a href="#2、处理退款" class="headerlink" title="2、处理退款"></a>2、处理退款</h3><h4 id="2-1-退款流程"><a href="#2-1-退款流程" class="headerlink" title="2.1 退款流程"></a>2.1 退款流程</h4><p>在 2020 年 06 月 24 日之前，开发者完全不知道有用户退款了！（只有每月账单里看到退款的一个总数量 -。-）：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_IAP_2020before.png" alt="IAP_2020before.png"></p><p>2020 年 06 月 24 日开始，苹果新增流程：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_IAP_2020after.png" alt="IAP_2020after.png"></p><h4 id="2-2-退款通知"><a href="#2-2-退款通知" class="headerlink" title="2.2 退款通知"></a>2.2 退款通知</h4><p>在苹果后台可以配置一个退款通知的回调地址（一个App配置一条链接）：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_URL_for_AppStore_Server_Notifications.png" alt="URL_for_AppStore_Server_Notifications.png"></p><p>配置的回调链接必须满足条件：</p><ul><li>满足应用传输安全要求（使用 <code>https</code>）</li><li>URL 最长 255 字符</li></ul><blockquote><p>注意：这里的 <code>https</code> 是指苹果的 App Transport Security (ATS)，其中有协议的要求，比如使用 Transport Layer Security (TLS) protocol 1.2 版本，具体见苹果文档： <a href="https://developer.apple.com/documentation/security/preventing_insecure_network_connections">Preventing Insecure Network Connections | Apple Developer Documentation</a>。</p></blockquote><h4 id="2-3-退款通知的类型"><a href="#2-3-退款通知的类型" class="headerlink" title="2.3 退款通知的类型"></a>2.3 退款通知的类型</h4><p>苹果把回调的通知分为2种类型： </p><ul><li><strong>退款通知</strong>类型</li><li><strong>取消通知</strong>类型  </li></ul><p>其中新增加的<code>退款通知</code>类型是针对：</p><ul><li>消耗型</li><li>非消耗型</li><li>非续期订阅</li></ul><p><code>取消通知</code>类型是针对：</p><ul><li>自动续期订阅</li></ul><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_Server-Server_REFUND_notification.png" alt="Server-Server_REFUND_notification.png"></p><h4 id="2-4-退款通知的内容"><a href="#2-4-退款通知的内容" class="headerlink" title="2.4 退款通知的内容"></a>2.4 退款通知的内容</h4><p> 苹果返回的通知内容为 JSON 对象数据，所有的退款订单的通知是在 <code>unified_receipt</code> 里的 <code>latest_receipt_info</code> 数组中：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_REFUND_Notification_payload.png" alt="REFUND_Notification_payload.png"></p><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>environment</td><td>收据生成的环境。values: <code>Sandbox</code>, <code>PROD</code>。自动续订订阅是可以沙盒环境测试取消订阅。</td></tr><tr><td>latest_receipt</td><td>Base64编码的最新交易收据。</td></tr><tr><td>latest_receipt_info</td><td>收据的列表</td></tr><tr><td>notification_type</td><td>通知类型，退款的值应该是：<code>REFUND</code>， 可参考：<a href="https://developer.apple.com/documentation/appstoreservernotifications/notification_type">notification_type</a></td></tr><tr><td>password</td><td>验证收据时的 password，App 专用共享密钥是用于接收此 App 自动续订订阅收据的唯一代码。如果您需要将此 App 转让给其他开发者，或者需要将主共享密钥设置为专用，可能需要使用 App 专用共享密钥。</td></tr><tr><td>bid</td><td>App的 bundle id（包名）</td></tr><tr><td>bvrs</td><td>App的版本号</td></tr><tr><td>unified_receipt</td><td><code>退款的订单信息在这里</code></td></tr></tbody></table><p>在 <code>unified_receipt</code> 里的 <code>latest_receipt_info</code> 是一个数组，其中包含的最近的100次应用内购买交易：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_latest_receipt_info_array.png" alt="latest_receipt_info_array.png"></p><p>数据中每个退款订单的主要字段：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_REFUND_Field_Type.png" alt="REFUND_Field_Type.png"></p><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>original_transaction_id</td><td>苹果订单的唯一标识 transaction_id</td></tr><tr><td>cancellation_data_ms</td><td>退款的时间</td></tr><tr><td>cancellation_reason</td><td>用户退款的原因。（0或1，含义未知）</td></tr><tr><td>bid</td><td>应用包名 bundle id</td></tr><tr><td>product_id</td><td>商品唯一标识 id</td></tr></tbody></table><p>详细的返回字段见官方文档：</p><ul><li><a href="https://developer.apple.com/documentation/appstoreservernotifications/responsebody">responseBody | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreservernotifications/unified_receipt">unified_receipt | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstorereceipts/responsebody/latest_receipt_info">responseBody.Latest_receipt_info | Apple Developer Documentation</a></li></ul><h4 id="2-5-退款通知的响应"><a href="#2-5-退款通知的响应" class="headerlink" title="2.5 退款通知的响应"></a>2.5 退款通知的响应</h4><p>您的服务器应发送HTTP状态代码，以指示服务器到服务器的通知接收是否成功：</p><ul><li>如果回调接收成功，则发送 HTTP <code>200</code>。您的服务器不需要返回数据。</li><li>如果回调接收不成功，请发送 HTTP <code>50x</code> 或 <code>40x</code> 让 App Store 重试该通知。App Store在一段时间内尝试重试该通知，但在连续失败尝试后最终停止(<code>3次</code>）。</li></ul><p>注意事项：</p><ul><li>当您使用包含退款交易的收据 <code>transaction_data</code> 向苹果服务器校验 <a href="https://developer.apple.com/documentation/appstorereceipts/verifyreceipt">verifyReceipt</a>  时，JSON响应中不存在退款交易，自动续订订阅除外。</li><li>收到 <code>REFUND</code> 通知时，您有责任为每笔退款交易存储，监控并采取适当的措施。（因为苹果只通知一次，暂时无法在苹果后台查询退款的订单。也不能由开发者主动去苹果服务器查询。）</li></ul><h4 id="2-6-自动续订订阅通知"><a href="#2-6-自动续订订阅通知" class="headerlink" title="2.6 自动续订订阅通知"></a>2.6 自动续订订阅通知</h4><p>这个取消通知之前就一直有，所以这里不重复了，需要的自行搜索。</p><p>自动续订订阅的相关文档：</p><ul><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/handling_subscriptions_billing#3221919">Handling Subscriptions Billing | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2019/302">In-App Purchases and Using Server-to-Server Notifications - WWDC 2019 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2019/305">Subscription Offers Best Practices - WWDC 2019 - Videos - Apple Developer</a></li></ul><h3 id="疑问解答"><a href="#疑问解答" class="headerlink" title="疑问解答"></a>疑问解答</h3><p>1、 苹果后台能否查看到退款的订单详情？</p><blockquote><p>答：暂无。（估计明年 WWDC2021 会有啦？）</p></blockquote><p>2、 消耗型、非消耗型、非续期订阅能不能在沙盒环境测试退款？</p><blockquote><p>答：暂时不能。（估计未来会有？等更新吧….）</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>大概就是这样，其实退款的流程并不复杂，很简单，但是为什么苹果用了那么多年才做出来呢？</p><p>要知道这个原因，还是要回顾一下历史~</p><h4 id="退款的方式"><a href="#退款的方式" class="headerlink" title="退款的方式"></a>退款的方式</h4><p>用户可以通过那些方式申请退款：</p><ul><li>联系Apple客户支持并要求退款</li><li>登录并使用Apple的自助服务工具 <a href="https://reportaproblem.apple.com/">reportaproblem.apple.com</a> 要求退款</li><li>要求他们的付款方式发行人退款 <em>（比如要求银行取消扣费，或者黑卡无法扣费等）</em></li></ul><p>详细：<a href="https://support.apple.com/zh-cn/HT204084">针对从 Apple 购买的 App 或内容申请退款 - Apple 支持</a></p><h4 id="退款的政策"><a href="#退款的政策" class="headerlink" title="退款的政策"></a>退款的政策</h4><p>针对退款，不同国家或地区会有不同的“无条件退款期限”。</p><p>AppStore 商店退款政策：</p><ul><li><strong>欧盟区</strong>： 14天<code>无条件</code>退款。</li><li><strong>中国台湾</strong>：7天<code>无条件</code>退款。</li><li><strong>中国/美国/韩国</strong>等其它大多数国家：90天<code>有条件</code>退款。 <em>（注：在中国区，每位App Store用户能享有一次无条件退款机会）</em></li></ul><p>注：中国区 App Store 的具体退款政策：一个ID有一次无条件退款机会，一年2次有条件退款，第3次退款会非常难。至于退款到账时间快为36小时内，也有7-15个工作日退还。</p><p>正是这些“漏洞”，所以，出现专业的代充工作室，导致开发者坏帐非常严重~ </p><p>特别是火爆的游戏代充（月流水（千万级）的12%可能就这样没了）~</p><p><strong>很多不熟悉的朋友不太理解，总会问有那么多人退款吗？</strong></p><p>其实，应用内购买的退款主要是针对游戏和直播打赏。游戏类的多是代充黑产；主播自己刷火箭打赏然后退款，收入照收，各种黑幕，只有业内人才懂的苦 -。-</p><h4 id="“退款”滥用"><a href="#“退款”滥用" class="headerlink" title="“退款”滥用"></a>“退款”滥用</h4><p>“退款”人的具体手段方式：</p><ul><li>1、利用淘宝店，以代充打折的名义获取玩家账号信息，在为玩家充值后申请退款。淘宝店获得充值金、玩家获得道具、游戏厂商亏钱；</li><li>2、收购消费过的App Store ID账号，要求至少要消费过500元以上。收到的账号会被用来退款和冲榜；</li><li>3、不断寻找有退款需求的新用户，帮其退款，收取佣金；</li></ul><h4 id="退款通知的意义"><a href="#退款通知的意义" class="headerlink" title="退款通知的意义"></a>退款通知的意义</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_Refund_management.png" alt="Refund_management.png"></p><ul><li>允许您对应用内内容的可访问管理  <em>（例如游戏的宝石或金币回收或账户余额扣减等）</em></li><li>管理退款滥用</li><li>快速解决用户问题 <em>（发现用户退款后，可以在应用内弹出联系客服，协助用户解决应用遇到的退款原因的问题？）</em></li><li>重新平衡游戏经济</li></ul><h4 id="处罚行动"><a href="#处罚行动" class="headerlink" title="处罚行动"></a>处罚行动</h4><p>一旦收到有关客户获得应用内购买退款的推送通知，作为开发人员，您可以采取七种不同的操作，从中等到严重（温和处理到严肃处理）。：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_Potential_actions.png" alt="Potential_actions.png"></p><p>苹果旨在为客户和开发人员提供更好的体验，所以建议操作要慎重考虑。</p><h4 id="对退款用户的处理"><a href="#对退款用户的处理" class="headerlink" title="对退款用户的处理"></a>对退款用户的处理</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/07/01_Refund_Update_action.png" alt="Refund_Update_action.png"></p><p>苹果给了一个示例，用户退款成功后，<strong>在 App 中给用户提示退款的时间和说明，可以重新购买，或者联系客服！</strong></p><p>也许帮助需要帮助的用户，为他们解决为什么退款的原因，才能减少真正的退款用户，用户觉得值！那么退款数自然会减少~</p><p>所以，苹果当初为什么不愿意提供退款的接口？其实是一直想保护用户的隐私（退款自由），但是当“退款”滥用时，不得不这样提供了退款通知接口。</p><p>这正是我们所看到的，苹果想的，你怎么想！怎么做！想好在决定~</p><br><br><blockquote><p>ps：题外话，大家一直觉得苹果的应用内购买做的很“烂”，是因为大家不太了解，苹果的这套支付系统有多复杂。可以打开下面的链接看看不同国家或地区的付款方式，要在一个应用里集成这些付款方式，不是一个支付宝或微信能想象到的。了解了才知道，唯有多学习：<a href="https://support.apple.com/zh-cn/HT202631">可与 Apple ID 搭配使用的付款方式 - Apple 支持</a></p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://developer.apple.com/cn/news/?id=tv3bhra6">针对 App 内购买项目的退款通知现已可用 - 新闻 - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2020/10661/">What’s new with in-app purchase - WWDC 2020 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/handling_refund_notifications?language=objc">Handling Refund Notifications | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/enabling_server-to-server_notifications">Enabling Server-to-Server Notifications | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/storekit/in-app_purchase/subscriptions_and_offers/handling_subscriptions_billing#3221919">Handling Subscriptions Billing | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/documentation/appstoreservernotifications">App Store Server Notifications | Apple Developer Documentation</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2019/302">In-App Purchases and Using Server-to-Server Notifications - WWDC 2019 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2019/305">Subscription Offers Best Practices - WWDC 2019 - Videos - Apple Developer</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;p&gt;今年 WWDC 2020 苹果全球开发者大会，苹果宣布所有的内购品项类型，当用户退款成功时，开发者都能收到退款通知！！！退款通知！！！退款通知！！！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;针对 App 内购买项目的退款通知现已可用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2020 年 06 月 24 日&lt;br&gt;App Store 服务器通知现在包含所有类型的 App 内购买项目的退款通知 (包括消耗型项目、非消耗型项目和非续期订阅)。这些信息能帮助您采取相应的行动，并告知他们相关的优惠更改，以及如何重新订阅。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/cn/news/?id=tv3bhra6&quot;&gt;针对 App 内购买项目的退款通知现已可用 - 新闻 - Apple Developer&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="WWDC" scheme="https://ihtcboy.com/tags/WWDC/"/>
    
    <category term="IAP" scheme="https://ihtcboy.com/tags/IAP/"/>
    
    <category term="Refund" scheme="https://ihtcboy.com/tags/Refund/"/>
    
  </entry>
  
  <entry>
    <title>当我们在谈论跨平台的时候 ——— 我们在说什么</title>
    <link href="https://ihtcboy.com/2020/06/11/2020-06-11_%E8%B7%A8%E5%B9%B3%E5%8F%B0%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <id>https://ihtcboy.com/2020/06/11/2020-06-11_%E8%B7%A8%E5%B9%B3%E5%8F%B0%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</id>
    <published>2020-06-11T11:00:00.000Z</published>
    <updated>2020-09-26T11:36:01.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><p>最近跟部门同学一起分享了跨平台的事儿，写了将近200+页ppt，最后只讲了100+页，只把其中重点的内容讲了，但是，我认为对跨平台的学习，不止是重点的技术内容，还有很多值得探索的问题，比如历史背景，历史发展，那些事儿，那些人儿，往往不经意间，改变历史的技术，就在那一瞬时，固守自封的必须会被淘汰，把握了机遇就有新出路，没有看准方向的会浪费大量的时间。当然，从历史脉络来看跨平台，必须千人千面，能有共鸣之处就好。</p><blockquote><p>下面会有将近200+图片，后续有时间，会针对每张ppt添加对应的讲解。</p></blockquote><span id="more"></span><h3 id="2、PPT"><a href="#2、PPT" class="headerlink" title="2、PPT"></a>2、PPT</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-001.jpeg" alt="cross-platform-001.jpg"><br>《当我们在谈论跨平台的时候 ——— 我们在说什么》，最后用这个标题来起跨平台，当我们在谈论xxx的时候，我们到底想说什么？这正是本课程想要探索的世界。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-002.jpeg" alt="cross-platform-002.jpg"><br>开始时，本课程也是想立于当下，我们一起跨过的平台，Hybrid App、React Native、Flutter、小程序等，我们熟悉的跨过的平台。（2015~2020年）</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-003.jpeg" alt="cross-platform-003.jpg"><br>也想到说用“跨平台那些事儿”作为题目，把跨平台的内容再扩充一下，从大局来了解。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-004.jpeg" alt="cross-platform-004.jpg"><br>“我曾经跨过山和大海” 歌词来自朴树的《平凡之路》，每次说到“跨平台”，我们在说什么：</p><ul><li><p>跨平台，你想到了什么？</p></li><li><p>列出一些跨平台的词语</p></li><li><p>千丝万缕（联系）？天壤之别（差异）？</p></li><li><p>来龙去脉，抽丝剥茧</p></li><li><p>顺其自然，看发展（好坏，优劣，高低……）</p></li><li><p>暮然回首，看起因（抓名词，找对象，全关系）</p></li></ul><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-005.jpeg" alt="cross-platform-005.jpg"><br>Java 的口号是：“一次编写，到处运行”（Write once, run anywhere），那么它是怎么实现到处运行呢？怎么跨平台呢？</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-006.jpeg" alt="cross-platform-006.jpg"><br>不同音乐App，大家觉得这些是平台吗，应该怎么跨呢？</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-007.jpeg" alt="cross-platform-007.jpg"><br>从维基百科看到跨平台的解释：</p><blockquote><p>泛指<strong>编程语言</strong>、<strong>软件</strong>或<strong>硬件设备</strong>可以在多种<strong>操作系统</strong>或不同<strong>硬件架构</strong>的<strong>电脑</strong>上运作。</p></blockquote><p>那么，跨平台就是电脑吗？为什么是电脑？手机呢？手机是电脑吗？</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-008.jpeg" alt="cross-platform-008.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-009.jpeg" alt="cross-platform-009.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-010.jpeg" alt="cross-platform-010.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-011.jpeg" alt="cross-platform-011.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-012.jpeg" alt="cross-platform-012.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-013.jpeg" alt="cross-platform-013.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-014.jpeg" alt="cross-platform-014.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-015.jpeg" alt="cross-platform-015.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-016.jpeg" alt="cross-platform-016.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-017.jpeg" alt="cross-platform-017.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-018.jpeg" alt="cross-platform-018.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-019.jpeg" alt="cross-platform-019.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-020.jpeg" alt="cross-platform-020.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-021.jpeg" alt="cross-platform-021.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-022.jpeg" alt="cross-platform-022.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-023.jpeg" alt="cross-platform-023.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-024.jpeg" alt="cross-platform-024.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-025.jpeg" alt="cross-platform-025.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-026.jpeg" alt="cross-platform-026.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-027.jpeg" alt="cross-platform-027.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-028.jpeg" alt="cross-platform-028.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-029.jpeg" alt="cross-platform-029.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-030.jpeg" alt="cross-platform-030.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-031.jpeg" alt="cross-platform-031.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-032.jpeg" alt="cross-platform-032.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-033.jpeg" alt="cross-platform-033.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-034.jpeg" alt="cross-platform-034.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-035.jpeg" alt="cross-platform-035.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-036.jpeg" alt="cross-platform-036.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-037.jpeg" alt="cross-platform-037.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-038.jpeg" alt="cross-platform-038.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-039.jpeg" alt="cross-platform-039.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-040.jpeg" alt="cross-platform-040.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-041.jpeg" alt="cross-platform-041.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-042.jpeg" alt="cross-platform-042.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-043.jpeg" alt="cross-platform-043.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-044.jpeg" alt="cross-platform-044.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-045.jpeg" alt="cross-platform-045.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-046.jpeg" alt="cross-platform-046.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-047.jpeg" alt="cross-platform-047.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-048.jpeg" alt="cross-platform-048.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-049.jpeg" alt="cross-platform-049.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-050.jpeg" alt="cross-platform-050.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-051.jpeg" alt="cross-platform-051.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-052.jpeg" alt="cross-platform-052.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-053.jpeg" alt="cross-platform-053.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-054.jpeg" alt="cross-platform-054.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-055.jpeg" alt="cross-platform-055.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-056.jpeg" alt="cross-platform-056.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-057.jpeg" alt="cross-platform-057.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-058.jpeg" alt="cross-platform-058.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-059.jpeg" alt="cross-platform-059.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-060.jpeg" alt="cross-platform-060.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-061.jpeg" alt="cross-platform-061.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-062.jpeg" alt="cross-platform-062.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-063.jpeg" alt="cross-platform-063.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-064.jpeg" alt="cross-platform-064.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-065.jpeg" alt="cross-platform-065.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-066.jpeg" alt="cross-platform-066.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-067.jpeg" alt="cross-platform-067.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-068.jpeg" alt="cross-platform-068.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-069.jpeg" alt="cross-platform-069.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-070.jpeg" alt="cross-platform-070.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-071.jpeg" alt="cross-platform-071.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-072.jpeg" alt="cross-platform-072.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-073.jpeg" alt="cross-platform-073.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-074.jpeg" alt="cross-platform-074.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-075.jpeg" alt="cross-platform-075.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-076.jpeg" alt="cross-platform-076.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-077.jpeg" alt="cross-platform-077.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-078.jpeg" alt="cross-platform-078.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-079.jpeg" alt="cross-platform-079.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-080.jpeg" alt="cross-platform-080.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-081.jpeg" alt="cross-platform-081.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-082.jpeg" alt="cross-platform-082.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-083.jpeg" alt="cross-platform-083.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-084.jpeg" alt="cross-platform-084.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-085.jpeg" alt="cross-platform-085.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-086.jpeg" alt="cross-platform-086.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-087.jpeg" alt="cross-platform-087.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-088.jpeg" alt="cross-platform-088.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-089.jpeg" alt="cross-platform-089.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-090.jpeg" alt="cross-platform-090.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-091.jpeg" alt="cross-platform-091.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-092.jpeg" alt="cross-platform-092.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-093.jpeg" alt="cross-platform-093.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-094.jpeg" alt="cross-platform-094.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-095.jpeg" alt="cross-platform-095.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-096.jpeg" alt="cross-platform-096.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-097.jpeg" alt="cross-platform-097.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-098.jpeg" alt="cross-platform-098.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-099.jpeg" alt="cross-platform-099.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-100.jpeg" alt="cross-platform-100.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-101.jpeg" alt="cross-platform-101.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-102.jpeg" alt="cross-platform-102.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-103.jpeg" alt="cross-platform-103.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-104.jpeg" alt="cross-platform-104.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-105.jpeg" alt="cross-platform-105.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-106.jpeg" alt="cross-platform-106.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-107.jpeg" alt="cross-platform-107.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-108.jpeg" alt="cross-platform-108.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-109.jpeg" alt="cross-platform-109.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-110.jpeg" alt="cross-platform-110.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-111.jpeg" alt="cross-platform-111.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-112.jpeg" alt="cross-platform-112.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-113.jpeg" alt="cross-platform-113.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-114.jpeg" alt="cross-platform-114.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-115.jpeg" alt="cross-platform-115.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-116.jpeg" alt="cross-platform-116.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-117.jpeg" alt="cross-platform-117.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-118.jpeg" alt="cross-platform-118.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-119.jpeg" alt="cross-platform-119.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-120.jpeg" alt="cross-platform-120.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-121.jpeg" alt="cross-platform-121.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-122.jpeg" alt="cross-platform-122.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-123.jpeg" alt="cross-platform-123.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-124.jpeg" alt="cross-platform-124.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-125.jpeg" alt="cross-platform-125.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-126.jpeg" alt="cross-platform-126.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-127.jpeg" alt="cross-platform-127.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-128.jpeg" alt="cross-platform-128.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-129.jpeg" alt="cross-platform-129.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-130.jpeg" alt="cross-platform-130.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-131.jpeg" alt="cross-platform-131.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-132.jpeg" alt="cross-platform-132.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-133.jpeg" alt="cross-platform-133.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-134.jpeg" alt="cross-platform-134.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-135.jpeg" alt="cross-platform-135.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-136.jpeg" alt="cross-platform-136.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-137.jpeg" alt="cross-platform-137.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-138.jpeg" alt="cross-platform-138.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-139.jpeg" alt="cross-platform-139.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-140.jpeg" alt="cross-platform-140.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-141.jpeg" alt="cross-platform-141.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-142.jpeg" alt="cross-platform-142.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-143.jpeg" alt="cross-platform-143.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-144.jpeg" alt="cross-platform-144.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-145.jpeg" alt="cross-platform-145.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-146.jpeg" alt="cross-platform-146.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-147.jpeg" alt="cross-platform-147.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-148.jpeg" alt="cross-platform-148.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-149.jpeg" alt="cross-platform-149.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-150.jpeg" alt="cross-platform-150.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-151.jpeg" alt="cross-platform-151.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-152.jpeg" alt="cross-platform-152.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-153.jpeg" alt="cross-platform-153.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-154.jpeg" alt="cross-platform-154.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-155.jpeg" alt="cross-platform-155.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-156.jpeg" alt="cross-platform-156.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-157.jpeg" alt="cross-platform-157.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-158.jpeg" alt="cross-platform-158.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-159.jpeg" alt="cross-platform-159.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-160.jpeg" alt="cross-platform-160.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-161.jpeg" alt="cross-platform-161.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-162.jpeg" alt="cross-platform-162.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-163.jpeg" alt="cross-platform-163.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-164.jpeg" alt="cross-platform-164.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-165.jpeg" alt="cross-platform-165.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-166.jpeg" alt="cross-platform-166.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-167.jpeg" alt="cross-platform-167.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-168.jpeg" alt="cross-platform-168.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-169.jpeg" alt="cross-platform-169.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-170.jpeg" alt="cross-platform-170.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-171.jpeg" alt="cross-platform-171.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-172.jpeg" alt="cross-platform-172.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-173.jpeg" alt="cross-platform-173.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-174.jpeg" alt="cross-platform-174.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-175.jpeg" alt="cross-platform-175.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-176.jpeg" alt="cross-platform-176.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-177.jpeg" alt="cross-platform-177.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-178.jpeg" alt="cross-platform-178.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-179.jpeg" alt="cross-platform-179.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-180.jpeg" alt="cross-platform-180.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-181.jpeg" alt="cross-platform-181.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-182.jpeg" alt="cross-platform-182.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-183.jpeg" alt="cross-platform-183.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-184.jpeg" alt="cross-platform-184.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-185.jpeg" alt="cross-platform-185.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-186.jpeg" alt="cross-platform-186.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-187.jpeg" alt="cross-platform-187.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-188.jpeg" alt="cross-platform-188.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-189.jpeg" alt="cross-platform-189.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-190.jpeg" alt="cross-platform-190.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-191.jpeg" alt="cross-platform-191.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-192.jpeg" alt="cross-platform-192.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-193.jpeg" alt="cross-platform-193.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-194.jpeg" alt="cross-platform-194.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-195.jpeg" alt="cross-platform-195.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-196.jpeg" alt="cross-platform-196.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-197.jpeg" alt="cross-platform-197.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-198.jpeg" alt="cross-platform-198.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-199.jpeg" alt="cross-platform-199.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-200.jpeg" alt="cross-platform-200.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-201.jpeg" alt="cross-platform-201.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-202.jpeg" alt="cross-platform-202.jpg"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/IT/2020-cross-platform/cross-platform-203.jpeg" alt="cross-platform-203.jpg"></p><h3 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h3><blockquote><p>目前比较忙，后续会慢慢的对每张ppt添加对应的讲解，请期待吧。</p></blockquote><p>相关的资料在 GitHub 可获得：</p><ul><li><a href="https://github.com/iHTCboy/iDesign/tree/master/IT/%E8%B7%A8%E5%B9%B3%E5%8F%B0">跨平台PPT资料</a></li><li><a href="https://github.com/iHTCboy/iGallery/tree/master/BlogImages/IT/2020-cross-platform">跨平台PPT图片</a></li></ul><p>以上就是跨平台那些事儿，当我们在谈论跨平台的时候，不止是Flutter，还有更多的底层知识或者新生命的事物，理解跨平台，才能应对 ReactNative、Flutter，或者未来的新事物，同时，还要跨越自己，让自己成为一个平台！那么，当我们再在谈论跨平台的时候，我们一定能够应对未来！这就是我想要表达的想法。</p><blockquote><ul><li>系统化，实例化，具体化</li><li>顺其自然，看发展（好坏，优劣，高低……）</li><li>暮然回首，看起因（抓名词，找对象，全关系）</li></ul></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><strong>移动跨平台框架：</strong></p><ul><li>  <a href="%5Bhttps://github.com/facebook/react-native%5D(https://github.com/facebook/react-native)">facebook/react-native: A framework for building native apps with React.</a></li><li>  <a href="%5Bhttps://github.com/flutter/flutter%5D(https://github.com/flutter/flutter)">flutter/flutter: Flutter makes it easy and fast to build beautiful apps for mobile and beyond.</a></li><li>  <a href="%5Bhttps://www.qt.io/download%5D(https://www.qt.io/download)">Get Qt - Download now</a></li><li>  <a href="%5Bhttps://dotnet.microsoft.com/apps/xamarin%5D(https://dotnet.microsoft.com/apps/xamarin)">Xamarin | Open-source mobile app platform for .NET</a></li><li>  <a href="%5Bhttps://github.com/electron/electron%5D(https://github.com/electron/electron)">electron/electron: Build cross-platform desktop apps with JavaScript, HTML, and CSS</a></li><li>  <a href="%5Bhttps://yogalayout.com/%5D(https://yogalayout.com/)">Yoga Layout | A cross-platform layout engine</a></li></ul><p><strong>苹果 WWDC:</strong></p><ul><li>  <a href="%5Bhttps://developer.apple.com/videos/all-videos/%5D(https://developer.apple.com/videos/all-videos/)">All WWDC Videos - Apple Developer</a></li><li>  <a href="%5Bhttps://developer.apple.com/videos/play/wwdc2019/520/%5D(https://developer.apple.com/videos/play/wwdc2019/520/)">Introducing Core Haptics - WWDC 2019 - Videos - Apple Developer</a></li><li>  <a href="%5Bhttps://developer.apple.com/videos/play/wwdc2019/810/%5D(https://developer.apple.com/videos/play/wwdc2019/810/)">Designing Audio-Haptic Experiences - WWDC 2019 - Videos - Apple Developer</a></li><li>  <a href="%5Bhttps://developer.apple.com/videos/play/wwdc2017/802%5D(https://developer.apple.com/videos/play/wwdc2017/802)">Essential Design Principles - WWDC 2017 - Videos - Apple Developer</a></li><li>  <a href="%5Bhttps://developer.apple.com/videos/play/wwdc2017/804/%5D(https://developer.apple.com/videos/play/wwdc2017/804/)">Designing Across Platforms - WWDC 2017 - Videos - Apple Developer</a></li><li>  <a href="%5Bhttps://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/haptics/%5D(https://developer.apple.com/design/human-interface-guidelines/ios/user-interaction/haptics/)">Haptics - User Interaction - iOS - Human Interface Guidelines - Apple Developer</a></li><li>  <a href="%5Bhttps://developer.apple.com/design/human-interface-guidelines/watchos/user-interaction/haptic-feedback/%5D(https://developer.apple.com/design/human-interface-guidelines/watchos/user-interaction/haptic-feedback/)">Haptic Feedback - User Interaction - watchOS - Human Interface Guidelines - Apple Developer</a></li><li>  <a href="%5Bhttps://developer.apple.com/videos/play/wwdc2017/806/%5D(https://developer.apple.com/videos/play/wwdc2017/806/)">Design For Everyone - WWDC 2017 - Videos - Apple Developer</a></li><li>  <a href="%5Bhttps://material.io/design/color/dark-theme.html%5D(https://material.io/design/color/dark-theme.html)">Dark theme - Material Design</a></li><li>  <a href="%5Bhttps://developer.apple.com/design/%5D(https://developer.apple.com/design/)">Design - Apple Developer</a></li></ul><p><strong>谷歌 Android：</strong></p><ul><li>  <a href="%5Bhttps://developer.android.com/training/tv/start?hl=zh_cn%5D(https://developer.android.com/training/tv/start?hl=zh_cn)">开发者指南  |  Android 开发者  |  Android Developers</a></li><li>  <a href="%5Bhttps://developer.android.com/guide/topics/graphics/opengl%5D(https://developer.android.com/guide/topics/graphics/opengl)">OpenGL ES  |  Android 开发者  |  Android Developers</a></li><li>  <a href="%5Bhttps://developer.android.com/topic/performance/network-xfer%5D(https://developer.android.com/topic/performance/network-xfer)">缩减图片下载大小  |  Android 开发者  |  Android Developers</a></li></ul><p><strong>其它资料文档：</strong></p><p><strong>技术：</strong></p><ul><li><a href="%5Bhttp://blog.sina.com.cn/s/blog_6310d2980101goj1.html%5D(http://blog.sina.com.cn/s/blog_6310d2980101goj1.html)">【扫盲】HTML5、Web APP、3G网站、Wap网站傻傻分不清楚_慕辰北_新浪博客</a></li><li><a href="%5Bhttps://www.runoob.com/w3cnote/app-wap-difference.html%5D(https://www.runoob.com/w3cnote/app-wap-difference.html)">app和wap手机网站的区别在哪里 | 菜鸟教程</a></li><li><a href="%5Bhttps://www.zhihu.com/question/19911163%5D(https://www.zhihu.com/question/19911163)">Web 1.0、2.0、3.0 分别是什么意思？ - 知乎</a></li><li><a href="https://open.163.com/newview/movie/free?pid=LF8OPA3LR&mid=RF8OPA3M2">你不知道的互联网30年秘史 - 网易公开课</a></li><li><a href="%5Bhttps://www.tencent.com/zh-cn/about.html%5D(https://www.tencent.com/zh-cn/about.html)">腾讯公司简介 - Tencent 腾讯</a></li><li><a href="%5Bhttp://www.sn.10086.cn/support/businesshelp/file9.html%5D(http://www.sn.10086.cn/support/businesshelp/file9.html)">WAP业务常见问题_中国移动通信</a></li><li><a href="%5Bhttps://gd.10086.cn/products_new/options/detail/GPRS_FUNCTION_10.shtml%5D(https://gd.10086.cn/products_new/options/detail/GPRS_FUNCTION_10.shtml)">GPRS套餐_广东移动</a></li><li><a href="%5Bhttp://www.10086.cn/support/servicefee/newbusiness/mm/%5D(http://www.10086.cn/support/servicefee/newbusiness/mm/)">MM_服务中心_中国移动通信</a></li><li><a href="%5Bhttps://it.sohu.com/20070518/n250100497.shtml%5D(https://it.sohu.com/20070518/n250100497.shtml)">中国移动通信产业20年大事记-搜狐IT</a>)</li><li><a href="%5Bhttp://m.c114.com.cn/w2935-1094983.html%5D(http://m.c114.com.cn/w2935-1094983.html)">1G到5G，我国移动通信发展里程碑 - C114通信网</a></li><li><a href="%5Bhttp://www.cnnic.net.cn/hlwfzyj/hlwxzbg/%5D(http://www.cnnic.net.cn/hlwfzyj/hlwxzbg/)">中国互联网络信息中心</a></li><li><a href="%5Bhttps://www.ifanr.com/1336563?utm_source=rss&utm_medium=rss&utm_campaign=%5D(https://www.ifanr.com/1336563?utm_source=rss&utm_medium=rss&utm_campaign=)">看电视的人，越来越少了 | 爱范儿</a></li><li><a href="%5Bhttps://mp.weixin.qq.com/s/Ez72nzSikDkcRuIww-GQyg%5D(https://mp.weixin.qq.com/s/Ez72nzSikDkcRuIww-GQyg)">分不清ARM和X86架构，别跟我说你懂CPU！</a></li><li><a href="%5Bhttps://www.ednchina.com/news/201901101421.html%5D(https://www.ednchina.com/news/201901101421.html)">苹果、三星、高通都属ARM阵营，为啥华为就不行？-EDN 电子技术设计</a></li><li><a href="%5Bhttps://zhuanlan.zhihu.com/p/39215118%5D(https://zhuanlan.zhihu.com/p/39215118)">世界上还有哪些能做基带的公司？ - 知乎</a></li><li><a href="%5Bhttps://zhuanlan.zhihu.com/p/25730897%5D(https://zhuanlan.zhihu.com/p/25730897)">移动GPU和桌面GPU最核心的差别（讲述TBR和Immediate Rendering） - 知乎</a></li><li><a href="%5Bhttps://www.zhihu.com/question/25811504%5D(https://www.zhihu.com/question/25811504)">Android的UI底层是用CPU绘图的还是GPU绘图的呢？以及surfaceview,window,普通view是如何实现的？ - 知乎</a></li><li><a href="%5Bhttps://juejin.im/post/5b1e8fade51d45068f65d6e8%5D(https://juejin.im/post/5b1e8fade51d45068f65d6e8)">WWDC 2018：写给 OpenGL 开发者们的 Metal 开发指南 - 掘金</a></li><li><a href="%5Bhttps://zhuanlan.zhihu.com/p/101550272%5D(https://zhuanlan.zhihu.com/p/101550272)">CPU/GPU/TPU/NPU傻傻分不清楚 - 知乎</a></li><li><a href="%5Bhttps://zhuanlan.zhihu.com/p/48982978%5D(https://zhuanlan.zhihu.com/p/48982978)">什么是张量（tensor）&amp; 深度学习 - 知乎</a></li><li><a href="%5Bhttps://www.zhihu.com/question/19902056%5D(https://www.zhihu.com/question/19902056)">在移动领域，ARM 在哪些方面领先英特尔？ - 知乎</a></li><li><a href="%5Bhttps://blog.csdn.net/qian520ao/article/details/81144167%5D(https://blog.csdn.net/qian520ao/article/details/81144167)">Android屏幕绘制机制及硬件加速 - CSDN博客</a></li><li><a href="https://www.cnblogs.com/skynet/p/5406495.html">Unity3D手游开发实践 - 吴秦 - 博客园</a></li><li><a href="https://www.zhihu.com/question/20602284">sRGB 和 Adobe RGB 有什么区别？ - 知乎</a></li><li><a href="https://support.apple.com/zh-cn/HT207354">iPhone 上的状态图标和符号 - Apple 支持</a></li><li><a href="https://hmxt.org/hdc-2019-%E9%B8%BF%E8%92%99os%E5%8F%91%E5%B8%83%E6%BC%94%E8%AE%B2">HDC.2019 鸿蒙OS发布演讲 | 鸿蒙学堂</a></li><li><a href="https://www.infoq.cn/article/l1E2L1CmqJYkUMyYwuhh">跨平台技术趋势及字节跳动 Flutter 架构实践-InfoQ</a></li><li><a href="https://zhuanlan.zhihu.com/p/95626955">深入理解Android虚拟机及编译系统 - 知乎</a> 一次编码，到处运行的效果</li><li>[Architectures of cross-platform mobile frameworks - Architectures of ReactNative, Xamarin, PhoneGap, Qt](<a href="https://books.binwell.com/-">https://books.binwell.com/-</a> architectures-of-reactnative-xamarin-phonegap-qt/3.-architectures-of-cross-platform-mobile-frameworks)</li><li>[Wrapping a native SDK for Unity: our challenges and choices - LINE ENGINEERING](<a href="https://engineering.linecorp.com/en/blog/-">https://engineering.linecorp.com/en/blog/-</a> wrapping-a-native-sdk-for-unity/#)</li><li><a href="https://mp.weixin.qq.com/s/OlSEpK-KKfpypwQFnJ4kfQ">字节跳动为什么选用Flutter</a></li><li><a href="https://mp.weixin.qq.com/s/UZQU-PWM5JEb3dYtZKT6Cw">跨平台技术演进及Flutter未来</a></li><li><a href="https://mp.weixin.qq.com/s/nBkcDaKkBxTL-rhKfAhLMg">flutter: 一周感悟</a></li></ul><p><strong>软文：</strong></p><ul><li><a href="%5Bhttps://juejin.im/post/5c3702bde51d4551eb3a1a02%5D(https://juejin.im/post/5c3702bde51d4551eb3a1a02)">张小龙 4 小时演讲没时间看？看这一篇就够了！「附赠张小龙历年演讲实录 PDF」 - 掘金</a></li><li><a href="%5Bhttps://www.thepaper.cn/newsDetail_forward_7367850%5D(https://www.thepaper.cn/newsDetail_forward_7367850)">肖战背后：腾讯的背水一战_湃客_澎湃新闻-The Paper</a></li><li><a href="%5Bhttp://finance.sina.com.cn/chanjing/gsnews/2018-05-06/doc-ihacuuvt8132798.shtml%5D(http://finance.sina.com.cn/chanjing/gsnews/2018-05-06/doc-ihacuuvt8132798.shtml)">腾讯没有梦想|腾讯_新浪财经_新浪网</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;p&gt;最近跟部门同学一起分享了跨平台的事儿，写了将近200+页ppt，最后只讲了100+页，只把其中重点的内容讲了，但是，我认为对跨平台的学习，不止是重点的技术内容，还有很多值得探索的问题，比如历史背景，历史发展，那些事儿，那些人儿，往往不经意间，改变历史的技术，就在那一瞬时，固守自封的必须会被淘汰，把握了机遇就有新出路，没有看准方向的会浪费大量的时间。当然，从历史脉络来看跨平台，必须千人千面，能有共鸣之处就好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下面会有将近200+图片，后续有时间，会针对每张ppt添加对应的讲解。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="induction" scheme="https://ihtcboy.com/categories/induction/"/>
    
    
    <category term="Flutter" scheme="https://ihtcboy.com/tags/Flutter/"/>
    
    <category term="ReactNative" scheme="https://ihtcboy.com/tags/ReactNative/"/>
    
    <category term="跨平台" scheme="https://ihtcboy.com/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0/"/>
    
    <category term="cross-platform" scheme="https://ihtcboy.com/tags/cross-platform/"/>
    
    <category term="WebAssembly" scheme="https://ihtcboy.com/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>程序员的macOS系列：高效Alfred进阶</title>
    <link href="https://ihtcboy.com/2020/02/09/2020-02-09_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E9%AB%98%E6%95%88Alfred%E8%BF%9B%E9%98%B6/"/>
    <id>https://ihtcboy.com/2020/02/09/2020-02-09_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E9%AB%98%E6%95%88Alfred%E8%BF%9B%E9%98%B6/</id>
    <published>2020-02-09T12:49:16.000Z</published>
    <updated>2020-08-22T03:15:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>之前写的《程序员的macOS系列》文章，2018年写了二篇文章：<a href="https://ihtcboy.com/2018/07/15/2018-07-15_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E7%B2%BE%E9%80%89MacApp/">精选Mac App</a>、 <a href="https://ihtcboy.com/2018/09/30/2018-09-30_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9AMac%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">Mac开发环境配置</a>，至今，已经过年一年半啦！收到很多同学的点赞，最后一篇 <code>高效Alfred进阶</code> 因为各种原因，没有写出来，所以都0202年啦！</p><p>其实 <code>macOS</code> 系统的高效，很大部分原因是因为有 <code>Unix/Linux</code> 的相似血统，本文讲解<code>Alfred</code>，就是效率工具的一员，相信注重效率的你，一早肯定听说过或者已经在使用，简单来说 Alfred 以键盘的高效代替鼠标操作的繁冗。还有很多效率方法，以后有机会在总结吧，大家也可以自行搜索 macOS 开发效率，博主之前也写过一些。那为什么会认为 <code>Alfred</code> 对程序员很重要呢？如果你没有用过，相信你读完本文就会明白。虽然网上已经有很多 <code>Alfred</code> 的教程，但是一直没有找到能相对全面，或很少从入口到进阶的文章，并且很多文章历史已经悠久，所以惟有抛砖引玉，自我总结一下，希望和大家一起努力提交效率！</p><ul><li><a href="https://ihtcboy.com/2018/07/15/2018-07-15_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E7%B2%BE%E9%80%89MacApp/">程序员的macOS系列：精选Mac App</a></li><li><a href="https://ihtcboy.com/2018/09/30/2018-09-30_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9AMac%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">程序员的macOS系列：Mac开发环境配置</a></li><li><a href="https://ihtcboy.com/2020/02/09/2020-02-09_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E9%AB%98%E6%95%88Alfred%E8%BF%9B%E9%98%B6/">程序员的macOS系列：高效Alfred进阶</a></li></ul><p>目前计划写《程序员的macOS系列》三篇已经完成 ✅，后续有想法在更新吧~</p><h2 id="Alfred-提高程序员-100-效率指南"><a href="#Alfred-提高程序员-100-效率指南" class="headerlink" title="Alfred 提高程序员 100% 效率指南"></a>Alfred 提高程序员 100% 效率指南</h2><span id="more"></span><p><strong>Alfred 4 for Mac</strong> 官网产品说明：</p><blockquote><p>Alfred is an award-winning app for macOS which boosts your efficiency with hotkeys, keywords, text expansion and more. Search your Mac and the web, and be more productive with custom actions to control your Mac.<br>Alfred是一款屡获殊荣的macOS应用程序，可通过热键，关键字，文本扩展等功能提高您的效率。搜索Mac和网页的内容，并通过自定义操作来控制Mac来提高生产力。</p></blockquote><p>小帽子 <code>Alfred</code>（读<code>[&#39;ælfrid]</code>） 是 macOS 平台强大的效率软件！被誉为神兵利器！我们本篇文章基于2020年1月17号更新的版本 <code>Alfred 4.0.8（Build 1135）</code>，所以如果低于此版本导致部分功能没有的，请更新最新版本。或者有新功能此版本没有提及的，请以官网为准 <a href="https://www.alfredapp.com/">Alfred - Productivity App for macOS</a>。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-4.png" alt="Alfred-4.png"></p><p>需要注意的是，本文是以提高效率为准，不会讲解如何制作 Workflows（工作流），只会讲解有那些好用的工作流。另外，网上的教程很多都是15、16年为主，新的教程还是以其一功能为主讲，我一直思考，<code>怎么才能让新手从入门到精通 Alfred 呢？</code>，所以，为了让大家全面的了解，这里会从 Alfred 的偏好设置开始讲解，从上往下，一个一个解析，中间串插对整个功能的讲解。另外，如果操作或流程很简单的，也不提供截图。下面就让我们开始吧！</p><h3 id="General（通用设置）"><a href="#General（通用设置）" class="headerlink" title="General（通用设置）"></a>General（通用设置）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-General.png" alt="Alfred-General.png"></p><ul><li><p><code>Startup</code>（启动）<br>勾选表示系统重启时，会自动启动 Alfred。</p></li><li><p><code>Alfred Hotkey</code>（Alfred 热键）<br>设置显示 Alfred 输入框的键盘快捷键，我一般设置为 <code>command + Space</code>，也就是苹果键（Apple key，<code>⌘</code>）和空格键组合，很多人使用 <code>command + command</code> 或 <code>option + option</code>，双同键的组合，我认为是不够高效的。因为，你要双击（<code>double click</code>）才能响应，还是慢了一拍！</p></li><li><p><code>Where are you</code>（你在哪）<br>设置你所有的国家或地区，目的是更加人性化的内容，比如谷歌搜索或易呗（ebay），中国就淘宝什么的，目前这个针对中国区还没有什么作用。</p></li><li><p><code>Permissions</code>（权限）<br>点击 <code>Request Permissions...</code> 打开权限许可说明，主要是授权 Alfred 可以访问系统和电脑的那些权限：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-General-Permissions-Request-Permissions.png" alt="Alfred-General-Permissions-Request-Permissions.png"></p></li></ul><p>这个权限的设置，在下面的 <code>其它问题汇总</code> 再进一步说明，因为比较多，不影响大家阅读，我们先说重点！</p><h3 id="Features（主要功能）"><a href="#Features（主要功能）" class="headerlink" title="Features（主要功能）"></a>Features（主要功能）</h3><h4 id="Default-Results（默认结果）"><a href="#Default-Results（默认结果）" class="headerlink" title="Default Results（默认结果）"></a>Default Results（默认结果）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Default-Results.png" alt="Alfred-Features-Default-Results.png"><br>主要是设置搜索相关的默认配置。</p><ul><li><code>Applecations</code><br>设置模糊搜索应用名字还有是不是搜索应用内的资源，比如搜索 <code>梁静茹</code> 可能在<code>Music.app</code>。 第二个勾选项 <code>Match Application’s keywords in default results</code> 的作用是匹配应用的关键词元数据。我们以苹果的 音乐App 为例说明，简介可以看到有一栏是关键词：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Default-Results-AppKeywords.png" alt="Alfred-Features-Default-Results-AppKeywords.png"></li></ul><p>App添加这些关键词信息，就是为了用户在 <code>Spotlight</code>、<code>Alfred</code>、<code>LaunchBar</code> 等应用搜索这些词语时，匹配并显示出来。一方面，这确实可以带来一定的便利，但是另一方面也会扰乱搜索结果，所以 Alfred 新版本默认禁止(取消勾选)了这种乱刷存在感的行为。不过，如果觉得用着还不错，可以自己重新勾选上啊。</p><ul><li><p><code>Essentials</code>(要点)<br>搜索系统偏好设置和联系人信息的内容。</p></li><li><p><code>Extras</code>（额外部分）<br>搜索 文件夹、文档、文本文件、图片、压缩文件、苹果脚本等内容。在右侧 <code>Advanced…</code> 按钮，可以自定添加格式内容，比如思维导图的 <code>.mmap</code> 和 markdown 文件的 <code>.md</code> ，根据自身需求可以添加对应的文件类型让 Alfred 去检索这些文件。只需要将 Alfred 无法检索到的文件类型拖至弹出的框内即可添加。</p></li><li><p><code>Unintelligent</code>（不智能的）<br>搜索全部类型的文件。（不推荐）</p></li><li><p><code>Search Scope</code>（搜索范围）<br>可以设置搜索的文件空间或目录等。</p></li><li><p><code>Fallbacks</code>（退路，应变计划）<br>用于设置搜索没有找到结果时，显示的可选的进一步的操作。<br>类似如下图，搜索wq时没有结果会显示一个可操作列表，前面2项是 Alfred自带的搜索项，剩下的是<code>自定义搜索</code>，可以自定添加或更改显示的操作项。（自定义搜索的内容参考下一节<code>Web Search（网站搜索）</code>的内容）。<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Default-Results-Fallbacks.png" alt="Alfred-Features-Default-Results-Fallbacks.png"></p></li></ul><h4 id="File-Search（文件搜索）"><a href="#File-Search（文件搜索）" class="headerlink" title="File Search（文件搜索）"></a>File Search（文件搜索）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-File-Search.png" alt="Alfred-Features-File-Search.png"></p><p>通过关键字快速和突出搜索的文件的结果。</p><h5 id="Search（搜索）标签"><a href="#Search（搜索）标签" class="headerlink" title="Search（搜索）标签"></a>Search（搜索）标签</h5><ul><li><p><code>Quick Search</code>（快速搜索）<br>通过<code>&#39;</code>或 <code>spacebar</code>空格键可以可以快速查找文件。</p></li><li><p><code>Opening Files</code><br>直接打开文件（默认就是open，不敲入关键字，即搜索文件名后回车，就是直接打开该文件）。默认是<code>open</code>，我一般设置为<code>op</code>，找到文件后，点击或按右边提示的快捷键，可以快速打开文件。比如：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-File-Search-Open.png" alt="Open.png"></p></li><li><p><code>Revealing Files</code><br>打开文件所在的文件夹。默认用<code>find</code>，我一般设置为<code>fd</code>，fd + 搜索词，找到文件后，点击或按右边提示的快捷键，可以快速打开文件所在的文件夹。（这里省略图示，可以自己试试。）</p></li><li><p><code>Inside Files</code><br>在文件内搜索内容。默认用<code>in</code>，in + 文件内容的搜索词，找到文件后，点击或按右边提示的快捷键，可以快速打开文件。（这里省略图示，可以自己试试。）</p></li><li><p><code>File Tags</code><br>搜索文件标签。</p></li><li><p><code>Don&#39;t Show</code><br>设置不搜索的内容，比如 Emails(邮箱内容）、Bookmarks（网页书签）、Music（音乐）等等。</p></li><li><p><code>Result Limit</code><br>显示的搜索结果条数，可以设置为<code>20</code>、<code>30</code>、<code>40</code>条。</p></li></ul><h5 id="Navigation（导航）标签"><a href="#Navigation（导航）标签" class="headerlink" title="Navigation（导航）标签"></a>Navigation（导航）标签</h5><p>在 Alfred 的输入栏中浏览 macOS 的文件系统，而无需用鼠标操作Finder。熟悉命令行的同学都知道，在 Unix/Linux 系统中有两个很重要的符号：<code>/</code> 和 <code>~</code>。**/** 代表文件系统的根目录，所有的子文件都挂在这个根目录下；**~** 代表当前用户目录，里面包含了当前用户的所有资料，也就是打开 Finder（访达）之后你在侧边栏可以看到的目录。利用 Alfred 进行文件浏览也是基于这两个符号：</p><ul><li><code>/</code>：在 Alfred 输入栏中首先输入“/”，会带你进入 macOS根目录；</li><li><code>~</code>：在 Alfred 输入栏中首先输入“~”，会带你进入当前的用户目录；</li></ul><ul><li><p><code>Filtering</code><br>启动模糊搜索。比如有一些目录可能我们不记得，例如 Documents、Desktop、Downloads 目录，我们可以搜索 <code>d*n</code>，用<code>*</code> 来进行模糊搜索。</p></li><li><p><code>Shortcuts</code><br>设置快捷键导航。<br><code>Use ← and → for folder navigation</code>：勾选这个复选框之后，可以利用 <code>←/→</code>（Left/Right键）来进入上一级目录或者下一级目录。但是 Alfred 默认<code>→</code>（Right键）为打开<code>Actions</code>（动作面板，将在后面介绍），因此如果你不想与此功能冲突的话，可以利用Alfred 默认的 <code>Command + Up</code> 和 <code>Command + Down</code> 来进行导览，或者更改 <code>Actions</code>（动作面板）使用的快捷键，下方有说明。<br><code>Use ↩︎ to open folders in Finder</code>：勾选这个复选框后，按下 回车键（Enter键）后会直接在 Finder 中打开选中的文件夹。</p></li><li><p><code>Previous Path</code><br>可以在这里设置热键和关键字，来进入上一个打开过的目录。</p></li></ul><p>文件导航中，左侧是文件列表，右侧是文件预览。新版本在右下角添加了一个配置菜单，点击 ⚙️️ 图标可以看到有这些选项：</p><ul><li>排序方式：名称、创建日期、修改日期</li><li>文件夹置顶</li><li>逆序排列，快捷键：<code>⇧Shift + ⌘Command + S</code></li><li>隐藏预览面板，快捷键：<code>⇧Shift + ⌘Command + I</code></li></ul><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-File-Search-Navigation.png" alt="Alfred-Features-File-Search-Navigation.png"></p><h5 id="Buffer（缓存）标签"><a href="#Buffer（缓存）标签" class="headerlink" title="Buffer（缓存）标签"></a>Buffer（缓存）标签</h5><p>文件多选缓存操作，可以从不同的文件夹中选择多个文件，或者同时对多个文件进行相同的操作等，可以进行批量操作，打开、共享、删除等等。</p><ul><li>Alt + ↑ ：把该文件加入列表；</li><li>Alt + ↓ ：把该文件加入列表，光标跳向下一个文件；</li><li>Alt + ← ：删除列表最后一个文件；</li><li>Alt + → ：对列表文件进行统一操作。</li></ul><p>利用以上的快捷键将一系列的文件加入到文件缓存区中（文件缓存区位于 Alfred 输入框上方），然后利用 <code>fn</code> 键或 <code>ctrl</code> 键、<code>⇥</code>键（Alt + Right键）等打开 <code>Actions</code>（动作面板）对这些文件进行同一操作。</p><ul><li><p><code>Buffer Clearing</code><br>设置操作缓存文件后从缓存区清除文件，如果5分钟不使用缓存文件时也清除。</p></li><li><p><code>Compatibility</code>（兼容性）<br>如果上面的 <code>Alt</code>键 + 方向键与其它的操作冲突了，那么可以勾选这个复选框，那么将使用 <code>Shift + Alt + 方向键</code> 来操作文件缓存。</p></li></ul><h5 id="Advanced（增强）标签"><a href="#Advanced（增强）标签" class="headerlink" title="Advanced（增强）标签"></a>Advanced（增强）标签</h5><p>设置文件搜索的高级配置项。默认就好，一般不需要关注。</p><h4 id="Actions（动作）"><a href="#Actions（动作）" class="headerlink" title="Actions（动作）"></a>Actions（动作）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Actions.png" alt="Alfred-Features-Actions.png"></p><ul><li><p><code>Show Actions</code>（显示动作）<br>在选中的文件或者目录上点击 <code>fn</code> 键或 <code>ctrl</code> 键、<code>⇥</code>等都可以触发其额外的操作，具体的动作见 <code>File Actions</code> 标签栏。 </p></li><li><p><code>Selection Hotkey</code><br>可以设置自定义的快捷键来显示动作。</p></li><li><p><code>Action Ordering</code><br>动作排序显示，如果勾选，表示按最近使用的动作优先显示，否则就按默认排序。</p></li></ul><p>动作操作的效果示意图：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Actions-File-Actions.png" alt="Alfred-Features-Actions-File-Actions.png"></p><p>动作操作这里有一个 <code>Recent Documents...</code>，在 Alfred 输入框中输入某个App的名字，然后按下<code>fn</code> 键或 <code>ctrl</code> 键（Action设置的热键）打开关于这个App的操作列表，排在列表的第一个选项 <code>Recent Documents...</code>（App最近的浏览记录），按下回车键（Enter键）选择这个选项，就会在 Alfred 中呈现这个App最近打开的文件记录列表，你可以在其中选择想要的文件再次利用这个App打开。</p><p>这里以 Xcode app 为例：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Actions-Recent-Documents.png" alt="Alfred-Features-Actions-Recent-Documents.png"></p><p>其它的操作，大家自己试试啊！这里省略吧，太多了。</p><h4 id="Web-Search（网站搜索）"><a href="#Web-Search（网站搜索）" class="headerlink" title="Web Search（网站搜索）"></a>Web Search（网站搜索）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Web-Search.png" alt="Alfred-Features-Web-Search.png"></p><p>网页搜索 Alfred 自带了不少，比如google、wiki、bing等网页搜索，但对于国内用户来说，还是得需要自定义百度、知乎等搜索，点击右下角的 <code>Add Custom Search</code>，按照提示的格式自己增加即可。</p><p>这里用一个例子来说明自定义的网页搜索设置，比如想搜索苹果的官方文档中<code>Swift</code>，真实的链接是 <code>https://developer.apple.com/search/?q=Swift</code>，那么每次搜索苹果的文档内容时，我们都要打死浏览器，打开苹果官方文档链接，然后输入<code>Swift</code>，才能看到结果。然这个步骤，可以利用 Aflred 这个网页搜索功能整合为一步，所以我们需要一个自定义的搜索，在 Aflred 点击右下角的 <code>Add Custom Search</code>，然后填写下图的信息：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Web-Search-Custom.png" alt="Alfred-Features-Web-Search-Custom.png"></p><p>这里需要说明一下，<code>https://developer.apple.com/search/?q=&#123;query&#125;</code> 中的 <code>&#123;query&#125;</code> 是通过 Alfred 输入框输入你需要搜索的关键词的变量，<code>Title</code> 就是上图的默认显示的提示语，右边还能上传一个icon图标，用于标识此搜索，<code>Keyword</code> 是这个网页搜索的快捷键，这里用 ad （apple document）作为快捷键，<code>Validation</code> 是用于测试这个网页搜索是不是正常工作，点击右边的 Test 按钮来测试。左下方的 <code>Copy URL for sharing</code>按钮，点击一下就可以将一个带有<code>alfred://</code> 前缀的字符串拷贝到系统剪切板，然后分享给好友，在 Alfred 中粘贴后回车键就可以导入。示例：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Web-Search-Swift.png" alt="Alfred-Features-Web-Search-Swift.png"></p><p>这里列出一些搜索引擎的搜索的URL示例：</p><ul><li>掘金搜索：<code>https://juejin.im/search?type=all&amp;query=&#123;query&#125;</code></li><li>简书搜索：<code>https://www.jianshu.com/search?utf8=%E2%9C%93&amp;q=&#123;query&#125;</code></li><li>微信文章：<code>http://weixin.sogou.com/weixin?type=2&amp;query=&#123;query&#125;</code></li><li>知乎内容：<code>https://www.zhihu.com/search?type=content&amp;q=&#123;query&#125;</code></li><li>苹果文档：<code>https://developer.apple.com/documentation/&#123;query&#125;</code></li><li>淘宝搜索：<code>https://s.taobao.com/search?oe=utf-8&amp;q=&#123;query&#125;</code></li><li>京东搜索：<code>https://search.jd.com/Search?enc=utf-8&amp;keyword=&#123;query&#125;</code></li><li>GitHub：<code>https://github.com/search?utf8=%E2%9C%93&amp;q=&#123;query&#125;</code></li><li>StackOverflow：<code>https://www.stackoverflow.com/search?q=&#123;query&#125;</code></li><li>DuckDuckGo：<code>https://duckduckgo.com/?q=&#123;query&#125;</code></li><li>爱奇艺：<code>https://so.iqiyi.com/so/q_&#123;query&#125;</code></li><li>哔哩哔哩：<code>https://search.bilibili.com/all?keyword=&#123;query&#125;</code></li><li>豆瓣全站：<code>https://www.douban.com/search?q=&#123;query&#125;</code></li><li>豆瓣电影：<code>https://movie.douban.com/subject_search?search_text=&#123;query&#125;</code></li><li>少数派：<code>https://sspai.com/search/article?q=&#123;query&#125;</code></li></ul><p>另外，配置搜索引擎时，借助网站方面的 <code>OpenSearch</code> 与 <code>SearchAction</code> 协议实现自动化填写 <code>Search URL</code>。不再像以前那样需要自己寻找关键词参数位置，然后替换为 <code>&#123;query&#125;</code> 了。添加搜索引擎时，在 Search URL 文本框中填入网站的域名，然后点击右侧的 <code>Lookup</code> 就会自动分析并显示可用的搜索链接格式，接着点击 <code>Use</code> 就可以了。但遗憾的是，并非所有网站都支持 OpenSearch 或 SearchAction 协议。（大家可以用<code>https://www.pinterest.com</code> 这个体验一下。）</p><p>这里分享一些博主自定义的网络搜索：</p><ul><li>掘金搜索：<code>alfred://customsearch/Search%20Juejin%20for%20%27%7Bquery%7D%27/jj/utf8/nospace/https%3A%2F%2Fjuejin.im%2Fsearch%3Ftype%3Dall%26query%3D%7Bquery%7D</code></li><li>简书搜索：<code>alfred://customsearch/Search%20Jianshu%20for%20%27%7Bquery%7D%27/js/utf8/nospace/https%3A%2F%2Fwww.jianshu.com%2Fsearch%3Futf8%3D%25E2%259C%2593%26q%3D%7Bquery%7D</code></li><li>微信文章：<code>alfred://customsearch/Search%20Weixin%20for%20%27%7Bquery%7D%27/gzh/utf8/nospace/https%3A%2F%2Fweixin.sogou.com%2Fweixin%3Ftype%3D2%26query%3D%7Bquery%7D</code></li><li>知乎内容：<code>alfred://customsearch/Search%20Zhihu%20for%20%27%7Bquery%7D%27/zh/utf8/nospace/https%3A%2F%2Fwww.zhihu.com%2Fsearch%3Ftype%3Dcontent%26q%3D%7Bquery%7D</code></li><li>苹果文档：<code>alfred://customsearch/Search%20%EF%A3%BFDeveloper%20for%20%27%7Bquery%7D%27/ad/utf8/nospace/https%3A%2F%2Fdeveloper.apple.com%2Fsearch%2F%3Fq%3D%7Bquery%7D</code></li><li>淘宝搜索：<code>alfred://customsearch/Search%20Taobao%20for%20%27%7Bquery%7D%27/tb/utf8/nospace/https%3A%2F%2Fs.taobao.com%2Fsearch%3Foe%3Dutf-8%26f%3D8%26q%3D%7Bquery%7D</code></li><li>京东搜索：<code>alfred://customsearch/Search%20JD%20for%20%27%7Bquery%7D%27/jd/utf8/nospace/https%3A%2F%2Fsearch.jd.com%2FSearch%3Fenc%3Dutf-8%26keyword%3D%7Bquery%7D</code></li><li>GitHub：<code>alfred://customsearch/Search%20Github%20for%20%27%7Bquery%7D%27/sh/utf8/nospace/https%3A%2F%2Fgithub.com%2Fsearch%3Futf8%3D%25E2%259C%2593%26q%3D%7Bquery%7D</code></li><li>StackOverflow：<code>alfred://customsearch/Search%20StackOverflow%20for%20%27%7Bquery%7D%27/so/utf8/nospace/https%3A%2F%2Fwww.stackoverflow.com%2Fsearch%3Fq%3D%7Bquery%7D</code></li></ul><p>上面这个自定义搜索，只需在 Alfred 输入框中粘贴这个字符串（<code>alfred://</code>前缀的字符串），按下回车键就可以导入这个自定义搜索到自己的Alfred中了。</p><p>更多搜索网站的大家可以自行收藏啊~</p><h4 id="Web-Bookmarks（网页书签）"><a href="#Web-Bookmarks（网页书签）" class="headerlink" title="Web Bookmarks（网页书签）"></a>Web Bookmarks（网页书签）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Web-Bookmarks.png" alt="Alfred-Features-Web-Bookmarks.png"></p><p>目前 Alfred 支持 <code>Safari</code> 和 <code>Chrome</code> 浏览器的书签搜索。</p><ul><li><p><code>Show bookmarks</code><br>为了更加方便和快捷的搜索书签，可以设置通过 <code>via keyword</code>关键词来直接搜索书签，设置前缀<code>w</code>为搜索书签。</p></li><li><p><code>Open Bookmarks</code><br>设置搜索结果中的书签，从那个浏览器打开，可以选择默认系统的浏览器，或者书签来源的浏览器打开。</p></li></ul><p>以搜索 Safari 的书签中 <code>apple</code> 为例：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Web-Bookmarks-Search.png" alt="Alfred-Features-Web-Bookmarks-Search.png"></p><p>升级到 <code>macOS 10.15</code> 后可能会遇到书签搜索不到的问题，因为新版本 macOS 对软件访问权限做了限制，需要访问那个目录，都可以设置。所以，如果要让 Alfred 能搜索书签，需要在系统偏好设置中的 <code>安全性与隐私 </code>-&gt; <code>隐私</code> -&gt;<code>完全磁盘访问权限</code> 勾选 <code>Alfred 4.app</code>。然后在 Alfred 中输入 <code>Reload Alfred Cache</code> 后回车键，Alfred 重新加载缓存就可以搜索书签。如果不给权限，那么在 <code>macOS 10.15</code> 下无法使用书签搜索。</p><h4 id="Clipboard-History（剪切版历史）"><a href="#Clipboard-History（剪切版历史）" class="headerlink" title="Clipboard History（剪切版历史）"></a>Clipboard History（剪切版历史）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Clipboard-History.png" alt="Alfred-Features-Clipboard-History.png"></p><p>默认情况下，Alfred 是没有打开剪贴板历史这个功能的，需要自己手动去开启，可以打开文字、图片、文件列表的剪贴板功能，自定义一个快捷键，光标在需要粘贴的地方，呼出剪贴板历史，选中需要粘贴的内容，回车即可。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Clipboard-History-Examples.png" alt="Alfred-Features-Clipboard-History-Examples.png"></p><p>上图就是官网的示例，可以看出剪切版历史功能，可以显示复制的文本来源应用，时间等，图片的大小和尺寸等等。我们在来看看怎么使用，很简单，快捷键<code>⌥ + ⌘ + C</code>（<code>alt + commaand + C</code>）打开<code>剪切版历史视图</code>：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Clipboard-History-Copy-Paste.gif" alt="Alfred-Features-Clipboard-History-Copy-Paste.gif"></p><p>这个对于大量的复制和粘贴功能非常有用，具体使用大家自行体验就行。这里在说说配置内容：</p><ul><li><p><code>Clipboard History</code>（剪切版历史）<br>可以设置普通文本、图片和文件的保留时间，因为这里复制的内容，Alfred会自行保存一份，所以需要设置过期时间，避免软件占用过多的空间。</p></li><li><p><code>Viewer Hotkey</code><br>用于设置全局的快捷键，用于在所有的软件界面都能调用出来，插入剪切的内容。我一般设置为 <code>⌥ + ⌘ + C</code>（<code>alt + commaand + C</code>）。</p></li><li><p><code>Viewer Keyword</code><br>用于设置在 Alfred 输入框中输入 <code>cl</code> 后，可以快速进入到 <code>剪切版历史视图</code>，默认是 <code>clipboard</code> 关键词。另外，进入 <code>剪切版历史视图</code> 后，按 Alfred 的全局热键就可以重新回到输入框中。</p></li><li><p><code>Clear Keyword</code><br>剪切版的内容不只是占用空间，可能你还包括了敏感的内容，所以你可能想清空剪切版的内容。所以，可以点击右边的<code>Clear Now</code>马上清空（注意，此执行没有确认弹窗。清空后剪切版数据不能恢复。），或者打开 Alfred 输入框输入<code>clear</code>，可以选择清除最近的 <code>5分钟</code>、<code>15分钟</code>或<code>全部数据</code>清除，大家可以自已操作一下。</p></li><li><p><code>Snippets</code>（片段）<br><code>Snippets</code>（片段）这个功能是下面一节内容介绍，这里建议都勾选。目前下一节在说。</p></li><li><p><code>Universal</code>（通用）<br>忽略从其它苹果设置同步过来的剪切版内容。建议不勾选。同步同一个苹果账号的剪切版功能是从macOS 10.13 、iOS 12 开始的，详细可以查看苹果官方文档 <a href="https://support.apple.com/zh-cn/HT209460">使用通用剪贴板在 Apple 设备之间进行拷贝和粘贴 - Apple 支持</a>、<a href="https://support.apple.com/zh-cn/guide/iphone/iph220ea8dca/ios">在 iPhone 上使用通用剪贴板 - Apple 支持</a>、<a href="https://support.apple.com/zh-cn/guide/mac-help/mchl70368996/mac">从 Mac 上拷贝并在设备间粘贴 - Apple 支持</a>。</p></li><li><p><code>Merging</code>（合并）<br>比如你复制了三段文本，可以你需要把它们组合成一段话，默认情况下需要你按3次快捷键，但是如果你勾选了这个 <code>Merging</code> 功能，就可以实现快速的合并一段剪切的内容。具体的使用也很简单，勾选 Merging 标签的 <code>Fast append selected text</code>后就可以，剪切的文本，默认是 <code>⌘ + C</code> 剪切一次，再按一次 <code>⌘ + C</code>（按住<code>⌘</code>不动，再按下<code>C</code>键），就是触发合并操作，此时的剪切的内容会与上一次剪切的内容合并为一个。合并内容的格式可以选择是用空格、换行或者不分隔的方式来分隔文本的合并。</p></li><li><p><code>Advanced</code>（增强）<br>这里可以设置一些高级的内容，比如在剪切版历史视图的项中，按回车键后自动粘贴到当前激活的应用的输入框中；复制的内容如果是相同的内容自动移动到最前面（不会重复保存）；剪切版的内容的最大尺寸，<code>256k</code>字符串、<code>512k</code>或不限制等；忽略的Apps，可以忽略 <code>Keychain Access</code>、<code>1Password</code>、<code>Wallet</code>等可能有敏感内容的剪切内容等。</p></li></ul><h4 id="Snippets（字符片段）"><a href="#Snippets（字符片段）" class="headerlink" title="Snippets（字符片段）"></a>Snippets（字符片段）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Snippets.png" alt="Alfred-Features-Snippets.png"></p><p><code>Snippet</code>（字符片段）的作用，简单来说就是能够将自定义的文字通过<strong>关键词</strong>或者<strong>快捷键</strong>的方式插入到当前光标之后。</p><p>官方示例：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Snippets-Examples.gif" alt="Alfred-Features-Snippets-Examples.gif"></p><p>Snippets 主要是对于经常键入的文本的创建和共享代码段，例如当我们需要输入 <code>手机号码</code>、<code>URL</code>和 <code>Email</code>等等，如果每次输入都是6位字符以上，你是不是觉得很浪费时间啊！</p><p>官方示例动图的操作，输入 <code>tflip1</code> 时会自动替换为对应的一个文字表情包！有没有觉得很利害！很高效！这里使用需要先勾选配置中的 <code>Automatically expand snippets by keyword</code> 和系统偏好设置中的<code>安全性与隐私 </code>-&gt; <code>隐私</code> -&gt;<code>辅助功能</code> 勾选 <code>Alfred 4.app</code>。</p><ul><li><p><code>Viewer Hotkey</code><br>这里我们不单独设置一个快捷键，因为可以与上一节的 <code>Clipboard History</code>（剪切版历史）共用一个弹窗界面，这样更加高效，需要在 Clipboard History 的 <code>Snippets</code> 中勾选才能共用界面。</p></li><li><p><code>Snippet Keyword</code><br>用于设置在 Alfred 输入框中输入 <code>snip</code> 后，可以快速进入到 <code>剪切版历史视图</code>，默认是 <code>snip</code> 关键词，你可以更改你喜欢的词，比如 <code>sn</code>。</p></li><li><p><code>Matching</code>（匹配）<br>设置匹配 <code>Snippet</code>（字符片段）的方式，是通过 <code>Name</code>（名字）和 <code>Keyword</code>（关键字）还是包括 <code>Snippet</code>（字符片段）。</p></li></ul><p>举个我经常使用的例子，比如，我要把博客的图片都是存放在 GitHub 的仓库中，例如某张图片的下载路径为： <code>https://github.com/iHTCboy/iGallery/raw/master/BlogImages/年份/月份/xxxx.png</code>。那么如果我在写博文时，需要插入这个图片，转换为 markdown 格式图片为：<code>![xxxx.png](https://github.com/iHTCboy/iGallery/raw/master/BlogImages/年份/月份/xxxx.png)</code>，如果每次我都是手写，你说是不是非常的痛！痛！痛！因为根本就没有什么技术含量。所以，我定义了这样的快捷方式：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Snippets-Custom.png" alt="Alfred-Features-Snippets-Custom.png"></p><p>用关键词 <code>gimg</code> 就能快速输入格式 <code>![&#123;clipboard&#125;](https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/&#123;clipboard&#125;)</code>，其中 <code>&#123;clipboard&#125;</code> 是当前剪切版的内容。看看最终的效果，大家就明白有多高效：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Snippets-Copy-Paste.gif" alt="Alfred-Features-Snippets-Copy-Paste.gif"></p><p>这里，我只需要复制图片的名字（通过<code>回车键</code>快速重命名文件名的方式，<code>⌘ + A</code>全选再<code>⌘ + C</code>复制文件名，当然通过下文的 Workflows 也可以快捷复制文件名。），然后 <code>alt + ⌘ + C</code> 快速打开 <code>剪切版历史视图</code>，输入快捷关键词（<code>gimg</code>，不用输完，可以模糊匹配。）然后回车键就完成 markdown 格式图片生成。当然，最后二步可以合并成一步，就是在上图配置Snippets时，勾选 <code>Auto expansion allowed</code>，这样，直接在需要输入的地方输入 <code>gima</code> 就会显示替换的内容，又减少一步操作。大家有没有感觉到每次记忆无关的链接和信息的痛苦，<code>Snippet</code>（字符片段）是不是更快了~</p><p>另外，这里 Alfred 提供了一些替换时的 <code>占位符</code>，就是替换时，会自动变的，比如 <code>&#123;time&#125;</code>（如：16:26:23）、<code>&#123;date&#125;</code>（如：2020年2月9日）、<code>&#123;clipboard&#125;</code>（当前剪切版的内容）、<code>&#123;random&#125;</code>（注：<code>&#123;random:..&#125;</code>表示随机数，其它表示见编辑窗口的左下角<code>&#123;&#125;</code>。）等，更强大的替换操作， Alfred 建议使用 Workflow Snippet Trigger object。</p><p>例如输入 <code>Emoji</code>，可以通过 macOS 系统快捷键<code>ctrl + command + 空格键</code>打开表情界面选择需要的表情，但是这个查找过程也是很麻烦，有几百个 Emoji，所以其实可以通过 Snippet 来快速输入：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Snippets-Emoji.png" alt="Alfred-Features-Snippets-Emoji.png"></p><p>以上的 Emoji 表格，可以通过下载导入到你的 Alfred 中，下载地址：<a href="https://github.com/iHTCboy/macOSConfig/tree/master/Alfred/Snippets">macOSConfig/Alfred/Snippets · iHTCboy/macOSConfig</a>。</p><p>更多 Snippet 分组，可以查看官网推荐 <a href="https://www.alfredapp.com/extras/snippets/">Snippets - Alfred</a>：</p><ul><li><a href="https://www.alfredapp.com/media/snippets/Mac%20symbols.alfredsnippets">Mac Symbols</a>：集合了很多常用的Mac符号，比如输入 <code>!!cmd</code> 对应 <code>⌘</code>符号，“!!shift”对应“⇧”符号等等。有了这个集合，就再也不用在符号表中辛辛苦苦去找某个Mac标志符号了。</li><li><a href="https://www.alfredapp.com/media/snippets/Ascii%20Art.alfredsnippets">ASCII Art</a>：集合了一些好玩的火星文字表情，比如 <code>(╯°□°）╯︵ ┻━┻</code>。</li><li><a href="https://www.alfredapp.com/media/snippets/Currency%20Symbols.alfredsnippets">Currency Symbols</a>：集合了一些常用的货币符号，比如“::cny”代表“¥”，“::usd”代表“$”等等。</li><li><a href="https://www.alfredapp.com/media/snippets/Dynamic%20Content.alfredsnippets">Dynamic Content examples</a>：一些关于动态占位符的例子，可以学习一下使用方法。</li><li><a href="http://joelcalifa.com/blog/alfred-emoji-snippet-pack/">Emoji Pack</a>：很强大的Emoji表情包。有海量的Emoji符号，输入对应的关键字就能自动插入想要的Emoji表情，简直不要太方便，再也不用一个个翻页的去找了。</li></ul><h5 id="对-Snippet-关键字的建议"><a href="#对-Snippet-关键字的建议" class="headerlink" title="对 Snippet 关键字的建议"></a>对 Snippet 关键字的建议</h5><p>只要定义好了 Snippet 条目，则在任何文本输入的地方输入<code>分组Affix + 条目Keyword + 分组keyword</code>，就能自动展开相应的文本片段。但是这个 <code>Affix + Keyword</code> 组合的定义最好也遵循一定的规则，要容易记忆、方便输入，但同时也不能与其他热键冲突。以下是关于怎样定义 Affix 和 Keyword 的几个建议：</p><ol><li>在 Keyword 中不要使用正常词汇，以避免有些不期望的展开。比如如果你将 Keyword 定义为<code>apple</code>，则在任何输入 <code>apple</code> 的地方都会扩展成为定义好的文本片段，即使你想进行输入的就是 <code>apple</code> 这个单词本身。因此，最好能用一些特殊记法，比如将关键字每个单词的首字母捡出来连在一起等等；</li><li>所有的 Snippet 都要以非字母数字开头，比如感叹号（!），分号(;)，冒号(:)等等（类似于<code>!!office</code>，<code>::coffee</code>这样的）；</li><li>使用不常用的大写形式，比如 <code>officE</code>；</li><li>使用双重字母，比如 <code>ttime</code>。</li></ol><h5 id="动态占位符（Dynamic-Placeholders）"><a href="#动态占位符（Dynamic-Placeholders）" class="headerlink" title="动态占位符（Dynamic Placeholders）"></a>动态占位符（Dynamic Placeholders）</h5><p>很多时候，你想在文本中插入一些特定的内容，但这些内容在每一次输入的时候都会有所不同，比如比如 <code>&#123;time&#125;</code>（如：16:26:23）、<code>&#123;date&#125;</code>（如：2020年2月9日）、<code>&#123;clipboard&#125;</code>（当前剪切版的内容）、<code>&#123;random&#125;</code>（注：<code>&#123;random:..&#125;</code>表示随机数，其它表示见编辑窗口的左下角<code>&#123;&#125;</code>。）等等。</p><p><strong>显示日期时间</strong><br>显示日期时间的占位符关键字有三个：</p><ul><li><code>&#123;date&#125;</code>：显示当前日期</li><li><code>&#123;time&#125;</code>：显示当前时间</li><li><code>&#123;datetime&#125;</code>：显示当前日期和时间</li></ul><p>日期和时间都有<code>short</code>、<code>medium</code>、<code>long</code>和<code>full</code>这几种显示方式，Alfred 默认的为midium。要想改变显示方式，只需在关键字后面接上相应的方式名称即可，例如<code>&#123;date:long&#125;</code>。这些显示方式的具体格式可以在系统的 <code>偏好设置设置 </code> -&gt; <code>语言和区域</code> -&gt; <code>高级</code> 中查看.</p><p>不仅能显示当前时间，还可以利用加减算数符号进行计算之后，显示过去或者未来的日期时间，比如 <code>&#123;date +1D&#125;</code> 会显示明天的日期，<code>&#123;time -3h -30m&#125;</code> 会显示3个半小时之前的时间等等。支持的算子有以下几种：</p><ul><li>1Y：年</li><li>1M：月</li><li>1D：天</li><li>1h：小时</li><li>1m：分钟</li><li>1s：秒</li></ul><p>在用算式计算时间时，同时也能接上显示方式，按照需要的格式显示相应的日期时间，比如<code>&#123;time -2h -20m:long&#125;</code>，<code>&#123;date -2m:short&#125;</code>。</p><p><strong>剪切板内容</strong><br>利用 <code>&#123;clipboard&#125;</code> 的位移功能来选择不同顺序的剪切板文本，需要注意的是，这里的位移首先是从数字0开始，而不是1，<code>&#123;clipboard:0&#125;</code> 代表剪切板第一项内容，<code>&#123;clipboard:1&#125;</code>为第二项内容，<code>&#123;clipboard:2&#125;</code> 为第三项，以此类推。{clipboard}和{clipboard:0}的意义相同。</p><p>还可以加上一些转换命令，对剪切板中的文本进行格式转换：</p><ul><li><code>&#123;clipboard:uppercase&#125;</code>：将文本全部转换为大写；</li><li><code>&#123;clipboard:lowercase&#125;</code>：将文本全部转换为小写；</li><li><code>&#123;clipboard:capitals&#125;</code>：将文本中每个单词的首字母变为大写。</li><li><ul><li><code>&#123;clipboard:trim&#125;</code>：将文本中前后的换行、空格等空白字符删除。</li></ul></li></ul><p><strong>光标位置</strong><br>利用 <code>&#123;cursor&#125;</code> 占位符，可以在输入 Snippet 扩展为对应文字后，光标自动定位到{cursor} 在文本中的位置，方便之后对某些内容的输入。</p><p><strong>随机值</strong><br>随机值占位符 <code>&#123;random&#125;</code>，包含：</p><ul><li>随机的通用唯一标识符 UUID： <code>&#123;random:UUID&#125;</code>，形如 5FAF0AC6-B410-446C-A311-E41074205A05</li><li>随机数字：<code>&#123;random:1..10&#125;</code> </li><li>列表中的随机项：<code>&#123;random:苹果,香蕉,梨,葡萄,橙子&#125;</code></li></ul><p><strong>修饰符（modifier）</strong><br>4.0 版本引入了形如 <code>&#123;placeholder:variation.modifier&#125;</code> 的占位符语法，可分为三部份：placeholder 占位符类别、variation 变种（可理解为参数或子类别）、modifier 修饰符。生成 1 到 10 之间随机数字的占位符 <code>&#123;random:1..10&#125;</code> 中 <code>random</code> 是 placeholder 占位符类别，<code>1..10</code> 部分是 variation 变种，而 <code>modifier</code> 修饰符部分，可以选择这些：</p><ul><li><code>trim</code>：删去内容前后的换行、空格等空白字符。</li><li><code>reverse</code>：文本反转。</li><li><code>stripdiacritics</code>：去除重音标记，如 å 变为 a。</li><li><code>stripnonalphanumeric</code>：去除标点符号、Emoji 等非字母数字的字符。</li><li><code>uppercase</code>、<code>lowercase</code>、<code>capitalcase</code>：大写、小写、首字母大写转换。</li></ul><p>这些修饰符同样可用于剪贴板占位符、Workflow 内的变量，例如 <code>&#123;clipboard:3.reverse&#125;</code> 代表反转第三条剪贴板历史的内容；<code>&#123;var:result.trim.uppercase&#125;</code> 代表将 result 变量的内容，删除前后空白字符后，再转换为大写。可以看到，修饰符部分支持复合连用。</p><h5 id="富文本（Rich-Text）"><a href="#富文本（Rich-Text）" class="headerlink" title="富文本（Rich Text）"></a>富文本（Rich Text）</h5><p>4.0 版本加入了富文本支持，对于编写邮件等日常事务很有帮助，进一步扩展了使用场景。附加的编辑菜单，支持字体、粗体/斜体/下划线、颜色、复制/粘贴格式等简单的调整选项。另外，还能够自动识别副本文中的链接文本。如果这些编辑功能不能满足要求，我们也可以在「文本编辑」应用中编辑后粘贴过来。富文本在 Snippet 的列表中用 ✴️️ 加以标记。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Snippets-RichText.png" alt="Alfred-Features-Snippets-RichText.png"></p><p>关于 Snippets 的使用，有很多技巧可以灵活使用，这里主要通过这2个，大家可以自己思考定义需要的片段！</p><h4 id="Calculator（计算器）"><a href="#Calculator（计算器）" class="headerlink" title="Calculator（计算器）"></a>Calculator（计算器）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Calculator.png" alt="Alfred-Features-Calculator.png"></p><ul><li><p><code>Standard</code>（标准）<br>Alfred 也支持计算器计算可以简单地输入 <code>16 * 1024</code> 便能够计算出结果，敲击回车键之后能够自动保存到剪贴板中，方便快速复制和使用。当然也可以连续的输入 <code>16 * 1024 / 256</code>，更加复杂的 <code>(1 + 4) * 6 / (7 +3)</code>。</p></li><li><p>Advanced（增强）<br>利用 <code>GCMathParser</code> 模块，Alfred还能进行很多高级计算，比如三角运算、平方根等等。需要勾选此选项，在使用时以 <code>=</code> 作为开头，比如：<code>=log2(256) + sqrt(1024/2*3^4)</code> 表达式。<br>Alfred支持的高级计算有以下公式：<code>sin, cos, tan, log, log2, ln, exp, abs, sqrt, asin, acos, atan, sinh, cosh, tanh, asinh, acosh, atanh, ceil, floor, round, trunc, rint, near, dtor, rtod</code>等。</p></li><li><p><code>Input</code> / <code>Output</code><br>设置输入和输出的结果表达式的小数分分隔。</p></li></ul><p>非常贴心的是，当你在用 Excel 等软件进行财务计算时，数字往往会带上货币符号，比如 <code>¥</code>、<code>$</code>、<code>€</code>等。当从 Excel 拷贝这些带有符号的数字到输入框时，Alfred 会自动省略掉这些货币符号，这样你就能直接进行计算了，而不用还要在输入框中进行编辑。</p><h4 id="Dictionary（字典）"><a href="#Dictionary（字典）" class="headerlink" title="Dictionary（字典）"></a>Dictionary（字典）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Dictionary.png" alt="Alfred-Features-Dictionary.png"></p><p>Alfred 内置了词典查询并使用 Apple 自带的词典软件，可以通过 <code>define</code> 和 <code>spell</code> 两个关键词唤起。这里 define 我改为了 <code>df</code> 这里更加快捷！值得一提的是 spell 能够帮你模糊拼写，有时候忘了单词怎么拼，可以使用它。</p><p>苹果默认的词典量很少，可以点击这里下载更多扩展词典：<a href="https://github.com/iHTCboy/macOSConfig/tree/master/macOS_Dictionary">macOSConfig/macOS_Dictionary · iHTCboy/macOSConfig</a></p><p>以搜索<code>apple</code>示例：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Dictionary-Define.png" alt="Alfred-Features-Dictionary-Define.png"></p><h4 id="Contacts（联系人）"><a href="#Contacts（联系人）" class="headerlink" title="Contacts（联系人）"></a>Contacts（联系人）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Contacts.png" alt="Alfred-Features-Contacts.png"></p><p>Alfred 也内置了 <code>Contacts</code>（通信录）查询，联动 Apple 自带的通讯录，输入对应小伙伴的名词能够查看对应名片，还能够 Copy 对应的信息。这里因为我们是程序员，所以其实很少使用到名片，所以这里就不作过多说明了。</p><h4 id="Music（音乐）"><a href="#Music（音乐）" class="headerlink" title="Music（音乐）"></a>Music（音乐）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Music.png" alt="Alfred-Features-Music.png"></p><p>可以从键盘控制 iTunes与 Alfred 的内置迷你播放器，搜索你的 iTunes音乐收藏，按流派风格或随机播放专辑等。这里国区喜欢用国区的音乐App，一般人都不会购买 Apple Music 服务，所以就不多说，需要的可以自己用用啊。</p><p>官网示例：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Music-MiniPlayer.png" alt="Alfred-Features-Music-MiniPlayer.png"></p><h4 id="1Password（密码）"><a href="#1Password（密码）" class="headerlink" title="1Password（密码）"></a>1Password（密码）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-1Password.png" alt="Alfred-Features-1Password.png"></p><p>搜索并直接从 Alfred 打开你 <code>1Password</code> 中的书签。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-1Password-1Click.png" alt="Alfred-Features-1Password-1Click.png"></p><p>但是现在我已经不使用 <code>1Password</code> 密码管理软件了，因为 <code>iCloud</code> 的 <code>Passwords &amp; Accounts</code>（密码和账号）已经非常棒！不需要再记录或查找密码，当然，iCloud 现在对密码和账号的权限管理不足，没有单独的访问和管理密码，使用了macOS或iPhone的设备密码，所以如果密码泄漏就都完了。</p><h4 id="System（系统）"><a href="#System（系统）" class="headerlink" title="System（系统）"></a>System（系统）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-System.png" alt="Alfred-Features-System.png"></p><p>Alfred 支持系统功能操作，例如：<code>Screen Saver</code>（显示待机屏幕）、<code>Empty Trash</code>（清空回收站）、<code>Log Out</code>（登出当前用户）、<code>Sleep</code>（睡眠模式）、<code>Sleep Displays</code>（关闭屏幕显示）、<code>Lock</code>（锁屏）、 <code>Restart</code>（重启）、<code>Shut Down</code>（关机）、<code>Volume Up</code>（增加音量）、<code>Volume Down</code>（减少音量）、<code>Toggle Mute</code>（静音）等快捷命令。</p><p>针对应用程序可以：<code>Hide</code>（隐藏）、<code>Quit</code>（退出程序）、<code>Force Quit</code>（强制退出）、<code>Quit All</code>（退出所有程序）。</p><p><code>Eject</code> 是弹出磁盘、存储卡或者虚拟磁盘镜像，如 .dmg 挂载后的磁盘。<code>Eject All</code>是全部弹出。</p><p>以上的操作，都是可以自定义关键字，另外有一些后面带 <code>Confirm</code>的，表示是一些危险的操作，可以勾选，在操作时会先弹窗提示操作的风险。</p><p>比较常用的推荐：<code>Lock</code> 锁屏，放心离开办公位，开会！如果是去厕所，则可以用 <code>Sleep Displays</code>，临时关闭屏幕；<code>Empty</code> 清空回收站。</p><h4 id="Terminal（终端）"><a href="#Terminal（终端）" class="headerlink" title="Terminal（终端）"></a>Terminal（终端）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Terminal.png" alt="Alfred-Features-Terminal.png"></p><p>从 Alfred 在终端中运行命令和脚本，运行 shell 和终端命令，可以设置使用 <code>&gt;</code> 或其它更改为前缀符号来表示当前要执行命令，默认是打开 macOS 的<code>终端</code>软件，也可以更改为打开 <code>iTerm</code>，关于 iTerm 软件的使用和快捷键可以查看我之前的文章 <a href="https://ihtcboy.com/2018/08/03/2018-08-03_iTerm%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%B0%8F%E8%AE%B0/">iTerm2快捷键小记</a>。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Terminal-Shell.png" alt="Alfred-Features-Terminal-Shell.png"></p><p>更改命令从 <code>iTerm</code> 打开的方式很简单，在 <code>Application</code> 选择为 <code>Custom</code>（自定义），然后在下方的文本框输入下面的苹果脚本代码就可以：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">on</span> alfred_script(q)  </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">application</span> <span class="string">&quot;iTerm2&quot;</span> <span class="keyword">is</span> <span class="built_in">running</span> <span class="keyword">or</span> <span class="built_in">application</span> <span class="string">&quot;iTerm&quot;</span> <span class="keyword">is</span> <span class="built_in">running</span> <span class="keyword">then</span>  </span><br><span class="line">        <span class="built_in">run script</span> <span class="string">&quot;  </span></span><br><span class="line"><span class="string">            on run &#123;q&#125;  </span></span><br><span class="line"><span class="string">                tell application \&quot;:Applications:iTerm.app\&quot;  </span></span><br><span class="line"><span class="string">                    activate  </span></span><br><span class="line"><span class="string">                    try  </span></span><br><span class="line"><span class="string">                        select first window  </span></span><br><span class="line"><span class="string">                        set onlywindow to false  </span></span><br><span class="line"><span class="string">                    on error  </span></span><br><span class="line"><span class="string">                        create window with default profile  </span></span><br><span class="line"><span class="string">                        select first window  </span></span><br><span class="line"><span class="string">                        set onlywindow to true  </span></span><br><span class="line"><span class="string">                    end try  </span></span><br><span class="line"><span class="string">                    tell current session of the first window  </span></span><br><span class="line"><span class="string">                        if onlywindow is false then  </span></span><br><span class="line"><span class="string">                            tell split vertically with default profile  </span></span><br><span class="line"><span class="string">                                write text q  </span></span><br><span class="line"><span class="string">                            end tell  </span></span><br><span class="line"><span class="string">                        end if  </span></span><br><span class="line"><span class="string">                    end tell  </span></span><br><span class="line"><span class="string">                end tell  </span></span><br><span class="line"><span class="string">            end run  </span></span><br><span class="line"><span class="string">        &quot;</span> <span class="keyword">with</span> parameters &#123;q&#125;  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="built_in">run script</span> <span class="string">&quot;  </span></span><br><span class="line"><span class="string">            on run &#123;q&#125;  </span></span><br><span class="line"><span class="string">                tell application \&quot;:Applications:iTerm.app\&quot;  </span></span><br><span class="line"><span class="string">                    activate  </span></span><br><span class="line"><span class="string">                    try  </span></span><br><span class="line"><span class="string">                        select first window  </span></span><br><span class="line"><span class="string">                    on error  </span></span><br><span class="line"><span class="string">                        create window with default profile  </span></span><br><span class="line"><span class="string">                        select first window  </span></span><br><span class="line"><span class="string">                    end try  </span></span><br><span class="line"><span class="string">                    tell the first window  </span></span><br><span class="line"><span class="string">                        tell current session to write text q  </span></span><br><span class="line"><span class="string">                    end tell  </span></span><br><span class="line"><span class="string">                end tell  </span></span><br><span class="line"><span class="string">            end run  </span></span><br><span class="line"><span class="string">        &quot;</span> <span class="keyword">with</span> parameters &#123;q&#125;  </span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>  </span><br><span class="line"><span class="keyword">end</span> alfred_script</span><br></pre></td></tr></table></figure><h4 id="Large-Type（放大镜风格）"><a href="#Large-Type（放大镜风格）" class="headerlink" title="Large Type（放大镜风格）"></a>Large Type（放大镜风格）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Large-Type.png" alt="Alfred-Features-Large-Type.png"></p><p>一些执行结果的文本可能为了方便其它人？需要显示放大的效果，这里就不多说，感觉可以大家用的不多。例如执行 <code>2^10</code> 的结果，按 <code>comd + L</code> 快捷键就可以显示：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Large-Type-Calculator.png" alt="Alfred-Features-Large-Type-Calculator.png"></p><h4 id="Previews（预览）"><a href="#Previews（预览）" class="headerlink" title="Previews（预览）"></a>Previews（预览）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Features-Previews.png" alt="Alfred-Features-Previews.png"></p><p>熟悉 macOS 系统的同学都知道，macOS 有一个很方便的功能叫 <code>Quick Look</code>，就是在 Finder 中选中文件后按下 <code>空格键</code>（Space键），就能在不打开应用程序的情况下对文件进行快速预览，比如PDF、图片、视频、音频文件等等。Alfred 也集成了这一功能，不过此时的快捷键就不是Space了，而是 <code>⇧</code>键（<code>shift</code>键）。在 Alfred 的搜索结果列表中选中想要进行预览的文件，按下 shift键就能利用 Quick Look 进行预览了。有时候对某些文件或者某些路径下的文件进行预览，如果你不想对这些文件或者路径下的文件进行预览，可以在 <code>No Previews For</code> 和 <code>No Previews In</code>中设置。</p><h3 id="Workflows（工作流）"><a href="#Workflows（工作流）" class="headerlink" title="Workflows（工作流）"></a>Workflows（工作流）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Workflows.png" alt="Alfred-Workflows.png"></p><p><code>Workflows</code> 翻译中文为<strong>工作流</strong>，应该也比较好理解。刚才上面介绍的功能，有一部分就是工作流，可以理解为Alfred自带的工作流。类似的，你是不是能想到一些可以定制化的操作流程呢？所以，当然也可以使用第三方的工作流，或者自己定义自己的工作流！</p><p>如果想要使用第三方的或者自定义的工作流，需要支付购买Alfred的<code>PowerPack</code>（动力组），Alfred的 PowerPack 是最值得购买的服务，没有之一。因为如果使用 Alfred 而没有 PowerPack 授权，那 Alfred 的强大的功能相当失去了左右臂。关于 PowerPack 细节我们在下一节内容在讨论，我们接着说 Workflows（工作流）。</p><p>Alfred 安装完「Powerpack」，就像车体安装了引擎，余下的事情就看我们如何 DIY，让引擎为我们提供无限动力。而引擎提供动力的燃料我们称其为 <code>Workflow</code>。官方对于 workflow 是这样描述的：</p><blockquote><p>With Alfred’s Powerpack and workflows, you can extend Alfred and get things done in your own way. Replace repetitive tasks with workflows, and boost your productivity.<br>Discover the abundance of workflows that integrate with your favourite Mac applications and web services, from social networks and note-taking apps to shopping and music services.<br>We’ve hand-picked a few of the best workflows here. You’ll find hundreds more on <a href="http://www.packal.org/">Packal</a>, a brilliant user-created repository for workflows, as well as on <a href="https://alfredforum.com/">Alfred Forum</a>, where you’ll also find help in creating your own workflows.<br>借助Alfred的Powerpack和工作流程，您可以扩展Alfred并以自己的方式完成工作。用工作流替换重复的任务，并提高工作效率。<br>发现丰富的工作流程，这些工作流程与您喜欢的Mac应用程序和Web服务集成在一起，从社交网络和记笔记应用程序到购物和音乐服务。<br>我们在这里手工挑选了一些最佳的工作流程。在 <a href="http://www.packal.org/">Packal</a>（一个出色的由用户创建上传的workflows的网站）上以及 <a href="https://alfredforum.com/">Alfred Forum</a>（您可以在其中找到有关创建自己的workflows的帮助）的更多信息。</p></blockquote><h4 id="认识-Workflows-结构"><a href="#认识-Workflows-结构" class="headerlink" title="认识 Workflows 结构"></a>认识 Workflows 结构</h4><p>实现 WorkFlows 的四个基本对象：<code>trigger</code>、<code>keyword</code>、<code>action</code>、<code>output</code>。Alfred 通过将这四个基本对象合理链接「Connect」，便能实现各种高级功能。而在 Alfred 的 Workflow 配置界面中，大体上可以将其分为三栏，trigger 和 keyword 都会触发后续行为，所以归到「原因」类；Action 是「过程」类，也是 workflow 的核心，它负责处理用户需求；而 output 是「结果」类，负责把 action 的结果以一定的形式传递给用户，可以是直接屏显，也可以是另存为文件，也可以是返回到最后一个程序的输入框中。总之这三个类别「四个对象」各司其职，最终可以完成较为复杂的数据处理和用户需求。而这四个对象都可以用「线」链接，来形成直接或间接的条件结果关系。</p><p>本文主要是提高效率，所以关于如何自定义 Workflows（工作流）暂时不讲解，后面有需要在回来增加，原因 Workflow 创作的门槛比较低，类似iOS的 workflows，同时 workflow 支持的编程语言也非常多。可以参考现有的那些 Workflows（工作流），可以看到他们是怎么构建和流程的。另外，也可以参考我写过的 Workflows：<a href="https://ihtcboy.com/2019/11/17/2019-11-17_%E4%B8%80%E4%B8%AAAlfred%E7%9A%84Workflow%E8%81%8A%E5%A4%A9%E5%86%85%E5%AE%B9%E5%BC%95%E7%94%A8%E6%B6%88%E6%81%AF/">用 Alfred Workflow 实现聊天内容快速引用回复</a>，借鉴一些痛点，来实现自己的工作流！</p><p>下面会列出我现在使用的一些高效的 Workflows（工作流）插件，因为太多，所以就不全部都介绍，大家可以在这里看到我使用的全部 Alfred 相关的内容：<a href="https://github.com/iHTCboy/macOSConfig/tree/master/Alfred">macOSConfig/Alfred - iHTCboy</a></p><h4 id="高效-Workflows-推荐"><a href="#高效-Workflows-推荐" class="headerlink" title="高效 Workflows 推荐"></a>高效 Workflows 推荐</h4><ul><li><strong>最近使用的文件/应用等</strong><br>最近打开的文档：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Workflows-Recent-Documents.png" alt="Workflows-Recent-Documents.png"></li></ul><p>最近打开的应用：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Workflows-Recent-Apps.png" alt="Workflows-Recent-Apps.png"></p><p>教程：<a href="https://sspai.com/post/47063">妙用 Alfred 让你最近使用的文件触手可及</a><br>下载：<a href="https://github.com/mpco/AlfredWorkflow-Recent-Documents/releases">mpco/AlfredWorkflow-Recent-Documents</a></p><ul><li><p><strong>Finder路径快速打开切换到终端（iTerm）的路径</strong><br>下载：<a href="http://www.packal.org/workflow/terminalfinder">TerminalFinder | Packal</a></p></li><li><p><strong>快速复制当前文件夹路径或者文件名字</strong><br>此插件来源：<a href="https://github.com/hzlzh/Alfred-Workflows">hzlzh/Alfred-Workflows</a>，下面这个下载链接是博主改造后的，增加了文件名的复制，和使用最新的 Finder 图标。快捷复制当前Finder选择的文件(<code>cp</code>)的文件路径或文件名(<code>cpn</code>)。<br>下载：<a href="https://github.com/iHTCboy/macOSConfig/tree/master/Alfred">macOSConfig/Alfred at master · iHTCboy/macOSConfig</a></p></li><li><p><strong>Xcode 开发者清理 DerivedData 数据</strong><br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Workflows-Clear-Xcode-DerivedData.png" alt="Workflows-Clear-Xcode-DerivedData.png"><br>下载：<a href="https://github.com/ChopinChao/xcdd_workflow">ChopinChao/xcdd_workflow: a simple xcdd workflow for Alfred2</a></p></li><li><p><strong>全局打开App（可自定义快捷键）</strong><br>教程：<a href="http://mac.bestswifter.com/mac-gong-zuo-liu/you-xiu-workflow-tui-jian.html">优秀 workflow 推荐 · GitBook</a><br>下载：<a href="https://github.com/bestswifter/my-workflow/blob/master/AppLauncher.alfredworkflow">my-workflow/AppLauncher.alfredworkflow · bestswifter/my-workflow</a></p></li><li><p><strong>Linux Command</strong><br>下载：<a href="https://github.com/jaywcjlove/linux-command">jaywcjlove/linux-command: Linux命令大全搜索工具，内容包含Linux命令手册、详解、学习、搜集。https://git.io/linux</a></p></li><li><p><strong>Encode / Decode</strong><br>下载：<a href="https://github.com/willfarrell/alfred-encode-decode-workflow">willfarrell/alfred-encode-decode-workflow: Encoding and decoding a sting into multiple variations.</a></p></li><li><p><strong>快速调整图片尺寸</strong><br>下载：<a href="http://www.packal.org/workflow/resize-image">Resize Image | Packal</a></p></li><li><p><strong>配合 TinyPNG 快速压缩图片</strong><br>教程：<a href="https://evolly.one/2019/04/12/77-alfred-gallery/">alfred 使用 workflows 快速进行图片压缩</a><br>下载：<a href="https://github.com/BlackwinMin/alfred-gallery/blob/master/image%20Compressor/image%20Compressor.alfredworkflow">alfred-gallery/image Compressor.alfredworkflow - BlackwinMin/alfred-gallery</a></p></li><li><p><strong>取色值工具</strong><br>下载：<a href="http://www.packal.org/workflow/colors">Colors | Packal</a></p></li><li><p><strong>快速在当前 Finder 窗口创建新文件</strong><br>下载：<a href="http://www.packal.org/workflow/newfile">NewFile | Packal</a></p></li><li><p><strong>Chrome History</strong><br>Chrome History 以及 Chrome Bookmarks 可以用于搜索 Chrome 的收藏书签和历史记录（支持模糊搜索）。<br>下载：<a href="https://github.com/tupton/alfred-chrome-history">tupton/alfred-chrome-history: Search your Google Chrome history in Alfred</a></p></li><li><p><strong>从谷歌浏览器打开URL</strong><br>下载：<a href="https://www.packal.org/workflow/alfred-chrome">Alfred Chrome | Packal</a></p></li><li><p><strong>有道翻译</strong><br>下载：<a href="https://github.com/kaiye/workflows-youdao/">kaiye/workflows-youdao: 学英语和写工具</a></p></li><li><p><strong>谷歌翻译</strong><br>下载：<a href="https://github.com/xfslove/alfred-google-translate">xfslove/alfred-google-translate: Alfred 3 workflow - translate with google api💵🚫</a></p></li><li><p><strong>聊天内容快速引用回复</strong><br>教程：<a href="https://ihtcboy.com/2019/11/17/2019-11-17_%E4%B8%80%E4%B8%AAAlfred%E7%9A%84Workflow%E8%81%8A%E5%A4%A9%E5%86%85%E5%AE%B9%E5%BC%95%E7%94%A8%E6%B6%88%E6%81%AF/">用 Alfred Workflow 实现聊天内容快速引用回复</a><br>下载：<a href="https://github.com/iHTCboy/macOSConfig/blob/master/Alfred/Reply%20Message%20v1.0.alfredworkflow">macOSConfig/Reply Message v1.0.alfredworkflow at master · iHTCboy/macOSConfig</a></p></li><li><p><strong>Evernote</strong><br>支持印象笔记的全局搜索。这功能很好很强大，能够帮助自己快速定位到具体的印象笔记的条目之上。<br>下载：<a href="https://www.alfredforum.com/topic/840-evernote-workflow-9-beta-4-alfred-4/">Evernote Workflow 9 beta 4 (Alfred 4) - Share your Workflows - Alfred App Community Forum</a></p></li><li><p><strong>货币转换</strong><br>下载：<a href="http://www.packal.org/workflow/currency-exchange">Currency Exchange | Packal</a></p></li><li><p><strong>Dash</strong><br>代码 Doc 文档全局快速搜索。<br>教程：<a href="https://www.alfredapp.com/blog/productivity/dash-quicker-api-documentation-search/">Dash: Quicker API Documentation Browsing - Alfred Blog</a></p></li><li><p><strong>世界主要城市时区查询</strong><br>下载：<a href="http://www.packal.org/workflow/timezones">TimeZones | Packal</a></p></li></ul><p>这些工作流还有很多，大家可以发挥自己的需求自定制。另外，还有非常多没有推荐的，可以参考文末的 workflows 链接大全。</p><h4 id="更多-Workflows-资源"><a href="#更多-Workflows-资源" class="headerlink" title="更多 Workflows 资源"></a>更多 Workflows 资源</h4><ul><li><p><a href="https://www.alfredapp.com/workflows/">Workflows 官方站点</a><br>官方推荐的「装机必备」系列 Workflows。</p></li><li><p><a href="http://www.packal.org/">Packal</a><br>官方推荐的 Workflows 分享站点。</p></li><li><p><a href="http://www.alfredworkflow.com/">Workflows 中文站</a><br>国人收藏的超多 Workflows.</p></li><li><p><a href="https://github.com/zenorocha/alfred-workflows">zenorocha/alfred-workflows: A collection of Alfred 3 and 4 workflows that will rock your world</a><br>这个 Github 上维护的 workflows 很赞！汇总了开发用的 workflows。</p></li><li><p><a href="http://www.alfredforum.com/">Alfred 论坛</a><br>个人开发者开发的解决比较特别的问题的插件居多。</p></li></ul><h3 id="Appearance（外观）"><a href="#Appearance（外观）" class="headerlink" title="Appearance（外观）"></a>Appearance（外观）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Appearance.png" alt="Alfred-Appearance.png"></p><p>Alfred 默认的样式是白色背景不太好看，当然也提供了几个外观样式供大家选择。另外也可以自定义外观，比如上图中博主的主题，采用了玻璃背景透明，白色输入文字，蓝色选择文字，白灰色默认文字，淡黄色快捷键文字。喜欢折腾 DIY 样式的小伙伴可以在 Appearance 面板中修改或点击 <code>+</code> 增加 Alfred 交互面板的样式。另外，也可以下载别人的外观样式，比如在网站 <a href="http://www.packal.org/">Packal</a>。</p><p>下载博主此主题外观链接：<a href="https://github.com/iHTCboy/macOSConfig/tree/master/Alfred/Appearance">iHTCboy-Theme.alfredappearance</a></p><h3 id="Remote（远程）"><a href="#Remote（远程）" class="headerlink" title="Remote（远程）"></a>Remote（远程）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Remote.png" alt="Alfred-Remote.png"></p><p>Alfred 同时也支持使用 <code>移动端版本的 Alfred</code> 来控制桌面端，下载链接 <a href="https://apps.apple.com/app/alfred-remote/id927944141?ign-mpt=uo=4">Alfred Remote on the App Store for iOS</a>。</p><p><code>Alfred Remote for iOS</code> 最新版本 1.1 是 2015年9月1日发布的，收费 30 人民币。如今5年不更新了，所以暂时不指望它带来什么高效，建议大家暂时也别下载吧。如果需要了解更多，可以参考这个文章的教程：<a href="https://sspai.com/post/28137">OS X 效率启动器 Alfred 的最佳伴侣：Alfred Remote for iOS 上手详解 - 少数派</a>。</p><h3 id="Advanced（高级）"><a href="#Advanced（高级）" class="headerlink" title="Advanced（高级）"></a>Advanced（高级）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Advanced.png" alt="Alfred-Advanced.png"></p><p>配置中有涉及一些高级配置功能，一般不需要更改配置。</p><ul><li><p><code>Files / Apps</code><br>对 Alfred 和 搜索引擎重置，<code>Clear Application Cache</code>(缓存清理)、<code>Rebuild macOS Metadata</code>(元数据重建) 。</p></li><li><p><code>Force Keyboard</code><br>就是 Alfred 输入框中默认的输入法。</p></li><li><p><code>History</code></p></li><li><p><code>Action Modifiler</code><br>搜索结果项右边的快捷键，默认是 <code>cmd + 数字</code>（cmd为苹果键 <code>⌘</code>），可以更改为 <code>^ + 数字</code>（^ 为 <code>ctrl</code> 键）。</p></li></ul><p>这里还有一些默认的动作快捷键，比如在 Alfred 输入<code>swift</code>后，通过下面三个快捷键可以快捷执行操作：</p><ul><li><code>ctrl + ↩︎</code>：在浏览器默认的搜索引擎来查询<code>swift</code>关键词。</li><li><code>alt + ↩︎</code>：打开 <code>Finder</code>（访达）的搜索框查询<code>swift</code>。</li><li><code>cmd + ↩︎</code>：打开 Alfred 搜索结果项所在的文件目录（如果是本地文件的话）。</li></ul><p>以上快捷键可以更改不能的 Action（动作），大家可以自行调整。</p><ul><li><p><code>Learning</code></p></li><li><p><code>Notifications</code></p></li><li><p><code>Network</code></p></li><li><p><code>Selection Hotkeys</code></p></li><li><p><code>Syncing</code>（同步）<br>可以设置 Alfred 所有的配置内容，包括 Workflows 工作流 和 Appearance 主题，都可以备份和同步。作者建议用 Dropbox 网盘同步，因为一些大家懂的原因，这里我建议使用 <code>iCloud Drive</code> 这样更加好！设置方式很简单，点击 <code>Set preference folder</code> 弹窗中，找到 iCloud 分类下的 iCloud Drive 目录，在目录下新建一个 <code>Alfred</code> 文件夹来存放 Alfred 所有配置的同步文件（Alfred.alfredpreferences），这样，以后如果你有多台 macOS 系统，登陆同一个 <code>Apple id</code> 账号就可以无缝的同步在所有的设备上面，不需要关注所有内容。点击 Alfred 的 <code>Reveal in Finder</code> 可以打开你设置的同步文件所在的目录。</p></li></ul><p>当然，目前每个 macOS 下的 Alfred 的 <code>Usage</code>（使用情况）不会同步共享，另外，如果你电脑的硬盘空间不足（少于20GB），<code>iCloud Drive</code>的内容在本地系统中经常被清空，导致需要在远端重新下载 Alfred 的同步文件（Alfred.alfredpreferences），只能说买电脑要空间大一点吧！</p><h3 id="Powerpack（动力组）"><a href="#Powerpack（动力组）" class="headerlink" title="Powerpack（动力组）"></a>Powerpack（动力组）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Powerpack.png" alt="Alfred-Powerpack.png"></p><p><code>Workflows</code>（工作流）扩展功能、文件导航、剪贴板历史、通讯录、iTunes Mini播放器等，都是需要购买此 <code>Powerpack</code>（动力组） 升级包的，否则免费试用版本是无法使用工作流。博主个人推荐有经济能力的人可以购买正版的授权码，因为软件的价值，本系列的第一篇文章提过。</p><p>目前只支持 <code>VISA</code>、<code>Mastercard</code>（万事达卡）、<code>AMEX</code>（American Express，美国运通）的信用卡，或者 <code>Paypal</code> 支付。所以对于中国区来说还是不太友好！目前<code>2020年</code>的V4版本的单个授权码是 <code>£25</code> 英磅，大约 <code>￥225.26</code>人民币。而超级支持者可以支付 <code>£45</code> 英磅，大约 <code>￥405.10</code>人民币，终身免费升级。注意这里是单个用户，就是一个激活码只能用于一台macOS。具体的购买流程这里省略了，有条件的同学建议按需选择购买。</p><p>关于 Alfred 那些功能需要购买 Powerpack 后才能使用的，参考官网： <a href="https://www.alfredapp.com/powerpack/">Alfred Powerpack - Take Control of Your Mac and macOS</a></p><h3 id="Usage（使用情况）"><a href="#Usage（使用情况）" class="headerlink" title="Usage（使用情况）"></a>Usage（使用情况）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Usage.png" alt="Alfred-Usage.png"></p><p>Alfred 会统计使用的情况。从上图可以看到折线图显示的是28天的使用情况（<code>当然因为编写文章时，因春节放假，所以有一个波谷区。</code>），从2019年9月2号起，使用 Alfred 达到 6321 次，平均每天使用 39 次。同时也可以看到 <code>Clipboard</code> 和 <code>Hotkeys</code> 使用最频繁。为了说明 Alfred 的潜在价值，我们不妨做一个简单的计算，假设每天我都能够保持现况以每日平均唤醒 39 次为基数。假如每次 Alfred 的操作，可以为我节省 5s 的时间（往往有些复杂的操作会大于 5s，比如去寻找一个藏得很深的文件，或者一个记不全的文件或者一个不常用的软件，或者打开一个常用的书签等等)，那么 1 年下来，竟然能够节省 0.82 天。</p><p><code> 39 * 5 * 365 / 3600 / 24 = 0.823784722 天</code></p><p>换言之，Alfred 让你的生命延长了 0.82 天！那如果是 5 年，就是 4 天啦！这里是以 39 次为基数，从本文上面的教程可以看出，一个复杂的操作节省可以有几分钟，如果重复一百次就远不止，所以，节省的时间是非常可观的！总之，大家经常有大量重复的工作流或操作步骤，这就更加可观，所以马上使用起来吧！</p><h3 id="Help（帮助）"><a href="#Help（帮助）" class="headerlink" title="Help（帮助）"></a>Help（帮助）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Help.png" alt="Alfred-Help.png"></p><p>注意页面有一个提示 <code>Try Searching the Preferences</code>，就是可以搜索软件的所有的配置项目，这个搜索功能非常有用的，因为 Alfred 有非常多的配置项，所以如果你不想一步一步点击打开，搜索永远是最快的，Alfred 中搜索 Alfred，作者还是很用心！另外在 Alfred 输入框中使用 <code>?关键词</code> 也可以搜索 Alfred 的偏好设置。</p><p>其它的就是帮助和反馈页面，点击会跳转到网页中，这里就不展开了。</p><h3 id="Update（更新）"><a href="#Update（更新）" class="headerlink" title="Update（更新）"></a>Update（更新）</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/Alfred-Update.png" alt="Alfred-Update.png"></p><p>这个更新页面也很重要，让我们了解到最新版本到底做了什么调整或新的功能。我发现很多应用没有做好 ChangeLog，至少说明软件做的不够用心，用户关心的不是你有多牛逼，自己使用自己体验，更新说明文档是一项软件开发中非常重要的一部分。这里就不细说了，有时间在写文章一起聊吧。</p><h3 id="其它问题汇总"><a href="#其它问题汇总" class="headerlink" title="其它问题汇总"></a>其它问题汇总</h3><p>在这里汇总一下，在使用 Alfred 时可能遇到的一些问题，这部分在后续会持续更新。其中，首次安装或启动时，默认会显示这样的权限弹窗：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Permissions-for-Alfred.png" alt="macOS-Permissions-for-Alfred.png"></p><p>说明权限是 Alfred 最重要和基础的必要条件，下面我们就来看看有那些必要的系统权限。</p><h4 id="macOS-系统权限问题"><a href="#macOS-系统权限问题" class="headerlink" title="macOS 系统权限问题"></a>macOS 系统权限问题</h4><p>在 macOS 10.15 后，苹果收缩了软件访问系统的各种权限，比如说硬盘、文件夹、屏幕录制、输入监视、自动化等。我们来具体说说对 Alfred 的影响：</p><ul><li><code>辅助功能</code>：允许 App 控制你的电脑。<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Preferences-UniversalAccess.png" alt="macOS-Preferences-UniversalAccess.png"></li></ul><p>在 Alfred 中用于控制电脑的时如果没有权限时：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Preferences-UniversalAccess-Alfred.png" alt="macOS-Preferences-UniversalAccess-Alfred.png"></p><ul><li><p><code>输入监视</code>：即使正在使用其它App，也允许下面的App监视来自键盘的输入。<br>在 Alfred 中应用说无处不键盘，全部都使用到键盘，其中强烈依赖的有 Snippets，另外 Workflows 也用于监听键盘。<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Preferences-Input-Monitoring.png" alt="macOS-Preferences-Input-Monitoring.png"></p></li><li><p><code>完全磁盘访问权限</code>：允许 App 访问诸如“邮件”、“信息”、Safari 浏览器、“家庭”、时间机器备份，以及此 Mac 上所有用户的部分管理设置等数据。<br>在 Alfred 中很多数据都是依赖于系统的磁盘目录。<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Preferences-Full-Access.png" alt="macOS-Preferences-Full-Access.png"></p></li><li><p><code>文件和文件夹</code>：允许App访问文件和文件夹<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Preferences-Folder-Access.png" alt="macOS-Preferences-Folder-Access.png"></p></li></ul><p>在 Alfred 中如果需要打开或跳转到相应目录都是需要文件目录权限。需要注意的时，当然勾选了上面的<code>完全磁盘访问权限</code> 后，此项默认变成默认勾选，变成无法操作的状态，这个很好理解。如果首次安装时 Alfred后，会出现访问桌面时类型的文件夹权限的提示：<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Preferences-Folder-Access-Desktop.png" alt="macOS-Preferences-Folder-Access-Desktop.png"></p><ul><li><code>自动化</code>：允许 App 控制其他 App。这将允许 App 访问这些受控制 App 中的文稿和数据，并在其中执行操作。<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/macOS-Preferences-Automation.png" alt="macOS-Preferences-Automation.png"></li></ul><p>这个 Alfred 中用到最多的是访问 Finder（访达）App。</p><p>综上，我们主要是想讲解一下系统的权限和 Alfred 使用到的权限，这样更好的了解这些权限，以便你来决定那些敏感或数据可以通过这些设置来关闭或启动，<code>在高效和隐私之间做一个平衡点</code>。</p><h4 id="书签功能搜索无结果"><a href="#书签功能搜索无结果" class="headerlink" title="书签功能搜索无结果"></a>书签功能搜索无结果</h4><p>如果你刚升级到 macOS 10.15 后，可能会出现搜索浏览器的书签没有搜索到的问题。这是因为系统权限原因，需要在系统偏好设置中的 <code>安全性与隐私 </code>-&gt; <code>隐私</code> -&gt;<code>完全磁盘访问权限</code> 勾选 <code>Alfred 4.app</code>。然后在 Alfred 中输入 <code>Reload Alfred Cache</code> 后回车键，Alfred 重新加载缓存就可以搜索书签。如果不给权限，那么在 <code>macOS 10.15</code> 下无法使用书签搜索。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>综上，我们已经把 Alfred 的所有功能都讲解完！大家是不是有一个全面的了解了呢！基于最新的 Alfred v4.0 版本！没有想到2年前立下的flag，2年后才完成，所以<code>希望这篇文章也2年内都能正确和高效的给大家指导作用！</code>（按 Alfred 更新的情况，改版不会变化很大啊~）又是万字文章，可能不是所有人都能有耐心看完，但希望你是看完并有所收获！Alfred 是 macOS 系统上<code>程序员必备的效率神器</code>！希望大家看到本文章<code>为时未晚</code>！都能更好地使用 Alfred 来提高日常的生活和工作效率啊！</p><p>由于篇幅长度的限制，部分内容的扩展和深度可以阅读下面的参考文章。建议大家看完本文后，都操作一遍，而没有使用过的同学，更加应该开始使用 Alfred！希望大家都开始自己的 Alfred 之旅！提高自己日常工作生活的效率，省时省力，<code>让效率为程序员所用！</code></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://www.alfredapp.com/">Alfred - Productivity App for macOS</a></p></li><li><p><a href="http://www.packal.org/">Packal - Alfred Workflows and Themes</a></p></li><li><p><a href="https://alfredforum.com/">Alfred Forum</a></p></li><li><p><a href="https://www.cnblogs.com/kaiye/p/5115005.html">Mac 词典工具推荐：Youdao Alfred Workflow（可同步单词本） - 猫哥_kaiye - 博客园</a></p></li><li><p><a href="https://ihtcboy.com/2019/11/17/2019-11-17_%E4%B8%80%E4%B8%AAAlfred%E7%9A%84Workflow%E8%81%8A%E5%A4%A9%E5%86%85%E5%AE%B9%E5%BC%95%E7%94%A8%E6%B6%88%E6%81%AF/">用 Alfred Workflow 实现聊天内容快速引用回复 | iHTCboy’s blog</a></p></li><li><p><a href="https://www.ezloo.com/2019/04/alfred.html">Mac OS必备工具：Alfred - 曙光博客</a></p></li><li><p><a href="http://blog.surfacew.com/tool/2016/08/03/Alfred/">Alfred 效率神器全攻略</a></p></li><li><p><a href="https://sspai.com/post/28137">OS X 效率启动器 Alfred 的最佳伴侣：Alfred Remote for iOS 上手详解 - 少数派</a></p></li><li><p><a href="https://support.apple.com/zh-cn/HT209460">使用通用剪贴板在 Apple 设备之间进行拷贝和粘贴 - Apple 支持</a></p></li><li><p><a href="https://support.apple.com/zh-cn/guide/iphone/iph220ea8dca/ios">在 iPhone 上使用通用剪贴板 - Apple 支持</a></p></li><li><p><a href="https://support.apple.com/zh-cn/guide/mac-help/mchl70368996/mac">从 Mac 上拷贝并在设备间粘贴 - Apple 支持</a></p></li><li><p><a href="https://github.com/stidio/Alfred-Workflow">stidio/Alfred-Workflow: Alfred Workflow教程与实例; CDto: 打开Terminal并转到任意文件夹或文件所在目录; Effective IP:查询本机和外网IP地址，解析任意URL和域名的IP地址，以及进行归属地和运营商查询; UpdateAllNPM: 更新所有Node.js全局模块; UpdateAllPIP: 更新所有Python模块</a></p></li><li><p><a href="http://www.lifepro.site/blog/blogdetail/84/">玩转Mac Alfred - LifePro</a></p></li><li><p><a href="https://www.kancloud.cn/chopin/mac_program/882465">2.2. Mac 第一神软 Alfred · Mac 高效实用指南 · 看云</a></p></li><li><p><a href="https://sspai.com/post/43973">总是在 Mac 「装机必备」看到的搜索利器 Alfred，究竟是怎么用的？| 新手问号 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/55098">一切为了让效率更进一步，Alfred 4.0 更新详解 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/57648">Alfred Workflow 从使用到创造 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/46034">真正提升你的输入效率，从用好 Alfred 的这个功能开始：Alfred Snippets - 少数派</a></p></li><li><p><a href="https://sspai.com/post/47063">妙用 Alfred 让你最近使用的文件触手可及 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/51174">看起来很复杂的 DEVONthink 搜索，用 Alfred Workflow 就能轻松搞定 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/47710">从 0 到 1 写一个 Alfred Workflow - 少数派</a></p></li><li><p><a href="https://sspai.com/post/48386">小白实践《从 0 到 1 写一个 Alfred Workflow》遇到的问题及解决方案 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/33460">Windows 上的 Alfred，免费开源的效率启动器：Wox - 少数派</a></p></li><li><p><a href="https://sspai.com/post/32979">从零开始学习 Alfred：基础功能及设置 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/42859">使用 AppleScript、Tags 和 Alfred 重新打造文件管理和搜索系统 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/35377">用 Ai Search 和 Drafts 实现 Alfred 的搜索体验 - 少数派</a></p></li><li><p><a href="https://sspai.com/post/32680">5 款提高文件处理效率的 Alfred 扩展 - 少数派</a></p></li><li><p><a href="https://post.smzdm.com/p/677989/">Alfred，叫你一声Mac上的效率神器你敢答应吗？_值客原创_什么值得买</a></p></li><li><p><a href="https://www.jianshu.com/p/0e78168da7ab">Mac效率神器Alfred以及常用Workflow - 简书</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/33753656">Mac效率神器Alfred系列教程—Snippets文字扩展 - 知乎</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/19986749">用Alfred大幅提升操作效率 - workflow - 知乎</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/33515314">Mac效率神器Alfred系列教程—剪切板历史记录 - 知乎</a></p></li><li><p><strong>Workflows推荐</strong></p></li><li><p><a href="https://github.com/zenorocha/alfred-workflows">zenorocha/alfred-workflows: A collection of Alfred 3 and 4 workflows that will rock your world</a></p></li><li><p><a href="https://github.com/whyliam/whyliam.workflows.youdao">whyliam/whyliam.workflows.youdao: 使用有道翻译你想知道的单词和语句</a></p></li><li><p><a href="https://github.com/kaiye/workflows-youdao/">kaiye/workflows-youdao: 学英语和写工具</a></p></li><li><p><a href="https://www.alfredforum.com/forum/3-share-your-workflows/">Share your Workflows - Alfred App Community Forum</a></p></li><li><p><a href="https://github.com/jaywcjlove/linux-command">jaywcjlove/linux-command: Linux命令大全搜索工具，内容包含Linux命令手册、详解、学习、搜集。https://git.io/linux</a></p></li><li><p><a href="https://blog.imcompany.cn/post/na-xie-ti-gao-xiao-lu-de-alfred-workflow/">那些提高效率的Alfred Workflow - I’m company</a></p></li><li><p><a href="https://github.com/hzlzh/Alfred-Workflows">hzlzh/Alfred-Workflows: Make your Alfred more powerful. (include Workflows, Extensions and Themes)</a></p></li><li><p><a href="https://github.com/willfarrell/alfred-workflows">willfarrell/alfred-workflows: Alfred Workflows for Developers</a></p></li><li><p><a href="https://github.com/hzlzh/AlfredWorkflow.com">hzlzh/AlfredWorkflow.com: A public Collection of Alfred Workflows.</a></p></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h2&gt;&lt;p&gt;之前写的《程序员的macOS系列》文章，2018年写了二篇文章：&lt;a href=&quot;https://ihtcboy.com/2018/07/15/2018-07-15_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E7%B2%BE%E9%80%89MacApp/&quot;&gt;精选Mac App&lt;/a&gt;、 &lt;a href=&quot;https://ihtcboy.com/2018/09/30/2018-09-30_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9AMac%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/&quot;&gt;Mac开发环境配置&lt;/a&gt;，至今，已经过年一年半啦！收到很多同学的点赞，最后一篇 &lt;code&gt;高效Alfred进阶&lt;/code&gt; 因为各种原因，没有写出来，所以都0202年啦！&lt;/p&gt;
&lt;p&gt;其实 &lt;code&gt;macOS&lt;/code&gt; 系统的高效，很大部分原因是因为有 &lt;code&gt;Unix/Linux&lt;/code&gt; 的相似血统，本文讲解&lt;code&gt;Alfred&lt;/code&gt;，就是效率工具的一员，相信注重效率的你，一早肯定听说过或者已经在使用，简单来说 Alfred 以键盘的高效代替鼠标操作的繁冗。还有很多效率方法，以后有机会在总结吧，大家也可以自行搜索 macOS 开发效率，博主之前也写过一些。那为什么会认为 &lt;code&gt;Alfred&lt;/code&gt; 对程序员很重要呢？如果你没有用过，相信你读完本文就会明白。虽然网上已经有很多 &lt;code&gt;Alfred&lt;/code&gt; 的教程，但是一直没有找到能相对全面，或很少从入口到进阶的文章，并且很多文章历史已经悠久，所以惟有抛砖引玉，自我总结一下，希望和大家一起努力提交效率！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ihtcboy.com/2018/07/15/2018-07-15_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E7%B2%BE%E9%80%89MacApp/&quot;&gt;程序员的macOS系列：精选Mac App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ihtcboy.com/2018/09/30/2018-09-30_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9AMac%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/&quot;&gt;程序员的macOS系列：Mac开发环境配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ihtcboy.com/2020/02/09/2020-02-09_%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS%E7%B3%BB%E5%88%97%EF%BC%9A%E9%AB%98%E6%95%88Alfred%E8%BF%9B%E9%98%B6/&quot;&gt;程序员的macOS系列：高效Alfred进阶&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前计划写《程序员的macOS系列》三篇已经完成 ✅，后续有想法在更新吧~&lt;/p&gt;
&lt;h2 id=&quot;Alfred-提高程序员-100-效率指南&quot;&gt;&lt;a href=&quot;#Alfred-提高程序员-100-效率指南&quot; class=&quot;headerlink&quot; title=&quot;Alfred 提高程序员 100% 效率指南&quot;&gt;&lt;/a&gt;Alfred 提高程序员 100% 效率指南&lt;/h2&gt;</summary>
    
    
    
    <category term="induction" scheme="https://ihtcboy.com/categories/induction/"/>
    
    
    <category term="Mac" scheme="https://ihtcboy.com/tags/Mac/"/>
    
    <category term="macOS" scheme="https://ihtcboy.com/tags/macOS/"/>
    
    <category term="Alfred" scheme="https://ihtcboy.com/tags/Alfred/"/>
    
    <category term="程序员的macOS" scheme="https://ihtcboy.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84macOS/"/>
    
  </entry>
  
  <entry>
    <title>如何建立你自己的开发知识体系</title>
    <link href="https://ihtcboy.com/2020/02/02/2020-02-02_%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    <id>https://ihtcboy.com/2020/02/02/2020-02-02_%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/</id>
    <published>2020-02-02T12:20:20.000Z</published>
    <updated>2020-09-20T09:07:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><p>首先，我认为学习总结，要有所总，所结，就是有归纳后，能用<code>自己的话</code>告诉别人！有所结，就是有所收获输出，一般我认为是<code>思维导图</code>，所以，每篇文章前，我都会先给出文章的脑图：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.png" alt="建立你自己的开发知识体系.png"></p><span id="more"></span><h3 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h3><p>学习任何文章之前，一定要有可行的<code>方法论</code>，否则很难有所突破。上面脑图中，我列出了一些个人认为非常好的方法论，所以，在学习课程前，先了解一下，对后续自学或其它的学习都会有益处。</p><h4 id="一个知识点"><a href="#一个知识点" class="headerlink" title="一个知识点"></a>一个知识点</h4><ol><li>为什么需要 <code>XXX</code></li><li>什么是 <code>XXX</code></li><li>怎么使用 <code>XXX</code></li><li>使用 <code>XXX</code> 时注意的问题</li><li><code>XXX</code> 的应用领域</li><li><code>XXX</code> 的优缺点</li><li><code>XXX</code> 触类旁通</li></ol><p>这个理论是在<code>郝斌</code>老师所录制的计算机(编程)教学视频里提到的，很适合初学者，有兴趣的大家可以自行搜索。</p><p>为什么这个很受用？因为简单的套用一下，你就知道自己是否掌握了一个知识点！</p><p>举例：</p><ol><li>为什么需要 <code>单例模式</code></li><li>什么是 <code>单例模式</code></li><li>怎么使用 <code>单例模式</code></li><li>使用 <code>单例模式</code> 时注意的问题</li><li><code>单例模式</code> 的应用领域</li><li><code>单例模式</code> 的优缺点</li><li><code>单例模式</code> 触类旁通</li></ol><h4 id="当我们在谈论性能优化时，我们在说什么？"><a href="#当我们在谈论性能优化时，我们在说什么？" class="headerlink" title="当我们在谈论性能优化时，我们在说什么？"></a>当我们在谈论性能优化时，我们在说什么？</h4><ol><li>CPU</li><li>内存</li><li>网络</li><li>I/O</li></ol><p>大家有没有发现，以上4点对应计算机的基本组成原理，<code>在谈论性能优化时，其实就是在说计算机的瓶颈！</code>，所以，当在谈论性能优化时，我们可以做的，就是把计算机的瓶颈<code>提高或转化</code>。 </p><p>单一 CPU 处理不过来，我们新加 GPU；一个 CPU 处理不来，我们8核、16核心！多核 CPU 处理不过来，我们可以<code>集群</code>！分布式！云化！</p><p>当内存不足时，我们加内存！内存<code>压缩</code>！内存<code>置换</code>！</p><p>当网络带宽不够时，我们加带宽！我们加服务器！我们加异地多端！</p><p>当I/O过高时，我们<code>取舍</code>I或O！我们把I和O<code>拆分</code>！</p><p>在深入到程序、代码中，所有的优化，是不是也一样，你要减少计算和循环次数，你要<code>节省内存开销</code>！你要<code>网络数据缓存</code>！你要<code>定量定时入库</code>！</p><p>所有的性能优化，不过如此！大家明白了吗？</p><p>移动设备时代，性能问题还有一个就是在小的空间里没有大的电池，其实就是<code>电池的瓶颈</code>！但是一般开发者并不关心，因为他们感觉自己只是开发App，使用App的是用户和他们的手机设备！电池的瓶颈有<code>消耗</code>和<code>损耗</code>2个问题，<code>消耗</code>是我们写的程序在实现功能的同时能不能减少计算量，<code>损耗</code>是我们写了一些我们并不需要的代码导致了不必要的计算量。如果平时有注意的，2015年时三星手机针对那么功耗过大的App 直接强制退出，这可能也是大家说的对中国本地化做不好的原因导致失败吧？因为优化是不是真的为了解决卡顿或性能，就一定要为所欲为呢？这也是开发者需要思考的问题。电池技术当下没有突破的时候，电量依然是非常值得关注的事情。现在iOS 和 Android 都开始统计App的电量使用情况，所以不从现在开始节能，你的App可能就被用户删除。当然，针对这些问题，iOS/macOS 系统苹果做了很多系统层级的优化，这也许也是很少开发者关心的原因，感兴趣的可以看看历年 <a href="https://developer.apple.com/videos/all-videos/?q=battery">WWDC - Apple Developer</a>，苹果很多关于电量节能有很多策略可以借鉴。</p><h4 id="换空间"><a href="#换空间" class="headerlink" title="换空间"></a>换空间</h4><ol><li>压缩</li><li>分片</li><li>索引</li></ol><p>上面说到的性能优化，从大方向时如此，然后细化到具体，会有非常多的算法或技巧，其中<code>换空间</code>就是一个经典的问题。</p><p>大家一定听说过类似：</p><ul><li>“20张100MB的图片，怎么显示在1G内存的设备上”</li><li>“在2.5亿个整数中找出不重复的整数，注，内存不足以容纳这2.5亿个整数。”</li><li>“给定a、b两个文件，各存放50亿个url，每个url各占64字节，内存限制是4G，让你找出a、b文件共同的url？”</li></ul><p>这些问题，其实解法，基本上可以用上面3个方法！</p><p>大家明白了吗？建立你自己的<code>开发知识体系</code>！其实并不难，<code>学习是没有捷径，但有方法！</code>，所以，了解和掌握更多的<code>方法论</code>，构建自己的知识体系树，这样，才是不用被动的每天在各种各样的文章中，人浮于事！</p><h4 id="学什么"><a href="#学什么" class="headerlink" title="学什么"></a>学什么</h4><ol><li>不要被难倒 —— 分治思想</li><li>不要想太简单</li><li>学习曲线陡峭度，跳过原则</li><li>多疑问，多思考，多总结</li><li>学习不仅仅是知识，还有过程</li><li>授人以鱼不如授人以渔</li></ol><p>我个人推崇 <strong>授人以鱼不如授人以渔</strong>，学习不是给你知识，而是学会如果获取知识，如何知识点串联起来，如何快速有效的掌握知识！</p><h4 id="学习技巧"><a href="#学习技巧" class="headerlink" title="学习技巧"></a>学习技巧</h4><ol><li>先实践再学理论更有感觉</li><li>按工作需要来，工作毕竟是实践，最容易有成就感的</li><li>实践&amp;思考</li><li>经验&amp;总结</li><li>方向很重要，坚持方向更重要</li><li>不断深入，理解和认知都在更新</li><li>把逻辑和流程整理出来，更清晰</li><li>尝试作为一个提供 api 的人</li><li>并不是样样精通，而是有擅长的领域。</li><li>融会贯通</li></ol><p>很多人可能迷恋/迷信学习的快捷方式，每次学习一个知识点时，总时想找到捷径在学习，往往不得其道！有需要，大家可以看看我之前的年终总结 <a href="https://ihtcboy.com/2020/01/01/2020-01-01_2019year/">2020，爱你爱你 | iHTCboy’s blog</a>，这里我就不多说了。关于学习，先深挖某一领域，经过大量的学习和实践后理解了编程的本质，从而可以灵活调配和运用自己已经积累的知识。切记！切记！切记！<code>学习是没有捷径！但有方法！</code></p><h4 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h4><ol><li>组件化是将上层业务隔离开，下层提供通用能力的一种架构模式</li><li>组件化、热修复、动态化、大前端、Flutter、小程序</li><li>提高编译速度，内存优化，性能优化，电量优化，测试驱动开发，架构设计模式和iOS中算法数据结构的使用</li></ol><p>虽然大家都是程序员，工程师，但是，所在行业不同，现实是<code>千差万别</code>的！了解和熟悉的知识也是不尽不同！如何把计算机的万千技术用到自己所在的行业？<code>每个人的精力有限，但是无极限</code>，当别人告诉你不可能时，那一定是他度量的尺子与你不同！我们度量一件事，要尽量<code>放长线，放大眼光，放高视角！</code>，对于知识点，有太多的东西，选择自己感兴趣和工作需要的，不用太关心别人的评论，绝大多数事件，不是做不来，而是需要<code>长期做</code>！</p><h4 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h4><ol><li>被别人问底层原理答不出所以然</li><li>1.业务代码谁都会写，你还会什么？</li><li>2.我觉得iOS开发不值这个价，我们公司这个价的也不是没有都是后台，前端不需要。</li><li>公司不考虑员工的成长，多待无益</li><li>成体系地提升自己的内功，完善自己，然后反哺到工作上，让工作效率和质量达到质的提升，进而从容应对技术的更新迭代</li><li>面试应聘者的时候，通常都会问他所负责项目的整体架构是怎样的。</li><li>只对自己负责的那摊子事儿说的溜，而回答所在项目整体情况时却支支吾吾，面试不会成功。</li></ol><p>如果不是自由工作者，我想大多数的国内同学都没有机会选择，所以，面试是一个总是要面对的问题，每次辞职、被辞职，大家就重新拿起试题集来刷，<code>刷题目！刷算法！刷刷刷！</code></p><p><code>所有的问题不能简单的一刀切！</code>，经过这么多年，我的理解里，问题没有对与错，好与坏。刷题目也是一样。我想说的是内力是不能一天俩天就长成，所以为面试，建立自己的开发知识体系，<code>面试题就是西天取经，每一道题目就是一个怪兽，你不可能一天就打败所有怪兽，所以，不要忽视七七四十九日的轮回。</code></p><h4 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h4><ol><li>《代码整洁之道》</li><li>《人月神话》</li></ol><p>书籍很多，好书也很多！这里暂时不列出所有值得看的技术书，因为，<code>我害怕大家一下子又回到原点，买了一堆书，然后不知道从那里开始！</code>，所以，我是不建议买书！买书是自己要系统学习的时候买！怕伤害眼睛时买，但不能因为别人推荐或感觉不错就买！要从自身出发，从自己工作，从自己从事的行业，从自己的规划发展，从自己的兴趣，<code>任何事情的起点，都是初心，不要忘了初心！</code></p><h3 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h3><p><br>关于如何建立自己的开发知识体系，以上就是我认为比较重要的点(还有很多方法论，但是多并一定是好事，以后有机会在归纳吧)，贯穿到开发的每一个细节，需要大家长期长时间的学习、研究和经历，才能打造一套属于自己的知识树，<code>任何告诉你可以复制的知识，你可以复制！但永远无法粘贴到自己脑心中！</code></p><br><p>注：更多关于 iOS 开发和程序开发相关的内容，可以查看系列，目前还在连载中 <a href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/">【学习总结】iOS开发高手课 – (连载中) | iHTCboy’s blog</a>，以上，希望对你有用！</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a></li><li><a href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/">iOS开发高手课 – 学习总结(连载) | iHTCboy’s blog</a></li><li><a href="https://ihtcboy.com/2020/01/01/2020-01-01_2019year/">2020，爱你爱你 （年终总结）| iHTCboy’s blog</a></li><li><a href="https://www.cnblogs.com/jackchen-Net/p/8111817.html">（面试）Hash表算法十道海量数据处理面试题 - CJZhaoSimons - 博客园</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，，如若转载，请注来源。</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;p&gt;首先，我认为学习总结，要有所总，所结，就是有归纳后，能用&lt;code&gt;自己的话&lt;/code&gt;告诉别人！有所结，就是有所收获输出，一般我认为是&lt;code&gt;思维导图&lt;/code&gt;，所以，每篇文章前，我都会先给出文章的脑图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/02/%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.png&quot; alt=&quot;建立你自己的开发知识体系.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="induction" scheme="https://ihtcboy.com/categories/induction/"/>
    
    
    <category term="iOS开发高手课" scheme="https://ihtcboy.com/tags/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="学习总结" scheme="https://ihtcboy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    <category term="程序员" scheme="https://ihtcboy.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
    <category term="知识体系" scheme="https://ihtcboy.com/tags/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
    <category term="学习模型" scheme="https://ihtcboy.com/tags/%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="开发技巧" scheme="https://ihtcboy.com/tags/%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>【学习总结】iOS开发高手课 -- (连载中)</title>
    <link href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    <id>https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/</id>
    <published>2020-02-01T07:49:16.000Z</published>
    <updated>2020-08-22T03:15:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><p>今年的年终总结提到，计划2020年与公司组里同学一起学习和分享， <a href="https://ming1016.github.io/categories/Programming/">戴铭</a> 老师的<a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a>，开始的想法比较简单，每周一节知识交流，然后大家一起讨论和分享，并且考虑把一些idea用于工作和项目中，促进大家进步和更好的开发。在这过程中，我想把自己经历过的或者学习过的东西，在<code>串</code>起来后，从一个<code>点</code>，到一条<code>线</code>，最后形成一个<code>面</code>，从一个面了解一个事物的多维，这样才能更好的学习和了解本质。所以，这也是后续这个系列，希望自己尽量做到，更好的角度，更高的视线，一起学习加油吧~</p><span id="more"></span><h3 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h3><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><p>以下是《iOS开发高手课 - 极客时间》的课程目录，也是学习总结系列的目录，点击下面的每篇文章就是学习总结的文章链接：</p><ul><li><del>开篇词 | 锚定一个点，然后在这个点上深耕</del></li><li><a href="https://ihtcboy.com/2020/02/02/2020-02-02_%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/">01 | 建立你自己的iOS开发知识体系</a></li><li><a href="https://ihtcboy.com/2019/12/20/2019-12-20_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE02/">02 | App 启动速度怎么做优化与监控？</a></li><li><a href="https://ihtcboy.com/2019/12/27/2019-12-27_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE03/">03 | Auto Layout 是怎么进行自动布局的，性能如何？</a></li><li><a href="https://ihtcboy.com/2020/01/03/2020-01-03_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE04/">04 | 项目大了人员多了，架构怎么设计更合理？</a></li><li><a href="https://ihtcboy.com/2020/01/10/2020-01-10_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE05/">05 | 链接器：符号是怎么绑定到地址上的？</a></li><li><a href="https://ihtcboy.com/2020/01/17/2020-01-17_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE06/">06 | App 如何通过注入动态库的方式实现极速编译调试？</a></li><li>[07 | Clang、Infer 和 OCLint ，我们应该使用谁来做静态分析？]</li><li>[08 | 如何利用 Clang 为 App 提质？]</li><li>[09 | 无侵入的埋点方案如何实现？]</li><li>[10 | 包大小：如何从资源和代码层面实现全方位瘦身？]</li><li><del>11 | 热点问题答疑（一）：基础模块问题答疑</del></li><li>[12 | iOS 崩溃千奇百怪，如何全面监控？]</li><li>[13 | 如何利用 RunLoop 原理去监控卡顿？]</li><li>[14 | 临近 OOM，如何获取详细内存分配信息，分析内存问题？]</li><li>[15 | 日志监控：怎样获取 App 中的全量日志？]</li><li>[16 | 性能监控：衡量 App 质量的那把尺]</li><li>[17 | 远超你想象的多线程的那些坑]</li><li>[18 | 怎么减少 App 电量消耗？]</li><li><del>19 | 热点问题答疑（二）：基础模块问题答疑</del></li><li>[20 | iOS开发的最佳学习路径是什么？]</li><li>[21 | 除了 Cocoa，iOS还可以用哪些 GUI 框架开发？]</li><li>[22 | 细说 iOS 响应式框架变迁，哪些思想可以为我所用？]</li><li>[23 | 如何构造酷炫的物理效果和过场动画效果？]</li><li>[24 | A／B 测试：验证决策效果的利器]</li><li>[25 | 怎样构建底层的发布和订阅事件总线？]</li><li>[26 | 如何提高 JSON 解析的性能？]</li><li>[27 | 如何用 Flexbox 思路开发？跟自动布局比，Flexbox 好在哪？]</li><li>[28 | 怎么应对各种富文本表现需求？]</li><li>[29 | 如何在 iOS 中进行面向测试驱动开发和面向行为驱动开发？]</li><li>[30 | 如何制定一套适合自己团队的 iOS 编码规范？]</li><li>[31 | iOS 开发学习资料和书单推荐]</li><li><del>32 | 热点问题答疑（三）</del></li><li>[33 | iOS 系统内核 XNU：App 如何加载？]</li><li>[34 | iOS 黑魔法 Runtime Method Swizzling 背后的原理]</li><li>[35 | libffi：动态调用和定义 C 函数]</li><li>[36 | iOS 是怎么管理内存的？]</li><li>[37 | 如何编写 Clang 插件？]</li><li>[用户故事 | 我是如何学习这个专栏的？]</li><li><del>38 | 热点问题答疑（四）</del></li><li>[39 | 打通前端与原生的桥梁：JavaScriptCore 能干哪些事情？]</li><li>[40 | React Native、Flutter 等，这些跨端方案怎么选？]</li><li>[41 | 原生布局转到前端布局，开发思路有哪些转变？]</li><li>[42 | iOS原生、大前端和Flutter分别是怎么渲染的？]</li><li>[43 | 剖析使 App 具有动态化和热更新能力的方案]</li><li>[结束语 | 慢几步，深几度]</li></ul><p>注：问题答疑文章不作总结。</p><h3 id="3、知识体系"><a href="#3、知识体系" class="headerlink" title="3、知识体系"></a>3、知识体系</h3><p>希望通过 iOS 知识体系，管中窥豹，更加全面的了解计算机科学知识，我觉得这个过程很有趣~</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.png" alt="iOS知识体系.png"></p><h3 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h3><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><ul><li><p>计划<br>每周一篇文章（一个知识点），大家了解学习和研究扩展，最后总结输出，看看对我们现有的工作和业务能不能提出新的优化或方向？</p></li><li><p>目的</p><ul><li>大家一起学习&amp;分享和成长</li><li>更全面的了解 iOS 开发技术</li><li>从学习到工作再学习，更好的学习更好的工作</li><li>提高大家的学习总结和表达能力</li><li>能对现有的工作和业务提出新的优化或方向？</li></ul></li></ul><br><p>从2019年开始与团队一起学习和分享戴老师的<a href="http://gk.link/a/10fRy">《iOS开发高手课》</a> ，因为我们团队每个人的知识和了解水平不同，所以每次分享，总有人对文章完全不懂，或者不知道学习应该从那里开始。后来我都尽可能的了解更多，让团队每个人都有找到自己的切入点，经过前期几篇文章的学习，我在分享与思考过程中，想到一个问题<code>如何写出一篇大家都能懂的技术文章？</code>，所以，我就打算把自己在学习<a href="http://gk.link/a/10fRy">《iOS开发高手课》</a> 查找的资料和学习思考的成果，总结成学习总结系列文章，希望入门的可以看得懂，深入的可以进一步深入。所以，大家如果看戴老师的文章不太理解的，可以先看看本系列文章，然后再回去看专栏，我相信你会有更多的收获~</p><p>目前已经分享了几篇文章，学习原文过程中，依然有很多未知，同时也查阅了很多资料，可能存在一些错误，欢迎评论区一起交流。计划后续是一周更新一篇，也要一年的时间，学习是一个漫长的过程，是一个滴水穿石的过程，坚持必定有大收获。所以，分享出来，希望大家一起学习和提升，也是自己总结知识体系，厚积薄发，一起加油吧！</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://ming1016.github.io/categories/Programming/">戴铭 - 博客</a></li><li><a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 &lt;a href=&quot;http://gk.link/a/10fRy&quot;&gt;《iOS开发高手课 - 极客时间》&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今年的年终总结提到，计划2020年与公司组里同学一起学习和分享， &lt;a href=&quot;https://ming1016.github.io/categories/Programming/&quot;&gt;戴铭&lt;/a&gt; 老师的&lt;a href=&quot;http://gk.link/a/10fRy&quot;&gt;《iOS开发高手课 - 极客时间》&lt;/a&gt;，开始的想法比较简单，每周一节知识交流，然后大家一起讨论和分享，并且考虑把一些idea用于工作和项目中，促进大家进步和更好的开发。在这过程中，我想把自己经历过的或者学习过的东西，在&lt;code&gt;串&lt;/code&gt;起来后，从一个&lt;code&gt;点&lt;/code&gt;，到一条&lt;code&gt;线&lt;/code&gt;，最后形成一个&lt;code&gt;面&lt;/code&gt;，从一个面了解一个事物的多维，这样才能更好的学习和了解本质。所以，这也是后续这个系列，希望自己尽量做到，更好的角度，更高的视线，一起学习加油吧~&lt;/p&gt;</summary>
    
    
    
    <category term="induction" scheme="https://ihtcboy.com/categories/induction/"/>
    
    
    <category term="动态库" scheme="https://ihtcboy.com/tags/%E5%8A%A8%E6%80%81%E5%BA%93/"/>
    
    <category term="iOS开发高手课" scheme="https://ihtcboy.com/tags/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="学习总结" scheme="https://ihtcboy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    <category term="极客时间" scheme="https://ihtcboy.com/tags/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/"/>
    
    <category term="程序员" scheme="https://ihtcboy.com/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
    <category term="知识体系" scheme="https://ihtcboy.com/tags/%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    
    <category term="优化" scheme="https://ihtcboy.com/tags/%E4%BC%98%E5%8C%96/"/>
    
    <category term="架构" scheme="https://ihtcboy.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="编译器" scheme="https://ihtcboy.com/tags/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
    <category term="链接器" scheme="https://ihtcboy.com/tags/%E9%93%BE%E6%8E%A5%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>【学习总结】06 | App 如何通过注入动态库的方式实现极速编译调试？</title>
    <link href="https://ihtcboy.com/2020/01/17/2020-01-17_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE06/"/>
    <id>https://ihtcboy.com/2020/01/17/2020-01-17_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE06/</id>
    <published>2020-01-17T12:20:20.000Z</published>
    <updated>2020-08-22T03:15:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>首先，我认为学习总结，要有所总，所结，就是有归纳后，能用<code>自己的话</code>告诉别人！有所结，就是有所收获输出，一般我认为是<code>思维导图</code>，所以，每篇文章前，我都会先给出文章的脑图：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-06-App%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E6%B3%A8%E5%85%A5%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%9E%81%E9%80%9F%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%EF%BC%9F.png" alt="iOS开发高手课-06-App如何通过注入动态库的方式实现极速编译调试？.png"></p><span id="more"></span><h2 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h2><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><p>本章是上一节<code>编译器</code>、<code>链接器</code> 内容的扩展延伸内容 —– <code>动态链接器</code>，所以，如果没有看过上一篇文章的同学，建议先看看：<a href="https://ihtcboy.com/2020/01/10/2020-01-10_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE05/">【学习总结】05 | 链接器：符号是怎么绑定到地址上的？ | iHTCboy’s blog</a>。</p><p>本章也是沿用之前的风格套路，在讲解 iOS 的<code>动态链接器</code> 如何实现<code>极速编译调试</code> 作用之前，我们先看看程序开发中都有那么经典的例子？如何实现极速编译调试的。首先要看看 2019年最火的 <code>Flutter</code> 吧！所以，我们就先来看看 Flutter 是如何 <code>Hot Reload</code>（热重载）的吧！</p><h3 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Flutter-Hot-Reload.gif" alt="Flutter-Hot-Reload.gif"></p><p>如图所示，Flutter 的 <code>热重载</code>(<code>Hot reload</code>)功能可以在无需重新启动应用的情况下快速、轻松地进行测试、构建用户界面、添加功能以及修复错误。 </p><p>需要注意的是，我们主要是讲解 Flutter 热重载(Hot reload) 相关知识，不会深入讲解 Flutter 其它知识和原理，了解更多可以参考末文扩展学习或自行搜索。</p><h4 id="JIT-amp-AOT"><a href="#JIT-amp-AOT" class="headerlink" title="JIT &amp; AOT"></a>JIT &amp; AOT</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Flutter-%E9%AB%98%E6%80%A7%E8%83%BD%E6%96%B9%E6%A1%88%E5%8E%9F%E7%90%86.png" alt="Flutter-高性能方案原理.png"></p><p>Flutter 有两套编译器，JIT，AOT：</p><ul><li><code>JIT</code>（Just In Time，即时编译）：动态(即时)编译，程序边运行边编译。</li><li><code>AOT</code>（Ahead Of Time，运行前编译）：指在程序运行前编译。</li></ul><p>Flutter <code>Dart</code> 有 <code>AOT</code> 和 <code>JIT</code> 两种模式，线上使用时以 AOT 的方式编译成机器代码，保证了线上运行时的效率；而在开发期，Dart 代码可以以 JIT 的方式运行，支持代码的即时生效 <code>热重载</code>（Hot Reload)，提高开发效率。</p><p>至此，我们应该明白了，Flutter 是通过 <code>JIT</code> 方式实现 <code>Hot Reload</code>（热重载）的！那么，我们接下来，我们就是知道 Flutter 是如何编译代码的，这样才能更加理解 <code>JIT</code>.</p><h4 id="Flutter-构建模式"><a href="#Flutter-构建模式" class="headerlink" title="Flutter 构建模式"></a>Flutter 构建模式</h4><p>Flutter 支持三种模式编译 app，分别为 <code>debug</code>、<code>release</code>、<code>profile</code>。</p><ul><li><code>Debug模式</code>：对应了Dart的JIT模式，又称检查模式或者慢速模式。支持设备，模拟器(iOS/Android)，此模式下打开了断言，包括所有的调试信息，服务扩展和Observatory等调试辅助。此模式为快速开发和运行做了优化，但并未对执行速度，包大小和部署做优化。Debug模式下，编译使用JIT技术，支持广受欢迎的亚秒级有状态的hot reload。</li><li><code>Release模式</code>：对应了Dart的AOT模式，此模式目标即为部署到终端用户。只支持真机，不包括模拟器。关闭了所有断言，尽可能多地去掉了调试信息，关闭了所有调试工具。为快速启动，快速执行，包大小做了优化。禁止了所有调试辅助手段，服务扩展。</li><li><code>Profile模式</code>：类似Release模式，只是多了对于Profile模式的服务扩展的支持，支持跟踪，以及最小化使用跟踪信息需要的依赖，例如，observatory可以连接上进程。Profile并不支持模拟器的原因在于，模拟器上的诊断并不代表真实的性能。</li></ul><p>如果上面很长，那可以快速简要了解三种构建模式（A quick summary for when to use which mode is as follows）：</p><ul><li>开发过程中，需要使用 <code>热重载</code> 功能，请选择 <code>debug</code> 构建模式；</li><li>当你需要<code>分析性能</code>的时候，选择使用 <code>profile</code> 构建模式；</li><li>当你需要<code>发布应用</code>的时候，选择使用 <code>release</code> 构建模式。</li></ul><p>鉴于 <code>Profile</code> 同 <code>Release</code> 在编译原理等上无差异，所以，我们的问题“ Flutter 如何实现 <code>Hot Reload</code>（热重载）的”？就是需要看看 <code>Debug</code>模式 和 <code>Release</code> 模式，当然，前面说到，我们的重点是 <code>JIT</code>，所以重点是要看看 <code>Debug模式</code> !</p><h4 id="Release-模式下的编译"><a href="#Release-模式下的编译" class="headerlink" title="Release 模式下的编译"></a>Release 模式下的编译</h4><ul><li><strong>iOS</strong><br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Flutter-Release%E6%A8%A1%E5%BC%8F%E7%BC%96%E8%AF%91-iOS.png" alt="Flutter-Release模式编译-iOS.png"></li></ul><blockquote><p>其中 <code>gen_snapshot</code> 是dart编译器，采用了 <code>tree shaking</code>(类似依赖树逻辑，可生成最小包，也因而在 Flutter 中禁止了dart支持的反射特性)等技术，负责生成汇编形式机器代码。再通过 <code>xcrun</code> 等工具链生成最终的 <code>App.framework</code>。所有的dart代码，包括业务代码，三方package代码，它们所依赖的flutter框架代码，最终将会编译成<code>App.framework</code>。<br><code>Flutter.framework</code> 对应了Flutter架构中的engine部分，以及Embedder。实际中Flutter.framework位于flutter仓库的<code>/bin/cache/artifacts/engine/ios*</code>下，默认从google仓库拉取。当需要自定义修改的时候，可通过下载engine源码，利用<code>Ninja</code>构建系统来生成。<br>Flutter相关代码的最终产物是：<code>App.framework</code>(dart代码生成)和 <code>Flutter.framework</code>(引擎)。</p></blockquote><ul><li><strong>Android</strong><br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Flutter-Release%E6%A8%A1%E5%BC%8F%E7%BC%96%E8%AF%91-Android.png" alt="Flutter-Release模式编译-Android.png"></li></ul><blockquote><p>其中 <code>vm/isolatesnapshotdata/instr</code> 内容均为arm指令，其中vm中涉及runtime等服务(如gc)，用于初始化DartVM，调用入口见 <code>DartInitialize</code>(dartapi.h)。isolate则对应了我们的应用dart代码，用于创建一个新的isolate，调用入口见<code>DartCreateIsolate</code>(dart_api.h)。<code>flutter.jar</code> 类似iOS的<code>Flutter.framework</code>，包括了Engine部分(<code>Flutter.jar</code>中的<code>libflutter.so</code>)，和Embedder部分(FlutterMain、FlutterView、FlutterNativeView等)。实际中<code>flutter.jar</code>位于flutter仓库的<code>/bin/cache/artifacts/engine/android*</code>下，默认从google仓库拉取。需要自定义修改的时候，可通过下载engine源码，利用<code>Ninja</code>构建系统来生成<code>flutter.jar</code>。</p></blockquote><p>本节内容来自：<a href="https://yq.aliyun.com/articles/604052?spm=a2c4e.11153940.0.0.730737b1xWHbpU">深入理解flutter的编译原理与优化-云栖社区-阿里云</a></p><h4 id="Debug-模式下的编译"><a href="#Debug-模式下的编译" class="headerlink" title="Debug 模式下的编译"></a>Debug 模式下的编译</h4><p><code>Debug模式</code> 下 flutter的编译，结构类似 Release模式，差异主要表现为两点:</p><ol><li><strong>Flutter.framework</strong>：因为是Debug，此模式下Framework中是有<code>JIT</code>支持的，而在Release模式下并没有JIT部分。（<strong>Android</strong><code>flutter.jar</code>同<strong>iOS</strong>一样没有<code>JIT</code>。）</li><li><strong>App.framework</strong>：不同于<code>AOT</code>模式下的 App.framework 是Dart代码对应的机器代码，<code>JIT</code>模式下，App.framework只有几个简单的API，其Dart代码存在于<code>snapshot_blob.bin</code>文件里（<strong>Android</strong>的位于<code>flutterassets</code>下的<code>snapshotblob.bin</code>，其它同<strong>iOS</strong>）。这部分的snapshot是脚本快照，里面是简单的标记化的源代码。所有的注释，空白字符都被移除，常量也被规范化，没有机器码、<code>tree shaking</code>或混淆。</li></ol><h4 id="Hot-Reload（热重载）"><a href="#Hot-Reload（热重载）" class="headerlink" title="Hot Reload（热重载）"></a>Hot Reload（热重载）</h4><p>好的，有了上面的基础和概念知识，现在我们开始看看 Flutter 的 <code>Hot Reload</code>（热重载）的执行流程吧！</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Flutter-Hot-Reload-%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B.jpeg" alt="Flutter-Hot-Reload-执行流程.jpeg"></p><p>Flutter的热重载是基于<code>State</code>的，也就是我们在代码中经常出现的<code>setState</code>方法，通过这个来修改后，会执行相应的<code>build</code>方法，这就是热重载的基本过程。</p><p>Flutter的<code>Hot Reload</code>的实现源码在下面路径中，在此路径中包含<code>run_cold.dart</code>和<code>run_hot.dart</code>两个文件，前者负责<code>冷启动</code>，后者负责<code>热重载</code>。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/flutter/packages/flutter_tools/lib/src/run_hot.dart</span><br></pre></td></tr></table></figure><p><strong>上图的流程</strong>：当按下R后，Flutter 会扫描修改的文件，并将文件修改前后进行对比，随后会将被改动的代码生成一个<code>kernel files</code>文件。随后会通过<code>HTTP Server</code>将生成的<code>kernel files</code>文件发送给<code>Dart VM</code>虚拟机，虚拟机拿到 kernel文件后会调用<code>_reloadSources</code>函数进行资源重载，将 kernel文件注入正在运行的<code>Dart VM</code>中。当资源重载完成后，会调用<code>RPC</code>接口触发<code>Widgets tree</code>的重建、重绘。</p><p>本节以上内容主要来自：<a href="https://www.jianshu.com/p/1a90adc09e99">移动端开发新趋势Flutter - 简书</a></p><p>调用热重载时，会查看自上次编译以来编辑的代码。重新编译以下文件：</p><ul><li>任何有代码更改的文件；</li><li>应用程序的主入口文件。</li><li>受主入口文件影响的文件。</li></ul><p>在 <code>Dart 2</code> 中，这些文件的 Dart 源代码被转换为 <code>内核文件</code> 并发送到移动设备的 <code>Dart VM</code>。Dart VM 重新加载新内核文件中的所有文件。到目前为止，没有重新执行代码。然后，热重载机制使 <code>Flutter</code> 框架触发所有现有的 <code>widgets</code> 和渲染对象的重建/重新布局/重绘。</p><p>以上来自官方文档：<a href="https://flutter.cn/docs/development/tools/hot-reload">热重载 (Hot reload) - Flutter 中文文档</a></p><p>到此，我们就不深入具体的源代码讲解了，大家可以自行查看。这里主要是想讲解整个流程是怎么一回事，了解 Flutter 的 <code>Hot Reload</code>（热重载）是怎么执行流程后，那么 Flutter 能不以实现 <code>热更新</code>代码呢？大家从多角色思考一下，答案是肯定，目前Flutter还在努力中。接下来，我们再来说说热重载的优缺点吧！</p><h4 id="不能使用-Hot-Reload-的场景"><a href="#不能使用-Hot-Reload-的场景" class="headerlink" title="不能使用 Hot Reload 的场景"></a>不能使用 Hot Reload 的场景</h4><ol><li>代码出现编译错误的不能使用 Hot Reload</li><li>代码更改会影响 APP 状态的不能使用 Hot Reload</li><li>全局变量（ global variables）和静态字段（static fields）的更改不能使用 Hot Reload</li><li>main() 方法里的更改不能使用 Hot Reload</li><li>枚举类型更改为常规的类或者常规的类变为枚举类型也不能使用 HotReload</li><li>修改通用类型声明也不能使用 HotReload</li></ol><p>详细可查看官方文档：<a href="https://flutter.cn/docs/development/tools/hot-reload">热重载 (Hot reload) - Flutter 中文文档</a></p><h3 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h3><p>同样的，<code>React Native</code> 也有热加载（Hot Reload）！</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/React-Native-Hot-Reload-hmr-architecture.png" alt="React-Native-Hot-Reload-hmr-architecture.png"></p><blockquote><p>热加载的基础是模块热替换（HMR，Hot Module Replacement[3]），HMR 最开始是由 Webpack 引入的，我们在 React Native Packager 中也实现了这个功能。HMR 使得 Packager 可以监控文件的改动并发送 HMR 更新消息（HMR update）给包含在 APP 中的一层很薄的 HMR 运行时（HMR runtime）。</p><p>简而言之，HMR 更新消息包含 JS 模块中发生变化的代码，当 HMR 运行时接收到这个消息，就使用新的代码替换旧的代码.</p></blockquote><p>以上内容来源：<a href="https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html">Introducing Hot Reloading · React Native</a>，中文译文：<a href="https://www.jianshu.com/p/1fa6e9c0799f">React Native 热加载（Hot Reload）原理简介 - 简书</a>。</p><p>从这里流程图，大家是不是发现与 Flutter 的流程是一致的，就是具体的技术的实现因平台不同而针对的格式和内容处理。实现<code>热重载</code>（Hot Reload）主流程：</p><ol><li><code>文件变化</code>：主流程就是<code>监听文件变化</code>，主要是源代码的内容修改。（至于怎么监听，监听那些，怎么做，大家自行研究啦，这里不细说。）</li><li><code>整合变化</code>：然后把变更的内容打包成<code>框架文件</code>，当然语言和环境不同，文件形式就有差异，这里不详细分析。</li><li><code>更新变化</code>：最后通过 <code>VM</code>（可以统一理解为虚拟机或Runtime（运行时））进行解析和更新。</li></ol><p>通过 <code>Flutter</code> 和 <code>React Native</code>的 <code>Hot Reload</code> 流程对比学习后，大家是不是已经理解了<code>热重载</code>的原理流程呢？如果此时，我们再来一个新的平台的热重载功能，你是不是也能猜到大致的流程原理呢？</p><h3 id="JVM（Java-Virtual-Machine，Java虚拟机）"><a href="#JVM（Java-Virtual-Machine，Java虚拟机）" class="headerlink" title="JVM（Java Virtual Machine，Java虚拟机）"></a>JVM（Java Virtual Machine，Java虚拟机）</h3><p>回过头来，我们在看看 <code>JIT</code>。因为，我们本文最终的目的是探究 <code>iOS能否极速编译？</code>的问题，前面所有说到的都是其它平台是如何实现的热重载，所以，<code>JIT</code> 应该是这样叫 <code>JIT Compiler</code>（即时编译器），它是一个<code>编译器</code>。我们需要在深入一点，<code>Java</code> 使用 JIT 编译器进行动态编译已经十几年了！所以，我们以 Java 来例了解一下：</p><ul><li><p>Java 平台<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Jave-Platform.jpg" alt="Jave-Platform.jpg"></p></li><li><p>Java 编译流程<br><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Java-Compiler.png" alt="Java-Compiler.png"></p></li></ul><p>Java 编译的 <code>.class</code> 文件中保存的并不是<code>机器码</code>而只是<code>二进制代码</code>，需要先进行解释，<code>JIT</code> 在运行时会把翻译过的机器码保存起来，以备下次使用。另外，新版本（Java8）的 <code>JVM</code> 默认都是采用混合执行模式，<code>半编译</code>（JIT，热点代码，经常调用循环的代码）、<code>半解释</code>（<code>Interpreter</code>，解释执行编译器，一边把字节码翻译成当前硬件平台的机器码一边执行）执行。 </p><p>不知道大家有没有注意到2个词，<code>JRE</code>(<code>Java Runtime Environment</code>，Java 运行/执行环境)、<code>JVM</code>（<code>Java Virtual Machine</code>，Java 虚拟机），<code>JIT Compiler</code> 依赖于 <code>JVM</code> （<code>Runtime</code>）中，要实现 <code>Hot Reload</code>，所以是需要一个<code>虚拟机</code>环境。</p><p>这种虚拟机和一般其他语言的运行库有一个很大不同，就是它好像一个有独立体系结构的计算机，源代码必须要编译成虚拟机独有的中间语言。虚拟机传统的解释器，就是要在中间语言和真正的平台体系结构之间的指令做映射，比如把Java的load指令换成 native code 的load指令。具体详细的这样就不多说了，<strong>主要是想说明，要实现 <code>Hot Reload</code> 用到 <code>JIT</code> 编译器，然后需要依赖于<code>VM</code>虚拟机环境中。</strong></p><h3 id="Android-VM"><a href="#Android-VM" class="headerlink" title="Android VM"></a>Android VM</h3><p>既然我们说到了虚拟机环境，那么我们顺便说一下 <code>Android</code>，因为安卓最初也是用 <code>Java</code> 来开发的，当然 Android 应用程序不是使用标准的Java字节码标准的Java虚拟机执行的，所以，这里希望通过对比学习，让大家更加深刻的理解。</p><h4 id="Android-Build-System（安卓构建系统）"><a href="#Android-Build-System（安卓构建系统）" class="headerlink" title="Android Build System（安卓构建系统）"></a>Android Build System（安卓构建系统）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Android-Build-System.png" alt="Android-Build-System.png"></p><ul><li>图片来源：<a href="https://theiconic.tech/android-java-fdbd55aadc51">The Relationship Between Android and Java</a></li></ul><p>整个构建过程，源代码、资源（resources）、资产（assets）、依赖关系（dependencies）编译（处理）后，封装在成一个 Android 应用程序包（APK）。</p><p>深入来说，<code>JVM</code> 是 JAVA 虚拟机，用来运行 JAVA 字节码程序。<code>Dalvik</code> 是 Google 设计的用于 Android 平台的运行时环境，适合移动环境下内存和处理器速度有限的系统。<code>ART</code> 即 <code>Android Runtime</code>（安卓运行时），是 Google 为了替换 Dalvik 设计的新 Android 运行时环境，在 Android 4.4 推出，ART 比 Dalvik 的性能更好，在 Android 5.0 及后续Android版本中， ART 作为正式的运行时库取代了以往的 Dalvik 虚拟机。Android 程序一般使用 Java 语言开发，但是 <code>Dalvik 虚拟机并不支持直接执行 JAVA 字节码</code>，所以会对编译生成的 <code>.class</code> 文件进行翻译、重构、解释、压缩等处理，这个处理过程是由 <code>dx</code> 进行处理，处理完成后生成的产物会以 <code>.dex</code> 结尾，称为 <code>Dex 文件</code>（Dalvik EXecutable），Dex 文件格式是专为 Dalvik 设计的一种压缩格式，为了保证向下兼容，ART 也使用了相同的 Dex 文件。</p><p>这里说了那么多，就是为了引出 <code>Dalvik VM</code> （Dalvik 虚拟机）和 <code>ART</code>（Android Runtime，安卓运行时），所以我们就不深入安卓的构建 <code>JACK</code>（Java Android Compiler Kit，Java Android编译器套件） 和 <code>JILL</code>（JACK Intermediate Library Linker，JACK中间库链接器），大家自行搜索了解更多。</p><h4 id="Android-Runtimes"><a href="#Android-Runtimes" class="headerlink" title="Android Runtimes"></a>Android Runtimes</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Android-Dalvik-and-ART-Architectures.png" alt="Android-Dalvik-and-ART-Architectures.png"></p><ul><li>图片来源：<a href="https://medium.com/mindorks/android-runtime-improvements-e69bf7c1d10c">Android Runtime Improvements</a></li></ul><ul><li><code>Dalvik VM</code>（Dalvik 虚拟机）：采用 <code>JIT</code>技术</li><li><code>ART</code>（Android Runtime，安卓运行时）：采用 <code>AOT</code> 技术，同时也改善了性能、垃圾回收（Garbage Collection）、应用程序出错以及性能分析等。</li></ul><p>无论是 Dalvik VM 还是 Android Runtime，它们在处理 Dex 文件（Dalvik bytecode）上的差异就是性能和存储上，其它并没有什么不同。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Android-Runtimes-Software-Stack.png" alt="Android-Runtimes-Software-Stack.png"></p><ul><li>图片来源：<a href="https://theiconic.tech/android-java-fdbd55aadc51">The Relationship Between Android and Java</a></li></ul><p>这里说说<code>Android Runtime</code>有趣的故事，前面说了采取 <code>Dex</code> 字节代码的应用程序部署到设备时，<code>Android Runtime</code> 将其转换为实际的硬件上运行的机器代码，<strong>并且提供了标准的Java库的实现和一些机制</strong>。2016 年初，<code>Android N</code>（7.0)把该标准库的实现从 <code>Apache Harmony</code> 改为了<code>OpenJDK</code>。为什么呢？</p><p>最初 Java 是 <code>SUN Microsystems</code>公司（太阳计算机系统，简称<code>SUN</code>，太阳公司，名字来源于<code>Stanford University Network</code>（斯坦福大学网络）的缩写。）拥有，并保持开放，<code>OpenJDK</code> 是 SUN 公司为Java平台构建的Java开发环境（JDK）的开源版本，完全自由，开放源码。2010年1月27日，<code>Oracle</code>（甲骨文公司）收购 Sun 之后，Java 易主！由于 <code>Google</code> 没有得到 Sun 公司的授权，所以，这就相当于侵犯了 Oracle 的版权。甲骨文在2010年控告 Google 所开发的 Android 侵犯Java版权，并打算向Google求偿数十亿美元，在这场官司中，地方法院曾一度判决 Google 为合理使用，但上诉法院则认为 Google 的确侵犯Java版权。最终，2016年8月22日，Google 在<code>Android 7.0 Nougat</code>中，将专利的JDK替换成开源方案的<code>OpenJDK</code>，以彻底解决Java的专利问题。</p><p>虽然避免未来的侵权纠纷，但是 <code>OpenJDK</code> 是源自于 Java JDK，但它的发展通常比较慢，并不具备所有最新的 Java功能，所以我们的 Android 开发被剥夺了新的语言功能，如<code>streams API</code>（流API）、<code>Lambda</code>, <code>method references</code>（方法引用）等。当然，外界相信在Google 的加持下，OpenJDK 的能力可望突飞猛进。但是，最后 Google 选择了 <code>Kotlin</code>，2017 年的 <code>Google I/O</code> 大会，Google 宣布 Kotlin 成为 Android 开发的一级语言（首选语言），可以说对 Kotlin 寄予了厚望。<code>Kotlin</code> 是一门与 Swift 类似的静态类型 JVM 语言，由 JetBrains 设计开发并开源。与 Java 相比，Kotlin 的语法更简洁、更具表达性，而且提供了更多的特性，比如，高阶函数、操作符重载、字符串模板。它与 Java 高度可互操作，可以同时用在一个项目中。了解更多可以查看这篇文章：<a href="https://www.infoq.cn/article/qt51vqATE7jf_bpw5ggJ">Java失宠，谷歌宣布Kotlin现在是Android开发的首选语言-InfoQ</a>。</p><p><code>Oracle</code> 对 <code>Google</code> 主要的指控：</p><ol><li>Google 在 Android 系统上无偿使用了 37 个 Java APIs，这侵犯了他们的专利，而在 Android 中还有 9 行代码抄袭了 Java，这侵犯了他们的版权。</li><li>Android 割裂了 Java生态系统，因为Java的标准字节码文件 <code>.class</code> 文件是不能直接在Android虚拟机上运行的。 </li><li>Android 通过不当使用 Java API 挤占了 <code>Java ME</code>（Java Platform Micro Edition，Java平台微版） 可能的市场。</li></ol><p>那 9 行代码造成抄袭的缘由，据说是因为当时谷歌的一位工程师在为 Android 项目工作的同时，又为 Sun 公司的 OpenJDK 效力，后来，该工程师直接从 OpenJDK 中复制了 9 行代码到 Android 中。所以，大家都要意识到：<code>技术无国界，公司有竞争</code>。技术的风险也是我们技术开发时需要关注的事件。</p><h5 id="Dalvik-VM（Dalvik-虚拟机）"><a href="#Dalvik-VM（Dalvik-虚拟机）" class="headerlink" title="Dalvik VM（Dalvik 虚拟机）"></a>Dalvik VM（Dalvik 虚拟机）</h5><p><code>JIT</code> 最早在 Android 2.2 系统中引进到 <code>Dalvik VM</code> 虚拟机中，Dalvik 虚拟机类似于标准的Java虚拟机，但是它有一些结构上的差异。在应用程序启动时，JIT 通过进行连续的性能分析来优化程序代码的执行，在程序运行的过程中，Dalvik VM 虚拟机在不断的进行将字节码编译成机器码的工作。</p><h5 id="ART（Android-Runtime，安卓运行时）"><a href="#ART（Android-Runtime，安卓运行时）" class="headerlink" title="ART（Android Runtime，安卓运行时）"></a>ART（Android Runtime，安卓运行时）</h5><p><code>ART</code>（Android Runtime，安卓运行时）引入了 <code>AOT</code> 这种预编译技术，在应用程序安装的过程中，ART 就已经将所有的字节码重新编译成了机器码。应用程序运行过程中无需进行实时的编译工作，只需要进行直接调用。因此，ART 极大的提高了应用程序的运行效率，同时也减少了手机的电量消耗，提高了移动设备的续航能力，在垃圾回收等机制上也有了较大的提升。</p><p>与 <code>Dalvik VM</code> 区别是，代替目前在 <code>Runtime</code> 时的 <code>Interpreter</code>（解释执行编译器，一边把字节码翻译成当前硬件平台的机器码一边执行）与 <code>JIT</code>（即时编译器）。具体来说，ART 不是等到App运行的时候才去运行dex文件，而是在App安装的时候就通过 <code>AOT编译器</code> 将<code>.dex</code>文件编译为对应的<code>.oat</code>二进制文件，当用户点击App的启动图标时，ART直接加载<code>.oat</code>文件去执行。其中那个<code>.oat</code>文件就是一个<code>ELF</code>文件，是当前机器的可执行的文件。</p><h5 id="ART-安装及启动App流程"><a href="#ART-安装及启动App流程" class="headerlink" title="ART 安装及启动App流程"></a>ART 安装及启动App流程</h5><p>前面说过，ART 是在App安装的时候将<code>.apk</code>文件减压，并将<code>.dex</code>文件预编译为<code>.oat</code>可执行文件，当App启动的时候就不需要在 Runtime 解释执行了，但是这种方式也有它自己的缺点：</p><ol><li>增加了App的安装时间，这个很容易理解，因为多了一个预编译过程。</li><li>增加了App所需要的安装空间，与Dalvik相比，手机上多了一份.oat文件。特别是无论一个App的某一功能是否被使用到以及被使用的频率，例如一个App的某个功能，用户几乎不会去打开，ART都将其编译为.oat文件就显得有点低效了。</li></ol><p>Google 的那些天才工程师既然发现了问题，那肯定就会去想办法优化的。技术的每一次进步，都是站在前面技术的肩膀上的，这一次也不例外，Google的工程师将 <code>Interpreter</code>（解释执行编译器，一边把字节码翻译成当前硬件平台的机器码一边执行），<code>JIT</code>与 <code>AOT</code> 三种技术相结合来优化这个过程。</p><ol><li>当你首次安装并一个App的时候，AOT不将<code>.dex</code>文件通过<code>dex2oat</code>编译为<code>.oat</code>文件，这一步减少了安装时间。系统通过<code>Interpreter</code>的方式来启动App，也就是一边把字节码翻译成当前硬件平台的机器码一边执行。</li><li>当一些代码被频繁执行到时，虚拟机就将其编译成机器码，这些被频繁执行的代码有个专有名词，就是<code>hot code</code>（热点代码）。所以，当在App运行过程中探测到了<code>hot code</code>，就使用<code>JIT</code>编译。</li><li>这些通过JIT编译的平台代码及编译配置文件都会被存储在缓存中，加快下次访问的速度。</li><li>当设备处于空闲时间时，<code>AOT</code> 编译器就会启动，结合编译配置文件将热点代码通过<code>dex2oat</code>编译为<code>.oat</code>可执行文件。</li><li>当再次运行App时，<code>ART</code>就可以直接运行<code>.oat</code>文件就可以了。</li></ol><p>一款App经过8轮这样的处理基本上就优化好了。Google的工程师没有止步于此，他们仍然在思考，为什么不把编译配置文件共享呢？于是按照这一思路 Google 通过 <code>Google Play</code> 对这一过程做了更高级的优化，当某一款安装了此App的设备处于空闲及WIFI联网情况下时，将其产生的编译配置文件上传到 <code>Google Play</code>上，那么其他用户的此款设备安装此App的时候，<code>Google Play</code> 就知道如何预编译这款App了，这样用户在首次安装的时候，AOT就会完成精准的预编译，那么App的启动及运行就会很流畅。但是很遗憾，原因众所周知，这个优化距离我们很遥远。（对于普通人来说是这样的，同时国内应用不做海外市场的也基本不发布到 <code>Google Play</code>。）</p><p>本节内容来源：<a href="https://zhuanlan.zhihu.com/p/95626955">深入理解Android虚拟机及编译系统</a></p><h3 id="AOT-与-JIT-的优缺点"><a href="#AOT-与-JIT-的优缺点" class="headerlink" title="AOT 与 JIT 的优缺点"></a>AOT 与 JIT 的优缺点</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/JIT-AOT.jpeg" alt="JIT-AOT.jpeg"></p><p>图片来源：<a href="https://twitter.com/thomaswue/status/1145603781108928513">Thomas Wuerthinger - Twitter</a></p><p><code>JIT</code> 的优点就不说了，自然是性能好。缺点就是由于 JIT 本质上是一个编译器，所以它必然不是跨平台的，对于每个平台必然需要单独编写代码，当然这个因素一定程度上也导致了 JIT 开发成本高。</p><p><code>AOT</code> 优点是可以提高速度（特别是启动时间）、减少内存足迹（不是JIT）和改进内存回收。缺点是在程序运行前编译会使程序安装的时间增加，将提前编译的内容保存会占用更多的空间等。</p><p>最后，AOT 与 JIT 的优缺点，其实没有绝对的，比如 Java 用在服务器可能<code>JIT</code> 更好，因为它并不需要启动很快，而用在客户端<code>移动设备</code>，正如上面说的Android运行时使用：<code>JIT</code> + <code>AOT</code> + <code>Interpreter</code>，不同情况，不同条件，答案也不相同，所以<code>没有最好的，只有最适合的技术方案！</code>！</p><h3 id="Injection-for-Xcode"><a href="#Injection-for-Xcode" class="headerlink" title="Injection for Xcode"></a>Injection for Xcode</h3><p>说了那么久，iOS 的同学估计久等啦吧！说了那么多平台，针对 Apple 平台，我们如何实现 <code>极速编译调试</code> 呢？所以，说说 <a href="https://github.com/johnno1962/InjectionIII">Injection</a> 这个项目是如果实现在 <code>iOS模拟器</code> 中，不必重建或重新启动应用程序，以增量方式更新类的方法的实现<code>热重载</code>，从而为开发人员节省了大量时间。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Xcode-Injection-Hot-Reload.png" alt="Xcode-Injection-Hot-Reload.png"></p><p>前面我们已经说了，实现热重载的三个步骤，1. <code>文件变化</code>，2. <code>整合变化</code>，3. <code>更新变化</code>。这里其实也是一样的，<code>File Watcher</code>监听观察文件改动，然后将改动的文件编译，打包成<code>.dylib</code>动态库文件，然后就是更新这个动态库，这里充当虚拟机的是 Objective-C 的<code>Runtime</code>机制！</p><p>大概的流程大家是不是懂了，具体的一些疑问：</p><ul><li><p><code>.dylib</code>动态库为什么可以链接到应用的？<br>大家可以在回看上一章的链接器内容 <a href="https://ihtcboy.com/2020/01/10/2020-01-10_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE05/">链接器：符号是怎么绑定到地址上的？</a>，动态库是可以在应用运行中，动态加载的，那用什么方法动态加载呢？运行时可以使用<code>dlopen</code>或者<code>Bundle(path: &quot;**.bundle&quot;).load()</code>加载动态库。</p></li><li><p>链接后的新代码，是怎么被执行的？<br>把修改后的代码注入了我们的App后，然后通过 Objective-C 的 <code>Runtime</code> 的 <code>class_replaceMethod</code> 把整个类的实现方法都替换，然后再调<code>SwiftInjected.injected</code> 我们的类收到消息，开始重绘UI。这里需要注意了，你修改的代码可以没有更新，因为刚才说的我们的类收到消息，但是可能替换的方法，但是界面的生命周期需要重新刷新，更新才会变化。所以，<code>Swift</code> 可以用 <code>@objc func injected()</code>，<code>Objective-C</code> 用 <code>- (void)injected</code> 方法，在需要刷新页面或元素时用这方法来主动调用更新 UI。具体示例：</p></li></ul><p>Swift:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">injected</span>()</span> &#123;</span><br><span class="line">        viewDidLoad()</span><br><span class="line">        viewWillAppear(<span class="literal">true</span>)</span><br><span class="line">        viewDidAppear(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Objective-C:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (void)injected &#123;</span><br><span class="line">    [self viewDidLoad];</span><br><span class="line">    [self viewWillAppear:YES];</span><br><span class="line">    [self viewWillDisappear:YES];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体详细的原理，大家可以查看这篇文章：<a href="https://mp.weixin.qq.com/s/hFnHdOP6pmIwzZck-zXE8g">Injection：iOS热重载背后的黑魔法</a>。</p><h4 id="Runtime-System（运行时系统）"><a href="#Runtime-System（运行时系统）" class="headerlink" title="Runtime System（运行时系统）"></a>Runtime System（运行时系统）</h4><blockquote><p>The Objective-C language defers as many decisions as it can from compile time and link time to runtime. Whenever possible, it does things dynamically. This means that the language requires not just a compiler, but also a runtime system to execute the compiled code. The runtime system acts as a kind of operating system for the Objective-C language; it’s what makes the language work.</p></blockquote><p>翻译：<code>Objective-C</code> 这门语言会尽可能地将许多决定从编译期推迟到运行时。它会在任何可能的时候动态地处理事情。这意味着这门语言需要的不仅仅是编译器，同时还需要运行时系统来执行编译后的代码。<code>runtime system</code>（运行时系统）好像就是 <code>Objective-C</code> 的操作系统一样，让这门语言能够运作。</p><p>以上是 <a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008048-CH1-SW1">官方文档</a> 上的说明。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS-Cocoa-Touch-Architecture.png" alt="iOS-Cocoa-Touch-Architecture.png"></p><p>刚才说到的 <code>Injection</code> 就是利用了 Objective-C <code>Runtime</code>。用官方原话来说：<code>runtime system</code>（运行时系统）好像就是 <code>Objective-C</code> 的操作系统一样，所以，从上图可知，目前苹果官方的 <code>Cocoa Touch</code> 框架下并没有 <code>JIT</code> 编译器，因此，如果我们要实现动态热加载，可以利用 <code>Objective-C</code> 的 <code>Runtime</code> 机制来实现，但是这个实现是我们自己实现的，所以存在性能不足，还有因为苹果沙盒机制、动态库链接限制等，<code>Injection</code>无法在真机上运行（目前还有很多缺点，可以去官方项目了解。），到此，我们只能期待苹果实现支持啊。等等，那现在问题又来了，<code>Swift</code> 呢？从上图可以看出，<code>Swift API</code>并没有改变现有的 <code>iOS</code> 系统架构，所以，Swift编写的 iOS App 也是没有 <code>JIT</code>的！那么，最后的希望，<code>Swift 能用 Objective-C 的 Runtime 系统吗？</code></p><h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h3><p><code>Swift 能用 Objective-C 的 Runtime 系统吗？</code></p><p>回答这个问题，我们在来看看 <a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtInteracting.html#//apple_ref/doc/uid/TP40008048-CH103-SW1">官方文档</a> 关于 Rnuntime 的使用说明，我们与 Runtime 进行交互的只能通过下面三种方式：</p><ol><li><code>Objective-C Source Code</code>： 这个最直接，我们写的 OC 代码最终都会被转换为运行时的代码，在程序运行的时候执行的就是这些运行时代码。比如发送、转发消息等等。</li><li><code>NSObject Methods</code>： OC 中，除了 <code>NSProxy</code> 这个类之外，其他所有的类都继承自 <code>NSObject</code>。而 <code>NSObject</code> 中有着类似 <code>class</code>,<code>isKindOfClass</code>,<code>respondsToSelector</code> 这样的方法，他们都是通过 <code>Runtime</code> 来实现的。</li><li><code>Runtime Functions</code>： 在 <code>/usr/include/objc</code> 这个目录中可以找到 <code>Runtime</code> 暴露出来的一些函数和数据结构，通过这些接口我们可以使用一些更高级的操作。比如 <code>Method Swizzle</code>,<code>AssociatedObject</code> 等等。</li></ol><p>所以，我们有 <code>Swift</code> 写的 App，能不能使用 <code>Runtime</code>，就是看是否实现了上面的3条原则。这里就不详细展开了，了解更多，可以看看这个文章 <a href="https://www.infoq.cn/article/swift-objective-runtime-programming">Swift和Objective-C的运行时编程 - InfoQ</a>。</p><h4 id="Xcode-Swift-Playground"><a href="#Xcode-Swift-Playground" class="headerlink" title="Xcode Swift Playground"></a>Xcode Swift Playground</h4><p>2014年6月2日在 WWDC 2014 大会上宣布并发布了与Xcode集成的macOS版本的 <code>Swift Playgrounds。</code></p><ul><li>Everyone Can Code（人人能编程）<br>“人人能编程”课程可指导你通过 Swift Playgrounds 来教授编程，这款 app 通过互动式解谜闯关和生动有趣的角色，来引导儿童学习编码。它适合 8 岁以上的学生使用，也能让你用专业 app 开发者使用的语言来介绍编程。</li></ul><p>更多官方资料：<a href="https://www.apple.com.cn/cn/education/teaching-code/">教育 - 编程教学 - Apple (中国)</a></p><p>课堂指导文档PDF下载：<a href="https://www.apple.com/education/docs/everyone-can-code-curriculum-guide.pdf">https://www.apple.com/education/docs/everyone-can-code-curriculum-guide.pdf</a></p><p>另外，有人开发了一个在线的<code>Swift Playground</code>：<a href="http://online.swiftplayground.run/">Online Swift Playground</a>，没有 <code>macOS</code> 系统的朋友可以试试。</p><h4 id="Swift-Playgrounds-App"><a href="#Swift-Playgrounds-App" class="headerlink" title="Swift Playgrounds App"></a>Swift Playgrounds App</h4><blockquote><p>Swift Playgrounds 是一款适用于 Mac 和 iPad 的革命性 App，它使得代码学习和探索变得妙趣橫生。“学习编程”提供了一系列课程，指导你通过互动学习来闯关，逐步掌握编程的基础知识。你还可以尝试众多挑战，从中探索许多独一无二的编程经验。</p><p>Swift Playgrounds 无需编程基础，特别适合刚入门的初学者，老少成宜。整个 App 旨在帮助你学习 Swift 语言。这是 Apple 开发的一门强大的编程语言，时下许多流行 App 都是专业人士使用 Swift 开发而成。你所编写的代码可在你于 Mac 和 ipad 间切换时无缝运行。</p></blockquote><p>Swift <code>Playgrounds</code> 与上一节的 Xcode Swift <code>Playground</code>， 多了一个<code>s</code>，区别是 <code>Swift Playgrounds</code> 是苹果旗下的一款Swift语言编程教学应用，于2016年9月首次登陆iPad设备。Swift Playgrounds 不要求用户具备编程知识，非常适合初学者。你可以先从闯关解谜开始，掌握 Swift 的基础知识，再接受一系列的挑战，走向 Apple 和其他顶尖开发者设计的更高级 Playground2020年2月12号，苹果已通过 <code>Catalyst</code> 开发工具将 Swift Playgrounds 迁移至 macOS 中。</p><p>更多官方资料：<a href="https://www.apple.com.cn/cn/swift/playgrounds/">Swift Playgrounds - Apple (中国大陆)</a></p><p>Swift Playgrounds App 下载：<a href="https://apps.apple.com/cn/app/swift-playgrounds/id1496833156?mt=12">macOS 版本</a>、<a href="https://apps.apple.com/cn/app/swift-playgrounds/id908519492">iPadOS 版本</a></p><p>因为你编写的是真实的代码，所以Swift代码能直接在 <code>Swift Playgrounds</code> App 与 Xcode 之间导入或导出。因此，你可以在专业人士用以开发各款 iOS 和 Mac app 的工具上，来试试自己的创意!</p><p>这里 <code>Xcode Swift Playground</code> 和 <code>Swift Playgrounds App</code> 其实是相通了，可以感觉到，苹果的野心不只是为了开发者能实现调试，还有<code>Everyone Can Code</code>（人人能编程），教育行业，应该也是未来的方向，另外，也带动苹果的 <code>iPad</code> 销量，同时也带动了 <code>Swift</code> 语言的流行，我认为，这是多赢的一场漂亮的行动，希望你们也能看到！</p><h4 id="SwiftUI"><a href="#SwiftUI" class="headerlink" title="SwiftUI"></a>SwiftUI</h4><p>2019年，WWDC2019 上，Apple 推出了一个全新的 <code>SwiftUI</code> 框架，这是一个现代化的 UI 界面编码结构，它是从头开始构建的，以利用 <code>Swift</code>，让开发者感到惊讶。新框架使用声明性范例，让开发者用更少的代码编写相同的 UI。另外，SwiftUI 在 Xcode 中启用实时 UI 编程环境，实时看到编码的页面效果。最令人开发者尖叫的是，实现一次编码，可适应五端 <code>Apple</code> 产品平台。</p><p>用苹果的话：<code>编写更少的代码，打造更出色的 app。</code>，具体可以查看苹果官方关于<code>SwiftUI</code>的介绍：<a href="https://developer.apple.com/cn/xcode/swiftui/">Xcode - SwiftUI - Apple Developer</a>。</p><h3 id="触类旁通"><a href="#触类旁通" class="headerlink" title="触类旁通"></a>触类旁通</h3><p>使用类 <code>REPL</code> 模式（Read-Eval-Print-Loop）可以快速运行 Playground 代码，实时看到编码的页面效果。<code>Swift</code> 已经是苹果的未来，也是 iOS 开发者的未来，虽然每年 Swift 从 1.0 到 5.0，有人吐槽学了5种编程语言，但是2020年，Swift 已经稳定，并且开发方向也很多了，Web、服务器、AI、IoT等等，值得大家看看！</p><p>另外，教育方向的 <code>可视化编程</code>、<code>少儿编程</code>，行业中图形，<code>建筑建模</code>、<code>图形化</code>等，我认为也是很大的方向，各家编程语言准备迎战吧！</p><h2 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h2><p>我们文章一开始为了探讨“避免长时间的代码编译过程”的问题，从 <code>热加载</code> 到 <code>JIT</code> 再到 <code>VM</code>，从 <code>Flutter</code> 到 <code>React Native</code>到 <code>Java</code> 到 <code>Android</code> 到 <code>Objective-C</code> 最后到 <code>Swift</code>。大家有没有发现？我们要看到技术的相通，也要看到技术的不同，这里面不同的是什么？学习新技术成本非常高，把技术掌握透了，学习新技术会发现成本很低，很好去理解。</p><p>本篇文章跨度比较大，我在团队的分享时，讲很可以比较乱，信息量大，所以，当时与团队分享大家也是没有能很好的理解，所以，现在总结成文章，没有想到文章竟然达到了<code>1万+字数</code>！写文章是真的不容易，这篇文章，春节在家前后几天的时间在研究结构，查资料，希望能让大家都能看明白，因为我们团队每个人的知识和了解水平不同，所以<code>如何写出一篇大家都能懂的技术文章？</code>，而且深浅自如（入门的可以看得懂，深入的可以进一步深入），大家都明白，这就是我的分享态度。当然，文章也可能有错漏的，希望大家回复和讨论交流，<code>分享后，要交流！</code>，看懂了，觉得不错，给个赞吧！谢谢！</p><br><p>注：更多关于 iOS 开发和程序开发相关的内容，可以查看系列，目前还在连载中 <a href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/">【学习总结】iOS开发高手课 – (连载中) | iHTCboy’s blog</a>，以上，希望对你有用！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a></li><li><a href="https://mp.weixin.qq.com/s/hFnHdOP6pmIwzZck-zXE8g">Injection：iOS热重载背后的黑魔法</a></li><li><a href="https://www.jianshu.com/p/93952a4b8415?utm_campaign=hugo&utm_medium=reader_share&utm_content=note">Flutter之Hot Reload 的工作原理 - 简书</a></li><li><a href="https://www.jianshu.com/p/4da5c149a123?utm_campaign=hugo&utm_medium=reader_share&utm_content=note">Flutter 带你快速入门 - 简书</a></li><li><a href="https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html">Introducing Hot Reloading · React Native</a></li><li><a href="https://www.jianshu.com/p/1fa6e9c0799f">React Native 热加载（Hot Reload）原理简介 - 简书</a></li><li><a href="https://www.jianshu.com/p/1a90adc09e99">移动端开发新趋势Flutter - 简书</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2016/408/">Introducing Swift Playgrounds - WWDC 2016 - Videos - Apple Developer</a></li><li><a href="https://blog.csdn.net/Hello_Hwc/article/details/53966889">Swift Playground精讲_Leo的专栏-CSDN博客</a></li><li><a href="https://www.apple.com/education/teaching-code/">Education - Teaching Code - Apple</a></li><li><a href="https://www.apple.com.cn/cn/newsroom/2016/06/13Swift-Playgrounds-App-Makes-Learning-to-Code-Easy-Fun/">Swift Playgrounds App 让编码学习变得轻松有趣 - Apple (中国)</a></li><li><a href="https://github.com/uraimo/Awesome-Swift-Playgrounds">uraimo/Awesome-Swift-Playgrounds: A List of Awesome Swift Playgrounds</a></li><li><a href="https://www.apple.com.cn/cn/everyone-can-code/#developer-video">人人能编程 - Apple (中国)</a></li><li><a href="https://zh.wikipedia.org/wiki/%E8%AF%BB%E5%8F%96%EF%B9%A3%E6%B1%82%E5%80%BC%EF%B9%A3%E8%BE%93%E5%87%BA%E5%BE%AA%E7%8E%AF">读取﹣求值﹣输出循环 - 维基百科</a></li><li><a href="https://www.infoq.cn/article/u01Zu6ywe9xON648fq9G">可视化编程是否真的没有未来？程序员：它有“七宗罪”-InfoQ</a></li><li><a href="https://www.zhihu.com/question/25536695">谁能用通俗的语言解释一下什么是 RPC 框架？ - 知乎</a></li><li><a href="https://github.com/ninja-build/ninja">ninja-build/ninja: a small build system with a focus on speed</a></li><li><a href="https://www.cnblogs.com/fuland/p/3641317.html">Ninja介绍 - 腐烂的翅膀 - 博客园</a></li><li><a href="https://zh.wikipedia.org/wiki/Ninja_(%E6%9E%84%E5%BB%BA%E7%B3%BB%E7%BB%9F)">Ninja (构建系统) - 维基百科</a></li><li><a href="https://note.qidong.name/2017/08/android-ninja/">Android中的Ninja简介 · 零壹軒·笔记</a></li><li><a href="https://zhuanlan.zhihu.com/p/66947922">简化构建系统 - 知乎</a></li><li><a href="https://www.jianshu.com/p/31bf731fec22">C++构建系统的选择 - 简书</a></li><li><a href="https://apps.apple.com/cn/app/injectioniii/id1380446739?mt=12">‎Mac App Store 上的“InjectionIII”</a></li><li><a href="https://stackoverflow.com/questions/95635/what-does-a-just-in-time-jit-compiler-do">compilation - What does a just-in-time (JIT) compiler do? - Stack Overflow</a></li><li><a href="https://en.wikipedia.org/wiki/Just-in-time_compilation">Just-in-time compilation - Wikipedia</a></li><li><a href="https://www.zhihu.com/question/21093419">如何通俗易懂地介绍「即时编译」（JIT），它的优点和缺点是什么？ - 知乎</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%8D%B3%E6%99%82%E7%B7%A8%E8%AD%AF">即时编译 - 维基百科</a></li><li><a href="https://blog.csdn.net/h1130189083/article/details/78302502">AOT,JIT区别，各自优劣，混合编译_Keisu的博客-CSDN博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/53723652">说一说Android的Dalvik，ART与JIT，AOT - 知乎</a></li><li><a href="https://www.zhihu.com/question/23874627">对比JIT和AOT，各自有什么优点与缺点? - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/95626955">深入理解Android虚拟机及编译系统 - 知乎</a></li><li><a href="https://android.jlelse.eu/android-internals-art-vs-dvm-deep-dive-def34cf664d7">Android Internals: ART vs DVM deep dive - AndroidPub</a></li><li><a href="https://blog.csdn.net/wanglikun7342/article/details/78819387">JIT和AOT编译技术_糕冷羊的博客-CSDN博客</a></li><li><a href="https://blog.csdn.net/qq_36791569/article/details/80269482">传统JIT和java9新特性AOT理解_五彩世界的博客-CSDN博客</a></li><li><a href="https://titanwolf.org/Network/Article/Java%20Basics%20tutorial%20%20-%20169%3A%20Just%20in%20Time%20%28JIT%29%20compiler">Java Basics tutorial - 169: Just in Time (JIT) compiler(Java Developer-Community)</a></li><li><a href="https://theiconic.tech/android-java-fdbd55aadc51">The Relationship Between Android and Java - THE ICONIC Tech</a></li><li><a href="https://en.wikipedia.org/wiki/Android_Runtime">Android Runtime - Wikipedia</a></li><li><a href="https://medium.com/mindorks/android-runtime-improvements-e69bf7c1d10c">Android Runtime Improvements - MindOrks - Medium</a></li><li><a href="https://zh.wikipedia.org/wiki/Android_Runtime">Android Runtime - 维基百科</a></li><li><a href="https://juejin.im/post/5bf22bb5e51d454cdc56cbd5">浅谈 Android Dex 文件 - 掘金</a></li><li><a href="https://www.infoq.cn/article/qt51vqATE7jf_bpw5ggJ">Java失宠，谷歌宣布Kotlin现在是Android开发的首选语言-InfoQ</a></li><li><a href="https://zh.wikipedia.org/wiki/Java">Java - 维基百科</a></li><li><a href="https://zh.wikipedia.org/wiki/OpenJDK#cite_note-12">OpenJDK - 维基百科</a></li><li><a href="https://books.binwell.com/architectures-of-reactnative-xamarin-phonegap-qt/2.-ios-android-windows-uwp-architectures-and-native-apis">iOS/Android/Windows UWP architectures and native APIs - Architectures of ReactNative, Xamarin, PhoneGap, Qt</a></li><li><a href="https://blog.lucideus.com/2019/04/ios-application-security-part-5.html">iOS Application Security | Part 5 | Understanding the structure of an iOS application</a></li><li><a href="https://www.slideshare.net/onmyway133/objectivec-runtime-overview">Objective-C Runtime overview</a></li><li><a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008048-CH1-SW1">Objective-C Runtime Programming Guide</a></li><li><a href="https://opensource.apple.com/source/objc4/objc4-532/runtime/objc-class.mm">OpenSource Runtime objc-class - Apple</a></li><li><a href="https://developer.apple.com/documentation/objectivec/objective-c_runtime">Objective-C Runtime | Apple Developer Documentation</a></li><li><a href="https://www.infoq.cn/article/dynamic-analysis-of-runtime-swift">Swift Runtime动态性分析 - InfoQ</a></li><li><a href="https://www.infoq.cn/article/swift-objective-runtime-programming">Swift和Objective-C的运行时编程-InfoQ</a></li><li><a href="https://www.jianshu.com/p/50105d1d2a20">iOS runtime 官方文档解析 - 简书</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2018/402/">Getting the Most out of Playgrounds in Xcode - WWDC 2018 - Videos - Apple Developer</a></li><li><a href="https://juejin.im/post/5b1a00e251882513ad322579">玩转 Xcode 中的 Playground - 掘金</a></li><li><a href="https://www.infoq.cn/article/Puii*HdQWCDjPzvTNcKq">苹果发布全新SwiftUI框架：一次编码，五端通用-InfoQ</a></li></ul><p><strong>Flutter</strong></p><ul><li><a href="https://flutter.dev/docs">Flutter Documentation - Flutter</a></li><li><a href="https://flutter.cn/">Flutter 社区中文资源</a></li><li><a href="https://www.infoq.cn/article/qSLsru9bEvuHgKpPlWMP">京东技术中台的Flutter实践之路-InfoQ</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=2651020054&idx=3&sn=0351de121e429678a9cfbfd18eaf4d50&chksm=bdbea3458ac92a53e04bf09b42a481d3cae020a8287f3b998303b6d210b6ee1eaabbc95a07ba&scene=27#wechat_redirect">蚂蚁财富Flutter工程化实践</a></li><li><a href="https://mp.weixin.qq.com/s/IZ6rUfg3_-zvopc7jZZobg">Flutter 沙龙回顾 | 跨平台技术趋势及字节跳动 Flutter 架构实践</a></li><li><a href="https://www.infoq.cn/article/qgC1aOf7S6IokBJvFW9t">Flutter 原理与闲鱼深度实践-InfoQ</a></li><li><a href="https://www.infoq.cn/article/xianyu-cross-platform-based-on-flutter">闲鱼基于Flutter的移动端跨平台应用实践-InfoQ</a></li><li><a href="https://yq.aliyun.com/articles/604052?spm=a2c4e.11153940.0.0.730737b1xWHbpU">深入理解flutter的编译原理与优化-云栖社区-阿里云</a></li><li><a href="https://www.infoq.cn/article/Nizkk*FGGYuzeyM8p59p">有赞Flutter混编方案-InfoQ</a></li><li><a href="https://www.infoq.cn/article/TxesjGKPlPh_sMYbTPmg">有赞Flutter插件开发与发布-InfoQ</a></li><li><a href="https://www.infoq.cn/article/ZLauMj3u8bLrIlYvud9F">京东：将Flutter扩展到微信小程序端的探索-InfoQ</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&mid=2247491517&idx=2&sn=cb7c2e023cf0384dc9fbf6ef55154c05&chksm=f951aafece2623e83a46716507b774d7dae6cdcff9bd4b76829159c3d8a88091bc9d71601f8b&scene=27#wechat_redirect">美团：基于跨平台框架Flutter的动态化平台建设</a></li><li><a href="https://www.infoq.cn/article/VBqfCIuwdjtU_CmcKaEu">闲鱼开源FlutterBoost：实现Flutter混合开发-InfoQ</a></li><li><a href="https://www.infoq.cn/article/iYGyKQowuiUN_Gi2hHDo">Flutter 在贝壳的接入实践-InfoQ</a></li><li><a href="https://www.infoq.cn/article/4LCAhRL2TEvUdE8zpHaa">写给前端工程师的 Flutter 教程（上）-InfoQ</a></li><li><a href="https://juejin.im/post/5dac428af265da5ba838f476">Flutter 跨平台框架应用实战-2019极光开发者大会 - 掘金</a></li><li><a href="https://www.infoq.cn/article/JyqaA9g0Fct9wwKor75B">SwiftUI对Flutter到底意味着什么？-InfoQ</a></li><li><a href="https://stephenwzl.github.io/2018/05/14/flutter-principle/">Flutter原理简解 · stephenwzl</a></li><li><a href="https://tech.meituan.com/2018/08/09/waimai-flutter-practice.html">Flutter原理与实践 - 美团技术团队</a></li><li><a href="https://www.altexsoft.com/blog/engineering/flutter-vs-xamarin-cross-platform-mobile-development-compared/">Flutter vs Xamarin: Cross-Platform Mobile Development Compared | AltexSoft</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h2&gt;&lt;p&gt;首先，我认为学习总结，要有所总，所结，就是有归纳后，能用&lt;code&gt;自己的话&lt;/code&gt;告诉别人！有所结，就是有所收获输出，一般我认为是&lt;code&gt;思维导图&lt;/code&gt;，所以，每篇文章前，我都会先给出文章的脑图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-06-App%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E6%B3%A8%E5%85%A5%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%9E%81%E9%80%9F%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95%EF%BC%9F.png&quot; alt=&quot;iOS开发高手课-06-App如何通过注入动态库的方式实现极速编译调试？.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="JIT" scheme="https://ihtcboy.com/tags/JIT/"/>
    
    <category term="AOT" scheme="https://ihtcboy.com/tags/AOT/"/>
    
    <category term="Injection" scheme="https://ihtcboy.com/tags/Injection/"/>
    
    <category term="Flutter" scheme="https://ihtcboy.com/tags/Flutter/"/>
    
    <category term="Hot Reload" scheme="https://ihtcboy.com/tags/Hot-Reload/"/>
    
    <category term="热加载" scheme="https://ihtcboy.com/tags/%E7%83%AD%E5%8A%A0%E8%BD%BD/"/>
    
    <category term="热重载" scheme="https://ihtcboy.com/tags/%E7%83%AD%E9%87%8D%E8%BD%BD/"/>
    
    <category term="动态链接器" scheme="https://ihtcboy.com/tags/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%99%A8/"/>
    
    <category term="iOS开发高手课" scheme="https://ihtcboy.com/tags/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="学习总结" scheme="https://ihtcboy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>【学习总结】05 | 链接器：符号是怎么绑定到地址上的？</title>
    <link href="https://ihtcboy.com/2020/01/10/2020-01-10_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE05/"/>
    <id>https://ihtcboy.com/2020/01/10/2020-01-10_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE05/</id>
    <published>2020-01-10T12:20:20.000Z</published>
    <updated>2020-08-22T03:15:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>首先，我认为学习总结，要有所总，所结，就是有归纳后，能用<code>自己的话</code>告诉别人！有所结，就是有所收获输出，一般我认为是<code>思维导图</code>，所以，每篇文章前，我都会先给出文章的脑图：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-05-%E9%93%BE%E6%8E%A5%E5%99%A8%EF%BC%9A%E7%AC%A6%E5%8F%B7%E6%98%AF%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E5%88%B0%E5%9C%B0%E5%9D%80%E4%B8%8A%E7%9A%84%EF%BC%9F.png" alt="iOS开发高手课-05-链接器：符号是怎么绑定到地址上的？.png"></p><span id="more"></span><h2 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h2><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><p><code>链接器</code> 对于刚刚接触程序开发的同学可能基本不懂，虽然大学学习<code>编译原理</code>、<code>计算机原理</code>等。这些知识比较抽象，为了让大家明白，我们需要站在巨人的肩膀上！所以，本文需要一个巨人 —– <code>编译器</code> 来帮助大家理解 <code>链接器</code> 是什么？为什么？大家有没有想过，你写的代码，最终是怎么样在计算机或手机上运行的？？？那现在就让我们来了解一下吧！</p><h3 id="《程序是怎样跑起来的》"><a href="#《程序是怎样跑起来的》" class="headerlink" title="《程序是怎样跑起来的》"></a>《程序是怎样跑起来的》</h3><blockquote><p>“计算机组成原理”图解趣味版，蹲马桶就能看懂的编程基础知识！普及计算机知识。如何向小学生讲解CPU和二进制？如何向中学生讲解内存和磁盘？如何向女高中生讲解操作系统的原理？如何向老奶奶说明显示器和电视的不同？</p></blockquote><p><code>《程序是怎样跑起来的》</code>作者是日本<code>矢泽久雄</code>，我们需要解析 <code>编译器</code>，所以需要简单入门级的<code>计算机组成原理</code>，这本书就是这样一本优秀的书！大家可能通过微信读书读到电子版： <a href="https://weread.qq.com/wrpage/book/share/907761">程序是怎样跑起来的 - 微信读书</a>，目前2020年微信还有很多无限卡会员的免费阅读，当然如果必要花 19.99 元我认为也值得。好了我们就不多说了，下面我主要摘取书中几个示意图来解析 <code>编译器</code>：</p><h4 id="程序运行流程示例"><a href="#程序运行流程示例" class="headerlink" title="程序运行流程示例"></a>程序运行流程示例</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%9B%BE1-1-%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E7%A4%BA%E4%BE%8B.jpg" alt="图1-1-程序运行流程示例.jpg"></p><p>上图展示程序运行流程示例，从我们编写的高级语言的代码，到 <code>CPU</code>（Central Processing Unit，中央处理器）所负责的就是解释和运行最终转换成机器语言的程序内容，其实是 <code>编译器</code> 工作的流程。</p><h4 id="CPU的四个构成部分"><a href="#CPU的四个构成部分" class="headerlink" title="CPU的四个构成部分"></a>CPU的四个构成部分</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%9B%BE1-2-CPU%E7%9A%84%E5%9B%9B%E4%B8%AA%E6%9E%84%E6%88%90%E9%83%A8%E5%88%86.jpg" alt="图1-2-CPU的四个构成部分.jpg"></p><p>CPU 的内部由<code>寄存器</code>、<code>控制器</code>、<code>运算器</code>和<code>时钟</code>四个部分构成，各部分之间由电流信号相互连通。本文我们不关注 CPU 的工作原理，本图主要是后面要解析代码运行在不同 CPU 上，需要 <code>编译器</code> 对不同的 CPU 做兼容和优化。为什么会有不同的 CPU，上图就说明了，简单来说寄存器、控制器、运算器和时钟的设计和数量不同，那就是不同的 CPU，所以代码在不同的 CPU 运行就可能有不一样的要求，这是硬件方面。这里就不深入解析了，大家可以看看本书，或自行搜索了解更多。</p><h4 id="CPU负责解析并运行从源代码编译而来的本地代码"><a href="#CPU负责解析并运行从源代码编译而来的本地代码" class="headerlink" title="CPU负责解析并运行从源代码编译而来的本地代码"></a>CPU负责解析并运行从源代码编译而来的本地代码</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%9B%BE7-2-CPU%E8%B4%9F%E8%B4%A3%E8%A7%A3%E6%9E%90%E5%B9%B6%E8%BF%90%E8%A1%8C%E4%BB%8E%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E8%80%8C%E6%9D%A5%E7%9A%84%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81.jpg" alt="图7-2-CPU负责解析并运行从源代码编译而来的本地代码.jpg"></p><p>CPU 只能解释其自身固有的<code>机器语言</code>，机器语言的程序称为<code>本地代码</code>（native code）。不同的CPU能解释的机器语言的种类也是不同的。例如，CPU有 <code>x86</code>、<code>MIPS</code>、<code>SPARC</code>、<code>PowerPC</code>、<code>ARM</code>等几种类型，它们各自的机器语言是完全不同的。</p><p>程序员用C语言等编写的程序，在编写阶段仅仅是<code>文本文件</code>，文本文件（排除文字编码的问题）在任何环境下都能显示和编辑，我们称之为<code>源代码</code>。通过对源代码进行编译，就可以得到<code>本地代码</code>。到目前，我们了解了代码编译的流程啦，那具体的流程又是怎么样的呢？在讲解之前，我们先看看 CPU 的历史，这样对我们了解编译器也起到重要作用啊~</p><p>这里解析一下各种 CPU :</p><ul><li><code>x86</code>：美国 Intel (英特尔)的微处理器，是按照8086、80286、80386、80486、Pentium(奔腾)……这样的顺序不断升级的。因为这些型号的后面都带有86，所以总称为x86。32位处理器 Intel官方文档里面称为“IA-32”，64位处理器称“x86_64”、“x86-64”，又称x64，即英文词 64-bit e<strong>x</strong>tended，64位拓展的简写。这个<code>64位有点故事</code>，下面讲。现在的PC机都是64位 CPU 啦。</li><li><code>MIPS</code>：美国 MIPS 科技公司开发的CPU，曾出现过面向 MIPS工作站的 Windows，不过现在市面上已经不再出售了。</li><li><code>SPARC</code>：美国 SUN系统开发的CPU，很多工作站都采用了该CPU。</li><li><code>PowerPC</code>：是美国苹果、IBM、摩托罗拉共同开发的CPU，苹果的Power Mac及IBM的工作站都采用了该CPU，不过现在的Mac采用的是Intel的x86系列CPU。</li><li><code>ARM</code> ARM，安谋控股公司（英语：ARM Holdings plc.），又称ARM公司。ARM的前身为艾康电脑，1978年于英国剑桥创立。2016年7月18日，日本软银集团斥资3.3万亿日元（约合311亿美元）收购了ARM公司。ARM架构版本从 ARMv3 到 ARMv7 支持32位，2011年发布的ARMv8-A 架构添加了对64位支持。现在移动设备主流就是使用 ARM 。</li></ul><h5 id="x86-64-的故事"><a href="#x86-64-的故事" class="headerlink" title="x86-64 的故事"></a>x86-64 的故事</h5><p><code>x84_64</code> 是 <code>x86</code> 32位 CPU 开始迈向64位的时候，有2种选择：</p><ol><li>向下兼容x86。</li><li>完全重新设计指令集，不兼容x86。</li></ol><p>结果在 1999 年 <code>AMD</code> 抢跑了！比 <code>Intel</code> 率先制造出了商用的兼容 x86 的CPU，AMD称之为 <code>AMD64</code>，抢了64位PC的第一桶金，得到了用户的认同。所以 Intel 为了面子就选择了设计一种不兼容x86的全新64为指令集，称之为<code>IA-64</code>（Itanium，安腾），但是比 AMD 晚了一步，因为 AMD64 能有效地把x86架构移至64位的环境，并且能兼容原有的x86应用程序。并且 IA-64 也挺惨淡的，因为是全新设计的CPU，没有编译器，也不支持 Windows（微软把intel给忽悠了，承诺了会出对应的 Windows server 版，但是迟迟拿不出东西），处理器本身和软件移植的成本难以控制，导致 IA-64 最终流产。后来不得不在时机落后的情况下也开始支持AMD64的指令集，但是换了个名字，叫<code>x86_64</code>，表示是 x86 指令集的64扩展，大概是不愿意承认这玩意是AMD设计出来的？现时英特尔称之为“<code>Intel 64</code>”，在之前曾使用过“Clackamas Technology” (CT)、“IA-32e”及“<code>EM64T</code>”等名字。换汤不换药，核心与 AMD64 几乎相同，犹如一对孪生兄弟，其实都是 x86-64 架构。当年有媒体为 EM64T 起了“<code>iAMD64</code>”别名，讽刺 Intel 在迎击 AMD 的民用64位技术上，使用了 AMD 的技术，直接把 AMD64 吸纳过来，并以新名重新包装使用，所以最后，Intel 索性将此技术正式命名为 <code>Intel 64</code>。</p><p>所以，CPU 的 32 位还是 64位，一般是用 <code>x86-64</code> 表示64位，而32位现在已经没有了。另外，不同公司对 x86-64 架构，名字上还是有一些区别，苹果公司和RPM包管理员以“x86-64”或“x86_64”称呼此64位架构。甲骨文公司及Microsoft称之为“x64”，BSD家族及其他Linux发行版则使用“x64-64”，32位版本则称为“i386”（或 i486/586/686），Arch Linux用x86_64称呼此64位架构。</p><p>最后一个问题，x86、x86_64主要的区别是什么？就是32位和64位的问题，x86 中只有8个32位通用寄存器，分别是 eax,ebx,ecx，edx, ebp, esp, esi, edi。x86_64 把这8个通用寄存器扩展成了64位的，并且比x86增加了若干个寄存器（好像增加了8个，变成了总共16个通用寄存器）。譬如四个通用寄存器（RAX, RBX, RCX, RDX）是由32位的（EAX, EBX, ECX, EDX）64位扩展而来，相应的还有指针寄存器（RIP, RBP, RSP, RSI, RDI），以及增加八个通用寄存器（R8～R15）等等。 这些资源只可在x64处理器的64位模式下使用，在用来支持x86软件的遗留模式和兼容模式中是不可见的。</p><p>以上内容和关于 CPU 更多历史和资料，可查看来源： <a href="https://zh.wikipedia.org/wiki/X86#64%E4%BD%8D%E5%85%83">x86 - 维基百科</a> 、 <a href="https://zh.wikipedia.org/wiki/X86-64">x86-64 - 维基百科，自由的百科全书</a> 和 <a href="https://www.iteye.com/blog/chenzehe-1703429">X86、X64和X86_64区别</a> 。</p><h4 id="转换成本地代码后就变成了同样的语言"><a href="#转换成本地代码后就变成了同样的语言" class="headerlink" title="转换成本地代码后就变成了同样的语言"></a>转换成本地代码后就变成了同样的语言</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%9B%BE8-2-%E8%BD%AC%E6%8D%A2%E6%88%90%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%90%8E%E5%B0%B1%E5%8F%98%E6%88%90%E4%BA%86%E5%90%8C%E6%A0%B7%E7%9A%84%E8%AF%AD%E8%A8%80.jpg" alt="图8-2-转换成本地代码后就变成了同样的语言.jpg"></p><p>前面提到，CPU 只能解释其自身固有的<code>机器语言</code>，而转换成机器语言的程序就是<code>本地代码</code>。不管用那种编程语言编写的源代码，最后只要能翻译(<code>编译</code>)成本地代码，那么 CPU 就能理解。这个过程，其实就是<code>编译器</code>的工作内容！</p><h4 id="同样的源代码可以转换成适用于不同处理器的本地代码"><a href="#同样的源代码可以转换成适用于不同处理器的本地代码" class="headerlink" title="同样的源代码可以转换成适用于不同处理器的本地代码"></a>同样的源代码可以转换成适用于不同处理器的本地代码</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%9B%BE8-5-%E5%90%8C%E6%A0%B7%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81%E5%8F%AF%E4%BB%A5%E8%BD%AC%E6%8D%A2%E6%88%90%E9%80%82%E7%94%A8%E4%BA%8E%E4%B8%8D%E5%90%8C%E5%A4%84%E7%90%86%E5%99%A8%E7%9A%84%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81.jpg" alt="图8-5-同样的源代码可以转换成适用于不同处理器的本地代码.jpg"></p><p>根据 CPU 类型的不同，本地代码的类型也不同。因而，编译器不仅和编程语言的种类有关，和 CPU 的类型也是相关的。这就是前面为什么要重点说 CPU 相关知识，现在是不是有点理解<code>编译器</code>了！</p><p>把C语言等<code>高级编程语言</code>编写的源代码<strong>转换</strong>成<code>本地代码</code>的程序称为<code>编译器</code>，这个转换过程经过语法解析、句法解析、语义解析等。每种编程语言编写的源代码都需要其专用的编译器，或者是同用类编译器，比如 C 家族（C/C++）的编辑器。</p><h4 id="Windows中的编译和链接机制"><a href="#Windows中的编译和链接机制" class="headerlink" title="Windows中的编译和链接机制"></a>Windows中的编译和链接机制</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%9B%BE8-8-Windows%E4%B8%AD%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E9%93%BE%E6%8E%A5%E6%9C%BA%E5%88%B6.jpg" alt="图8-8-Windows中的编译和链接机制.jpg"></p><p>刚才说的<code>高级编程语言</code>的源代码<strong>转换</strong>成<code>本地代码</code>，本地文件是无法直接运行的，还需要把多个目标文件结合，生成1个可执行文件（图中是EXE文件，针对Windows系统的。），这个处理就是<code>链接</code>，运行连接的程序就称为<code>链接器</code>（linkage editor，或连结器）。至此，我们终于说到链接器啦！！！现在明白链接器是在那里使用了吧？</p><p>存储着目标文件的实体，并直接和可执行文件结合的库文件形式称为<code>静态链接库</code>，经常简称为<code>静态库</code>。与之相反的，就叫<code>动态链接库</code>（动态库），就是参与链接过程，但是并不会与可执行文件结合，就是说链接时会做标记，绑定的地址在加载后再决定。这个不理解，没关系，下面还会在详细说说，下一章的内容就是<code>动态链接库</code>和<code>动态链接器</code>的内容，所以，这个需要了解一下。</p><p>至此，我们就过编译器相关的内容，简单的解说了一下，不知道大家有点理解没有，下面，我们在深入一点，了解编译器的具体工作流程。</p><h3 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h3><p>编译器一般采用 <code>Three-Phase</code>（三阶段/三相）架构设计：</p><ol><li>编译器前端（Front end）</li><li>中间端（Middle end，或叫优化器，Optimizer）</li><li>后端（Backend）</li></ol><h4 id="编译器前端（Front-end）"><a href="#编译器前端（Front-end）" class="headerlink" title="编译器前端（Front end）"></a>编译器前端（Front end）</h4><ol><li>Preprocess - 预处理</li><li>Parser - 解析器</li><li>Lexical Analysis - 词法分析</li><li>Semantic Analysis - 语义分析</li><li>AST（Abstract Syntax Tree，抽象语法树）</li><li>Static Analysis - 静态分析</li><li>CodeGen - IR 代码生成</li></ol><p>编译器前端的任务：<code>预处理</code>、<code>语法分析</code>，<code>语义分析</code>，在这个过程中，也会进行类型检查，如果发现错误或者警告会标注出来在哪一行等，最终生成中间代码 IR（Intermediate Representation，中间端表达式）。对于 <code>LLVM</code> 来说，前端就是 <code>CLang</code>。</p><h4 id="中间端（Middle-end，或叫优化器，Optimizer）"><a href="#中间端（Middle-end，或叫优化器，Optimizer）" class="headerlink" title="中间端（Middle end，或叫优化器，Optimizer）"></a>中间端（Middle end，或叫优化器，Optimizer）</h4><ol><li>LLVM Bitcode - 生成字节码</li><li>Assemble - 生成Target相关汇编</li><li>Assemble - 生成Target相关 Object(Mach-o)</li><li>Link 生成 Executable 可执行文件</li></ol><p>优化是非常重要的，很多直接转换来的代码是不合适且消耗内存的，因为是直接转换，所以必然会有这样的问题，而优化放在这一步的好处在于前端不需要考虑任何优化过程，减少了前端的开发工作。中间代码要经过一系列的优化，优化用的是 <code>Pass</code>，中间代码的优化也可以开发者自己编写，可以插入一个 <code>Pass</code>。</p><h4 id="后端（Backend）"><a href="#后端（Backend）" class="headerlink" title="后端（Backend）"></a>后端（Backend）</h4><ul><li>ARM（ARM，安谋控股公司）</li><li>x86|x86-64（Intel，英特尔）</li><li>PowerPC（Apple &amp; IBM &amp; Motorola，AIM联盟）</li></ul><p>编译器后端会进行机器无关的代码优化，生成机器语言，并且进行机器相关的代码优化。对于 iOS 的编译过程，后端的处理：LLVM优化器会进行BitCode的生成，链接期优化等，LLVM机器码生成器会针对不同的架构，比如arm64等生成不同的机器码。</p><p>这里的后端，最终就是生成对应的 CPU 能执行的机器语言，前面已经介绍过 CPU 相关的。</p><p>上面说了编译器的组成架构和简要的工作流程，详细的工作流程这里就不多说了，因为已经有很多优秀的内容了，并且本文的主要目的是要说明编译器是什么！你知道它是什么后，再了解它是怎么用，有什么优缺点，自然不是难事！以上的部分内容是针对 iOS 和 LLVM 的，所以，我们接下来就来介绍一下 LLVM 编译器吧！</p><p>要讲解 <code>LLVM</code> 前，有必要的说说 <code>GCC</code>（GNU Compiler Collection，GNU编译器套件） ，因为苹果最初也是使用 GCC，后来慢慢的替换为 LLVM 的。</p><h3 id="GCC（GNU-Compiler-Collection，GNU编译器套件）"><a href="#GCC（GNU-Compiler-Collection，GNU编译器套件）" class="headerlink" title="GCC（GNU Compiler Collection，GNU编译器套件）"></a>GCC（GNU Compiler Collection，GNU编译器套件）</h3><p>原名：GNU C语言编译器（GNU C Compiler），通常是跨平台软件的编译器首选。（在所有平台上都使用同一个前端处理程序，产生一样的中间码）。</p><p>但是由于以下问题，导致苹果转为 LLVM:</p><ul><li><pre><code>GCC 的 Objective-C Frontend 不给力</code></pre></li><li><pre><code>GCC 插件、工具、IDE的支持薄弱</code></pre></li></ul><p>GCC的前端不是苹果提供维护的，想要添加一些语法提示等功能还得去求GCC的前端去做。 很多编译器特性没有，自动补全、代码提示、warning、静态分析等这些流程不是很给力，都是需要IDE调用底层命令完成的，结果需要以插件的形式暴露出来，这一块GCC做的不是很好。</p><h3 id="LLVM"><a href="#LLVM" class="headerlink" title="LLVM"></a>LLVM</h3><p>早年Apple一直使用 <code>GCC</code> 作为官方的编译器，但Apple对 GCC 的性能不满意，再者 <code>Objective-C</code> 在 GCC 中优先级低，GCC 对 Objective-C 语言新特性的支持程度也不高。因此Apple一直在寻找compiler（编译器）的开源替代品，于是他们将目光转移到<code>LLVM</code>身上。</p><p>来自维基百科：<del>关于<code>LLVM</code>这个名字的来源，LLVM的命名最早<a href="https://web.archive.org/web/20120117140118/http://lists.cs.uiuc.edu/pipermail/llvmdev/2011-December/046443.html">源自</a>于底层虚拟机（Low Level Virtual Machine）的首字母缩写，由于这个项目的范围并不局限于创建一个虚拟机，这个缩写导致了广泛的疑惑。</del></p><p><code>LLVM 就是 LLVM</code>, 并不是 Low Level Virtual Machine（底层虚拟机）的简写！现今LLVM 已单纯成为一个品牌！根据官网说明：</p><blockquote><p>The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. Despite its name, LLVM has little to do with traditional virtual machines. The name “LLVM” itself is not an acronym; it is the full name of the project.<br>LLVM项目是模块化和可重用的编译器及工具链技术的集合。尽管名称如此，LLVM与传统虚拟机关系不大。名称“ LLVM”本身不是缩写。它是项目的全名。</p></blockquote><p>2000年，伊利诺伊大学厄巴纳－香槟分校（University of Illinois at Urbana-Champaign 简称UIUC）这所享有世界声望的一流公立研究型大学的 <code>Chris Lattner</code>（克里斯·拉特纳，twitter <a href="https://twitter.com/clattner_llvm">@clattner_llvm</a> ） 和 <code>Vikram Adve</code>（维克拉姆·艾夫）想要为所有静态及动态语言创造出动态的编译技术，而开发的编译器开发工具套件。2005年，苹果电脑雇用了 Chris Lattner 克里斯·拉特纳及他的团队为苹果电脑开发应用程序系统,LLVM 涉及范围越来越大，可以用于常规编译器，JIT编译器，汇编器，调试器，静态分析工具等一系列跟编程语言相关的工作。Chris Lattner 后来又开发了 Clang，使得 LLVM 直接挑战 GCC 的地位。</p><h4 id="Chris-Lattner-大神简介"><a href="#Chris-Lattner-大神简介" class="headerlink" title="Chris Lattner 大神简介"></a>Chris Lattner 大神简介</h4><p><code>Chris Lattner</code> 生于 1978 年，2005年加入苹果，将苹果使用的 GCC 全面转为 LLVM。2010年开始主导开发 Swift 语言。2017年1月，克里斯·拉特纳 辞去在苹果的工作，入职特斯拉汽车，负责自动驾驶软件的开发。2017年8月14日，克里斯·拉特纳 发表Twitter表示将于一周后加入聚焦于深度学习与人工智能研发的Google Brain团队。</p><h4 id="Xcode-历史"><a href="#Xcode-历史" class="headerlink" title="Xcode 历史"></a>Xcode 历史</h4><p>Clang 编译效率是 GCC 的3倍，编译器性能好，编译出的文件小。LLVM 3.0 发布已完整支持所有 ISO C++ 标准，代表着 LLVM 正式走向成熟。所以，也标志着 Xcode 的变化。</p><ul><li><pre><code>**Xcode3**：GCC前端-LLVM后端，</code></pre></li><li><pre><code>**Xcode4.2**：Clang-LLVM 3.0 成为默认编译器，</code></pre></li><li><pre><code>**Xcode5**： GCC 被废弃，新的编译器是 LLVM 5.0</code></pre></li></ul><p>从 GCC前端 到 LLVM后端的编译器，到 Clang-LLVM 的编译器，一步步收回对编译工具链的控制，也为 Swift 的出现奠定基础。所以，Chris Lattner 真的是大神！</p><p>当前 Xcode11 对应：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Apple clang version 11.0.0 (clang-1100.0.33.17)</span><br><span class="line">Target: x86_64-apple-darwin19.3.0</span><br><span class="line">Thread model: posix</span><br><span class="line">InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin</span><br></pre></td></tr></table></figure><p>查看你当前使用的 LLVM 可以用命令：<code>llvm-gcc -v</code>。</p><h4 id="LLVM-工具链"><a href="#LLVM-工具链" class="headerlink" title="LLVM 工具链"></a>LLVM 工具链</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/LLVM%E5%B7%A5%E5%85%B7%E9%93%BE%E9%9B%86%E5%90%88.png" alt="LLVM工具链集合.png"></p><p>最后用<a href="https://wjerry.com/2019/05/19/LLVM%E6%9E%B6%E6%9E%84%E4%B8%8EClang/">这张图</a>来表示完整的LLVM工具链集合的六大执行单元。</p><ol><li><code>词法分析</code>： 将源代码中的所有字符切分成记号(Token)的序列。包括了词法分析器、记号序列化生成器和扫描器，不过扫描器常常作为词法分析器的第一阶段。</li><li><code>语法分析</code>： 分析符合一定语法规则的一串符号，它通常会生成一个抽象语法树（AST - Abstract Syntax tree），用于表示记号之间的语法关系。</li><li><code>语义分析</code>： 通过语法分析的解析后，这个过程将从源代码中收集必要的语义信息，通常包括类型检查、在使用之前确保声明了变量等等。</li><li><code>中间代码(IR)生成</code>：代码在这个阶段会转换为中间表示式(IR)，这是一种中立的语言，与源语言(前端)和机器(后端)无关。</li><li><code>优化中间表达式</code>：中间代码常常会有冗余和死代码的情况出现，而优化器可以处理这些问题以获得更优异的性能。</li><li><code>生成目标代码</code>： 最后后端会生成在目标机器上运行的机器码，我们也将其称之为目标代码。</li></ol><p>关于 LLVM 可以查看官网了解更多：<a href="http://llvm.org/">The LLVM Compiler Infrastructure Project</a>，中文站：<a href="https://www.llvm.org.cn/">LLVM - 让世界听到龙的声音</a></p><h3 id="链接器"><a href="#链接器" class="headerlink" title="链接器"></a>链接器</h3><ul><li>为什么要让链接器做符号和地址绑定？不绑定的话，又会有什么问题？</li><li>链接器为什么还要把项目中的多个 Mach-O 文件合并成一个。</li></ul><p>回到本文开始的问题，大家对这2个问题心中有答案了吗？</p><p><code>链接器</code>的作用是将符号绑定到地址上，<code>符号表</code>是内存地址与函数名、文件名、行号的映射表。所以，变量、函数与地址绑定，CPU 才能理解解析<code>代码</code>。而为什么要多个 Mach-O 文件合并一个最终的 <code>Mach-O</code>？过去面向过程编程时，可以写一个文件中，而现在主流是面向对象，就有类与对象关系，所以一般是分类、分模块、分空间来编写源代码，所以，需要把这些类与对象和他们之前调用关系绑定一起，合并成一个<code>Mach-O</code>。为了更好理解这个 <code>Mach-O</code>，需要了解 CPU 是怎么执行他们的，这里就不展开了，感兴趣的同学可以先自行搜索了解更多。</p><h3 id="触类旁通"><a href="#触类旁通" class="headerlink" title="触类旁通"></a>触类旁通</h3><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Clang-Swift-LLVM%E7%BC%96%E8%AF%91%E5%99%A8%E6%9E%B6%E6%9E%84.png" alt="Clang/Swift-LLVM编译器架构.png"></p><p>让我们再次回顾一下编译器的工作流程，以 LLVM 为例，从 iOS 开发视角来看这个问题。这张图片来源：<a href="https://juejin.im/post/5a3232896fb9a0452b494189#heading-3">从Swift桥接文件到Clang-LLVM - 掘金</a>。详细的编译器过程大家可以参考文章，这里就不过多重复。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/Clang-LLVM%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B.png" alt="Clang-LLVM编译过程.png"></p><p>另外，原文还提到很多的概念，这里也不一一提出了，具体可以看看本文最前面的思维导图。比如：</p><ul><li><code>AST</code>（Abstract Syntax Tree，抽象语法树）</li><li><code>Mach-O</code>：是 Mach Object 文件格式的缩写，它是一种用于可执行文件，目标代码，动态库，内核转储的文件格式。作为a.out格式的替代，Mach-O提供了更强的扩展性，并提升了符号表中信息的访问速度。</li><li><code>符号表</code>：是内存地址与函数名、文件名、行号的映射表。格式如：&lt;起始地址&gt; &lt;结束地址&gt; &lt;函数&gt; [&lt;文件名:行号&gt;]</li><li><code>dyld</code>（the dynamic link editor）：当加载 Mach-O 文件时，动态链接器会先检查是否有共享缓存。每个进程都会在自己的地址空间映射这些共享缓存，这样做可以起到优化App启动速度的作用。</li><li><code>LLDB</code>（LLVM项目的调试器组件）</li><li><code>ASLR</code> (Address space layout randomization，地址空间配置随机加载)</li><li><code>解释器</code>：不需要经过编译的过程，而是在执行的时候通过一个中间的解释器将代码解释为CPU可以执行的代码。JavaScript、Python、PHP等都是直译式语言。</li><li><code>Bitcode</code>：字节码</li><li><code>SIL</code>（Swift Intermediate Language）：AST 和LLVM IR之间的另一种中间代码表示形式。主要是用来弥补一些 Clang编译器的缺陷，如无法执行一些高级分析，可靠的诊断和优化等。</li></ul><h4 id="中间代码-LLVM-IR"><a href="#中间代码-LLVM-IR" class="headerlink" title="中间代码 LLVM IR"></a>中间代码 LLVM IR</h4><p>中间端表达式 IR（Intermediate Representation），有3种表示形式，但本质是等价的，就好比水可以有气体，液体，固体3种形式。</p><ol><li><code>text</code>：便于阅读的文本格式，类似于汇编语言，拓展名<code>.II</code>。生成命令：<code>$ clang -S -emit-llvm main.m </code></li><li><code>memory</code>：内存格式，开发时操作 LLVM IR。</li><li><code>bitcode</code>：二进制格式，拓展名<code>.bc</code>。生成命令：<code>$ clang -c -emit-llvm main.m</code></li></ol><h4 id="广义与狭义-LLVM-与-Clang-的关系"><a href="#广义与狭义-LLVM-与-Clang-的关系" class="headerlink" title="广义与狭义 LLVM 与 Clang 的关系"></a>广义与狭义 LLVM 与 Clang 的关系</h4><p><code>广义 LLVM</code>：整个 LLVM 架构。</p><p><code>狭义 LLVM</code>：LLVM 后端（代码优化，目标文件生成等。）</p><p><code>Clang</code>（C Lange Family Frontend for LLVM），发音为<code>/ˈklæŋ/</code>，是C、C++、Objective-C、Objective-C++ 编程语言的编译器前端。</p><p>所以，非特指，LLVM 就是广义 LLVM，指整个LLVM项目，包括Clang前端。另外，本文主要讲解了 LLVM 在 Apple 平台上的使用，LLVM 现在被作为实现各种静态和运行时编译语言的通用基础结构，可以使用 LLVM 来编译Ruby，Python，Haskell，Java，D，PHP，Pure，Lua和许多其他语言。LLVM 的主要优势在于其多功能性，灵活性和可重用性，这就是它被用于各种不同任务的原因：从轻量级JIT编译嵌入式语言（如Lua）到编译Fortran代码（用于大型超级）电脑。</p><h4 id="相比较GCC，Clang具有哪些优点"><a href="#相比较GCC，Clang具有哪些优点" class="headerlink" title="相比较GCC，Clang具有哪些优点"></a>相比较GCC，Clang具有哪些优点</h4><ul><li>Clang是:</li></ul><ul><li>LLVM项目的一个子项目</li><li>基于LLVM架构的 C、C++、Objective-C、Objective-C++  编译器前端</li></ul><ul><li>Clang优点：</li></ul><ul><li>编译速度快：在某些平台上，Clang的编译速度显著的快过GCC </li><li>占用内存小：Clang生成的AST(语法树)所占用的内存是GCC的五分之一左右 </li><li>模块化设计：Clang采用基于库的模块化设计，易于IDE集成及其他用途的重用 </li><li>诊断信息可读性强：在编译过程中，Clang创建并保存了大量详细的元数据，有利于调试 </li><li>设计清晰简单，容易理解，易于扩展增强</li></ul><h4 id="Swift-如何桥接-Objtive-C-文件到-Clang-LLVM-？"><a href="#Swift-如何桥接-Objtive-C-文件到-Clang-LLVM-？" class="headerlink" title="Swift 如何桥接 Objtive-C 文件到 Clang-LLVM ？"></a>Swift 如何桥接 Objtive-C 文件到 Clang-LLVM ？</h4><p>在 Swift 的项目中，Objtive-C  代码可以生成 IR（Intermediate Representation，中间端表达式），从而与 Swift 生成的 IR 联通。这个也是分段（层）的好处，编译器中间端（Middle end，或叫优化器，Optimizer），作为中间者通过前端获取 IR ，从而不用关心前端的编程语言是什么，这些设计特点，带来了非常大的好处。</p><blockquote><p>假如有N种语言（C、OC、C++、Swift…）的前端，同时也有M个架构（模拟器、arm64、x86…）的Target，是否就需要 N × M 个编译器？<br>三相架构的价值就体现出来了，通过共享优化器的中转，很好的解决了这个问题。<br>假如你需要增加一种语言，只需要增加一种前端；假如你需要增加一种处理器架构，也只需要增加一种后端，而其他的地方都不需要改动。这复用思想很牛逼吧。  </p><p>来自：<a href="https://www.jianshu.com/p/5b2cce762106">浅谈iOS编译过程 - 简书</a></p></blockquote><p>需要注意的是 <strong>Clang</strong> 是基于LLVM架构的 <strong>C、C++、Objective-C、Objective-C++</strong>  编译器前端，不包括 <code>Swift</code>！苹果针对 Swift 做了单独的前端，与 Clang 是非常相似的，特点就是增加了 <code>SIL</code>（<a href="https://llvm.org/devmtg/2015-10/slides/GroffLattner-SILHighLevelIR.pdf">Swift Intermediate Language</a>）。详细具体可以查看 WWDC 视频：<a href="https://developer.apple.com/videos/play/wwdc2016/405/">What’s New in LLVM - WWDC 2016 - Videos - Apple Developer</a> 、<a href="https://developer.apple.com/videos/play/wwdc2018/415/">Behind the Scenes of the Xcode Build Process - WWDC 2018 - Videos - Apple Developer</a>。</p><h4 id="方舟编译器"><a href="#方舟编译器" class="headerlink" title="方舟编译器"></a>方舟编译器</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E6%96%B9%E8%88%9F%E7%BC%96%E8%AF%91%E5%99%A8%E6%9E%B6%E6%9E%84%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="方舟编译器架构示意图.png"></p><blockquote><p>当前方舟编译器支持Java/Kotlin程序字节码的前端输入，其它编程语言的支持（如 C/C++/JS 等）还在规划中，方舟编译器的中间表示（IR）转换器将前端输入转换成方舟IR，并输送给后端的优化器，最终生成二进制文件，二进制文件与编译器运行时库文件链接生成可执行文件，在方舟的运行环境中就可执行该文件。</p><p>方舟编译器IR是支持程序编译和运行的中间程序表示。程序源代码中的任何信息对于程序分析和优化都是有帮助的，所以方舟IR的目标是尽可能完整详细地提供源程序的信息。</p></blockquote><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E6%96%B9%E8%88%9F%E7%BC%96%E8%AF%91%E5%99%A8%E5%BC%80%E6%BA%90%E8%8C%83%E5%9B%B4%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="方舟编译器开源范围示意图.png"></p><blockquote><p>首次开源范围是编译器 IR（ Intermediate Representation）、RC（Reference Counting）和多语言设计思想等，用于与业界、学术界沟通交流。后续将陆续开源编译器前端、后端，支持其它语言（如 JavaScript）的编译等，当前部分Java语言特性和JVM虚拟机特性的支持未包括在本次开源代码中，包括：annotation、lambda表达式、泛型等。目前仍有很多地方不完善，会在社区陆续迭代，遇到问题请在社区提交 issue，欢迎在社区继续讨论设计和代码共建。</p></blockquote><p>怎么样！现在你至少看的懂这个方舟编译器架构的大体流程了吧，是不是发现其实并没有那么难理解！那就对了，万事开头难，慢慢的一切都会简单起来~ 至少去知x上看看这些评论都看懂了啊，<a href="https://www.zhihu.com/question/343431810">如何看待方舟编译器于 2019 年 8 月 31 日开源？ - 知乎</a>，是不是很开心~ </p><p>详细可见官方网页：<a href="https://www.openarkcompiler.cn/document/FAQ">方舟编译器 OpenArkCompiler - FAQ</a></p><h4 id="龙书、虎书、鲸书-—-编译原理三大圣书"><a href="#龙书、虎书、鲸书-—-编译原理三大圣书" class="headerlink" title="龙书、虎书、鲸书 — 编译原理三大圣书"></a>龙书、虎书、鲸书 — 编译原理三大圣书</h4><ol><li><code>龙书</code>：《编译原理》（编译原理 技术与工具）（Compilers: Principles,Techniques, and Tools）</li><li><code>虎书</code>：《现代编译原理 — C语言描述》（Modern Compiler Implement in C）</li><li><code>鲸书</code>：《高级编译器设计与实现》（Advanced Compiler Design and Implementation）</li></ol><p><strong>龙书</strong>：《编译原理》是编译领域无可替代的经典著作，因为书籍的封面是一条龙，所以被广大计算机专业人士誉为“龙书”。<br><strong>虎书</strong>：增加了数据流分析、循环优化、内存管理等内容。<br><strong>鲸书</strong>：包含了一些更比较高级的编译器的设计和实现。</p><p>大家是不是瞬间感觉自己就要买这几本书呢！！！我到底能不能看的懂呢？可以先自测一下自己是不是适配现在就学习编译原理：</p><h5 id="学习编译原理前自测"><a href="#学习编译原理前自测" class="headerlink" title="学习编译原理前自测"></a>学习编译原理前自测</h5><ul><li><pre><code>a. 编译型语言和解释型语言的区别是什么?</code></pre></li><li><pre><code>b. 编译经历了哪几个基本过程? 每个过程主要干了什么事情?</code></pre></li><li><pre><code>c. 详细描述一下你最熟悉的语言中，赋值号的左边可以由哪些部分组成? 右边可以由哪些部分组成?</code></pre></li><li><pre><code>d. 什么是递归? 如何终止一个递归行为?</code></pre></li><li><pre><code>e. 什么是贪心过程?</code></pre></li><li><pre><code>f. 听说过 KMP 吗? 介绍一下它的基本思想.</code></pre></li><li><pre><code>g. 生成树是什么?</code></pre></li><li><pre><code>h. 你觉得编程语言和自然语言最重要的区别有哪些?</code></pre></li><li><pre><code>i. 什么是有限状态自动机? 你知道几种不同的自动机类型? 它们之间的区别和联系?</code></pre></li><li><pre><code>j. 内存被人为的划分成了哪几种不同的类型, 它们之间的区别和联系?</code></pre></li><li><pre><code>k. 什么是中断? CPU 在响应中断时会做什么事情?</code></pre></li><li><pre><code>l. 你最熟悉的语言有垃圾回收机制吗? 若有描述它进行垃圾回收的原理, 若没有则描述你在编写程序时是如何管理内存的?</code></pre></li></ul><p>本节内容来自：<a href="https://www.zhihu.com/question/21515496/answer/118609119">如何学习编译原理？ - 欧长坤的回答 - 知乎</a></p><h2 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h2><p>终于到总结部分啦！这个文章，之前给我们组内同学分享时，在回顾都忘记了一大部分，另外在写成文字时，发现有很多东西需要考证，每篇文章花了很多心思，正好2020年新型肺炎冠状病毒都在家里，正好有这时间。而 <code>维基百科</code> 就是一个很棒的网站，关于大多数知识和历史都能查到，真的很有趣！</p><p>关于<code>编译器</code>的知识有太多了，深入的还可以自己写一个编译器！这里就达不到这样的层次，所以就提一下，有需要的同学可以自行搜索。关于<code>LLVM</code>的知识也还有很多没有讲到，比如<code>抽象语法树</code>（AST），前端 <code>Clang</code> 是重中之器，Clang 插件开发等，还有中间端的 <code>Pass</code>，后端的<code>Mach-O</code> 和 CPU 执行 Mach-O 的过程等。</p><p>最后，本文还是有很多细节无法用文字记录下来，大家可以阅读下面的参考链接，这样收获会更大。关于<code>编译器</code>和<code>链接器</code>就到这里先，对于大家理解这个概念应该是没有问题啦！具体的实现细节，需要大家多学习，如果有能力，可以看看龙书！虎书！鲸书！ 想想也是一件快乐的事件！</p><p>2020年，手机只是小小一部分，智慧家居大屏、穿戴、车机、音响、手表、PC等等各种各样设备，作为开发者，我们不要只关注自己开发的App，编译器知识是所有设备的基础，应该去理解这个<code>世界发生什么变化，为什么变化，怎么变化，抓住变化！</code>当然我承认世界是掌握于小数人，但能先抓住自己！这就是好的开始~</p><br><p>注：更多关于 iOS 开发和程序开发相关的内容，可以查看系列，目前还在连载中 <a href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/">【学习总结】iOS开发高手课 – (连载中) | iHTCboy’s blog</a>，以上，希望对你有用！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a></li></ul><p><strong>WWDC</strong></p><ul><li><a href="https://developer.apple.com/videos/play/wwdc2019/409/">What’s New in Clang and LLVM - WWDC 2019 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2018/409/">What’s New in LLVM - WWDC 2018 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2017/411/">What’s New in LLVM - WWDC 2017 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2016/405/">What’s New in LLVM - WWDC 2016 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2018/415/">Behind the Scenes of the Xcode Build Process - WWDC 2018 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2016/402/">What’s New in Swift - WWDC 2016 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2017/402/">What’s New in Swift - WWDC 2017 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2018/401/">What’s New in Swift - WWDC 2018 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2019/402/">What’s New in Swift - WWDC 2019 - Videos - Apple Developer</a></li></ul><p><strong>Article</strong></p><ul><li><a href="https://ming1016.github.io/2017/03/01/deeply-analyse-llvm/">深入剖析 iOS 编译 Clang / LLVM | 星光社 - 戴铭的博客</a></li><li><a href="https://www.jianshu.com/p/5b2cce762106">浅谈iOS编译过程 - 简书</a></li><li><a href="https://juejin.im/post/5a352bb0f265da433562d5e3">iOS学习之深入理解程序编译过程 - 掘金</a></li><li><a href="https://blog.cocosdever.com/2016/04/09/talking-about-iOS-Reverse-Engineering/">浅谈iOS安全与入侵(逆向工程)</a></li><li><a href="https://www.jianshu.com/p/be413358cd45">dyld简介及加载过程分析 - 简书</a></li><li><a href="http://llvm.org/">The LLVM Compiler Infrastructure Project</a></li><li><a href="https://www.llvm.org.cn/">LLVM - 让世界听到龙的声音</a></li><li><a href="https://zh.wikipedia.org/wiki/Clang">Clang - 维基百科，自由的百科全书</a></li><li><a href="https://zh.wikipedia.org/wiki/LLVM">LLVM - 维基百科，自由的百科全书</a></li><li><a href="https://www.infoq.cn/article/what-is-llvm-the-power-behind-swift-rust-clang-and-more">LLVM：Swift、Rust、Clang等语言的强大后盾-InfoQ</a></li><li><a href="http://llvm.org/docs/">About — LLVM 10 documentation</a></li><li><a href="http://llvmweekly.org/">LLVM Weekly - a weekly newsletter covering developments in LLVM, Clang and more</a></li><li><a href="https://www.mikeash.com/pyblog/friday-qa-2012-11-09-dyld-dynamic-linking-on-os-x.html">mikeash.com: Friday Q&amp;A 2012-11-09: dyld: Dynamic Linking On OS X</a></li><li><a href="https://juejin.im/post/5a3232896fb9a0452b494189">从Swift桥接文件到Clang-LLVM - 掘金</a></li><li><a href="https://juejin.im/post/5c8e278d51882545b32e657f">App启动之Dyld在做什么 - 掘金</a></li><li><a href="https://zh.wikipedia.org/wiki/Mach-O">Mach-O - 维基百科，自由的百科全书</a></li><li><a href="https://onevcat.com/2011/11/objc-block/">Objective-C中的Block</a></li><li><a href="https://github.com/ming1016/SMCheckProject">GitHub - ming1016/SMCheckProject: 使用Swift3开发了个MacOS的程序可以检测出objc项目中无用方法，然后一键全部清理</a></li><li><a href="https://www.zhihu.com/question/21515496">如何学习编译原理？ - 知乎</a></li><li><a href="https://www.zhihu.com/question/26443913">学习《编译原理》完全没有头绪怎么办？ - 知乎</a></li><li><a href="https://www.zhihu.com/question/23460933">谁看完过龙书虎书鲸书？全部看完是不是就有能力写一个C语言的编译器了？ - 知乎</a></li><li><a href="https://blog.csdn.net/xiaolanmyself/article/details/16944135">编译原理三大圣书——龙书、虎书、鲸…_Working…-CSDN博客</a></li><li><a href="https://github.com/RetVal/objc-runtime">GitHub - RetVal/objc-runtime: objc runtime 750</a></li><li><a href="https://github.com/opensource-apple/dyld">GitHub - opensource-apple/dyld</a></li><li><a href="https://juejin.im/post/5c08eb8bf265da616c65680b">iOS 了解Xcode Bitcode - 掘金</a></li><li><a href="https://xelz.info/blog/2018/11/24/all-you-need-to-know-about-bitcode/">关于bitcode, 知道这些就够了 - xelz’s blog</a></li><li><a href="https://github.com/joy0304/Joy-Collection/blob/master/Blog/%E8%B6%A3%E6%8E%A2%20Mach-O%EF%BC%9A%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F.md">Joy-Collection/趣探 Mach-O：文件格式.md at master · joy0304/Joy-Collection</a></li><li><a href="https://github.com/joy0304/Joy-Collection/blob/master/Blog/%E7%82%B9%E5%87%BB%20Run%20%E4%B9%8B%E5%90%8E%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F.md">Joy-Collection/点击 Run 之后发生了什么？.md at master · joy0304/Joy-Collection</a></li><li><a href="https://github.com/joy0304/Joy-Collection/blob/master/Blog/%E6%9D%A5%E8%B0%88%E8%B0%88%20Mac%20OS%20X%20%E5%86%85%E6%A0%B8.md">Joy-Collection/来谈谈 Mac OS X 内核.md at master · joy0304/Joy-Collection</a></li><li><a href="https://lowlevelbits.org/parsing-mach-o-files/">Parsing Mach-O files - Low Level Bits</a></li><li><a href="https://www.jianshu.com/p/54d842db3f69">趣探 Mach-O：文件格式分析 - 简书</a></li><li><a href="https://www.jianshu.com/p/8498cec10a41">趣探 Mach-O：加载过程 - 简书</a></li><li><a href="https://www.jianshu.com/p/bcc7ba20f900">Mach-O可执行文件 - 简书</a></li><li><a href="https://github.com/rogertan30/GeekTime/blob/master/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E7%AC%A6%E5%8F%B7%E6%98%AF%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E5%88%B0%E5%9C%B0%E5%9D%80%E4%B8%8A%E7%9A%84/LLVM.pdf">GeekTime/LLVM.pdf at master · rogertan30/GeekTime</a></li><li><a href="http://www.yinwang.org/blog-cn/2012/08/01/interpreter">怎样写一个解释器</a></li><li><a href="http://www.aosabook.org/en/llvm.html">The Architecture of Open Source Applications: LLVM</a></li><li><a href="http://clang.llvm.org/docs/">Welcome to Clang’s documentation! — Clang 11 documentation</a></li><li><a href="http://llvm.org/docs/WritingAnLLVMPass.html">Writing an LLVM Pass — LLVM 10 documentation</a></li><li><a href="https://www.youtube.com/watch?time_continue=280&v=VqCkCDFLSsc">The Clang AST - a Tutorial - YouTube</a></li><li><a href="http://www.cs.cmu.edu/afs/cs.cmu.edu/academic/class/15745-s14/public/lectures/">Index of /afs/cs.cmu.edu/academic/class/15745-s14/public/lectures</a></li><li><a href="https://code.woboq.org/llvm/clang/">llvm/clang/ Source Tree - Woboq Code Browser</a></li><li><a href="https://github.com/apple/swift/blob/master/docs/SIL.rst">swift/SIL.rst at master · apple/swift</a></li><li><a href="https://zhuanlan.zhihu.com/p/101898915">Swift Intermediate Language 初探 - 知乎</a></li><li><a href="https://wjerry.com/2019/05/19/LLVM%E6%9E%B6%E6%9E%84%E4%B8%8EClang/">LLVM架构与Clang - Jerry的博客 | Jerry’s Blog</a></li><li><a href="https://juejin.im/post/5cdaab1cf265da03761ead47">iOS 编译详解 LLVM Clang - 掘金</a></li><li><a href="https://bugly.qq.com/docs/user-guide/symbol-configuration-ios/?v=20180709165613">iOS 符号表 - Bugly 文档</a></li><li><a href="https://zh.wikipedia.org/wiki/X86">x86 - 维基百科，自由的百科全书</a></li><li><a href="https://www.iteye.com/blog/chenzehe-1703429">X86、X64和X86_64区别 - - ITeye博客</a></li><li><a href="https://zh.wikipedia.org/wiki/X86-64">x86-64 - 维基百科，自由的百科全书</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%AE%89%E8%AC%80%E6%8E%A7%E8%82%A1">安谋控股 - 维基百科，自由的百科全书</a></li><li><a href="https://zh.wikipedia.org/wiki/ARM%E6%9E%B6%E6%A7%8B">ARM架构 - 维基百科，自由的百科全书</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%85%8B%E9%87%8C%E6%96%AF%C2%B7%E6%8B%89%E7%89%B9%E7%B4%8D">Chris Lattner（克里斯·拉特纳） - 维基百科，自由的百科全书</a></li><li><a href="https://github.com/rogertan30/GeekTime/tree/master/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E7%AC%A6%E5%8F%B7%E6%98%AF%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E5%88%B0%E5%9C%B0%E5%9D%80%E4%B8%8A%E7%9A%84">GeekTime/符号是怎么绑定到地址上的 at master · rogertan30/GeekTime</a></li><li><a href="https://www.openarkcompiler.cn/news/detail/news5">OpenArkCompiler - 方舟编译器</a></li><li><a href="https://hmxt.org/%E5%8D%8E%E4%B8%BA%E6%96%B9%E8%88%9F%E7%BC%96%E8%AF%91%E5%99%A8">华为方舟编译器 | 鸿蒙学堂</a></li><li><a href="https://www.zhihu.com/question/343431810">如何看待方舟编译器于 2019 年 8 月 31 日开源？ - 知乎</a></li><li><a href="https://www.infoq.cn/article/KrZAbAcJrxCU27vKj*JE">中国首个官方推出的开源协议：木兰宽松许可证上线-InfoQ</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h2&gt;&lt;p&gt;首先，我认为学习总结，要有所总，所结，就是有归纳后，能用&lt;code&gt;自己的话&lt;/code&gt;告诉别人！有所结，就是有所收获输出，一般我认为是&lt;code&gt;思维导图&lt;/code&gt;，所以，每篇文章前，我都会先给出文章的脑图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-05-%E9%93%BE%E6%8E%A5%E5%99%A8%EF%BC%9A%E7%AC%A6%E5%8F%B7%E6%98%AF%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E5%88%B0%E5%9C%B0%E5%9D%80%E4%B8%8A%E7%9A%84%EF%BC%9F.png&quot; alt=&quot;iOS开发高手课-05-链接器：符号是怎么绑定到地址上的？.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="iOS开发高手课" scheme="https://ihtcboy.com/tags/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="学习总结" scheme="https://ihtcboy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    <category term="编译器" scheme="https://ihtcboy.com/tags/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
    <category term="链接器" scheme="https://ihtcboy.com/tags/%E9%93%BE%E6%8E%A5%E5%99%A8/"/>
    
    <category term="GCC" scheme="https://ihtcboy.com/tags/GCC/"/>
    
    <category term="LLVM" scheme="https://ihtcboy.com/tags/LLVM/"/>
    
    <category term="编译原理" scheme="https://ihtcboy.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    <category term="CPU" scheme="https://ihtcboy.com/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>【学习总结】04 | 项目大了人员多了，架构怎么设计更合理？</title>
    <link href="https://ihtcboy.com/2020/01/03/2020-01-03_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE04/"/>
    <id>https://ihtcboy.com/2020/01/03/2020-01-03_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE04/</id>
    <published>2020-01-03T12:20:20.000Z</published>
    <updated>2020-08-22T03:15:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>首先，我认为学习总结，要有所总，所结，就是有归纳后，能用<code>自己的话</code>告诉别人！有所结，就是有所收获输出，一般我认为是<code>思维导图</code>，所以，每篇文章前，我都会先给出文章的脑图：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-04-%E9%A1%B9%E7%9B%AE%E5%A4%A7%E4%BA%86%E4%BA%BA%E5%91%98%E5%A4%9A%E4%BA%86%EF%BC%8C%E6%9E%B6%E6%9E%84%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E6%9B%B4%E5%90%88%E7%90%86%EF%BC%9F.png" alt="iOS开发高手课-04-项目大了人员多了，架构怎么设计更合理？.png"></p><span id="more"></span><h2 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h2><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><h3 id="带问题找答案"><a href="#带问题找答案" class="headerlink" title="带问题找答案"></a>带问题找答案</h3><ol><li>模块粒度应该如何划分？</li><li>为什么要分层？</li><li>如何分层？</li><li>多团队如何协作？</li></ol><p>文中提了4个问题，那么这4个问题怎么解答呢？解答前，我觉得还是要先说说为什么有架构这东西？<code>只有理解为什么出现一个新事物，才能理解出现的原因和解决的问题，并且才能知道未来可能会出现什么新事物！</code></p><h3 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h3><h4 id="为什么？"><a href="#为什么？" class="headerlink" title="为什么？"></a>为什么？</h4><p>为什么有架构这东西？有过几年开发经验的同学一定听过或看过 <code>23种设计模式</code> 、<code>SOLID 原则</code>、<code>GRASP 原则</code>、<code>奥卡姆剃刀定律</code>、<code>敏捷开发</code>等，那么为什么设计模式是23种呢？ SOLID 分别代表什么呢？如果只是学习设计模式，SOLID 分别代表什么，那样的话，其实并不能理解为什么？只是解答了，是什么！所以，首先，要给大家介绍一下这些历史和背景，大家才能更好的明白这些原则和模式。</p><p><strong>1994 年 10 月 21 日</strong>，Erich Gamma（埃里希·伽玛）、Richard Helm（理查德·赫尔姆）、Ralph Johnson（拉尔夫·约翰逊）和John Vlissides（约翰·弗利西德斯）合著<code>《设计模式：可复用面向对象软件的基础》</code>（Design Patterns: Elements of Reusable Object-Oriented Software）出版！后以“四人帮”著称，<code>GoF</code>，又称 <code>Gang of Four</code>，所以本书也被称为 <code>GoF book</code>。此书是软件工程领域有关软件设计的巨著，提出和总结了对于一些常见软件设计问题的标准解决方案，称为软件设计模式，书中提出的 <code>23 种设计模式</code>，书中的设计模式也被成为“四人帮设计模式”，这些模式当初他们是打算写成论文发表，写着后来发现太长了，最后不得以改为出版书。</p><p>所以，大家明白了现在很多xx语言的设计模式，从那里来？为什么是23种？这本书很牛逼，并且这四位作者也很利害，大家自行搜索。关于设计模式就先说到这里，下面在看看其它。</p><p><strong>1997 年 10 月 30 日</strong>，Craig Larman（克雷格·拉曼）出版<code>《UML和模式应用》</code>(Applying UML and Patterns)，书中提出 <code>GRASP</code> (General Responsibility Assignment Software Principles，通用职责分配软件原则)，与其将 GRASP 称之为设计模式（Pattern），不如称之为设计原则（Principles），因为它是站在<code>面向对象设计</code>（OOD：Object-Oriented Design）的角度，告诉我们怎样设计问题空间中的类与分配它们的行为职责，以及明确类之间的相互关系等，GRASP 核心思想是职责分配，用职责设计对象。而不像 GoF设计模式那样是针对特定问题而提出的解决方案。因此 GRASP 站在一个更高的角度来看待面向对象软件的设计，它是 GoF设计模式 的基础（可以理解为更宏观的角度）。</p><p><strong>2001 年 10 月 12 日</strong>，Robert C. Martin（罗伯特·C·马丁）出版了<code>《敏捷软件开发:原则、模式与实践》</code>（Agile Software Development: Principles, Patterns, and Practices）一书，描述了<code>面向对象编程</code>（OOP：Object-oriented Programming）和<code>面向对象设计</code>（OOD：Object-Oriented Design）的五个原则，他称之为 <code>SOLID 原则</code>(单一功能、开闭原则、里氏替换、接口隔离以及依赖反转，每个原则的首字母组合在一起)。需要注意的时，这些原则有些在此书前就提出或相似的概念，其中依赖倒转原则就是1996年提出来的。关于世界顶级软件开发大师<code>罗伯特·C·马丁</code>（Robert C. Martin），大家可能更熟悉 <code>Bob大叔</code>、<code>鲍勃叔叔</code> 等称呼，因为他已经有<code>50多年</code>的软件开发经验（1969年至今），如今 67 岁啦！其中《架构整洁之道》是创造“Clean神话”的Bob大叔在架构领域的登峰之作，还有《代码整洁之道》（Clean Code: A Handbook of Agile Software Craftsmanship）不知道大家熟悉吗？</p><p>以上就是经典的面向对象的设计原则或模式的由来，大家是不是有一点印象啦！总体来说，<code>GRASP</code> 处于最上层，<code>SOLID</code> 基于它再进一步细化阐述，<code>GOF</code> 再根据这些原则进一步的归纳出更具体的模式。</p><h4 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h4><p>不知道大家有没有发现上面提到的 <code>OOD</code> 和  <code>OOP</code>，OOD 是：<code>面向对象设计</code>（Object-Oriented Design），OOP 是：<code>面向对象编程</code>（Object-oriented Programming）。</p><p>是什么？<code>当我们在谈论项目架构时，我们在说什么？</code>，其实就是<code>面向对象</code>编程！那么<code>面向对象</code>前，又是怎么样的呢？所以，<strong>我们不得不回到历史，看看究竟发生了什么，为什么现在如今的面向对象那么流行？</strong></p><ol><li>1940年以前：<code>面向机器</code></li><li>脱离机器第一步：<code>面向过程</code></li><li>第一次软件危机：<code>结构化程序设计</code></li><li>第二次软件危机：<code>面向对象程序设计</code></li></ol><p><code>面向机器</code> 使用二进制码来表示机器能够识别和执行的指令和数据。简单来说，就是直接编写 0 和 1 的序列来代表程序语言。由于机器语言实在是太难编写了，于是就发展出了汇编语言。</p><p><code>面向过程</code> 相比面向机器的语言来说，已经不再关注机器本身的操作指令、存储等方面，而是关注如何一步一步的解决具体的问题，即:解决问题的过程。</p><p><code>结构化程序设计</code>（Structured Programming）是一种编程范型，它采取“自顶向下、逐步细化、模块化”的指导思想，使用子程序（函数就是一种子程序）、代码区块、for循环以及while循环等结构，来替换传统的goto，希望借此来改善计算机程序的明晰性、质量以及开发时间，并且避免写出面条式代码。结构化程序设计本质上还是一种面向过程的设计思想。</p><p><code>面向对象程序设计</code> 早在 1967 年的 Simula 语言中就开始提出来了，但第二次软件危机促进了面向对象的发展。 面向对象真正开始流行是在 1980s 年代，主要得益于 C++ 的功劳，后来的 Java、C# 把面向对象推向了新的高峰。到现在为止，面向对象已经成为了主流的开发思想。</p><p><strong>分支故事1</strong>：第一次软件危机最典型的例子莫过于 IBM 的 System/360 的操作系统开发。<code>佛瑞德·布鲁克斯</code>（Frederick P. Brooks, Jr.）作为项目主管，率领 2000 多个程序员夜以继日的工作，共计花费了 5000 人一年的工作量，写出将近 100 万行的源码，总共投入 5 亿美元，是美国的“曼哈顿”原子弹计划投入的 1/4。尽管投入如此巨大，但项目进度却一再延迟，软件质量也得不到保障。布鲁克斯后来基于这个项目经验而总结的<code>《人月神话》</code>（The Mythical Man-Month）一书，成了史上最畅销的软件工程书籍。这本书也值得大家看看，<code>银弹</code> 就是书中提到的经典概念。（引用来源：<a href="https://www.cnblogs.com/nickchen121/p/10981462.html#%E7%A1%AE%E7%AB%8B%E4%BA%86%E5%9F%BA%E7%A1%80%E8%8C%83%E5%BC%8F">程序设计思想发展 - 二十一岁的有德</a>）</p><p><strong>分支故事2</strong>：实际上面向对象就是个形容词，那么这个词最早出现在哪里呢？最早大概1970年左右，已经提出了“面向对象系统”这个概念，面向对象系统有两层含义，第一，系统是由对象组成的；第二，对象之间可以互相发消息。从这个角度来讲这两点才是“面向对象”的第一义，后来的封装、继承、多态则是非第一义，或者称为最佳实践。（引用来源：<a href="https://www.infoq.cn/article/zKbhME-UHABRqdTodLwF">面向对象编程的兴衰-InfoQ</a>）</p><p>说到这里，大家是不是有什么新想法啦！这个就是为什么大家现在编程和软件开发行业中，只剩下这些原则和模式，因为<code>都是面向对象</code>！详细的历史和资料可以参考查看：<a href="https://zh.wikipedia.org/zh-cn/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80%E6%AD%B7%E5%8F%B2">编程语言历史 - 维基百科</a>，无法翻墙的可以看：<a href="https://www.cnblogs.com/nickchen121/p/10981462.html#%E7%A1%AE%E7%AB%8B%E4%BA%86%E5%9F%BA%E7%A1%80%E8%8C%83%E5%BC%8F">程序设计思想发展 - 二十一岁的有德</a>。这里就不深入描述了，大学时应该学习过，如果忘记了再重温一次吧！</p><h4 id="软件开发基本概念"><a href="#软件开发基本概念" class="headerlink" title="软件开发基本概念"></a>软件开发基本概念</h4><ul><li>面向过程编程（OPP：Procedure-Oriented Programming）</li><li>结构化程序设计（Structured Programming）</li><li>面向对象分析（OOA：Object-Oriented Analysis）</li><li>面向对象设计（OOD：Object-Oriented Design）</li><li>面向对象编程（OOP：Object-oriented Programming）</li><li>面向切面编程（AOP：Aspect Oriented Programming）</li></ul><p>以上就是软件开发概念一些概念，从历史上了解这些东西，对我们理解项目架构起了必要的作用。现在我们知道了为什么，是什么，<code>软件开发直到现在，都是为了更好的编程！更好的开发！</code>，所以我们理解了编程的历史，知道面对对象编程的重要性后，自然就需要知道有这些原则和模式，优秀的实践，来解决软件危机的银弹！</p><h4 id="STUPID-原则"><a href="#STUPID-原则" class="headerlink" title="STUPID 原则"></a>STUPID 原则</h4><blockquote><p>抱歉，你的代码就是那么的<code>STUPID</code>！烂代码有什么特点呢？没有人喜欢听到别人评价他的代码很愚蠢，而且这样做也很容易冒犯别人，所以不要说出来？平心而论：全世界中大部分代码都是不可维护的，因为它们都是乱糟糟一团的！</p></blockquote><ul><li><pre><code>Singleton - 单态</code></pre></li><li><pre><code>Tightcoupling - 紧密耦合</code></pre></li><li><pre><code>Untestability - 不可测试</code></pre></li><li><pre><code>Premature Optimization - 过早优化</code></pre></li><li><pre><code>Indescriptive Naming - 胡乱命名</code></pre></li><li><pre><code>Duplication - 重复代码</code></pre></li></ul><p>本节内容来源：<a href="http://nikic.github.io/2011/12/27/Dont-be-STUPID-GRASP-SOLID.html">Don’t be STUPID: GRASP SOLID!</a>，中文译文：<a href="https://blog.csdn.net/rcom10002/article/details/8822368">面向对象设计原则：不要STUPID - rcom10002的专栏</a>。</p><h4 id="SOLID-原则"><a href="#SOLID-原则" class="headerlink" title="SOLID 原则"></a>SOLID 原则</h4><ol><li><code>单一功能</code>原则（The <code>Single</code> Responsibility Principle）：对象功能要单一，不要在一个对象里添加很多功能。</li><li><code>开放封闭</code>原则（The <code>Open</code> Closed Principle）：扩展是开放的，修改是封闭的。</li><li><code>里氏替换</code>原则（<code>Liskov</code> Substitution Principle）：子类对象是可以替代基类对象的。（子类可以扩展父类的功能，但不能改变父类原有的功能。）</li><li><code>接口隔离</code>原则（The <code>Interface</code> Segregation Principle）：接口的用途要单一，不要在一个接口上根据不同入参实现多个功能。</li><li><code>依赖反转</code>原则（The <code>Dependency</code> Inversion Principle）：方法应该依赖抽象，不要依赖实例。iOS 开发就是高层业务方法依赖于协议。</li></ol><p>SOLID 原则在前面已经讲解了由来，称为<code>五大设计原则</code>，但后来，又出现六大设计原则、<code>七大设计原则</code>，另外2个原则：</p><ul><li><ol><li><code>迪米特</code>法则（Law of Demeter）：一个对象对其他对象有尽可能少的了解，不和陌生人说话。</li></ol></li><li><ol start="2"><li><code>合成复用</code>原则（CARP，Composition/Aggregate Reuse Principle，合成复用原则(组合/聚合复用原则))：将已有的对象纳入新对象中，使之成为新对象的一部分，作为新对象的成员对象来实现的，新对象可以调用已有对象的功能，从而达到复用。</li></ol></li></ul><p>所以，大家在网上如果看到 <code>x条设计原则</code>、<code>面向对象设计原则xxx</code>时，大家是不是能更加理解这些编程思想，而不是看到一条一条的规则，学习怎么使用它们，但是并<code>不清楚为什么要学习，这是学习最可怕的地方</code>，这是我认为最可怕的。另外，这里强调<code>设计原则</code>（Principle），而非<code>设计模式</code>（Patterns），也是需要注意的点。</p><h4 id="GRASP-原则"><a href="#GRASP-原则" class="headerlink" title="GRASP 原则"></a>GRASP 原则</h4><ol><li>创造者模式 (Creator Pattern)</li><li>信息专家模式 (Information Expert Pattern)</li><li>低耦合模式 (Low Coupling Pattern)</li><li>高内聚模式 (High Cohesion Pattern)</li><li>控制器模式 (Controller Pattern)</li><li>多态模式 (Polymorphism Pattern)</li><li>纯虚构模式 (Pure Fabrication Pattern)</li><li>中介模式 (Indirection Pattern)</li><li>受保护变化模式 (Protected Variations Pattern)</li></ol><p><code>GRASP</code> (General Responsibility Assignment Software Principles，通用职责分配软件原则) 共有9种模式，这里也不细说了，大家自行搜索学习，如果需要可以购买书本 <code>《UML和模式应用》</code>(Applying UML and Patterns) 。</p><h4 id="Design-Patterns-（设计模式）"><a href="#Design-Patterns-（设计模式）" class="headerlink" title="Design Patterns （设计模式）"></a>Design Patterns （设计模式）</h4><ul><li>创建范例</li></ul><ol><li>抽象工厂 (Abstract Factory)</li><li>构造器 (Builder pattern)</li><li>工厂方法 (Factory Method pattern)</li><li>原型 (Prototype pattern)</li><li>单例模式 (Singleton pattern)</li></ol><ul><li>结构范例</li></ul><ol><li>适配器(Adapter pattern)</li><li>桥接(Bridge pattern)</li><li>组合(Composite pattern)</li><li>装饰(Decorator pattern)</li><li>外观(Façade pattern)</li><li>享元(Flyweight pattern)</li><li>代理(Proxy pattern)</li></ol><ul><li>行为范例</li></ul><ol><li>职责链(Chain-of-responsibility pattern)</li><li>命令(Command pattern)</li><li>翻译器(Interpreter pattern)</li><li>迭代器(Iterator pattern)</li><li>中介者(Mediator pattern)</li><li>回忆(Memento pattern)</li><li>观察者(Observer pattern)</li><li>状态机(State pattern)</li><li>策略(Strategy pattern)</li><li>模板方法(Template method pattern)</li><li>参观者(Visitor pattern)</li></ol><p>设计模式中书 <code>《设计模式：可复用面向对象软件的基础》</code>（Design Patterns: Elements of Reusable Object-Oriented Software）把设计模式分为创建型模式、结构型模式、行为型模式，共有23种，可能后面大家又添加了一些，这里就不补充了，因为还是经典的23条已经很足啦！具体的模式意义大家自行搜索吧。</p><h4 id="软件分层"><a href="#软件分层" class="headerlink" title="软件分层"></a>软件分层</h4><ul><li>应用层</li><li>中间层</li><li>底层</li></ul><p>一个<code>项目</code>、<code>系统</code>、<code>模型</code>，基础上都是至少3层，如果不够就多加一层呗！具体大家可以看看 GitHub 上的库和项目等，说到分层都是这样，这是为什么呢？举例来说，<code>HTTP</code> 与 <code>HTTPS</code>，HTTPS 是再 HTTP 基础上加了一层 <code>SSL/TLS</code>，这样对原有的兼容性是最好的，也是最容易实现的，所以这就是分层的意义！我们的项目为什么分层，怎么分层，大家可以思考一下，多问一个为什么？</p><h4 id="软件架构"><a href="#软件架构" class="headerlink" title="软件架构"></a>软件架构</h4><ul><li>MVC（Model-View-Controller）</li><li>MVP（Model-View-Presenter）</li><li>MVVM（Model-View-ViewModel）</li></ul><p>从 MVC、MVP 到 MVVM，实际上是模型和视图的分离过程。MVC 中模型和视图没有完全分离，造成 Activity 代码臃肿，MVP 中通过 Presenter 来进行中转，模型和视图彻底分离，但由于 V 和 P 互相引用，代码不够优雅。ViewModel 通过 Data Binding 实现了视图和数据的绑定，解决了这种MVP的缺陷。</p><p>本节内容来源：<a href="https://www.jianshu.com/p/8e3d4ab80714">MVC、MVP、MVVM架构分析与比较 - 简书</a></p><h4 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h4><ul><li><pre><code>URL/Protocol 注册调度</code></pre></li><li><pre><code>Runtime 调度</code></pre></li></ul><p>本文唯一与原文相关的可能就是这一节啦，原文中提到 <a href="https://github.com/casatwy/CTMediator">CTMediator</a> 库来架构 iOS 项目，具体的分析和细节这里就不讨论了，本文后面在做统一的回应吧。所以本节注意说 iOS<code>调度</code>的问题，原文中提到 CTMediator 的2个缺点：</p><ol><li>直接硬编码的调用方式，参数是以string的方法保存在内存里，虽然和将参数保存在Text字段里占用的内存差不多，同时还可以避免.h文件的耦合，但是其对代码编写效率的降低也比较明显。</li><li>由于是在运行时才确定的调用方法，调用方式由 <code>[obj method]</code> 变成 <code>[obj performSelector:@&quot;&quot;]</code>。这样的话，在调用时就缺少类型检查，是个很大的缺憾。因为，如果方法和参数比较多的时候，代码编写效率就会比较低。</li></ol><p><code>避免.h文件的耦合</code> 这个大家理解吗？在这个项目后，阿里开源了 <a href="https://github.com/alibaba/BeeHive/blob/master/README-CN.md">BeeHive</a>，基于 <code>Protocol</code> 注册调度，那么它的缺点是什么？就是这个 .h文件的声明编译时经常报错找不到，需要很多全局的变量。当然，<code>任何架构都无法百分百完美！</code>，更多问题欢迎评论区交流。</p><h4 id="代码质量"><a href="#代码质量" class="headerlink" title="代码质量"></a>代码质量</h4><ul><li><pre><code>可读性</code></pre></li><li><pre><code>可维护性</code></pre></li><li><pre><code>可拓展性</code></pre></li><li><pre><code>必要注释？</code></pre></li><li><pre><code>commit规范</code></pre></li><li><pre><code>CodeReview</code></pre></li></ul><p><code>代码质量不是由开发人员里技术最强的人决定的</code>，前面提到，如果代码很烂，那么很难维护，所以对于项目架构来说，代码质量也是必要关注的！以上是我认为必须要关注的事项，具体这样就不展开了，大家可以根据自己的项目或团队来规划。</p><h4 id="其它概念"><a href="#其它概念" class="headerlink" title="其它概念"></a>其它概念</h4><ul><li><code>DRY</code>（Don’t Repeat Yourself! 不要重复你自己）</li><li><code>KISS</code>(Keep It Simple, Stupid! 让事情简单化，傻瓜化) ：翻译成中⽂就是“保持简单、愚蠢”。</li><li><code>Make it run, then make it right, then make it fast.</code>（先求运行，再求正确，最后求快。）</li><li>敏捷开发（Agile Development）</li><li>奥卡姆剃刀（Occam’s Razo）</li></ul><p>例如“奥卡姆剃刀”，爱因斯坦的“一切尽可能简单”、达芬奇的“简单是最终的复杂性” 、安德鲁·圣艾修伯里的“完美不是当它不能再添加时，它似乎是在它不能被进一步刮除时实现的”。“如无必要，勿增实体”，即“简单有效原理”。大量的例子，都是希望在软件开发中，<code>乔布斯的“简洁之道”</code>，希望大家都可以平时多注意~</p><h2 id="3、项目架构"><a href="#3、项目架构" class="headerlink" title="3、项目架构"></a>3、项目架构</h2><p>大家是不是觉得说了那么多，感觉还是没有说明白<code>项目架构</code>？是的，基本架构就在里面，只是大家没有把它们串联起来，没有从整体上来理解。</p><p>上面说到的原则和模式，他们到底是在干嘛呢？不就是在<code>架构</code>嘛！对，这些原则和模型都是希望给项目提供更好的架构，<code>最终目的还是提高开发效率!</code>，敏捷开发就在其中！所以，当我们谈论架构时，就是在说<code>项目的瓶颈</code>在那里？怎么避免进度被拖拉，保持软件开发的顺利上线！</p><h3 id="更高视角思考架构师"><a href="#更高视角思考架构师" class="headerlink" title="更高视角思考架构师"></a>更高视角思考架构师</h3><p>所以，明白了架构的目的，那么架构是不是必要的呢？如果是一个人的项目，架构是不是必要的呢？如果是5个人的团队项目，架构是不是必要的呢？如果是20个人的团队项目，架构是不是必要的呢？</p><p>如果是100个人的团队项目呢？<br>如果是500个人的团队项目呢？<br>如果是5000个人的团队项目呢？<br>如果是50000个人的团队项目呢？</p><p>在我看来，不管是多少人的项目，架构都是必要考虑的。当然，针对不同人数的项目，需要的架构必然也不一样！所以，<code>当我们谈论架构时，请先确认项目的大小！</code>，当然，项目的人员数量不可以固定不变，比如创业项目，不同阶段人员变化可能很大，这个时候，你问是不是一开始就需要做一个牛逼的基础架构？其实并不是！因为人员就是减少或增加，减少多少或增加多少，永远是无法评估的，所以最后的答案：万事开头难，只需要评估2-5倍人数，比如开始项目是5个人，那你项目架构就考虑最多10-25个人员的水平就差不多啦！最后，<code>在需要的时候，需要一个牛逼的架构师！</code>，没有解决不了的问题，所以也没有解决不了的架构。</p><p>最后，我们平时怎么思考架构？可以从下面3点开始关注：</p><ol><li>现在架构是怎样的</li><li>哪些地方可以改进的</li><li>业界有哪些好的架构思想可以运用</li></ol><h2 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h2><ol><li>模块粒度应该如何划分？</li><li>为什么要分层？</li><li>如何分层？</li><li>多团队如何协作？</li></ol><p>最后，回到本文一开始说的4个问题？现在你能自己想一下答案了吗？明白了吗？</p><h3 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h3><blockquote><p>随着时间的流逝，人们开始意识到，严格的面向对象方法会带来很多问题。这些问题往往会使代码更复杂、更难以理解且更难以测试。事实证明，OOP 更适合某些特定的问题领域。例如，OOP 仍然是构建用户界面（窗口和按钮）最自然的方式 。但是，试图将面向对象技术应用于关系数据库一直是一场灾难。</p><p>虽然面向对象并不是解决软件危机的银弹，但和面向过程相比，面向对象的思想更加贴近人类思维的特点，更加脱离机器思维，是一次软件设计思想上的飞跃。</p></blockquote><p>引用自：<a href="https://www.infoq.cn/article/zKbhME-UHABRqdTodLwF">面向对象编程的兴衰-InfoQ</a></p><p><code>很多人都喜欢跟团队中的其他成员争论某些代码到底属于哪种模式。</code>，架构和模式是不是必要的呢？我认为我们开发过程中不要认为一定要用xx原则/xx模式一用到底！<code>设计模式不是不用，是不能一味地用！</code>。想一想，在1994年就能提出23种设计模式的概念！真的是大神！我想现在大多数人都不没有领悟其中或达到这样的思想深度，不由得心中自发地佩服！而现在很多流行的库都利用模式来架构，比如<code>Spring</code>，用的就是抽象工厂和工厂模式，回调函数用的是观察者模式，<code>servlet</code>中的filter使用的是chain of responsibility模式。最后，我想引用 GoF 书中最后一章的一句话：<code>一般而言，了解 “做什么” 要比 “为什么” 来的容易；而一个模式的 “为什么” 就是它要解决的问题。</code>。</p><p>作为中国区，我们的软件工程行业确实与美国有一定的差距，从这些书籍和伟人就看出来，30年前美国作为计算机首发站，有先天的优势条件。而现在，我认为我们与美国的<code>技术的底蕴</code>还有较大差距，但是<code>技术的高度</code>，技术创新和新技术，我们是可以弯道超车。同时，作为一名普通的程序员，我认为大家积累足够的软件开发经验，也可以总结出更多的新的理论或模式，这也是我希望中国区未来能做的到，而不是 996 的业务到底，<code>开发的效率不是通过加班提高，而应该通过技术的创新解决！</code></p><p>所以，我们要架构好自己的编程~</p><br><p>注：更多关于 iOS 开发和程序开发相关的内容，可以查看系列，目前还在连载中 <a href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/">【学习总结】iOS开发高手课 – (连载中) | iHTCboy’s blog</a>，以上，希望对你有用！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a></p></li><li><p><a href="https://github.com/casatwy/CTMediator">casatwy/CTMediator: The mediator with no regist process to split your iOS Project into multiple project.</a></p></li><li><p><a href="https://github.com/alibaba/BeeHive/blob/master/README-CN.md">BeeHive/README-CN.md at master · alibaba/BeeHive</a></p></li><li><p><a href="https://casatwy.com/iOS-Modulization.html">iOS应用架构谈 组件化方案 - Casa Taloyum</a></p></li><li><p><a href="https://limboy.me/tech/2016/03/10/mgj-components.html">蘑菇街 App 的组件化之路 - Limboy’s HQ</a></p></li><li><p><a href="https://limboy.me/tech/2016/03/14/mgj-components-continued.html">蘑菇街 App 的组件化之路·续 - Limboy’s HQ</a></p></li><li><p><a href="https://casatwy.com/modulization_in_action.html">在现有工程中实施基于CTMediator的组件化方案 - Casa Taloyum</a></p></li><li><p><a href="https://limboy.me/tech/2015/09/27/ios-mvvm-without-reactivecocoa.html">MVVM without ReactiveCocoa - Limboy’s HQ</a></p></li><li><p><a href="https://casatwy.com/zen-yao-mian-shi-jia-gou-shi.html">怎么面试架构师 - Casa Taloyum</a></p></li><li><p><a href="https://onevcat.com/2016/11/pop-cocoa-1/">面向协议编程与 Cocoa 的邂逅 (上)</a></p></li><li><p><a href="https://onevcat.com/2016/12/pop-cocoa-2/">面向协议编程与 Cocoa 的邂逅 (下)</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/SOLID_(%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1)">SOLID (面向对象设计) - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://www.cnblogs.com/wuyuegb2312/p/7011708.html">面向对象的SOLID原则白话篇 - 五岳 - 博客园</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E6%95%8F%E6%8D%B7%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91">敏捷软件开发 - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E5%A5%A5%E5%8D%A1%E5%A7%86%E5%89%83%E5%88%80">奥卡姆剃刀 - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://blog.csdn.net/rcom10002/article/details/8822368">面向对象设计原则：不要STUPID，坚持GRASP和SOLID_KNIGHTRCOM(rcom10002的专栏)-CSDN博客</a></p></li><li><p><a href="http://nikic.github.io/2011/12/27/Dont-be-STUPID-GRASP-SOLID.html">Don’t be STUPID: GRASP SOLID!</a></p></li><li><p><a href="https://blog.csdn.net/mzl87/article/details/85342255">SOLID，GRASP和面向对象设计的其他基本原理_寒冰屋的专栏-CSDN博客</a></p></li><li><p><a href="http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod">ArticleS.UncleBob.PrinciplesOfOod</a></p></li><li><p><a href="https://juejin.im/post/5d655c93e51d453bc6480219">GRASP设计原则 - 掘金</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%9A%E5%8F%AF%E5%A4%8D%E7%94%A8%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%9F%BA%E7%A1%80">设计模式：可复用面向对象软件的基础 - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://www.infoq.cn/article/design-patterns-proposed-by-gof-20-years-ago">20年前GoF提出的设计模式，对这个时代是否还有指导意义？-InfoQ</a></p></li><li><p><a href="http://blogs.tedneward.com/post/reclaiming-design-patterns/">Reclaiming Design Patterns (20 Years Later) · Ted Neward’s Blog</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/KISS%E5%8E%9F%E5%88%99">KISS原则 - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E4%B8%80%E6%AC%A1%E4%B8%94%E4%BB%85%E4%B8%80%E6%AC%A1">一次且仅一次 - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1">面向对象程序设计 - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/86264749">AOP与OOP有什么区别，谈谈AOP的原理是什么 - 知乎</a></p></li><li><p><a href="https://www.cnblogs.com/minigrasshopper/p/10271758.html">理解面向过程（OPP）、面向对象（OOP）、面向切面（AOP） - 狂奔的小马扎 - 博客园</a></p></li><li><p><a href="https://tech.olx.com/clean-architecture-and-mvvm-on-ios-c9d167d9f5b3">Clean Architecture and MVVM on iOS - OLX Group Engineering</a></p></li><li><p><a href="https://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html">MVC，MVP 和 MVVM 的图示 - 阮一峰的网络日志</a></p></li><li><p><a href="https://www.jianshu.com/p/8e3d4ab80714">MVC、MVP、MVVM架构分析与比较 - 简书</a></p></li><li><p><a href="https://zh.wikipedia.org/wiki/MVC">MVC - 维基百科，自由的百科全书</a></p></li><li><p><a href="http://zxfcumtcs.github.io/2016/11/05/iOSDataBinding/">简化 iOS Data Binding | 雪峰的blog</a></p></li><li><p><a href="https://martinfowler.com/eaaDev/uiArchs.html#navmenu-bottom">GUI Architectures</a></p></li><li><p><a href="https://zxfcumtcs.github.io/2016/07/20/MobileArchitecture/">GUI 架构简述 | 雪峰的blog</a></p></li><li><p><a href="https://zxfcumtcs.github.io/2018/12/22/Efficient-Development-Solutions/">iOS 高效开发解决方案 | 雪峰的blog</a></p></li><li><p><a href="https://zxfcumtcs.github.io/2018/10/04/solid/">面向对象设计原则『SOLID』在开发中的应用 | 雪峰的blog</a></p></li><li><p><a href="https://draveness.me/mvx">浅谈 MVC、MVP 和 MVVM 架构模式</a></p></li><li><p><a href="https://blog.csdn.net/zhengzhb/article/details/7281833">设计模式六大原则：里氏替换原则_三级小野怪的专栏-CSDN博客</a></p></li><li><p><a href="https://github.com/huang303513/Design-Pattern-For-iOS">iOS设计模式探索(大话设计模式)</a></p></li><li><p><a href="https://github.com/skyming/Trip-to-iOS-Design-Patterns">skyming/Trip-to-iOS-Design-Patterns: iOS 设计模式相关资料整理</a></p></li><li><p><a href="https://blog.cocosdever.com/2019/07/19/modular-design-in-ios/">业界流行的三种iOS组件化设计方案</a></p></li><li><p><a href="https://blog.csdn.net/cxzhq2002/article/details/78159906">GRASP模式_cxzhq2002的杂记-CSDN博客</a></p></li><li><p><a href="https://www.cnblogs.com/mengfanrong/p/5209907.html">《UML和模式应用》重点之思想篇 - mengfanrong - 博客园</a></p></li><li><p><a href="https://juejin.im/post/5e2e5ac06fb9a02fd127d5fc">如何成为更好的iOS开发工程师之S.O.L.I.D原则 - 掘金</a></p></li><li><p><a href="https://www.cnblogs.com/huangenai/p/6219475.html">SOLID 设计原则 - huangenai - 博客园</a></p></li><li><p><a href="https://blog.csdn.net/LoveLion/article/details/8517215">Robert C. Martin列举的专业软件开发人员必须精通的技能_编程,设计模式_刘伟技术博客-CSDN博客</a></p></li><li><p><a href="https://www.infoq.cn/article/zKbhME-UHABRqdTodLwF">面向对象编程的兴衰-InfoQ</a></p></li><li><p><a href="https://www.cnblogs.com/nickchen121/p/10981462.html">面向对象程序设计的由来(了解) - 二十一岁的有德 - 博客园</a></p></li><li><p><a href="https://zh.wikipedia.org/zh-cn/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80%E6%AD%B7%E5%8F%B2">编程语言历史 - 维基百科，自由的百科全书</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/58092071">面向对象设计之魂的六大原则 - 知乎</a></p></li><li><p><a href="https://blog.dreamtobe.cn/2016/03/09/oo_architecture/">架构设计基础知识整理 | Jacks Blog</a></p></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h2&gt;&lt;p&gt;首先，我认为学习总结，要有所总，所结，就是有归纳后，能用&lt;code&gt;自己的话&lt;/code&gt;告诉别人！有所结，就是有所收获输出，一般我认为是&lt;code&gt;思维导图&lt;/code&gt;，所以，每篇文章前，我都会先给出文章的脑图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-04-%E9%A1%B9%E7%9B%AE%E5%A4%A7%E4%BA%86%E4%BA%BA%E5%91%98%E5%A4%9A%E4%BA%86%EF%BC%8C%E6%9E%B6%E6%9E%84%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E6%9B%B4%E5%90%88%E7%90%86%EF%BC%9F.png&quot; alt=&quot;iOS开发高手课-04-项目大了人员多了，架构怎么设计更合理？.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="架构" scheme="https://ihtcboy.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="SOLID" scheme="https://ihtcboy.com/tags/SOLID/"/>
    
    <category term="GRASP" scheme="https://ihtcboy.com/tags/GRASP/"/>
    
    <category term="Design Patterns" scheme="https://ihtcboy.com/tags/Design-Patterns/"/>
    
    <category term="MVC" scheme="https://ihtcboy.com/tags/MVC/"/>
    
    <category term="MVVM" scheme="https://ihtcboy.com/tags/MVVM/"/>
    
    <category term="MVP" scheme="https://ihtcboy.com/tags/MVP/"/>
    
    <category term="设计模式" scheme="https://ihtcboy.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="面向对象" scheme="https://ihtcboy.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="设计原则" scheme="https://ihtcboy.com/tags/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    
    <category term="架构师" scheme="https://ihtcboy.com/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>2020，爱你爱你</title>
    <link href="https://ihtcboy.com/2020/01/01/2020-01-01_2019year/"/>
    <id>https://ihtcboy.com/2020/01/01/2020-01-01_2019year/</id>
    <published>2020-01-01T04:12:12.000Z</published>
    <updated>2020-08-22T03:15:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>“若遇棘手之际，请从<code>耐烦</code>二字痛下功夫。”<br>——— 曾国藩</p></blockquote><h4 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h4><p>又到了一年之初，对于2019年，曾国藩最火了，研究的题材从上治国打战谋略，至下人才伯乐培育，不管你是什么行业什么职业什么工作，曾国藩都“适合”你！</p><p>说回题句的内容，大概意思是:“<code>在遇到难办的事情的时候，必须要在不急躁、不怕麻烦上面下大功夫。意谓每临大事有静气。</code>”。如果两三下功夫就能搞定的事能算是什么大事？！大家说是不是！2019，你做了什么大事？每次你<code>着急</code>或<code>被焦虑</code>时，问一下自己成大事吗？</p><span id="more"></span><p>2019年，发生了很多事，很多大事，在大的事，也是要从自己的事做起，做好！这样才是爱自己，爱家，爱公司，爱国家！各种媒体里看了很多大神的总结，教大家如何做的更好，还是要先说说自己怎样可以做的更好吧，所以，今年的总结，我想了很久，年龄长大了，顾虑多了，迟迟无从动笔，因为有太多可以说，又发现自己还不能系统的说出来，驾驭不了能力！（就是怕误人子弟）</p><h4 id="第一章-程序员的工作"><a href="#第一章-程序员的工作" class="headerlink" title="第一章 程序员的工作"></a>第一章 <strong>程序员的工作</strong></h4><p>关于程序员的工作，也许大多数人都认为是加班！而我认为是写代码！与古人写诗一样，万首留名有几多？加班写代码，停下来想想，写的是什么，加班做，很多事情，多问一个为什么，早点想清楚，想明白后才能更好的工作，更好的加班，更好的进步吧！</p><p>对于博主，虽然主职是iOS工程师，但是，今年写的 <code>Python</code> 比 <code>Objective-C</code>/<code>Swift</code> 代码多得多，让我从认识到变为意识到，不管写什么语言的代码，语言就是工具，解决问题才是重点，如何利用更好的工具，更佳的方案来解决问题，这才是我想要的工作！希望大家也一样，工作不只是加班，还有诗和远方！</p><h4 id="第二章-程序员的学习"><a href="#第二章-程序员的学习" class="headerlink" title="第二章 程序员的学习"></a>第二章 <strong>程序员的学习</strong></h4><p>关于学习，知识付费的课程，我相信多到这辈子估计你都听不完！很多人说焦虑是这个时代给人必备的“素质”。我认为，从本质来说，学习是什么？最终是掌握知识吗？掌握技能吗？多问一下自己，我掌握了什么？读一本书，如果就是想要知识，那永远读不完所有的书，无穷无尽啊~</p><p>我意识到，读书和学习，最最重点是过程，是在读书的方法和技巧上，怎么去读书？怎么思考读书，有不解怎么解？跳过还是标注，最后又如何解？而学习任何一样新事物，你能不能抽象出学习模型？学习的套路？学习的捷径？所以，对于着急的现代人，注意自己的过程，才能更好的快。</p><p>大家可能还是会思考，我说的<code>捷径</code>是不是就是要<code>快速</code>？一股脑的吸收？自己想吧~</p><h4 id="第三章-程序员的思考"><a href="#第三章-程序员的思考" class="headerlink" title="第三章 程序员的思考"></a>第三章 <strong>程序员的思考</strong></h4><p>关于思考，我们可能每天都在思&amp;想，考&amp;虑？但思考是什么？例如，我们天天闲聊时有人说房价会涨涨涨！明天又有人说会跌跌跌！你云里雾里都觉得对对对！！！</p><p>每天还有很多新闻，国事家事天下事，事事关心！但是<code>事事思考</code>了吗？</p><p>我认为，要思考一个问题，要去了解一个全局的环境，要想知道房价会涨还是会跌，需要掌握很多知识，从银行/房地产商集资，到农民工建设房子，一个圈子里的因素。思考，需要知识储备~</p><p>那么程序员的思考是什么？写代码时，能全局思考了吗？知道代码还有更优解吗？知道代码是怎么编译吗？机器怎么读取你写的代码？代码的安全性？代码的复杂性？混淆/敏感词？你的代码bug又是怎么出现，当初为什么你没发现？</p><h4 id="第四章-程序员的焦虑"><a href="#第四章-程序员的焦虑" class="headerlink" title="第四章 程序员的焦虑"></a>第四章 <strong>程序员的焦虑</strong></h4><p>每年年底时总都有各种的<code>裁员新闻</code>，<code>35岁被辞退</code>，<code>入狱？？</code>。为什么会这样呢？你焦虑吗？？</p><p>中国人喜欢挣快钱，互联网更<code>快</code>，金融更<code>快</code>，地产更<code>快</code>…</p><p>解决焦虑，我认为只有一种解法：</p><p><strong>要学得更<code>快</code>！</strong><br><strong>要学得更<code>快</code>！</strong><br><strong>要学得<code>更快</code>！</strong></p><p><code>天下武功为快不破！</code></p><p>行动起来吧！</p><h4 id="第五章-程序员的管理"><a href="#第五章-程序员的管理" class="headerlink" title="第五章 程序员的管理"></a>第五章 <strong>程序员的管理</strong></h4><p>关于管理学，有非常多的经验理论，国外有大量的书籍，并且总结归纳成不同的理论学派，但是为什么大家一直在学管理？又好像没有学会多少呢？更或者感觉一直学不完呢？</p><p>因为公司企业在变化，行业在变化，世界在变化，产业结构在变化，所以很多管理经验并不能<code>直接套用</code>！比如工厂的厂长对工人的管理方式，与企业经理对白领的管理方式，肯定完全不一样！工人按时按量完成任务，而白领的工作并不是流水线，所以直接套用工人的任务量的管理方式，肯定不会是最好的管理方式！另外，从人数来分，不同人数的公司的管理方式也不能一样，相同人数的不同行业的公司肯定也不一样。而且，管理，没有好与坏，没有对与错，只有<code>合适</code>与<code>不合适</code>。</p><p>那么我们把范围缩小，<code>程序员的管理</code>？程序员对于中国区也就是二十几年的时间，可能与国外情况还不太一样，我们怎么管理程序员？程序员需要什么管理经验？程序需要管理吗？</p><p>从 <code>KPI</code> 到 <code>OKR</code> ，对程序员的管理，我理解首先是要对<code>程序</code>管理，管理好程序，人自然也跟着好管理。怎么理解呢？如果代码大家各写各的风格，工程代码只迭代不维护，随意提交代码发布代码，那么，你认为怎么管理？</p><p>管理的本质是什么呢？让一切都能顺畅的运行~</p><h4 id="第六章-程序员的分享"><a href="#第六章-程序员的分享" class="headerlink" title="第六章 程序员的分享"></a>第六章 <strong>程序员的分享</strong></h4><p>关于分享，之前我的理解一直认为是求知，大家都渴望进步，希望大神能分享<code>高深的技术</code>！然后自己能学到学会！之前我是觉得这是很天真的想法，但是慢慢的接触更多的分享后，理解也不太一样了。确实，大神的分享，对大家学习知识，可以说是帮助非常非常少，甚至说短期内根本学不到大神分享的知识。而我意识到的东西，就是除了知识，还有什么东西！不能忽视的东西，比如学习思考的方式？解决问题的方案？演讲的技巧？PPT的图文制作？</p><p>总之，<code>分享</code> 这个概念应该可以更好大，所以，今年我也做了一些调整，与我们团队一起分享和交流，通过学习 <a href="https://ming1016.github.io/categories/Programming/">戴铭</a> 老师的<a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a>，然后大家一起总结&amp;分享，这个过程，希望不仅仅是知识，还有力量！</p><p>关于分享，19年还有很多思考没有写成文章，希望有时间再回来写写。最后，希望2020年，持续分享更多有意思有想法的知识，同时，也会把戴铭老师的《iOS开发高手课 - 极客时间》的学习笔记与大家一起分享。</p><p>最后，其实，19年我还在尝试的一件有意思的分享，就是《<a href="https://mp.weixin.qq.com/s/XPG9j6Rb8kdhe9TbtM5zpQ">iHTCboy 公众号</a>》，灵感来源是以前经过看的文章，看到一个有意思的<code>图形</code>，有意思的<code>观点</code>，有新意的<code>艺术</code>，有创新的<code>图案</code>，有干货的<code>脑图</code>…等等，之前一直保存在手机相册中，但是手机空间少了或者换手机后，那么棒的图片又再不见了，所以希望找一个地方保存起来。之前其实并没有想过要分享共享，因为可能有版权的问题，现在的解决方案是有版权的图片，我会添加到引用来源的文档中，所以才有想法把它分享给大家。目前已经有百多人关注，我的心理意识也发生了变化，之前会比较随意发，觉得好的就发，但当关注的人越来越多时，我害怕分享的东西有遗漏或错误，误导大家，影响的用户也越多。所以，这样也是给我更多压力和动力，挖掘更多的正确的有意思的与大家分享，希望继续修行~</p><h4 id="第七章-程序员的课堂"><a href="#第七章-程序员的课堂" class="headerlink" title="第七章 程序员的课堂"></a>第七章 <strong>程序员的课堂</strong></h4><p><code>课堂</code>？关于程序员的学习，前面已经说了，建立自己的知识体系结构树。关于课堂这一节，是后面突发若想增加的。课堂之于课程，<code>活到老 学到老</code> 这个相信大家已经知道多年，但是怎么学？线上课堂、线下培训、脱产课堂、技术分享会、技术大会等，还有某x网盘上的xx课程，多达 10 TB 网络空间！</p><p>面对如此庞大的课堂资源，我们应该如何选择呢？</p><p>其实，有规划有系统的目标，才能驾驭学习课程！</p><p>比如，想学习 <code>Go</code> 语言，一般人的套路是怎么样？问人，群里问！知x问！百x问！然后<code>xx网盘xxGo从入门到精通</code>，x狗x当上买几本Go语言<strong>入门/实践</strong>书，最后定一个目标，1个月或3个月拿下！！！</p><h5 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h5><p>对于入门xx语言，我的建议是，直接学习<code>语法</code>！！！语法！！！语法！！！ 重要的话说三次！语言在那里学习？<code>官网</code>！！！官网！！！官网！！！ <a href="https://golang.org/">The Go Programming Language</a> ，然后就直接看官方的教程，中文版：<a href="https://tour.go-zh.org/welcome/1">Go 语言之旅</a>，当你学习时可以做一些笔记，怕总会忘记。如果可以，首推用<code>脑图</code>！<code>脑图</code>！！<code>脑图</code>！！！</p><p>对于入门了xx语言的同学，想要进阶，怎么办？ 难道是 <del><code>xx网盘xxGo从入门到精通</code></del> ？？？ 肯定不是！！！想要进阶，那就是<code>实践</code>！<code>实践</code>！！<code>实践</code>！！！简单来说，就是你打算学习xx语言为了什么？用来干什么？？那就开始用吧！干吧！！如果你都没有想好用来干什么？那为什么学习？难道是看到别人学你也学？？</p><h5 id="知识体系"><a href="#知识体系" class="headerlink" title="知识体系"></a>知识体系</h5><p>那么，肯定还有同学会问？学习<code>算法</code>？学习<code>数据结构</code>？学习<code>机器学习</code>？学习<code>深度学习</code>？学习<code>操作系统原理</code>？学习<code>计算机原理</code>？ 应该怎么学习呢！！！</p><p>以上这些是一个知识体系，不太像学习编程语言那样有语法基础就可以做事。当然，如果只是应用，那就不是学习了，比如用深度学习训练图片识别功能，已经有很多现成的库或代码，直接就能做到，但这<code>不叫学习</code>！而是叫<code>运用</code>！如果真的想掌握一个知识体系，你首先要了解，可能不太容易，为什么？知道为什么？才能知道，什么是容易！</p><p>一个知识体系，它不是单独的，不是独立的，它是科学知识的多面体，举例<code>算法</code>来说，算法不只只是一个一个的<strong>链表</strong>、<strong>堆</strong>、<strong>队列</strong>、<strong>树</strong>、<strong>图</strong>！还包含了大量的<strong>数学知识体系</strong>，广度优先、深度优先、递归、回溯、动态规划！如果只是死记或硬背这些链表、堆、队列、树、图的规律，而忽视了数学原理，那么，是真的很难深入掌握算法，直到你有一天突然理解了这些规律（数学原理）但可能你不知道它是数学的原理，还以为自己发现了新大陆。当然这样的人不多，大多数人还是止步于死知识上。</p><p>所以，我想说，计算机体系非常的庞大，想要深入某个知识，就是需要良好的基础，才能走的更广，走的更远！</p><p>举例来说，以<code>人工智能</code>为例，<strong>人工智能</strong> &gt; <strong>机器学习</strong> &gt; <strong>深度学习</strong>，深度学习是机器学习领域的一个子集，机器学习是人工智能领域的一个子集。那么深度学习是目前是火的技术，大家如果在学习了解，一定会遇到数学公式，<code>卷积</code>、<code>傅里叶变换</code>，那这时候，你是不是又要回到大学的《高等数学》课本重新回顾一下这些内容呢？？？我认为，大家需要根据自己的能力水平、工作需要、现有条件（时间或有熟悉领域高手朋友），来决定自己的下一步，切记<code>不能硬上</code>！简单来说，如果你数学不太好，只知道公式，但是不理解公式由来，不能推导出公式，不能理解公式的意义，也找不到人来问。那开始时，切勿一头踩深，只要知道有这么个公式，怎么用就行，对大体有一个认识，当你有条件，或者条件成熟时，或者你自己找条件，渐渐入深浅出。当然，对于一个知识，它就像一棵树，每一个叶子，都是由树干和树支来支撑，而每一个支干又可以长出新的分支…。<code>卷积</code>、<code>傅里叶变换</code>的数学支撑有很多，是不是一定要先完全理解，才能使用呢？显然，我们非常熟悉应试式教育，它有好也有不好，量力而行。</p><p>任何的课堂，只是你的入门老师，修行在个人！~</p><h4 id="第八章-程序员的生活"><a href="#第八章-程序员的生活" class="headerlink" title="第八章 程序员的生活"></a>第八章 <strong>程序员的生活</strong></h4><p>对于程序员来说，马云今年又说了：<code>工作996，生活669</code>。</p><p>为什么大家对马云说的这个很反感？很反对？有没有想过！</p><p>其实，任何一个问题，<strong>不会只有简单的<code>对</code>，或者是<code>错</code>！</strong>，如果没有对与错，那马云说的就不全对，也不全错了，那你怎么说？</p><p>大家喜欢调侃生活，调侃别人，慢慢的变成人云亦云。作为程序员，要用独立的思考能力，生活需要自理！</p><p>对于我自己，生活是什么？摄影？跳舞？吹萧？弹琴？视频后期？亲子活动？工作是为了更好的生活，生活也需要更好的工作。所以，程序员的生活，我认为不要完全独立生活与工作，需要平衡自己的初心。我一直想好好学习英语，记得第一次用英语对话，发现自己不足，只有 1,690 words，现在也许不超过 5,000 ？<code>多在自己的角色考虑自己的问题，不要被人言而畏</code>。</p><p>生活，每个人都不一样，所以没有什么参考或者建议。生活，还是要原谅昨天的自己，努力做今天比昨天进步！</p><h4 id="第九章-程序员的未来"><a href="#第九章-程序员的未来" class="headerlink" title="第九章 程序员的未来"></a>第九章 <strong>程序员的未来</strong></h4><p>说了那么多，我想技术就不多说的。程序员未来的路在那里？</p><p>我一直在关注优秀程序员必备的干货，其实，大家不用想那么多，国外50岁还当程序员的也有人在，只是你能不能也一样？如果你不在意别人的眼光，那么还有什么可怕的？</p><p>生活就在脚下，我们要做的就是现在做好自己，未来自然就会来~</p><p>还是那句，不忘初心，知道自己想要什么的人，就是未来的人！</p><h4 id="第十章-少有人走的路"><a href="#第十章-少有人走的路" class="headerlink" title="第十章 少有人走的路"></a>第十章 少有人走的路</h4><p>人为什么活着？少有人走的路，每个人都不可能走一毛一样的路！所以，下次别人问你路怎么走时，不要以为把自己走过的路告诉他，让她跟你一起走，也许不是最好的路！</p><p>所以，我这样还是找到2个目前认为比较好的“路”，第一个是作为程序员，工程师，如果你在工作中，用下面的10条准则来处理，那其实已经把工作做好了。第二条，是我大学时偶然在网上看到的哈佛图书馆墙壁训言，大学时就对图书馆甚是喜欢，书香它真的很香！<code>图书和知识的伟大让人静心！</code>。为了更好的自己，我们可能面对失败，面对挫折，面对拒绝，面对质疑，面对的一切一切，你在回来读一下这个训言，鸡汤与鼓励的区别时，<code>鸡汤只是画大饼，鼓励是让你开始勇敢！</code></p><h5 id="优秀工程师习惯"><a href="#优秀工程师习惯" class="headerlink" title="优秀工程师习惯"></a>优秀工程师习惯</h5><ol><li>花三分之一时间思考实现方案</li><li>与他人讨论你的实现方案</li><li>用整洁的代码实现</li><li>在脑海中运行你的代码</li><li>用边界条件验证健壮性</li><li>用真机(真实环境)测试</li><li>在多个系统多台设备上验证兼容性</li><li>修复静态代码走查和内存泄露</li><li>找人 CodeReview</li><li>提交前再次阅读你的代码</li></ol><h5 id="哈佛图书馆墙壁训言"><a href="#哈佛图书馆墙壁训言" class="headerlink" title="哈佛图书馆墙壁训言"></a>哈佛图书馆墙壁训言</h5><ol><li><p>此刻打盹，你将做梦；此刻学习，你将圆梦。（This moment will nap, you will have a dream; But this moment study, you will interpret a dream. ）</p></li><li><p>我荒废的今日，正是昨日殒身之人祈求的明日。（I leave uncultivated today, was precisely yesterday perishes tomorrow which person of the body implored.）</p></li><li><p>觉得为时已晚的时候，恰恰是最早的时候。（Thought is already is late, exactly is the earliest time.）</p></li><li><p>勿将今日之事拖到明日。（Not matter of the today will drag tomorrow. ）</p></li><li><p>学习时的苦痛是暂时的，未学到的痛苦是终生的。（Time the study pain is temporary, has not learned the pain is life-long. ）</p></li><li><p>学习不是缺乏时间，而是缺乏努力。（Studies this matter, lacks the time, but is lacks diligently.）</p></li><li><p>幸福或许不排名次，但成功必排名次。（Perhaps happiness does not arrange the position, but succeeds must arrange the position. ）</p></li><li><p>学习并不是人生的全部。但既然连人生的一部分也无法征服，还能做什么呢？（The study certainly is not the life complete. But, since continually life part of-studies also is unable to conquer, what but also can make?） </p></li><li><p>请享受无法回避的痛苦。（Please enjoy the pain which is unable to avoid.）</p></li><li><p>只有比别人更早、更勤奋地努力，才能尝到成功的滋味。（only has compared to the others early, diligently diligently, can feel the successful taste.）</p></li><li><p>谁也不能随随便便成功，它来自彻底的自我管理和毅力。（Nobody can casually succeed, it comes from the thorough self-control and the will. ）</p></li></ol><p>另外，还有一些我认为较好的模型，可以在你迷茫的时候，翻出来看看，兴许可以成为力量的锦囊。</p><h5 id="学习一门技术时，有三个阶段"><a href="#学习一门技术时，有三个阶段" class="headerlink" title="学习一门技术时，有三个阶段"></a>学习一门技术时，有三个阶段</h5><ol><li>第1阶段，基础开发，了解API，基于API开发应用。</li><li>第2阶段，熟悉内核及原理，主要是了解框架的设计原理，阅读源码，洞悉内在机理。</li><li>第3阶段，优化框架，主要是针对框架已有功能的不足进行完善、优化，或者使用框架提供的机制扩展框架功能，或者对框架进行定制，让它适合特定情境。</li></ol><h5 id="关注圈-amp-影响圈模型"><a href="#关注圈-amp-影响圈模型" class="headerlink" title="关注圈&amp;影响圈模型"></a>关注圈&amp;影响圈模型</h5><blockquote><p>把精力更多的花在自己的影响圈内，积极主动的生活，为自己的未来负责。详细可参考：<a href="https://mp.weixin.qq.com/s/VIJ4L48NBEbUMnvFGgkf6w">关注圈&amp;影响圈模型</a></p></blockquote><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%85%B3%E6%B3%A8%E5%9C%88&%E5%BD%B1%E5%93%8D%E5%9C%88%E6%A8%A1%E5%9E%8B-02.png" alt="关注圈&amp;影响圈模型-02.png"></p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%85%B3%E6%B3%A8%E5%9C%88&%E5%BD%B1%E5%93%8D%E5%9C%88%E6%A8%A1%E5%9E%8B-04.png" alt="关注圈&amp;影响圈模型-04.png"></p><h5 id="少讲大道理，多解决小问题"><a href="#少讲大道理，多解决小问题" class="headerlink" title="少讲大道理，多解决小问题"></a>少讲大道理，多解决小问题</h5><blockquote><p>一个组织的人员构成通常是一个菱形，最顶端是能解决问题的人，他们是团队的发动机；次之是能够提出方案和能准识别核心问题的人，他们也是团队的重要构成；最次之则是抱怨和制造问题的人，这两拨人很容易成为拖油瓶。详细可参考：<a href="https://mp.weixin.qq.com/s/j1MtPn_2YwPhiLCJHZ4GYQ">少讲大道理，多解决小问题</a></p></blockquote><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2020/01/%E5%B0%91%E8%AE%B2%E5%A4%A7%E9%81%93%E7%90%86%EF%BC%8C%E5%A4%9A%E8%A7%A3%E5%86%B3%E5%B0%8F%E9%97%AE%E9%A2%98.jpeg" alt="少讲大道理，多解决小问题.jpeg"></p><h4 id="第十一章-2020，爱你爱你"><a href="#第十一章-2020，爱你爱你" class="headerlink" title="第十一章 2020，爱你爱你"></a>第十一章 2020，爱你爱你</h4><ul><li>锻炼&amp;健康</li><li>存钱&amp;节俭</li><li>读书&amp;学习</li><li>旅游&amp;娱乐</li></ul><p><strong>锻炼健康</strong><br>今年在跑步机上就打卡5次…锻炼与健康的重要性，其实在这里说也没有意思，大家量力而行！还是学习村上春树的《当我谈跑步时，我谈些什么》，让身体学会自己锻炼！</p><p><strong>存钱节俭</strong><br>好好存钱，有家有车，还没有买车和开车需求的人，魔豆3不会是第一辆了。其实，在今年之前我对汽车没有什么想法，但突然有一天，年龄大了，你就想我是不是应该有辆车？每次回农村家里时，跑上跑下时，有辆车是不是更方便？随着国产特斯拉价格诱人，博主并不是只喜欢国外，但国产的车还是需要努力！</p><blockquote><p>贤而多财，则损其志；愚而多财，则益其过。</p><p>——— 班固《汉书·疏广传》</p></blockquote><p>意思是：贤良之人钱财过多，就会使他的意志消退；愚笨之人钱财过多，就会增加他的过失。</p><p>以前也听过，<code>穷不过三代</code>、<code>富不过三代</code> 这样的老话。比起把钱财直接留给后代，更应该交给他们赚钱的技艺，正所谓<strong>授人以鱼不如授人以渔</strong>。当然这不是<code>酸</code>，对于我辈<code>穷</code>人，我觉得财不在大，知足常乐~  当然，大家知足的意思不是让大家不去追求！而是有所追求有所进步，这才是<code>真知足常乐</code>！</p><p><strong>读书学习</strong><br>刚才说<code>魔豆3</code>，其实我第一次看到这词还在想是什么东西？原来是特斯拉 <code>Tesla Model 3</code>，真的有时候你不混一下场，了解一下当下流行语，别人说的话你真听不懂，所以90后00后的代沟，互联网时代每天新词，在不学就真文盲了，学不动就真的被淘汰啦！</p><p>关于读书学习，我认为不在像以前那样计划今年读几本书，什么内容、什么题材，我有种感觉，未来的学习，不在分行业领域，大学习时代！海量的阅读，不断的学习阅读，对某一领域、行业、主题…，不管是碎片的还是系统的，都要<code>密集</code>的阅读！并且， <code>持续</code>学习！</p><p><strong>旅游娱乐</strong><br>旅游的事，我想去看看世界！已经没有那么难了，那么我们应该怎么选择呢？我要去那里？想去那里？那里好玩？听说那里不错？回到自己身上想想，大家通过 <code>朋友圈</code>、<code>抖音</code>、<code>广告</code> 不断的追赶，我看过为了发一张朋友圈图片，修图几小时的故事。以前ps技术是设计师或者摄影师才能干的活，现在一部手机就能完成大部分的ps功能。让大家的审美提升，我认为是好事，不管是工作生活还是旅游娱乐，还是那句话，不忘初心也是~</p><p>娱乐，19年看了很多电视剧，以前我是不看电视剧的，偶然看看电影，现在有家之后还是会受到影响啊。看的国产剧最多，现在的电视剧可能更加接近现实吧，以前我觉得看电视剧的人都是很闲的人，随着与家庭的接触和深入，当你有一个家，一个家庭时，大家都是坐一起，看电视剧！也比每个人玩手机好吧！</p><p>2019年看过的剧：</p><ul><li><strong>《都挺好》</strong>：父母的观念会直接影响到家庭子女的观念，亲朋好友等都演的挺好！让自己成为父母之前，想清楚自己想当成怎么的父母很重要！</li><li><strong>《精英律师》</strong>：说了很多生活的案例，比如合同、诈骗、卖假药等，职场的辞退或工伤还有赔偿等，还有法律意识，录音、录像、取证等，都是可以娱乐中学习一下吧！</li><li><strong>《盲侠大律师》</strong>（港剧）：律师怎么破案？香港电视剧就是好看，就是迷！</li><li><strong>《铁探》</strong>（港剧）：警匪悬疑电视剧，很符合港剧的套路！</li><li><strong>《十二传说》</strong>（港剧）：都市传说疑幻疑真，让传说故事与文化历史交织，剧情创新的视角不错！</li><li><strong>《麦香》</strong>：农村发家致富的故事，现在中，想要带乡亲们一起走向富裕比在一线城市创业南，所以，敬佩！</li><li><strong>《你和我的倾城时光》</strong>：一般的爱情剧情，唯一创新就是用军队军人的风格治理一间企业，商场如战场，如此相同！</li><li><strong>《急诊科医生》</strong>：从医生角色还原医者父母心，同时也讲了很多生活的治疗案例，要把事实告诉医生，才是最好最佳的看病！</li><li><strong>《少年派》</strong>：从少年角色还原了高中生的学习与生活与同学的冲突与青春！我们还记得高中的时候怎么跟舍友一起相处吗？半夜有人睡不着说话，有人洗手间开小灯学习至深夜，关于子女在学校怎么与人沟通交流跟工作一样重要，现在的父母又有多少人能明白。</li><li><strong>《知否知否，应是绿肥红瘦》</strong>：宫斗剧很足，也是很有智慧，大家喜欢看斗争，冲突，我更喜欢其中的谋略与胆量！</li><li><strong>《心灵法医》</strong>：从法医视角看待命案，学习侦查破案与生活中的工作学习是一样的道理。</li><li><strong>《亲爱的，热爱的》</strong>：简单地说就是一部爱情虐狗剧，很甜很美好，确实是拍得不错。</li><li><strong>《庆余年》</strong>(第一季)：该剧改编自猫腻的同名小说，讲述了一个有着神秘身世的少年，自海边小城初出茅庐，历经家族、江湖、庙堂的种种考验、锤炼的故事。从来不看网络小说的我，还是被这剧情所吸引，脑洞大开！最有趣的是范闲醉写诗百首，中国的文化魅力精彩!</li></ul><p>旅游现在变成了一个追求时尚的活动，娱乐现在也变成<code>被娱乐</code>，大多数人都会随波，这个是自然规律，比如我们看不顺眼的一件事，我们当时肯定很不理解，但我认为我们不必理解，做好自己，就是最好的理解，<code>不必要求人人如己，但求自己不必如人人</code>。</p><h4 id="最后的开始"><a href="#最后的开始" class="headerlink" title="最后的开始"></a>最后的开始</h4><p>最后的开始，用一段话总结和展望：</p><blockquote><p>三流的化妆是脸上的化妆，<br>二流的化妆是精神的化妆，<br>一流的化妆是生命的化妆。</p><p>三流的文章是文字的化妆，<br>二流的文章是精神的化妆，<br>一流的文章是生命的化妆。</p><p>——— 《林清玄文集》</p></blockquote><p>同理：</p><blockquote><p>三流的程序是代码的化妆，<br>二流的程序是精神的化妆，<br>一流的程序是生命的化妆。</p><p>——— 《iHTCboy》</p></blockquote><p>2020，一起努力！</p><h4 id="参考阅读"><a href="#参考阅读" class="headerlink" title="参考阅读"></a>参考阅读</h4><blockquote><p>中国人喜欢挣快钱，互联网更快，金融更快，地产更快。</p></blockquote><ul><li><a href="https://mp.weixin.qq.com/s/4illpmOuq37IWi3VaRXC5Q">为什么中国几乎没人用三星手机了？</a></li></ul><blockquote><p>每个程序员都曾经有过自己的程序像自己的孩子一样的归属感，并因此去捍卫自己的作品；</p></blockquote><ul><li><a href="https://mp.weixin.qq.com/s/rdPCuLWpU26POr1Ain81yw">致程序员的价值观</a></li></ul><blockquote><p>正是靠着卷积和卷积神经网络，深度学习才超越了几乎其他所有的机器学习手段。</p></blockquote><ul><li><a href="https://www.hankcs.com/ml/understanding-the-convolution-in-deep-learning.html#respond">理解深度学习中的卷积 - 码农场</a></li></ul><blockquote><p>把精力更多的花在自己的影响圈内，积极主动的生活，为自己的未来负责。</p></blockquote><ul><li><a href="https://mp.weixin.qq.com/s/VIJ4L48NBEbUMnvFGgkf6w">关注圈&amp;影响圈模型</a></li></ul><blockquote><p>一个组织的人员构成通常是一个菱形，最顶端是能解决问题的人，他们是团队的发动机；次之是能够提出方案和能准识别核心问题的人，他们也是团队的重要构成；最次之则是抱怨和制造问题的人，这两拨人很容易成为拖油瓶。</p></blockquote><ul><li><a href="https://mp.weixin.qq.com/s/j1MtPn_2YwPhiLCJHZ4GYQ">少讲大道理，多解决小问题</a></li></ul><p>注：文本引用了一些文章的内容，如 <code>第九章 少有人走的路</code> 的方法论，因为是摘记，所以没有保存来源，等有时间在找找来源补回，如侵权请联系</p><br><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;“若遇棘手之际，请从&lt;code&gt;耐烦&lt;/code&gt;二字痛下功夫。”&lt;br&gt;——— 曾国藩&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h4&gt;&lt;p&gt;又到了一年之初，对于2019年，曾国藩最火了，研究的题材从上治国打战谋略，至下人才伯乐培育，不管你是什么行业什么职业什么工作，曾国藩都“适合”你！&lt;/p&gt;
&lt;p&gt;说回题句的内容，大概意思是:“&lt;code&gt;在遇到难办的事情的时候，必须要在不急躁、不怕麻烦上面下大功夫。意谓每临大事有静气。&lt;/code&gt;”。如果两三下功夫就能搞定的事能算是什么大事？！大家说是不是！2019，你做了什么大事？每次你&lt;code&gt;着急&lt;/code&gt;或&lt;code&gt;被焦虑&lt;/code&gt;时，问一下自己成大事吗？&lt;/p&gt;</summary>
    
    
    
    <category term="life" scheme="https://ihtcboy.com/categories/life/"/>
    
    
    <category term="年终总结" scheme="https://ihtcboy.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    <category term="2020" scheme="https://ihtcboy.com/tags/2020/"/>
    
  </entry>
  
  <entry>
    <title>【学习总结】03 | Auto Layout 是怎么进行自动布局的，性能如何？</title>
    <link href="https://ihtcboy.com/2019/12/27/2019-12-27_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE03/"/>
    <id>https://ihtcboy.com/2019/12/27/2019-12-27_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE03/</id>
    <published>2019-12-27T12:20:20.000Z</published>
    <updated>2020-08-22T03:15:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>首先，我认为学习总结，要有所总，所结，就是有归纳后，能用<code>自己的话</code>告诉别人！有所结，就是有所收获输出，一般我认为是<code>思维导图</code>，所以，每篇文章前，我都会先给出文章的脑图：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-03-AutoLayout%E6%98%AF%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%9A%84%EF%BC%8C%E6%80%A7%E8%83%BD%E5%A6%82%E4%BD%95%EF%BC%9F.png" alt="iOS开发高手课-03-AutoLayout是怎么进行自动布局的，性能如何？.png"></p><span id="more"></span><h2 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h2><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><h3 id="带问题找答案"><a href="#带问题找答案" class="headerlink" title="带问题找答案"></a>带问题找答案</h3><ol><li>Auto Layout 如何实现自动布局的？</li><li>这种布局算法真的会影响性能吗？</li><li>应该选择手动布局还是选择Auto Layout呢？</li></ol><p>文中提了3个问题，那么这3个问题怎么解答呢？可以利用第一篇文章说的，一个知识点的方法论来解答。这里就不展开了，具体可以查看 <a href="https://ihtcboy.com/2020/02/02/2020-02-02_%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/">如何建立你自己的开发知识体系 | iHTCboy’s blog</a></p><h3 id="Auto-Layout"><a href="#Auto-Layout" class="headerlink" title="Auto Layout"></a>Auto Layout</h3><ol><li>为什么需要 Auto Layout</li><li>什么是 Auto Layout</li><li>怎么使用 Auto Layout</li><li>使用 Auto Layout 时注意的问题</li><li>Auto Layout 的应用领域</li><li>Auto Layout 的优缺点</li><li>Auto Layout 触类旁通</li></ol><h4 id="1-为什么需要-Auto-Layout"><a href="#1-为什么需要-Auto-Layout" class="headerlink" title="1. 为什么需要 Auto Layout"></a>1. 为什么需要 Auto Layout</h4><p>为什么需要？<code>一般遇到解答不了的问题，可以试试逆向！</code>，那就是反推，就是 <strong>没有 Auto Layout 之前是怎么样的</strong> ？没有 Auto Layout 时，我们是通过设置元素的 <code>Frame</code> 来手动指定界面布局的大小和位置。</p><p>刚开始（2010-2014），大家的App并不复杂，页面布局也很简单，并且技术和历史原因，就是 <code>iPhone4/s</code>（960x640像素）时代 <em>（更早的 iPhone 3G/S，3G网络，S是速度 Speed，因为08、09年那会，一般国内开发者估计都没有见过这些设备，所以这里就简单提一下。）</em> ，iPhone 的宽度都是 640 像素, 开发时用 320 个点计算， 直到 2012年9月发布 <code>iPhone5</code> （1136x640像素），屏幕高度增长了！4寸，当时三星都开始5寸大屏了，所以当年大家吐槽iPhone长的图片可以搜索看看！当年此时此刻，适配 iPhone5 依然并没有太大难度，苹果默认针对没有适配 iPhone5 的App，在 iPhone5 打开App时，上下2端黑屏，这样来过度，让开发者慢慢适配。</p><p>就在当年早期，2012年的 WWDC2012 苹果发布了 <code>Auto Layout</code> 技术，从 <code>iOS6</code> 以后开始支持（<code>Xcode4</code>）。2013年9月发布 <code>iPhone5s</code>，但是大多数的开发者还是习惯使用传统的UI布局方式，大家的开发App布局并不会觉得麻烦，直到2014年变化的事情才有改变！</p><p>2014年9月，苹果发布了 <code>iPhoe 6</code>（1334x750像素）、<code>iPhone 6 plus</code>（1920x1080像素），屏幕适配工作变得非常必要！如果用计算数值的方法工作量增加了几倍。因为4个尺寸的屏幕不一样！iPhone4/s（960x640像素）、iPhone 5/s （1136x640像素）、iPhoe 6（1334x750像素）、iPhone 6 plus（1920x1080像素），虽然大家还是可以按比例计算做缩放，但是这样并不能解决所有问题，因为如果想像素级还原设计、效果图调整尺寸、元素布局比例关系依赖等，可能都需要全部重新手动计算一次，编写这样的代码其实是很操心的。所以这样来年，应该是2014年后才是 <code>Auto Layout</code>技术被大家广泛应用。我在 GitHub 查看了 iOS 最经典的 <a href="https://github.com/SnapKit/Masonry">Masonry</a> 库是 <a href="https://github.com/SnapKit/Masonry/commit/866db519124daa0607b000ce2ce8045c0a3a4fe3">2013年7月22号</a> 创建的，也是符合这个技术历史的进程啊~   <em>(ps: Masonry 源码值得研究学习，有很多可学习的知识，详细搜索引擎一下，已经有很多好的文章啦~)</em></p><p>那么到此，大家明白了，为什么需要 Auto Layout 了吗？</p><h4 id="2-什么是-Auto-Layout"><a href="#2-什么是-Auto-Layout" class="headerlink" title="2. 什么是 Auto Layout"></a>2. 什么是 Auto Layout</h4><p><code>Auto Layout</code> 是一种基于<code>约束</code>的、<code>描述</code>性的<code>布局系统</code>。也就是使用约束条件来描述布局，View 的 Frame 会根据这些描述来进行计算。</p><h4 id="3-怎么使用-Auto-Layout"><a href="#3-怎么使用-Auto-Layout" class="headerlink" title="3. 怎么使用 Auto Layout"></a>3. 怎么使用 Auto Layout</h4><p>2012年，Xcode4，iOS6 引入了 <code>NSLayoutConstraint</code> 类，并且 <code>VFL</code> (Visual Format Language，视觉格式语言) 的方式创建约束。通过下面2个方式来生成布局约束组：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="built_in">NSArray</span> *)constraintsWithVisualFormat:(<span class="built_in">NSString</span> *)format options:(<span class="built_in">NSLayoutFormatOptions</span>)opts metrics:(<span class="built_in">NSDictionary</span> *)metrics views:(<span class="built_in">NSDictionary</span> *)views;</span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+(<span class="keyword">id</span>)constraintWithItem:(<span class="keyword">id</span>)view1 attribute:(<span class="built_in">NSLayoutAttribute</span>)attr1 relatedBy:(<span class="built_in">NSLayoutRelation</span>)relation toItem:(<span class="keyword">id</span>)view2 attribute:(<span class="built_in">NSLayoutAttribute</span>)attr2 multiplier:(<span class="built_in">CGFloat</span>)multiplier constant:(<span class="built_in">CGFloat</span>)c;</span><br></pre></td></tr></table></figure><p>关于 NSLayoutConstraint 详细用法和 VFL 相关使用可以查看官方文档：<a href="https://developer.apple.com/documentation/uikit/nslayoutconstraint">NSLayoutConstraint - UIKit</a> 和 <a href="https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/VisualFormatLanguage.html">Auto Layout Guide: Visual Format Language</a>，所有学习资料官方文档是第一手！</p><h4 id="4-使用-Auto-Layout-时注意的问题"><a href="#4-使用-Auto-Layout-时注意的问题" class="headerlink" title="4. 使用 Auto Layout 时注意的问题"></a>4. 使用 Auto Layout 时注意的问题</h4><h5 id="Constraint-Churn（约束流失）"><a href="#Constraint-Churn（约束流失）" class="headerlink" title="Constraint Churn（约束流失）"></a>Constraint Churn（约束流失）</h5><ol><li>Avoid removing all constraints （避免删除所有约束）</li><li>Add static constraints once （仅一次添加静态约束，且不要再改变它们）</li><li>Only change the constraints that need changing（只更改需要更改的约束）</li><li>Hide views instead of removing them（隐藏视图而不是删除它们）</li></ol><p>注：来自：<a href="https://developer.apple.com/videos/play/wwdc2018/220">High Performance Auto Layout - WWDC 2018 - Videos - Apple Developer</a></p><h5 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h5><ol><li>Stack Views help build easily maintainable layouts (堆栈视图有助于构建易于维护的布局)</li><li>Use activate and deactivate for constraints (使用激活和停用来约束)</li><li>Determine size through constraints (通过约束确定尺寸)</li><li>Override intrinsicContentSize judiciously (明智地覆盖内在内容大小)</li><li>Use priorities to properly solve your layout (使用优先级来正确解决您的布局)</li><li>Alignment goes beyond top, bottom, and center (对齐不超出顶部，底部和中心)</li><li>Keep localization in mind （记住本地化）</li></ol><p>注：来自：<a href="https://developer.apple.com/videos/play/wwdc2015/218">Mysteries of Auto Layout, Part 1 - WWDC 2015 - Videos - Apple Developer</a></p><p>以上注意事项来自 <code>WWDC</code>，具体视频可参考文章末尾的引用来源。这里不打算详细解说，因为视频真的说的很好，所以如果照视频文字摘抄下来，第一是没有视频形象生动，第二是内容真太多！推荐大家去看看视频啊！（ps：现在有中文字幕和中文语言了，不要再找借口了~）</p><h4 id="5-Auto-Layout-的应用领域"><a href="#5-Auto-Layout-的应用领域" class="headerlink" title="5. Auto Layout 的应用领域"></a>5. Auto Layout 的应用领域</h4><p>Auto Layout 其实除了可以用代码来创建，苹果的可视化布局，也有使用，<code>nib</code>，<code>xib</code>，<code>storyboard</code>，那么大家对这3个东西了解熟悉吗？</p><h5 id="Interface-Builder-工具"><a href="#Interface-Builder-工具" class="headerlink" title="Interface Builder 工具"></a>Interface Builder 工具</h5><p><code>Interface Builder</code> 在 Xcode 4 之前，是一个独立的软件，Xcode 4 开始集成到Xcode 中的。这个大家现在比较熟悉，就是可以用鼠标以图形化的方式，拖拉元素来创建UI界面。</p><h5 id="NIB、XIB-区别"><a href="#NIB、XIB-区别" class="headerlink" title="NIB、XIB 区别"></a>NIB、XIB 区别</h5><p>Xcode 3 前，Interface Builder 创建的文件是 <code>NIB</code>（二进制格式，NeXT Interface Builder），不利于版本控制。</p><p>Xcode 3 开始，Interface Builder 使用了一种新的文件格式 <code>XIB</code>（XML文本格式，OS X Interface Builder或XML Interface Builder），XIB在工程编译时被转换成NIB；</p><h5 id="XIB-文件"><a href="#XIB-文件" class="headerlink" title="XIB 文件"></a>XIB 文件</h5><p><code>XIB</code> 是一个描述文件，包含了用户界面及相关元素；一个 XIB 文件对应一个ViewController，也可以通过使用XIB来自定义View。</p><h5 id="StoryBoard-故事板"><a href="#StoryBoard-故事板" class="headerlink" title="StoryBoard 故事板"></a>StoryBoard 故事板</h5><p>iOS 5 （Xcode3）开始，Apple提供了一种全新的布局界面方式 <code>StoryBoard</code> 来拖拉创建界面；StoryBoard 是一组 ViewController 对应的 XIB，以及它们之间的转换方式的集合；在StoryBoard 中，不仅可以看到每个 ViewController 的布局样式，也可以知道各个ViewController 之间的转换关系。</p><p>对于2013~2015年，当时非常的缺乏 iOS 开发者，所以一般的公司只有一个 iOS 开发，那么这时候，<code>StoryBoard</code> 就是最快速的创建界面的工具！此时，面对多种设备时，<code>Auto Layout</code> 就是锦上添花，可以大幅提高 UI 开发效率，一次性做出适合所有屏幕尺寸的 UI。</p><p>现在，对使用 <code>StoryBoard</code> + <code>Auto Layout</code> 还是使用 代码 + <code>Masonry</code>/<code>SnapKit</code>，依然没有最终的答案，因为各有优缺点。</p><h4 id="6-Auto-Layout-的优缺点"><a href="#6-Auto-Layout-的优缺点" class="headerlink" title="6. Auto Layout 的优缺点"></a>6. Auto Layout 的优缺点</h4><p><code>Auto Layout</code>的优点不用多说，解决手动计算每个屏幕尺寸的布局，提高工程效率！缺点的话，大概就是适当的导致性能降低？</p><p><code>Auto Layout 导致性能降低</code>？是吗？为什么是？为什么不是？前面的“什么是 Auto Layout”只是简单的简介，Auto Layout 是一个 <code>布局系统</code>，没有深入的介绍，不知道大家有没有读到那里时，产生疑问或兴趣呢？</p><p>所以，要知道 Auto Layout 的优缺点，还需要深入了解它的原理，才能理解优缺点！否则，死记硬背过后还是不明不白。Auto Layout 是一套 <code>布局引擎系统</code>，叫作 <code>Layout Engine</code> ，是 Auto Layout 的核心。了解 Layout Engine 的布局原理，是理解它的性能（优缺点）的基础。</p><p>所以在这里补充一下，主要参考苹果官方的 WWDC 视频来解说 <code>Layout Engine</code>，引用主讲者 Jason Yao 说的：<code>我们并不只想说这样不好，我们相信大家真正的理解它，理解这个过程！剥开表面！了解真正发生了什么？</code>：</p><h5 id="The-Render-Loop-（渲染循环）"><a href="#The-Render-Loop-（渲染循环）" class="headerlink" title="The Render Loop （渲染循环）"></a>The Render Loop （渲染循环）</h5><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/01-The-Render-Loop.jpg" alt="01-The-Render-Loop.jpg"></p><p>布局引擎是工作流程如上图所示，<code>Update Constraints</code>（更新约束）流，从父视图的约束开始更新，传递到子视图，再到子子视图，这里有2点要说明，一是这个更新约束只是从有约束变化的视图开始，并不是所有视图都更新；二是这个传递过程为什么是从父级开始，因为当一个约束变化时，这个约束是自己与父级的关系或自己与子级的关系，所以会通知给子级视图来响应！<code>Layout</code>（布局）流，是从子视图开始布局，为什么是反向呢？一个视图的布局，它一定是由自己和所有的子视图组成，那自己的布局一定是受子视图的布局和约束影响，所以先确认所有子视图的约束，那自己的视图就确定了，简单来说，就是所有子视图确定大小和位置后，那父视频的大小至少能确定了！这个可能有点绕，大家可以看看原视频来理解。<code>Display</code> （渲染显示）流，因为子视图布局确定了，那显示的大小和位置就能确定，所以也是从子视图开始显示。</p><h5 id="What-is-updateConstraints-（什么是-updateConstraints-？）"><a href="#What-is-updateConstraints-（什么是-updateConstraints-？）" class="headerlink" title="What is updateConstraints?（什么是 updateConstraints ？）"></a>What is updateConstraints?（什么是 updateConstraints ？）</h5><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/02-The-Render-Loop.jpg" alt="02-The-Render-Loop.jpg"></p><p><code>updateConstraints()</code> 是视图的约束更新时会调用的方法，可以重写这个方法来自行设置约束条件。图中列出了 <code>Update Constraints</code>（更新约束）、<code>Layout</code>（布局）、<code>Display</code> （渲染显示） 的对应关系的方法。这里与第一个图并不是对应的关系！而是这3个状态的生命周期分别有对应的方法来响应，要怎么理解？</p><p>要理解这个图，最简单是从了解 <code>layoutSubviews()</code>、<code>setNeedsLayout()</code>、<code>layoutIfNeeded()</code> 三者的关联和作用，明白这3个方法的作用，那么就知道这个生命周期是什么意思。</p><p><code>setNeedsLayout()</code>：当一个UIView对象调用此方法时，实际上等同于做了一个标记，告诉系统需要重新布局，但不会立刻执行，直到 drawing cycle 循环到达该节点时，才会调用<code>layoutSubviews()</code> 方法重新布局。</p><p><code>layoutIfNeeded()</code>：允许在 drawing cycle 循环到达该节点之前，就立刻执行布局刷新调用 <code>layoutSubviews()</code> 方法。</p><p> <code>layoutSubviews()</code>：在上面2个方法调用后，都会被调用。另外，当 <code>addSubview</code>、<code>size</code> 改变或滑动UIScrollView、旋转Screen等都会触发。</p><p>回到 <code>updateConstraints()</code>、<code>setNeedsUpdateConstraints()</code>、<code>updateConstraintsIfNeeded()</code>，那它们的作用也是对应的关系。现在剩下的问题就是，为什么需要这些方法？？？我们在开发中，是不是会改变视图后，更马上刷新这个页面就会用到这些方法。那么同时，我们改变（更新）约束后，是不是也希望刷新约束？所以，这些方法的作用就是这样，那么为什么要这样做，有什么好处呢？因为约束更新，需要重新计算一次，那我们可以自己来控制要不要更新，能减少<code>Constraint Churn</code>（约束流失），减少性能损耗。为什么？举例来说，你给一个Lable设置了新的字体，此时要不要马上更新约束？如果你下一句代码还要改变Lable的字体大小呢？所以，你可以控制一组约束，什么时候才更新，现在明白了这些方法和它们对应的关系了吧。剩下的 <code>draw(_:)</code> 和 <code>setNeedsDisplay()</code> 也是同理，只是层级更底，渲染的调用刷新。</p><h5 id="Activating-a-Constraint（激活一个约束）"><a href="#Activating-a-Constraint（激活一个约束）" class="headerlink" title="Activating a Constraint（激活一个约束）"></a>Activating a Constraint（激活一个约束）</h5><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/03-Activating-a-Constraint.jpg" alt="03-Activating-a-Constraint.jpg"></p><p>说了这么多，好像还没有说到 <code>Layout Engine</code> 布局引擎的工作流程。这个图就是描述了这个流程，每个 <code>Window</code>  下有一个 <code>Engine</code>（引擎），那么 <code>View</code>（视图） 包含 <code>Variable</code>（变量）和 <code>Constraint</code>（约束），那么 Engine 与 View 之间就通过 <code>Equation</code>（等式） 联系。</p><p>那么要理解布局引擎的工作，其实很简单，就是<code>Constraint</code>约束描述了<code>View</code>视图的位置和大小（size），那么就通过 <code>Variable</code>（变量）来向引擎获取，需要获取什么（来确定视图的位置和大小）？ </p><p>当然就是这4个值： <code>minY</code> <code>minX</code> <code>height</code> <code>width</code>，那现在引擎需要做的就是把约束解析出这4个值，所以就是通过 <code>Equation</code>（等式）求解。<code>Equation</code>等式其实也很容易理解，就是像下面这些：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">text1.minX</span> = <span class="number">8</span></span><br><span class="line"><span class="attr">text1.width</span> = <span class="number">100</span></span><br><span class="line"><span class="attr">text2.minX</span> = text1.minX + text1.width +<span class="number">20</span></span><br></pre></td></tr></table></figure><p>最后解出等式，等到结果：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">text1.minX</span> = <span class="number">8</span></span><br><span class="line"><span class="attr">text1.width</span> = <span class="number">100</span></span><br><span class="line"><span class="attr">text2.minX</span> = <span class="number">128</span></span><br></pre></td></tr></table></figure><p>所以，布局引擎的核心就是这个等式的计算，我们初中就算了一元二次方程式，后来学习了多次方程式求解，是不是觉得很简单？那么这些数学问题，我们读书时就知道<code>数字题目答案只有一个，但是解法有很多！</code>，所以原文章提到 <a href="https://constraints.cs.washington.edu/cassowary/">Cassowary 算法</a>、<a href="https://en.wikipedia.org/wiki/Simplex_algorithm">Simplex 算法</a> 就是解决这个方程式求解的问题。至于这些算法这里不打算细说（我承认是因为水平达不到！-。-），为什么算法难？我们人可以做一些骚操作或肉眼看到捷径，但是要机器或程序来操作和寻找，一定要有<code>通用的解法</code>，这也是<code>算法为什么难！数学为什难！因为找到规律的人，往往是牛逼的人！</code></p><p><code>Equation</code>（等式）求解的结果，通过 <code>setNeedsLayout()</code> 通知所有的视图，视图通过 <code>UIView.layoutSubviews()</code> 方法从引擎中复制数据到子视图（Copying data from engine to subview）。</p><p>所以，这个就是整个引擎工作的过程！不知道我说的明白不明白！理解了这个过程，就能回答前面的 <code>Auto Layout 会导致性能降低</code>？从原理上说，引擎的工作方式和我们开发者手动计算的过程是一样的！导致性能降低的原因是什么？其实大多数是<code>人为原因</code>，比如因为 <code>约束流失</code>（Constraint Churn）、<code>不可满足约束</code>（Unsatisfiable Constraints）等导致消耗大量计算。可能你会有疑问：为什么引擎不会做傻事呢？比如我自己计算的布局，我都缓存了，引擎做了吗？答案是肯定的，<code>Engine is a layout cache and tracker</code>（引擎是一个布局缓存和约束跟踪器），也就是你设置的布局，如果不必更新是不会更新约束的；同时，约束更新时引擎会知道那些约束需要重新计算，那么不需要再计算！其实你能想到的，苹果也基本能想到！所以，引擎系统导致性能降低本质来说可以忽视，剩下的就是，<code>如何避免我们设置约束时不合理导致性能降低呢</code>？可以参考前面一节：“4. 使用 Auto Layout 时注意的问题”，详细的所有原则这里就不展开了，下面会重点提几个优化点。至此，引擎的原理问题算是解决啦！大家明白了吗！</p><h5 id="Building-a-More-Performant-Layout（构建一个更好的性能布局）"><a href="#Building-a-More-Performant-Layout（构建一个更好的性能布局）" class="headerlink" title="Building a More Performant Layout（构建一个更好的性能布局）"></a>Building a More Performant Layout（构建一个更好的性能布局）</h5><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/04-Building-a-More-Performant-Layout.jpg" alt="04-Building-a-More-Performant-Layout.jpg"></p><p>这些列举了我们常见的 TableView 滚动卡顿的问题，其实我们知道原因，就是滚动过程中 Cell 要重绘，需要我们知道 Cell 可以重用，但是每个 Cell 的布局和长度可能千变万化，所以卡顿的问题，有一个就是 Cell 变化过程中，重新布局的问题。首先，避免删除所有约束，因为所有约束重新计算可能不是必要的，比如上图的用户头像的位置和大小，固定约束后就不要去改变它啦！那么，可能有一些 Cell 有图片，有一些 Cell 没有时，可以通过 <code>setHidden:</code> 方法 和 <code>noImageConstraints</code> 图片的单独约束来控制，这样，尽最大可以减少约束的计算，导致性能的降低，从而尽可能的避免卡顿！另外，使用 <code>Auto Layout</code> 可以多使用 <code>Compression Resistance Priority</code> 和 <code>Hugging Priority</code>，利用优先级的设置，让布局更加灵活，代码更少，更易于维护。</p><p>当然，针对 <code>Constraint Churn</code>（约束流失）问题，可以通过 Xcode 的 <code>Instruments</code> App 来 debug 调试，它会打印页面布局中所有的 <code>Constraint Churn</code>（约束流失）的元素和对应的约束，具体查看 WWDC 视频 <a href="https://developer.apple.com/videos/play/wwdc2018/220">High Performance Auto Layout - WWDC 2018 - Videos - Apple Developer</a>。</p><p>注：以上内容来源: <a href="https://developer.apple.com/videos/play/wwdc2018/220">High Performance Auto Layout - WWDC 2018 - Videos - Apple Developer</a></p><h5 id="Independent-Sibling-Views（独立的兄弟视图）"><a href="#Independent-Sibling-Views（独立的兄弟视图）" class="headerlink" title="Independent Sibling Views（独立的兄弟视图）"></a>Independent Sibling Views（独立的兄弟视图）</h5><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/05-Independent-Sibling-Views.jpg" alt="05-Independent-Sibling-Views.jpg"></p><p>这个图片里的线条有 iOS11 和 iOS12 ，明显的 iOS12 优化更好，性能消耗更低，这些都是苹果做的优化，对我们开发者来说，我们能做什么呢？前面说到 <code>如何避免我们设置约束时不合理导致性能降低呢</code>？我们已经知道引擎需要计算方程式求解，对于每个元素视图单独约束，相互不依赖时，其实就是解决一元一次方程式，所以就是一条直线。对于我们开发来说，避免约束的相互依赖就能减少性能消耗，所以我们设置约束时，能不依赖的约束的视图，让他们保持独立！就是最优解！</p><h5 id="Dependent-Sibling-Views（互相依赖的兄弟视图）"><a href="#Dependent-Sibling-Views（互相依赖的兄弟视图）" class="headerlink" title="Dependent Sibling Views（互相依赖的兄弟视图）"></a>Dependent Sibling Views（互相依赖的兄弟视图）</h5><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/06-Dependent-Sibling-Views.jpg" alt="06-Dependent-Sibling-Views.jpg"></p><p>对于相互依赖的约束，它们就构形了多元方程式，依赖关系越多，曲线就越陡峭。所以，我们能做的还是一样，尽量减少多个视图之前的约束依赖！</p><h4 id="Nested-Views（嵌套的视图）"><a href="#Nested-Views（嵌套的视图）" class="headerlink" title="Nested Views（嵌套的视图）"></a>Nested Views（嵌套的视图）</h4><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/07-Nested-Views.jpg" alt="07-Nested-Views.jpg"></p><p>对于嵌套的视图，同理，减少视图的嵌套，减少嵌套的层级，都是解决性能的重要手段！</p><p>以上内容来源：<a href="https://developer.apple.com/videos/play/wwdc2018/202/">What’s New in Cocoa Touch - WWDC 2018 - Videos - Apple Developer</a> 。更多的技巧，可以参考前面一节：“4. 使用 Auto Layout 时注意的问题”。</p><h5 id="Building-the-Layout（构建布局）"><a href="#Building-the-Layout（构建布局）" class="headerlink" title="Building the Layout（构建布局）"></a>Building the Layout（构建布局）</h5><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/08-Building-the-Layout.jpg" alt="08-Building-the-Layout.jpg"></p><p>前面只是简单的说明了引擎就是计算出视图的位置和大小，那么具体是怎么计算的呢？这个图片显示了布局引擎的工作流需要那些量。每个视图在得到自己的布局之前，<code>Layout Engine</code> 会将视图、约束、优先级、固定大小等通过计算转换成最终的位置和大小。</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/09-Building-the-Layout.jpg" alt="09-Building-the-Layout.jpg"></p><p>所以，最终的 <code>Layout Engine</code> 计算到布局就是这样的过程，细节点还有很多。还是那句话，授人以鱼不如授人以渔<code>！大家有“渔”后，自然要自己捉鱼！</code>，这里就不详细解进了，可观看 WWDC 视频：<a href="https://developer.apple.com/videos/play/wwdc2015/218/">Mysteries of Auto Layout, Part 1 - WWDC 2015 - Videos - Apple Developer</a>。</p><p>最后，关于 <code>Auto Layout</code> 还有很多知识，比如怎么调试 Auto Layout 的 Debug？可以查看 <a href="https://developer.apple.com/videos/play/wwdc2016/236">What’s New in Auto Layout - WWDC 2016 - Videos - Apple Developer</a> 视频。Auto Layout 的流程（The Layout Cycle），可以查看 <a href="https://developer.apple.com/videos/play/wwdc2015/219/">Mysteries of Auto Layout, Part 2 - WWDC 2015 - Videos - Apple Developer</a>。</p><h4 id="7-Auto-Layout-触类旁通"><a href="#7-Auto-Layout-触类旁通" class="headerlink" title="7. Auto Layout 触类旁通"></a>7. Auto Layout 触类旁通</h4><h5 id="UIStackView-与-Flexbox"><a href="#UIStackView-与-Flexbox" class="headerlink" title="UIStackView 与 Flexbox"></a>UIStackView 与 Flexbox</h5><p><code>UIStackView</code> 是2015年 iOS9 苹果推出的一套 API，它可以很好地减轻手动写或拖 constraint 带来的重复繁琐的工作，也可以自动化的处理排列和元素个数的变化。当年因为需要iOS9+，导致很少有开发者使用，放在2020年的今年，这个控件可以熟悉一下啊！UIStackView 与 Web 前端的 <code>Flexbox</code> 响应式布局是一个思想原理。UIStackView 特点有下面4个：</p><ol><li>Easy to build（容易构建）</li><li>Easy to maintain （容易维护）</li><li>Composable Stack Views （可组合的堆栈视图）</li><li>Lightweight （轻量级）</li></ol><p>这里并不打算讲解 <code>UIStackView</code> 有多利害！确实它很利害。具体可以查看 WWDC 演示的Demo <a href="https://developer.apple.com/videos/play/wwdc2015/218">Mysteries of Auto Layout, Part 1 - WWDC 2015 - Videos - Apple Developer</a>。</p><p>关于 <code>Flexbox</code> 的思想可以看看文章 <a href="https://zhuanlan.zhihu.com/p/25303493">30 分钟学会 Flex 布局 - 知乎</a> 和 <a href="https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html">Flex 布局教程：语法篇 - 阮一峰的网络日志</a>，个人觉得文章写得很好。另外关于 <code>UIStackView</code> 的强大就借 <a href="https://juejin.im/post/5c2ee162e51d4550fc42ac57">UIStackView 入坑指南 - 掘金</a> 文章的一张图来总结吧：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/10-UIStackView-Layout.png" alt="10-UIStackView-Layout.png"></p><p>这个图片是 AppStore 的 App 详细页面的布局，使用 <code>UIStackView</code> 布局让界面清晰和简单，这也是模块化组件化的思想，关于这个界面为什么用 UIStackView 更好？可以观看 <a href="https://developer.apple.com/videos/play/wwdc2015/218">Mysteries of Auto Layout, Part 1 - WWDC 2015</a> ，答案在里面，文字不好回答啊！</p><h5 id="SwiftUI"><a href="#SwiftUI" class="headerlink" title="SwiftUI"></a>SwiftUI</h5><ul><li><code>命令式编程</code>（Imperative Programming）：命令“机器”如何去做事情(how)，这样不管你想要的是什么(what)，它都会按照你的命令实现。</li><li><code>声明式编程</code>（Declarative Programming）：告诉“机器”你想要的是什么(what)，让机器想出如何去做(how)。</li></ul><p><code>SwiftUI</code> 是<code>声明式编程</code>，还有<code>函数式编程</code>、<code>响应式编程</code> 等编程思想，这里暂时就不多说，有兴趣的可以自行搜索。这里提的原因是，SwiftUI 采用不同的布局方式，与<code>React Native</code>/ <code>Flutter</code>等热门框架一样采用<code>声明式UI</code>，并且依然使用 <code>Auto Layout</code>，并且 <code>VStack</code> 也是天合之作吧！</p><h2 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h2><p>首先，关于 iOS 、 Xcode 和对应年份的关系，可以梳理一下，2012年 Xcode4 对应 iOS 6 ，2013年 Xcode5 和 iOS 7。它们相差2，所以，2020年将发布 Xcode12 和 iOS 14。这个就是一个数字游戏，可记可不记，就是想说明，记忆可以找规律的。</p><p>回到最前面提到的3个疑问题，你是不是已经有了自己的答案了呢？</p><ol><li>Auto Layout 如何实现自动布局的？</li><li>这种布局算法真的会影响性能吗？</li><li>应该选择手动布局还是选择Auto Layout呢？</li></ol><p>本章内容够不够深不深入？这个大家的了解水平不一样，如果觉得不够深入，还是可以参考本文末的参考扩展了解更多，因为 WWDC 视频中提到了很多细节的东西，有一些很棒，有一些很有趣，这里就不一一列出。因为原文还提到了 <a href="https://constraints.cs.washington.edu/cassowary/">Cassowary 算法</a>、<a href="https://en.wikipedia.org/wiki/Simplex_algorithm">Simplex 算法</a>，本文并没有把它作为主角色来解读，为什么呢？因为，它并不是我们了解和理解 <code>Auto Layout</code> 最核心的必备知识，并且它对技术和数学有一定的要求，不可能每个人都能看得懂，所以文章一上来就说这些一定会让读者感到害怕，或者不知所云，最终，适得其反。所以，在本文的基础上，如果大家还想深入了解，那这将是一道窗口，而不是一道门口！</p><p>以后关于 <code>Auto Layout</code> 的知识，你是不是能更好的跟别人讲解呢？这些就是本文想要做的事情，当然还有更深入的知识可以研究，切记这只是开始！修行在个人~</p><br><p>注：更多关于 iOS 开发和程序开发相关的内容，可以查看系列，目前还在连载中 <a href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/">【学习总结】iOS开发高手课 – (连载中) | iHTCboy’s blog</a>，以上，希望对你有用！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a></li></ul><p>WWDC:</p><ul><li><a href="https://developer.apple.com/videos/play/wwdc2018/220">High Performance Auto Layout - WWDC 2018 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2015/218">Mysteries of Auto Layout, Part 1 - WWDC 2015 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2015/219">Mysteries of Auto Layout, Part 2 - WWDC 2015 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2016/236">What’s New in Auto Layout - WWDC 2016 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2018/202/">What’s New in Cocoa Touch - WWDC 2018 - Videos - Apple Developer</a> </li><li><a href="https://developer.apple.com/videos/play/wwdc2017/412/">Auto Layout Techniques in Interface Builder - WWDC 2017 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2015/407/">Implementing UI Designs in Interface Builder - WWDC 2015 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2015/215/">What’s New in Storyboards - WWDC 2015 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2012/228/">Best Practices for Mastering Auto Layout - WWDC 2012 - Videos - Apple Developer</a></li></ul><p>Article:</p><ul><li><a href="https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html">Auto Layout Guide: Understanding Auto Layout</a></li><li><a href="https://constraints.cs.washington.edu/solvers/uist97.pdf">Solving Linear Arithmetic Constraints for User Interface Applications - PDF</a></li><li><a href="https://constraints.cs.washington.edu/solvers/uist97.html">Solving Linear Arithmetic Constraints for User Interface Applications</a></li><li><a href="https://constraints.cs.washington.edu/cassowary/">UW Cassowary Constraint Solving Toolkit</a></li><li><a href="https://en.wikipedia.org/wiki/Simplex_algorithm">Simplex algorithm - Wikipedia</a></li><li><a href="https://zh.learnlayout.com/flexbox.html">CSS - flexbox</a></li><li><a href="https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html">Flex 布局教程：语法篇 - 阮一峰的网络日志</a></li><li><a href="https://zhuanlan.zhihu.com/p/25303493">30 分钟学会 Flex 布局 - 知乎</a></li><li><a href="https://juejin.im/post/5c2ee162e51d4550fc42ac57">UIStackView 入坑指南 - 掘金</a></li><li><a href="https://www.jianshu.com/p/213702004d0d">UIStackView学习分享， 纯代码实现 - 简书</a></li><li><a href="https://github.com/johnlui/AutoLayout">johnlui/AutoLayout: Auto Layout 秘境</a></li><li><a href="https://blog.csdn.net/dongbaojun_ios/article/details/12566529">iOS学习笔记02——以编码的方式实现Auto Layout自动布局（一）_AutoLayout,iOS,自动布局_董宝君的博客-CSDN博客</a></li><li><a href="https://blog.csdn.net/dongbaojun_ios/article/details/12650831">iOS学习笔记04——Visual Format Language语法的简单学习_董宝君的博客-CSDN博客</a></li><li><a href="https://stackoverflow.com/questions/3726400/what-is-the-difference-between-nib-and-xib-interface-builder-file-formats">cocoa - What is the difference between NIB and XIB Interface Builder file formats? - Stack Overflow</a></li><li><a href="https://blog.csdn.net/mylizh/article/details/38660675">xib与nib的区别_雅香小筑-CSDN博客</a></li><li><a href="https://www.justisit.com/15703760378326.html">NIB、XIB、StoryBoard与UIViewController、UIView - TIME TO GO</a></li><li><a href="https://www.jianshu.com/p/0c8a692a0c7f">响应式和函数式，两个容易混淆的概念 - 简书</a></li><li><a href="https://draveness.me/layout-performance">从 Auto Layout 的布局算法谈性能</a></li><li><a href="https://juejin.im/post/5bd5a546f265da0af033cee6#aboutCassowary">深入理解 Autolayout 与列表性能 – 背锅的 Cassowary 和偷懒的 CPU - 掘金</a></li><li><a href="https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/VisualFormatLanguage.html">Auto Layout Guide: Visual Format Language</a></li><li><a href="https://en.wikipedia.org/wiki/Simplex_algorithm">Simplex algorithm - Wikipedia</a></li><li><a href="https://github.com/ming1016/study/wiki/Masonry">Masonry · ming1016/study Wiki</a></li><li><a href="https://github.com/forkingdog/FDStackView">forkingdog/FDStackView: Use UIStackView directly in iOS6+</a></li><li><a href="https://github.com/ming1016/STMAssembleView">ming1016/STMAssembleView: 制作一个类似苹果VFL(Visual Format Language)的格式化语言来描述类似UIStackView那种布局思路，并解析生成页面</a></li><li><a href="https://ming1016.github.io/2015/11/03/deeply-analyse-autolayout/">深入剖析Auto Layout，分析iOS各版本新增特性 | 星光社 - 戴铭的博客</a></li><li><a href="https://www.jianshu.com/p/c18c9e5db4d4">iOS关于setNeedsLayout、layoutIfNeeded、 layoutSubviews、drawRect的爱恨情仇 - 简书</a></li><li><a href="https://kb.cnblogs.com/page/181030/">声明式编程和命令式编程的比较_知识库_博客园</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源</p></blockquote><br>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h2&gt;&lt;p&gt;首先，我认为学习总结，要有所总，所结，就是有归纳后，能用&lt;code&gt;自己的话&lt;/code&gt;告诉别人！有所结，就是有所收获输出，一般我认为是&lt;code&gt;思维导图&lt;/code&gt;，所以，每篇文章前，我都会先给出文章的脑图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-03-AutoLayout%E6%98%AF%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%9A%84%EF%BC%8C%E6%80%A7%E8%83%BD%E5%A6%82%E4%BD%95%EF%BC%9F.png&quot; alt=&quot;iOS开发高手课-03-AutoLayout是怎么进行自动布局的，性能如何？.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="iOS开发高手课" scheme="https://ihtcboy.com/tags/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="学习总结" scheme="https://ihtcboy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    <category term="StoryBoard" scheme="https://ihtcboy.com/tags/StoryBoard/"/>
    
    <category term="Auto Layout" scheme="https://ihtcboy.com/tags/Auto-Layout/"/>
    
    <category term="XIB" scheme="https://ihtcboy.com/tags/XIB/"/>
    
    <category term="UIStackView" scheme="https://ihtcboy.com/tags/UIStackView/"/>
    
    <category term="flexbox" scheme="https://ihtcboy.com/tags/flexbox/"/>
    
    <category term="SwiftUI" scheme="https://ihtcboy.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>GMTC全球大前端技术大会（深圳站）2019</title>
    <link href="https://ihtcboy.com/2019/12/25/2019-12-25_GMTC2019shenzhen/"/>
    <id>https://ihtcboy.com/2019/12/25/2019-12-25_GMTC2019shenzhen/</id>
    <published>2019-12-25T03:11:11.000Z</published>
    <updated>2020-08-22T03:15:33.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h3><p>工作5年来，一直投身于 iOS 开发，而这5年来移动开发一直再追赶web前端和后端开发的技术栈和思想，近2年大家直接说：“大前端”，移动开发真正变成了“UI”前端的开发，而web前端借助 Node 开始转了后端开发？正是借着这些变化，我一直在思考，一直在疑问，直到看了一些 GMTC 课程，就像命悬一线的人一下子打通了任督二脉，练习武功不再于形式，需要提升认知的境界！这是一个神奇的世界，一个最好的时代！最“坏”的时代！</p><span id="more"></span><p>GMTC是什么？</p><blockquote><p>GMTC全球大前端技术大会是由极客邦科技旗下InfoQ中国主办的技术盛会，关注前端、移动、AI应用等多个技术领域，促进全球技术交流，推动国内技术升级。GMTC为期4天，包括两天的会议和两天的培训课，主要面向各行业前端、移动开发、AI技术感兴趣的中高端技术人员，大会聚焦前沿技术及实践经验，旨在帮助参会者了解大前端&amp;移动开发领域的技术趋势与实践案例。</p></blockquote><h3 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h3><p>借知乎 <a href="https://www.zhihu.com/question/330261935/answer/724749304">果大的回答</a> 的一句话:</p><blockquote><p>切身的一个体会就是「让多个人去做同一个项目，先不讨论项目的结果如何，最终项目组里每个人成长差别非常大」，所以大家要不断地去思考做一个项目解决一个问题参加一次会议如何能让自己有更多的收获，思考能力、执行力、沟通能力、竞品分析能力、沉淀分享能力等都是我们需要去关注的点。</p></blockquote><p>做技术这些年，技术不在是技术，知识不在是知识，不要停留在自己的认知世界里，多看看别人的世界，看技术前沿，看程序圈子趋势。向上，思考问题的层次，向下，编程语言的底层。</p><p>目前的国内环境，最后的大前端分享，我想就是 GMTC 了，总体来讲邀请了国内技术公司大牛，分享他们过去和未来对于某个方向技术的实践与探索，每个专场都非常有代表性，最后，学习不止于知识，你的疑问？不可能通过别人有一个完美的回答，不能一鼓子copy到自己行业的业务中，应该是通过讲师的演讲，学习解决问题的思路和方法，了解未来的方向变化，有所启发，有所改进，有所触动，有所融会贯通！</p><p>所以，希望把看过的视频，都做一些记录和感想吧，不管懂与否，这都是学习步伐的记录~</p><h3 id="3、GMTC-全球大前端技术大会（深圳站）2019"><a href="#3、GMTC-全球大前端技术大会（深圳站）2019" class="headerlink" title="3、GMTC 全球大前端技术大会（深圳站）2019"></a>3、GMTC 全球大前端技术大会（深圳站）2019</h3><p>以下内容可在 <a href="https://gmtc.infoq.cn/2019/shenzhen/schedule">GMTC全球大前端技术大会(深圳站)2019</a> 网站查看。另外，如果观看视频可以在极客时间App的每日一课中观看（需会员）。</p><h4 id="前端前沿技术"><a href="#前端前沿技术" class="headerlink" title="前端前沿技术"></a>前端前沿技术</h4><blockquote><p>前端技术的发展日新月异，新技术的不断出现推动着前端应用的规模和场景不断向原生桌面应用靠拢。WebAssembly、WebRTC、前端微服务、Deno 以及 HTTP-over-QUIC (HTTP3) 等新技术方案/模式/产品的出现，定会在未来某时，在背后默默影响着人们的智能生活体验。</p></blockquote><h5 id="《JavaScript-WeakRefs-and-TC39-standardization》"><a href="#《JavaScript-WeakRefs-and-TC39-standardization》" class="headerlink" title="《JavaScript WeakRefs and TC39 standardization》"></a>《JavaScript WeakRefs and TC39 standardization》</h5><p> Daniel Ehrenberg / TC39 核心成员</p><ul><li><p>讲师简介：</p><blockquote><p>Daniel is an engineer at Igalia, an open source software cooperative. He participates in the TC39 and has dabbled in WebAssembly and web standards. He also worked on V8.</p><p>Daniel 是 TC39 的核心成员，他就职于 Igalia，这是一家自由软件咨询公司，希望通过自由软件让世界更美好。Daniel 还涉猎 WebAssembly 和 Web 标准，也参与了 V8 的开发。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>TC39 is the committee which defines the JavaScript standard. JavaScript developers have been telling us for many years that they need weak references and finalizer callbacks: These capabilities let programs hook into garbage collection to free up related resources. After several years of debate and refinement, TC39 has settled on a design for WeakRefs and FinalizationGroups which has reached Stage 3 in its process and will likely soon be shipping in browsers and Node.js. In this talk, I will explain how to use WeakRefs, as well as how TC39 works and how to get involved, so that we can work together for the future of JavaScript.</p><ol><li> Use cases for WeakRefs and FinalizationGroups</li></ol><p>   (1) In-memory cache<br /><br>   (2) Triggering errors on stranded resources<br /><br>   (3) Using WebAssembly memory from JavaScript<br /><br>   (4) In-memory cache with tombstone cleanup</p><ol start="2"><li> How TC39 develops JavaScript</li></ol><p>   (1) What is TC39?<br /><br>   (2) Development of the JavaScript standard<br /><br>   (3) TC39 stage process<br /><br>   (4) Some recent TC39 proposals</p><ol start="3"><li> Details of WeakRefs in TC39</li></ol><p>   (1) History of this proposal in TC39<br /><br>   (2) WeakRef and FinalizationGroup APIs<br /><br>   (3) Weak guarantees in WeakRef/FinalizationGroup behavior<br /><br>   (4) Scheduing interactions with deref() and FinalizationGroup callbacks</p><ol start="4"><li> Participating in TC39</li></ol><p>   (1) Giving feedback on proposals via GitHub<br /><br>   (2) Helping with tests and documentation<br /><br>   (3) Creating implementations in Babel, tools, JS engines, etc<br /><br>   (4) Joining Ecma to be a TC39 delegate</p><p>Audience benefits:</p><ol><li> Learn to use the new JavaScript WeakRefs feature<br /></li><li> Get involved in shaping the future of JavaScript through TC39</li></ol><p>Frontier highlights:</p><p>WeakRefs and FinalizationGroups can lead to more precise, efficient memory consumption in modern JavaScript</p><p>Knowledge reserve:</p><ol><li> Know simple JavaScript<br /></li><li> Understand what garbage collection is</li></ol><p>参考翻译：</p><p>Javascript Weakrefs 和 TC39 标准化</p><p>演讲提纲：</p><p>TC39 委员会负责制定 JavaScript 标准。多年来，JavaScript 开发人员一直告诉委员会，他们需要弱引用和 Finalizer 回调：这些功能使得程序可以连接到垃圾收集中，以释放相关资源。经过几年的争论和改进，TC39 已经确定了 WeakRefs 和 FinalizationGroups 的一种设计方案，目前已经到了第3阶段，可能很快就会在浏览器和 Node.js 中发布。在本次演讲中，我将解释如何使用 Weakrefs，然后介绍 TC39 是如何工作的，以及如何参与其中，以便大家能够为 JavaScript 的未来共同努力。</p><ol><li> WeakRefs和FinalizationGroups的用例</li></ol><p>（1）内存缓存<br /><br>（2）滞留资源触发错误<br /><br>（3）使用 JavaScript 中的 WebAssembly 内存<br /><br>（4）带逻辑删除的内存缓存</p><ol start="2"><li> TC39 如何开发 JavaScript</li></ol><p>（1）什么是 TC39？<br /><br>（2）JavaScript 标准的发展过程<br /><br>（3）TC39 阶段流程<br /><br>（4）近期 TC39 的一些建议</p><ol start="3"><li> TC39 中的 WeakRefs 细节</li></ol><p>（1）TC39 中本提案的历史<br /><br>（2）WeakRef 和 FinalizationGroup API<br /><br>（3）WeakRef/FinalizationGroup 行为中的弱保证<br /><br>（4）调度与 deref<br /><br>（5）和 FinalizationGroup 回调的交互</p><ol start="4"><li> 参与TC39</li></ol><p>（1）通过 GitHub 反馈提案<br /><br>（2）帮助测试和文档<br /><br>（3）在 Babel、工具、JS 引擎等中创建实现<br /><br>（4）加入 Ecma 成为 TC39 代表</p><p>听众收益：</p><ol><li> 学习使用新的 JavaScript WeakRefs 特性<br /></li><li> 通过 TC39 参与塑造 JavaScript 的未来</li></ol><p>前沿亮点：</p><p>WeakRefs 和 finalizationgroup 可以使现代 JavaScript 中的内存使用更精确、更高效。</p><p>知识储备：</p><ol><li> 了解简单的 JavaScript<br /></li><li> 了解什么是垃圾收集</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2754">下载</a></p></li></ul><h5 id="《WebAssembly-在性能及加密场景的深度探索》"><a href="#《WebAssembly-在性能及加密场景的深度探索》" class="headerlink" title="《WebAssembly 在性能及加密场景的深度探索》"></a>《WebAssembly 在性能及加密场景的深度探索》</h5><p> 赵洋 / coupang 高级软件开发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>赵洋，曾在百度、腾讯以及全民直播任职，现任 coupang 高级软件开发工程师。他是一名全栈工程师，开源了 SecurityWorker 项目，也是 WXInlinePlayer 作者及 ShadowNode、 ned2k 等多个项目的贡献者，目前关注 WebAssembly、前端音视频及可视化等相关领域。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着 Web 技术的不断发展， WebAssembly 非常有技术前景。尽管很多公司已经在尝试并落地 WebAssembly，但仍很多公司以及开发者处于观望状态，并不了解如何将 WebAssembly 融入到现有的项目中。本次演讲我将通过 coupang 的两个实际落地的项目来深入探讨 WebAssembly 的性能及保密相关的优势，包括两个项目不断演进的具体过程及未来的发展方向。通过本次演讲，希望大家能有所启发，可以根据项目需求去引入 WebAssembly 技术，提升自身的开发效率和产品体验。</p><p>演讲提纲：</p><ol><li> 问题背景</li></ol><p>(1)  如何更好的保护前端的核心代码<br /><br>(2)  如何更好的适配 Mobile 端播放器</p><ol start="2"><li> 代码保护方案调研及探索</li></ol><p>(1)  常规的代码保护方案<br /><br>(2)  Google reCAPTCHA 所采用的方案调研<br /><br>(3)  结合 WebAssembly 的落地方案<br /><br>(4)  各方案优劣势对比<br /><br>(5)  与 QuickJS 的结合 - 提升性能、缩小生成体积、增强编码体验<br /><br>(6)  未来规划 - 小程序支持、DevTools Protocol 支持<br /></p><br />3.  适配 Mobile 播放器<br />(1)  如何在 Mobile 端实现一个&quot;抖音&quot;<br />(2)  遇到的问题<br />(3)  商用/开源方案的调研对比<br />(4)  摆脱 FFmpeg ，更灵活的 WASM 音视频软解方案<br />(6)  如何进行多 WebWorker 解码，提升软解性能<br />(7)  增加多种解码格式支持（ H265/AV1 /VP9 ）<br />(8)  针对移动端的软解优化和延迟降低<br />(9)  各方案优劣势对比<br />(10)  未来的计划<ol start="4"><li> 展望与总结</li></ol><p>听众收益：</p><ol><li> 刷新前端加解密方案的新认知<br /></li><li> 了解并使用 WebAssembly 保护核心前端代码逻辑<br /></li><li> 了解如何使用 WebAssembly 在 Mobile 端提供统一的播放器体验</li></ol><p>知识储备：</p><ol><li>  WebAssembly 的基础认知<br /></li><li> 了解前端的一些混淆/加密工具及方案<br /></li><li> 了解播放器的基本原理<br /></li><li> 了解编解码和编译相关技术更佳</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2756">下载</a></p></li></ul><h5 id="《从-Node-js-到-Deno：一个安全高效的-JavaScript-TypeScript-运行时》"><a href="#《从-Node-js-到-Deno：一个安全高效的-JavaScript-TypeScript-运行时》" class="headerlink" title="《从 Node.js 到 Deno：一个安全高效的 JavaScript/TypeScript 运行时》"></a>《从 Node.js 到 Deno：一个安全高效的 JavaScript/TypeScript 运行时》</h5><p> 迷渡 / 天津卓朗科技 前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>迷渡（网名 justjavac ）十余年前端开发经验，现担任天津卓朗的前端技术专家，是国内最早一批Node.js技术实践者之一。JSON API 中文规范维护者，平时混迹于GitHub ，参与众多开源项目。2018年Deno发布后就一直关注Deno的最新动态，目前是 Deno 代码的核心贡献者之一。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>2018年，Ryan在JSConf EU上做了主题为 &ldquo;10 Things I Regret About Node.js&rdquo; 的分享，Ryan回顾了在他看来当初开发Node.js时留下的十大遗憾。由于Node.js现在已经广泛应用于各个领域，为了保证兼容性，对Node.js底层进行大规模改造已经不现实。于是Ryan宣布他决定开发一个全新的JavaScript Runtime以解决当初的种种缺陷，这便是 Deno。</p><p>演讲提纲：</p><ol><li> 为什么开发 Deno？</li></ol><p>   (1) 当前 JavaScript 生态存在的问题<br /><br>   (2) Deno 的目标<br /><br>   (3) Deno 的哲学<br /><br>   (4) Deno 的生态   </p><ol start="2"><li> 深入理解 Deno</li></ol><p>   (1) Deno 的底层架构<br /><br>   (2) Deno 的高层 API 和内部细节<br /><br>   (3) Deno 的性能</p><ol start="3"><li>未来展望</li></ol><p>听众收益：</p><ol><li> 了解 Ryan Dahl 为什么在 Node.js 发布十周年后又开发了 Deno<br /></li><li> 从底层原理对比 Node.js 和 Deno 的异同<br /></li><li> Deno 的内部实现细节<br /></li><li> Deno 为前端和后端带来了哪些新的可能性 </li></ol><p>前沿亮点：</p><p>深入讲解 Deno 的底层原理</p><p>知识储备：</p><ol><li> 对 Node.js、npm 有所了解<br /></li><li> 有过 TypeScript 使用经验</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2759">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《多端一体化框架-Hippy-的开放与未来》"><a href="#《多端一体化框架-Hippy-的开放与未来》" class="headerlink" title="《多端一体化框架 Hippy 的开放与未来》"></a>《多端一体化框架 Hippy 的开放与未来》</h5><p> 李思广 / 腾讯 高级工程师</p><ul><li><p>讲师简介：</p><blockquote><p>李思广，腾讯高级工程师，2010年入职腾讯。腾讯 T11 级高级工程师，曾在浏览器内核组负责 X5 内核的开发，目前是跨端 Hippy 框架的 Android 负责人，对浏览器内核、Android、iOS 都有丰富的实践经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>自从2015年第一个跨端框架 React Native 诞生以来，之后涌现出大量各式各样的跨端框架。这些用前端语法来进行跨端 App 开发的框架，大多数都忽略了一个基本的问题，就是前端开发使用的框架采用了和浏览器不同的设计标准，导致使用者上手难度增加，在开发过程中又因为双平台不一致的问题，需要重新开发具有平台针对性的代码，复杂程度进一步加深。</p><p>腾讯手机 QQ 浏览器在跨端开发中，从实际痛点出发，通过实践提出多端一体化研发框架 Hippy，该框架使启动和运行性能达到了业内的领先水平。在这次演讲中，我将分享腾讯 Hippy 的设计思路、核心架构和使用方法，希望能为你解决多端体验不一致问题，提高研发效率。</p><p>演讲提纲：</p><ol><li><p> 前端开发的前世今生</p></li><li><p> 传统开发难以解决的问题</p></li></ol><p>   (1) 离线能力<br /><br>   (2) 性能<br /><br>   (3) 平台扩展</p><ol start="3"><li> 跨端框架业内现状</li></ol><p>   (1) React Native<br /><br>   (2) Flutter</p><ol start="4"><li> 跨段框架现存问题</li></ol><p>   (1) 上手难度高<br /><br>   (2) 平台一致性差<br /><br>   (3) 性能存在的问题</p><ol start="5"><li> 腾讯给出的解决方案 - Hippy</li></ol><p>   (1) Hippy 整体框架<br /><br>   (2) Hippy 优势<br /><br>   (3) Hippy 开源<br /><br>   (4) Hippy 上手<br /><br>   (5) Hippy 未来的规划</p><p>听众收益：</p><ol><li> 可以了解目前跨端框架的主流动态<br /></li><li> 可以了解到腾讯对于跨端框架设计的思考<br /></li><li> 可以了解 Hippy 是如何承载腾讯过亿用户的访问量</li></ol><p>前沿亮点：</p><p>腾讯多端一体化框架方案 Hippy 开源</p><p>知识储备：</p><ol><li> 需要对跨端框架现状有基本了解<br /></li><li> 大致了解过 React Native、Weex、Flutter 的基本情况<br /></li><li> 对终端开发有一定了解<br /></li><li> 对跨端开发抱有浓厚兴趣</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2762">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h4 id="音视频技术"><a href="#音视频技术" class="headerlink" title="音视频技术"></a>音视频技术</h4><blockquote><p>在5G时代下，4万亿音视频产业将迎来更大的发展机遇和爆发式增长。音视频技术如何在在线教育、视频直播、短视频等各个领域应用落地，本专题将邀请一线技术专家分享相关技术实践，给大家带来更多的思考和经验参考。</p></blockquote><h5 id="《在线教育的-Web-音视频架构方案》"><a href="#《在线教育的-Web-音视频架构方案》" class="headerlink" title="《在线教育的 Web 音视频架构方案》"></a>《在线教育的 Web 音视频架构方案》</h5><p> 刘志龙 / 腾讯 高级前端开发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>刘志龙，腾讯 IMWeb 前端团队成员，高级前端开发工程师，负责腾讯课堂的前端开发。曾就职于百度 ecomfe 团队。专注于 Web 前端，热爱 Web 安全。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着实时音视频通信技术的发展，音视频作为在线教育场景中的核心载体，扮演着重要角色。另一方面，浏览器对音视频能力支持性的提升，也让 Web 音视频可选的技术方案更加丰富。本次演讲主要分享在线教育场景下的 Web 音视频架构方案，以及在音视频实践中的经验。</p><p>演讲提纲：</p><ol><li> 在线教育音视频概述</li></ol><p>   (1) Web 直播与点播的发展和现状<br /><br>   (2) 在线教育的音视频整体架构<br /><br>   (3) 点播架构与教育内容版权保护方案</p><ol start="2"><li><p> 在线教育实时直播方案及 WebRTC 实践</p></li><li><p> 浏览器的 PPT 信令化</p></li></ol><p> (1) 在线教育的 PPT 信令化场景<br /><br> (2) PPT 信令化技术架构<br /><br> (3) 实现方案与监控手段</p><ol start="4"><li> 总结和音视频技术的展望</li></ol><p>听众收益：</p><ol><li> 了解在线教育点播、直播的整体架构<br /></li><li> 了解点播、直播在具体业务实践中的优化细节<br /></li><li> 了解 WebRTC SDK 的实现</li></ol><p>前沿亮点：</p><ol><li> 在线教育音视频的实践经验<br /></li><li> WebRTC 播放器实现细节<br /></li><li> Web 点播、直播的性能优化细节</li></ol><p>知识储备：</p><p>了解音视频基础</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2765">下载</a></p></li></ul><h5 id="《IJKPlayer的前世今生》"><a href="#《IJKPlayer的前世今生》" class="headerlink" title="《IJKPlayer的前世今生》"></a>《IJKPlayer的前世今生》</h5><p> 郑翰超 / bilibili 资深开发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>郑翰超，现就职于B站移动技术部，负责移动端IJKPlayer播放相关工作，专注于跨平台的多媒体播放体验改善，主导了IJKPlayer 重要功能的开发、性能优化、以及DASH在移动端的落地。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着移动互联网的高速发展，用户对于视频播放的要求也越来越高，移动播放器作为传播视频内容的最终媒介，对用户体验起到了至关重要的作用。B站是国内较早自研播放器并开源的公司，IJKPlayer自开源以来，一直受到大家的关注，我们也一直围绕播放体验在做播放器的相关优化和升级改造，这次主要和大家分享的是IJKPlayer播放器的演进、MPEG-DASH协议的移动端落地以及多维度的播放监控的建立。</p><p>演讲提纲：</p><ol><li>IJKPlayer 播放器的演进<br /></li><li>MPEG-DASH 协议的移动端落地<br /></li><li>多维度的播放质量监控</li></ol><p>听众收益：</p><ol><li>全面认识B站的开源项目IJKPlayer<br /></li><li>播放性能相关优化<br /></li><li>DASH 在移动端如何落地 <br /></li><li>学习如何全面监控播放性能</li></ol><p>知识储备：</p><ol><li>对基本的音视频知识有所了解<br /></li><li>对基本的播放原理有所了解</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2787">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《WebRTC-实时视频处理——基础美颜与视频超分实践》"><a href="#《WebRTC-实时视频处理——基础美颜与视频超分实践》" class="headerlink" title="《WebRTC 实时视频处理——基础美颜与视频超分实践》"></a>《WebRTC 实时视频处理——基础美颜与视频超分实践》</h5><p> 高纯 / 声网Agora 高级架构师</p><ul><li><p>讲师简介：</p><blockquote><p>高纯，声网 Agora 高级架构师。2010年至2018年任职于英特尔亚太研发中心开源技术中心，曾参与 MeeGo Browser、Chromium/Blink 内核、Crosswalk Web Runtime、Chrome OS、Android N 等多个开源 Web Engine 以及 OS 项目的研发。2019年加入声网，从事 Web Runtime 及 Web 平台音视频处理技术的研究工作。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着 HTML5 标准在主流浏览器内核的实现，Web 平台拥有了空前强大的多媒体处理能力。以 WebRTC 为代表的音视频实时通讯技术获得广泛应用，随着各种新的应用场景的出现，Web 平台实时视频处理的需求也越来越迫切。</p><p>本次分享将基于 W3C 和 Khronos 的现有 Web 标准，介绍 Web 平台实时视频美颜的实现方法，以及基于深度学习的视频超分实现方法。介绍通过对 Tensorflow.js 输入输出接口的定制实现超分处理流程的 GPU 加速，将基于 Tensorflow.js 的视频超分性能提升3倍左右。最后对 Web 平台深度学习的发展进行探索和展望。<br /></p><br />演讲提纲：<ol><li><p> 应用背景与 HTML5 简介</p></li><li><p> Web 平台并行计算标准</p></li></ol><p>   (1) WebGL/WebGL Compute<br /><br>   (2) WebGPU<br /><br>   (3) WebCL</p><ol start="3"><li><p>基于 WebGL 的基础美颜实现<br /><br>(1) 美颜实现涉及的相关 Web 模块<br /><br>(2) 主要步骤<br /><br>(3) 处理性能</p></li><li><p> Web 视频超分探索</p></li></ol><p>   (1) Web 平台主要深度学习工具箱<br /><br>   (2) 基于 Tensorflow.js 的超分实现<br /><br>   (3) Tensorflow.js 接口定制<br /><br>   (4) 基于改进的 Tensorflow.js 的超分实现<br /><br>   (5) 性能分析</p><ol start="5"><li> Web 平台深度学习展望</li></ol><p>   (1) 深度学习 W3C 标准展望<br /><br>   (2) 基于 NPU 和定制 WebRuntime 的深度学习实践</p><p>听众收益：</p><ol><li> 了解如何基于 HTML5 现有标准实现高效实时视频处理<br /></li><li> 了解 Web 平台深度神经网络的应用及优化<br /></li><li> 了解浏览器内核原理</li></ol><p>前沿亮点：</p><ol><li> Web 实时视频处理细节<br /></li><li> Web Engine 性能优化</li></ol><p>知识储备：</p><p>Web 开发技术基础或视频技术基础</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2771">下载</a></p></li></ul><h4 id="优化与全链路监控"><a href="#优化与全链路监控" class="headerlink" title="优化与全链路监控"></a>优化与全链路监控</h4><blockquote><p>在企业追求更高效率和大前端技术快速发展的背景下，对技术性能的要求也越来越高，具体体现在离线化技术、密集型CPU处理能力等各个方面。而与性能优化相辅相成的便是监控，特别是时下不断被企业提及的全链路监控。通过全链路监控能够监测到从前端到中台、后台再返回到前端的整个链路过程的全部日志，以此辅助企业发现、分析并解决问题，提高企业研发效率。企业研发过程中对以上优化与监控的过程进行了非常多的探索，也取得了一些阶段性成果，此专题将邀请行业内的优秀实践者前来分享，希望能给大家未来的工作提供更多借鉴。</p></blockquote><h5 id="《岳鹰-Web-全景监控平台的建设之路》"><a href="#《岳鹰-Web-全景监控平台的建设之路》" class="headerlink" title="《岳鹰 Web 全景监控平台的建设之路》"></a>《岳鹰 Web 全景监控平台的建设之路》</h5><p> 陈周勉 / 阿里巴巴 前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>陈周勉，目前就职于阿里 UC 事业部，担任研发效能组的前端负责人。近年来主要专注于云真机以及前端监控领域，已对外推出两款产品&mdash;&mdash;岩鼠云设备平台和岳鹰全景监控平台。曾主导部门的前端体系建设，精通 Vue 和 React，在前端架构、工程化、性能等方面有较丰富的经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>线上监控作为产品质量的最后一道屏障，其意义和影响都十分重大。阿里岳鹰团队从内部业务痛点出发，沉淀了一套 Web 前端全景监控方案。在监控方面，我们实现了常规的 JS 异常、资源加载异常、页面性能以及接口请求监控，并且支持自定义上报，以满足全链路中更多的场景。同时，我们还通过联合 UC 浏览器内核团队，独创了基于 V8 的&ldquo;页面白屏&rdquo;监控，功能十分强大。在问题分析和解决方面，我们打造了一套高效的问题分析和智能预警体系。本次演讲将结合大量的实践案例，分享平台一路走来的历程，希望能对大家有所启发。<br /></p><br />演讲提纲：<ol><li><p>岳鹰平台的诞生背景<br /><br>岳鹰平台如何从竞争激烈的阿里内部脱颖而出</p></li><li><p>岳鹰平台的探索之路<br /><br>结合阿里内部的使用案例和数据，阐述极致监控的打造（问题的高效分析和智能预警等）和岳鹰实践（H5 、小程序、Weex 等）</p></li><li><p>岳鹰平台的未来展望<br /><br>岳鹰平台面对百花齐放的大前端时代的思考和规划</p></li></ol><p>听众收益：</p><ol><li> 了解前端监控的原理及岳鹰实践<br /></li><li> 了解如何构建 Web 前端全景监控体系</li></ol><p>知识储备：</p><p>Web 领域相关知识</p></blockquote></li><li><p>PPT链接：无</p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《NOW-直播在大前端时代下的监控体系建设》"><a href="#《NOW-直播在大前端时代下的监控体系建设》" class="headerlink" title="《NOW 直播在大前端时代下的监控体系建设》"></a>《NOW 直播在大前端时代下的监控体系建设》</h5><p> 何方舟 / 腾讯 高级 Web 前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>何方舟，腾讯高级前端工程师。曾任职京东，2016年加入腾讯，先后负责NOW直播SDK，手Q附近，腾讯直播基础功能研发。前端监控开源项目 Aegis 作者，对前端性能优化、前端工程化、Node.js同构有丰富经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>NOW 直播在成立三年来，前端团队涵盖的业务范围越来越广阔。从最初的 Hybird App，到 RN 再到如今的小程序，单纬度的监控手段已经不足以帮助开发人员及时发现与定位问题。此外，在对业务进行优化的同时，需要辅以同样便捷的工具去量化优化效果，然后进行分析对比。IVWEB 团队在不断的业务实践中，沉淀出了一套比较完善监控方案。本次分享会从产品遇到的实际问题挑战为背景，详细讲解我们是如何实现大前端监控的一些解决方案的，希望能给大家带来一些参考。</p><p>演讲提纲：</p><ol><li> 大前端时代下监控面临的挑战<br /></li><li> 如何降低开发人员对监控上报的抵触<br /></li><li> 一次问题定位的反馈<br /></li><li> Aegis 监控方案介绍</li></ol><p>听众收益：</p><ol><li> 了解大前端监控体系的内容与作用<br /></li><li> 对于预防与排查常见问题，提供一些思路<br /></li><li> 对全链路监控方案有一定的参考价值</li></ol><p>前沿亮点：</p><p>在大前端场景下提升业务问题的解决效率</p><p>知识储备：</p><p>Web 相关知识</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2799">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《广发证券全球多资产项目全链路监控体系建设》"><a href="#《广发证券全球多资产项目全链路监控体系建设》" class="headerlink" title="《广发证券全球多资产项目全链路监控体系建设》"></a>《广发证券全球多资产项目全链路监控体系建设》</h5><p> 贺雨阳 / 广发证券 资深研发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>贺雨阳，就职于广发证券信息技术部。曾就职于腾讯，参与过微云 Web、微云 Android、手机 QQ 等项目的应用研发。2017年加入广发证券，负责广发证券全球多资产交易项目的移动客户端研发与全球交易中台的建设。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>广发证券全球多资产理财项目上线两年来一直着力于服务公司的高净值全球理财客户，随着业务不断扩展，港美股、基金、债券、票据、保险、开户、增开户、期权等各类日常反馈也增多，在实际问题处理中大客户的问题无论是系统问题，还是业务流程问题，甚至是个人手机网络设置问题等都有很大概率会被客户经理实时反馈到项目组并要求现场解决。因此我们自研了一套包含移动客户端的全链路监控系统，以此帮助项目团队快速处理日常反馈。 本次分享会以项目以及公司 IT 基础设施等方面为背景，详细描述我们的全链路监控体系的建设思路，希望能给大家带来一些帮助。<br /></p><br />演讲提纲：<ol><li> 背景</li></ol><p>   (1) 全球多资产大额理财平台面临的业务监控挑战<br /><br>   (2) 常见的 VIP 用户问题反馈的定位过程</p><ol start="2"><li> 全链路业务监控体系建设</li></ol><p>   (1) 移动客户端埋点与上报<br /><br>   (2) 服务端数据采集 &amp; 存储<br /><br>   (3) 日志与调用链查询<br /><br>   (4) 监控质量保障</p><ol start="3"><li> 跨境 IDC 监控与日志数据同步</li></ol><p>听众收益：</p><ol><li> 了解全链路监控的内容与作用<br /></li><li> 一种低带宽解决跨境 IDC 的监控数据同步解决方案<br /></li><li> 一种低成本快速搭建包含前端的全链路监控建设方式</li></ol><p>前沿亮点：</p><p>了解一种以移动客户端为起点到中台再到后台的跨境 IDC 全链路监控实现方式</p><p>知识储备：</p><p>对链路监控有一定概念</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2758">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《全链路跟踪系统设计与实现》"><a href="#《全链路跟踪系统设计与实现》" class="headerlink" title="《全链路跟踪系统设计与实现》"></a>《全链路跟踪系统设计与实现》</h5><p> 曾刘彬 / 腾讯 高级前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>曾刘彬，前端高级工程师，企鹅电竞中台技术研发团队 Leader，热衷新技术探索与实践，具有丰富的服务架构设计经验。曾主导 QQ 抢车位、QQ 提醒、QQ 加速器多个业务的架构设计，目前负责&ldquo;企鹅电竞&rdquo;以及&ldquo;天机阁&rdquo;项目的研发工作。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>为了支撑日益增长的庞大业务量，业界大量使用微服务架构。服务按照不同的维度进行拆分，互联网应用构建在不同的软件模块集上，这些软件模块可能是由不同的团队开发、可能使用不同的编程语言来实现、可能分布在了几千台服务器，横跨多个不同的数据中心，分布式系统变得日趋复杂</p><p>如何快速进行故障定位？如何准确进行容量评估？如何动态展示服务的链路？如何进行系统性能优化？这是分布式系统给后台开发同学带来的四大挑战。&ldquo;天机阁&rdquo;通过采集、存储、分析分布式系统中的 trace 数据、指标数据和日志数据，完成全链路跟踪，从而解决上述问题。</p><p>演讲提纲：</p><ol><li><p> 天机阁背景</p></li><li><p> 天机阁的功能</p></li><li><p> 天机阁总体架构</p></li><li><p> 天机阁的详细设计</p></li></ol><p>   (1) 接入层：高性能、低倾入<br /><br>   (2) 数据层：低成本、高扩展<br /><br>   (3) 用用层：简单、清晰</p><ol start="5"><li> 未来规划</li></ol><p>听众收益：</p><ol><li> 了解链路跟踪原理<br /></li><li> 了解全链路监控的价值<br /></li><li> 海量数据治理</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2761">下载</a></p></li></ul><h4 id="小程序挑战与应对"><a href="#小程序挑战与应对" class="headerlink" title="小程序挑战与应对"></a>小程序挑战与应对</h4><blockquote><p>各大互联网公司都相继推出了自己的小程序平台，小程序的开发热度也不断提高，如何开发一款高性能、跨平台的小程序？本专场将为各位带来跨平台小程序框架实现原理，跨平台小程序实战中的一些挑战，以及小程序性能优化的最佳实践等等。希望给大家带来更多的思考，也期望各位在小程序相关领域能够展现更多优秀的框架和方案。</p></blockquote><h5 id="《小程序跨框架开发的探索与实践》"><a href="#《小程序跨框架开发的探索与实践》" class="headerlink" title="《小程序跨框架开发的探索与实践》"></a>《小程序跨框架开发的探索与实践》</h5><p> 程帅 / 京东 高级前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>程帅，京东高级前端工程师，京东购物小程序核心开发，多端统一开发框架 Taro 核心成员，负责小程序及 RN 端的适配开发，热爱开源和分享，在前端工程化、性能优化以及跨端解决方案等方面有丰富的研究和积累。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着小程序开发的热度上升，小程序开发框架也层出不穷。但目前每个框架都会绑定一个专属 DSL，如类 React 或者类 Vue，在一个框架内，开发者无法根据团队技术栈自由选择 DSL，同时也无法共享框架本身的生态与工具。本次分享将为大家介绍 Taro 如何将各种语法的前端框架运行在小程序上，讨论一个框架支持多 DSL 的实现探索，使得开发者可以使用任意热门框架/语法/DSL 来编写小程序应用，同时复用相关生态。</p><p>演讲提纲：</p><ol><li>小程序开发的历程</li></ol><p> (1) 原生开发<br /><br> (2) 小程序开发框架<br /><br> (3) 小程序跨端开发</p><ol start="2"><li>Taro 的起源与初心</li></ol><p> (1) 回顾过去与初心<br /><br> (2) 在新时代我们需要什么样的框架？</p><ol start="3"><li>小程序跨框架开发的探索</li></ol><p> (1) 现有架构的问题<br /><br> (2) 其它解决方案的架构<br /><br> (3) 小程序跨框架开发架构设计</p><ol start="4"><li>新架构的适配与实现</li></ol><p>(1) React / Nerv / Preact<br /><br>(2) Vue<br /><br>(3) Flutter<br /><br>(4) 性能优化</p><ol start="5"><li>总结与展望</li></ol><p>听众收益：</p><ol><li>了解小程序和多端开发框架的发展历程<br /></li><li>了解各种热门框架的基本运行原理<br /></li><li>了解 Taro 的新架构设计</li></ol><p>前沿亮点：</p><p>小程序跨端、跨框架开发的探索与实践</p><p>知识储备：</p><p>熟悉小程序开发<br /><br>对前端热门框架有一定的了解</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2786">下载</a></p></li></ul><h5 id="《360-PC-小程序底层架构的演进与探索》"><a href="#《360-PC-小程序底层架构的演进与探索》" class="headerlink" title="《360 PC 小程序底层架构的演进与探索》"></a>《360 PC 小程序底层架构的演进与探索》</h5><p> 刘博文 / 奇虎360 资深前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>刘博文，《深入浅出Vue.js》作者，W3C Web Performance WG成员，W3C MiniApps Ecosystem CG成员。2015年入职奇虎360最大前端团队&ldquo;奇舞团&rdquo;，2017年小组合并到360导航技术部，现负责360小程序底层架构设计与实现，负责360导航首页等亿级日活站点的设计与优化。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>截止2019年8月，据阿拉丁提供的数据，小程序的日活达到了2.8亿，日均使用时长12分钟，每人日均使用5次。小程序已经深度改变很多行业，国内各大厂也都在开发自己的小程序平台。360也开始拥抱小程序，实现了自己的PC端小程序。本次分享我将会介绍360 PC 小程序从 0 ～1 的技术演进过程，包括实现过程中的底层架构调整与决策都是出于哪些考虑。</p><p>演讲提纲：</p><ol><li> 小程序底层架构演进及技术决策</li></ol><p>   (1) 单线程架构下的小程序<br /><br>   (2) 双线程架构下的小程序<br /><br>   (3) 单线程 + ShadowDOM 架构下的小程序<br /><br>   (4) 双线程 + 单 WebView 架构下的小程序<br /><br>   (5) 双线程 + 多 WebView 架构下的小程序</p><ol start="2"><li> 底层技术的其他应用场景</li></ol><p>   (1) 360导航首页<br /><br>   (2) 其他应用场景</p><p>听众收益：</p><ol><li> 了解360 PC 小程序从0～1的全过程<br /></li><li> 了解底层技术的其他应用场景<br /></li><li> 了解不同架构下的性能问题</li></ol><p>知识储备：</p><p>对常用的 Web 技术有一定了解</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2746">下载</a></p></li></ul><h5 id="《百度开源小程序框架架构演进和性能优化实践》"><a href="#《百度开源小程序框架架构演进和性能优化实践》" class="headerlink" title="《百度开源小程序框架架构演进和性能优化实践》"></a>《百度开源小程序框架架构演进和性能优化实践》</h5><p> 付嘉兴 / 百度 技术经理</p><ul><li><p>讲师简介：</p><blockquote><p>付嘉兴，2010年西安交通大学计算机硕士，毕业后加入百度，先后负责百度 App、Feed、小程序方面的技术工作，现任百度智能小程序客户端技术经理，核心工作主要集中在持续优化小程序体验，无限接近 Native App 化，以及繁荣百度小程序开源联盟。我们致力于让技术支持更多宿主接入百度智能小程序开源框架。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>移动互联网中 Native App（NA） 和 H5 一直处在博弈状态，在性能体验和灵活性上艰难寻找着平衡，单从技术上来说，小程序就是 NA 和 H5 的又一次碰撞。小程序的灵活性已被证实，在性能方面，百度智能小程序从框架启动、小程序包下载、小程序包加载以及渲染4个方面进行启动速度优化。本次演讲会从百度侧和小程序开发者侧阐释通过什么手段提升自身小程序的性能，以及作为宿主如何将小程序框架与自身技术整合做介绍。<br /></p><br />演讲提纲：<ol><li> 百度智能小程序开源整体框架及演进<br /></li><li> 百度智能小程序框架性能优化实践<br /></li><li> 百度智能小程序生态赋能</li></ol><p>听众收益：</p><ol><li> 如何优化自身小程序性能<br /></li><li> 如何将百度小程序框架集成到自身宿主中</li></ol><p>知识储备：</p><p>对客户端或前端有一定背景知识</p></blockquote></li><li><p>PPT链接：无</p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《在线教育小程序云开发工程化实践》"><a href="#《在线教育小程序云开发工程化实践》" class="headerlink" title="《在线教育小程序云开发工程化实践》"></a>《在线教育小程序云开发工程化实践》</h5><p> 袁龙 / 腾讯 高级前端开发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>袁龙，腾讯 IMWeb 前端团队成员，高级前端开发工程师，负责腾讯课堂的小程序体系建设与 Serverless 实践与落地。曾就职于京东&ldquo;凹凸实验室&rdquo;团队。对 Web 前端、Node.js 开发有丰富的经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着云开发的出现，小程序开发者的可实践范围越来越广，开发者利用云开发的能力，无需搭建服务器即可实现产品业务的快速上线与迭代。</p><p>我们的 Web 业务如何复用云开发的能力？在云开发里如何与我们现有的业务进行打通？多个小程序如何复用同一套云开发业务？</p><p>演讲提纲：</p><ol><li><p> 云开发概述</p></li><li><p> 云函数</p></li></ol><p>   (1) 小程序端与 Web 端调用<br /><br>   (2) 网关接入<br /><br>   (3) 日志与监控</p><ol start="3"><li><p> 打通现有业务</p></li><li><p> 小程序工程化之 CI 与 CD</p></li></ol><p>   (1) 统一构建与上传<br /><br>   (2) 云函数测试与部署</p><ol start="5"><li><p> 云函数性能调优</p></li><li><p> 总结与展望</p></li></ol><p>听众收益：</p><ol><li> 了解在线教育的小程序云开发工程化实践之路<br /></li><li> 了解云开发如何在多个小程序与 Web 业务进行复用的实践<br /></li><li> 了解云函数性能瓶颈的解决思路</li></ol><p>前沿亮点：</p><ol><li> 在线教育的小程序云开发工程化实践经验<br /></li><li> 多端复用云开发业务与资源</li></ol><p>知识储备：</p><p>了解小程序开发</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2753">下载</a></p></li></ul><h5 id="《小程序的未来方向》"><a href="#《小程序的未来方向》" class="headerlink" title="《小程序的未来方向》"></a>《小程序的未来方向》</h5><p> 崔红保 / DCloud CTO</p><ul><li><p>讲师简介：</p><blockquote><p>崔红保，DCloud CTO，Uni-App 团队负责人，开发了2个 Github Star 上万的流行项目。有10年以上研发管理经验，在跨平台引擎、前端 UI、小程序性能优化等方面有丰富的实践经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着各大平台小程序的快速放量，开发者遇到越来越多的平台适配问题。各平台小程序的性能优化方法也各不相同。本议题将深入分析小程序技术架构，性能卡点，及各平台优化方案。了解小程序的底层逻辑和发展方向，包括云开发到底会带来怎样的变化。如果你的 App 想搭建自己的小程序平台，该怎么做。</p><p>演讲提纲：</p><ol><li> 小程序历史回顾</li></ol><p>   (1) 微信 JS SDK<br /><br>   (2) 小程序时代</p><ol start="2"><li> 小程序的架构剖析</li></ol><p>   (1) 小程序架构设计原理及各家差异<br /><br>   (2) 架构设计引发的性能坑点</p><ol start="3"><li> 性能优化方案</li></ol><p>   (1) 逻辑/视图层通讯折损<br /><br>   (2) 数据、组件的差量更新<br /><br>   (3) 混合渲染 &amp; 同层渲染</p><ol start="4"><li> 小程序的未来发展方向</li></ol><p>   (1) 引擎性能和灵活性进一步提升的空间<br /><br>   (2) 如果你的 App 也想建立小程序平台<br /><br>   (3) Serverless、云开发引发的大变化</p><p>听众收益：</p><ol><li><p> 深入了解小程序的底层和未来趋势</p></li><li><p> 深入了解各平台小程序性能优化方案</p></li><li><p> 了解云开发、Serverless 在前端界的价值</p></li><li><p> 了解如何搭建自己的小程序平台</p></li></ol><p>前沿亮点：</p><p>多端性能优化、云开发、给自己的 App 建立小程序平台</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2760">下载</a></p></li></ul><h4 id="Serverless实战"><a href="#Serverless实战" class="headerlink" title="Serverless实战"></a>Serverless实战</h4><blockquote><p>Serverless作为一种新型的互联网架构直接或间接推动了云计算的发展，随着Serverless 体系不断完善，Serverless将会给行业带来怎样的变革？我们如何基于自身的业务场景去运用，发挥Serverless的最大价值。本专题将邀请一线技术专家分享相关技术实践，给大家带来更多的思考和经验参考。</p></blockquote><h5 id="《阿里跨境供应链前端架构演进与-Serverless-实践》"><a href="#《阿里跨境供应链前端架构演进与-Serverless-实践》" class="headerlink" title="《阿里跨境供应链前端架构演进与 Serverless 实践》"></a>《阿里跨境供应链前端架构演进与 Serverless 实践》</h5><p> 缪传杰 / 阿里巴巴 高级前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>缪传杰（樵枫），阿里巴巴高级前端技术专家，ICBU 跨境供应链多元化履约团队 TL 。毕业后先后供职于华为、阿里等公司。他在阿里的4年多时间里，曾担任 Ewtp 国际化等大型项目前端负责人，推进了跨境供应链复杂中后台业务前端架构的变革；参与推进了集团 Serverless 体系从0到1的建设，并成功在多个业务落地；同时推进了基于 Node.js 运行时的可视化诊断平台&ldquo;扁鹊&rdquo;的诞生和产品化。并在中后台架构领域有丰富的经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>Serverless 是近年最火的技术热潮之一，目前在阿里已成燎原之势。本次分享，我将结合阿里跨境供应链前端的架构演进过程，给大家介绍 Serverless 在复杂中后台业务下的实践，以及相配套的工程、监控等能力，进而一起去探讨中后台业务下的前端价值。</p><p>演讲提纲：</p><ol><li> Serverless 技术浪潮<br /></li><li> 阿里跨境供应链业务背景与复杂中后台架构演进<br /></li><li> Serverless 实践与配套工程、监控能力介绍<br /></li><li> 展望</li></ol><p>听众收益：</p><ol><li> 复杂中后台业务的前端架构演进<br /></li><li> 基于 Serverless 的中后台业务下的前端角色价值探索思路</li></ol><p>前沿亮点：</p><ol><li> Serverless 从概念到研发体系再到业务落地的整体介绍<br /></li><li> Serverless 体系下的一些配套工程、监控能力</li></ol><p>知识储备：</p><ol><li> Node.js 基础<br /></li><li> Serverless 基础<br /></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2793">下载</a></p></li></ul><h5 id="《Serverless-前端工程化落地与实践》"><a href="#《Serverless-前端工程化落地与实践》" class="headerlink" title="《Serverless 前端工程化落地与实践》"></a>《Serverless 前端工程化落地与实践》</h5><p> 王俊杰 / 腾讯 Serverless 技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>王俊杰，腾讯 Serverless 技术专家。负责腾讯云函数与大前端研发结合方案设计，负责 SCF 云函数编排、 Serverless 日志、监控、排障等相关 Topic。同时担任腾讯云 Serverless 技术布道师，推动 Serverless 技术在行业大前端研发架构中的落地和实践。曾担任百度搜索 Web 前端技术经理，负责百度搜索产品前端研发技术管理工作。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>Serverless 是炙手可热的技术，被认为是云计算发展的未来方向。拥有免运维、降低开发成本、按需自动扩展等诸多优点。尤其是在前端研发领域，使用 Node开发云函数，可以让前端工程师更加专注于业务逻辑，实现全栈工程师的角色转变。</p><p>现有的开发模式、工具、脚手架已经标准化、流程化，存量业务正在线上稳定运行。如何将 Serverless 融入到现有开发模式和工具中？ 如何将Serverless 和当前的业务进行结合落地？本主题将给出答案！</p><p>演讲提纲：</p><ol><li> Serverless 和前端的不解之缘   </li></ol><p>   (1) 前端为什么要做 Serverless<br /><br>   (2) 前端做 Serverless 遇到的具体问题<br /><br>   (3) 前端和 Serverless 结合的理想模式</p><ol start="2"><li><p> Serverless 通用开发工具实现原理</p></li><li><p> Serverless 云函数的CICD实践</p></li><li><p> Serverless Framework 实现多云部署</p></li></ol><p>听众收益：</p><ol><li> Serverless 技术在现有业务、架构中落地的一般思路<br /></li><li> 现有开发框架、工具链如何与 Serverless 结合落地</li></ol><p>前沿亮点：</p><ol><li> Serverless Framework 分享<br /></li><li> 可实操可落地的Serverless 工具方案</li></ol><p>知识储备：</p><ol><li> Serverless 基础概念<br /></li><li> 云函数基本使用原理<br /></li><li> 前端工程化</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2778">下载</a></p></li></ul><h5 id="《从前端和云厂商的视角看-Serverless-与未来的开发生态》"><a href="#《从前端和云厂商的视角看-Serverless-与未来的开发生态》" class="headerlink" title="《从前端和云厂商的视角看 Serverless 与未来的开发生态》"></a>《从前端和云厂商的视角看 Serverless 与未来的开发生态》</h5><p> 杜欢（风驰） / 阿里巴巴 高级前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>杜欢（风驰），高级前端技术专家。曾就职于雅虎、思科等公司。目前在阿里云&ldquo;战略&amp;合作部&quot;负责阿里云开发者业务，阿里巴巴经济体前端技术委员会委员，阿里巴巴经济体前端 Serverless 研发升级项目负责人。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>前端的优势在于对端业务和用户交互的理解实现，这也是现代精细化工程化体系中前端岗位的价值所在。在云时代的大背景下，商业爆炸式增长，前端如何抓住云原生 Serverless 的机遇，去创造更大的业务价值以及行业价值。</p><p>演讲提纲：</p><ol><li><p> 缘起，为了心中的&ldquo;云+端&rdquo;</p></li><li><p> 云计算的社会普惠愿景</p></li><li><p> 什么是云计算的开箱即用</p></li><li><p> 在云原生的路径上探索</p></li><li><p> 云端与未来开发生态</p></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2770">下载</a></p></li></ul><h4 id="前端测试与安全"><a href="#前端测试与安全" class="headerlink" title="前端测试与安全"></a>前端测试与安全</h4><blockquote><p>随着移动设备的普及，兼容性和性能测试正在逐渐成为前端测试面临的两大挑战，我们该如何应对和解决？而前端代码主要运行在客户设备上的特性，各种安全性挑战又层出不穷，稍有不慎就可能会给用户带来巨大的损失。我们又该如何跨越这种障碍？本专场关注前端测试和安全领域，希望能够通过各位行业专家的分享，为你提供解决问题的思路。</p></blockquote><h5 id="《GraphQL-与-GraphQL-安全》"><a href="#《GraphQL-与-GraphQL-安全》" class="headerlink" title="《GraphQL 与 GraphQL 安全》"></a>《GraphQL 与 GraphQL 安全》</h5><p> 图南 / 奇安信 安全研究员</p><ul><li><p>讲师简介：</p><blockquote><p>图南，前全栈开发工程师，擅长后端语言：Node.js、Python、C#、Java、Go；前端框架：React、Angular、Vue等。曾开发过多个公司的ToC核心项目，带领团队开发过智能手环和智能血压计的微信公众号项目，并对相关硬件做质量保障工作。在未进入安全行业前就对其很感兴趣，提交漏洞报告帮助多家公司修补漏洞。在公司内做企业安全建设和安全意识培训。</p><p>进入安全行业后主要进行安全研究和漏洞分析相关工作，并开发了WebLogic环境搭建工具和奇安信CERT情报监控工具。外发研究文章有：《WebLogic安全研究报告》《CVE-2019-2725 Weblogic多个组件反序列化远程代码执行漏洞分析》《No sql No injection？NoSQL注入你知多少？》《CVE-2019-5736 runc容器逃逸漏洞分析》以及《修不好的洞，JDK的坑&mdash;&mdash;从WxJava XXE注入漏洞中发现了一个对JDK的误会》等。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>GraphQL 作为下一代 Web API 技术，被越来越多的开发者用在生产环境中，但因为 GraphQL 和 RESTful 在开发思路上的不同，很容易让开发者忽视它的安全问题。本次演讲会对 GraphQL 进行一些简介，主要从开发的角度讲解使用 GraphQL 容易出现的安全问题。</p><ol><li> GraphQL 简介</li></ol><p>   (1) 初识 GraphQL<br /><br>   (2) GraphQL 核心组成部分<br /><br>   (3)  GraphQL VS. RESTful</p><ol start="2"><li> GraphQL 安全问题</li></ol><p>   (1)  身份认证与权限控制不当<br /><br>   (2)  GraphQL 身份认证无效<br /><br>   (3)  GraphQL 身份认证无效解决方案<br /><br>   (4)  GraphQL 身份认证无效与权限控制不当的并发症<br /></p><pre><code>   并发症一：内省导致的信息泄露&lt;br /&gt;   并发症二： 非预期的字段&lt;br /&gt;   并发症三：&amp;ldquo;废弃&amp;rdquo;的字段&lt;br /&gt;</code></pre><p>   (5)  GraphQL 注入解决方案<br /></p><pre><code>    拒绝服务&lt;br /&gt;    拒绝服务解决方案</code></pre><ol start="3"><li> 结语</li></ol><p>听众收益：</p><ol><li> 了解前沿技术 GraphQL 优势和 RESTful API 的不同<br /></li><li> 对 GraphQL 易发的安全问题有所了解并在今后开发过程中避免此类问题<br /></li><li> 对漏洞产生的原理触类旁通，避免类似问题</li></ol><p>知识储备：</p><ol><li> JavaScript 基础知识<br /></li><li> HTTP 相关知识<br /></li><li> 对常见 Web 安全漏洞有一点了解</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2776">下载</a></p></li></ul><h5 id="《百度智能小程序自动化测试技术实践和应用》"><a href="#《百度智能小程序自动化测试技术实践和应用》" class="headerlink" title="《百度智能小程序自动化测试技术实践和应用》"></a>《百度智能小程序自动化测试技术实践和应用》</h5><p> 邱立楷 / 百度 资深测试开发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>邱立楷，百度资深测试开发工程师，百度智能小程序自动化测试技术负责人，负责百度智能小程序自动化测试引擎研发、云端真机控制集群建设、CTS、智能小程序生态质量管控等方向建设工作。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着小程序的兴起，如何去开展小程序的自动化测试便成为了一个值得思考的问题。</p><p>百度智能小程序期望建设一个开源开放的小程序生态，让联盟伙伴都可以在自己的 APP 上运行起智能小程序。那么，如何去发展小程序自动化测试技术，来保障整个开源开放的小程序生态的质量？通过自动化测试技术手段提高兼容性测试、功能回归等的效率，便成为了我们重点考虑的问题。</p><p>本次分享将会以百度智能小程序自动化测试引擎的介绍为起点，详细介绍它在百度小程序生态质量保障、自动化测试能力赋能等方面的实践，包括：百度小程序的一致性兼容测试、云测试以及用例真机录制回放等内容。希望给关注小程序自动化技术的与会者带来思路上的拓展和帮助。</p><p>演讲提纲：</p><ol><li> 百度智能小程序自动化测试引擎的设计实现原理和应用<br /></li><li> 百度智能小程序基于真机的用例录制回放工具在兼容性测试上的应用实践<br /></li><li> 基于真机云测试的百度智能小程序生态质量管控实践</li></ol><p>听众收益：</p><ol><li> 了解百度小程序自动化测试技术的全貌和设计实现原理<br /></li><li> 迅速地入手开展百度小程序的自动化测试<br /></li><li> 有效降低小程序、前端、端兼容性能测试成本的测试工具的设计思路及应用进展</li></ol><p>前沿亮点：</p><p>百度小程序自动化测试引擎的设计思路</p><p>知识储备：</p><p>对客户端或前端有一定知识背景</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2780">下载</a></p></li></ul><h5 id="《基于-Proxy-的代码执行监听与上报》"><a href="#《基于-Proxy-的代码执行监听与上报》" class="headerlink" title="《基于 Proxy 的代码执行监听与上报》"></a>《基于 Proxy 的代码执行监听与上报》</h5><p> 樊东东 / 腾讯 高级 Web 前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>樊东东，腾讯高级 Web 前端工程师，2014年进入腾讯，先后经历过移动办公、泛娱乐产品、QQ 小程序的 Web 开发工作，有大量运营平台、H5、Node 等相关的开发经验；现负责 QQ 小程序开发者工具、小程序相关工具链、QQ 相关基础运营平台等开发工作。他善于在平凡的代码中找到不一样的玩法。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>后端有全链路监控，能分析出模块之间的调用情况，前端一般日志打点、收集、上报，都是面条式的日志。在前端 SDK 的执行过程中能否收集更多更全面的信息，如 API 及回调函数的附属关系，API 和 API 间的上下文关系。</p><p>利用 Proxy 代理 SDK 暴露出去的对象，递归 Hook API 及 API 的结果，收集属性 get、set、API 调用、回调函数执行情况等。直观看到 API 在业务代码中的执行情况，收集调用信息方便编写测试案例等。</p><p>演讲提纲：</p><ol><li> 背景介绍</li></ol><p>   SDK调用日志零散</p><ol start="2"><li> 方案选型</li></ol><p>   (1) 传统打日志方式<br /><br>   (2) Proxy 对比 defineProperty</p><ol start="3"><li> Proxy 介绍</li></ol><p>   (1) 能否替代原对象<br /><br>   (2) 能收集哪些信息<br /><br>   (3) 性能对比</p><ol start="4"><li><p>链路信息<br /><br>(1) API 结果<br /><br>(2) 参数处理<br /><br>(3) 回调函数<br /><br>(4) 上下文</p></li><li><p> 可视化</p></li></ol><p>听众收益：</p><ol><li> 加深对 Proxy 的理解<br /></li><li> 前端 SDK 基于 ES6 Proxy 的深度日志收集<br /></li><li> 方便编写测试用例<br /></li><li> 腾讯小程序前端测试案例</li></ol><p>前言亮点：</p><p>前端 SDK 的日志全链路</p><p>知识储备：</p><ol><li> ES6 基础知识<br /></li><li> Proxy<br /></li><li> 日志上报</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2782">下载</a></p></li></ul><h5 id="《大前端测试的思考和在语雀的实践分享》"><a href="#《大前端测试的思考和在语雀的实践分享》" class="headerlink" title="《大前端测试的思考和在语雀的实践分享》"></a>《大前端测试的思考和在语雀的实践分享》</h5><p> 徐达峰 / 蚂蚁金服 前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>徐达峰，蚂蚁金服前端技术专家，目前在语雀（大众喜爱的笔记与文档知识库）做研发。曾在2015年孵化并推出了阿里巴巴多端自动化方案-Macaca，并在2016年开源。是测试领域实践者，也是大前端的持续学习者。Github: <a href="https://github.com/xudafeng">https://github.com/xudafeng</a></p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着互联网技术的演进发展，自动化、效率、性能等逐渐成为大前端面临的挑战，面对测试中的种种问题，我将以语雀技术栈为主，结合工作中的经验来详细介绍，比如 Web 编辑器、移动端 Web 应用、全栈应用、测试工具等几个技术方向，也包括不同选型的差异和实践中遇到的问题、踩过的坑，以及解决方案。</p><p>演讲提纲：</p><ol><li><p>语雀技术栈的测试方案</p><p> (1) Web 编辑器如何做质量覆盖<br /><br> (2) Web 全栈应用的测试的痛点和演进</p></li><li><p>社区之路</p><p>(1) 2019版 UIRecorder 的新特性<br /><br>(2) 去中心化的场景编排 mock 方案</p></li><li><p> 前沿探索</p></li></ol><p>   (1) 自动化推导生成<br /><br>   (2) 计算机视觉方案在端测试的实践<br /><br>   (3) 基于语言分析的自动化探索</p><p>听众收益：</p><ol><li><p> 大前端不同技术栈选型的测试方案如何抉择</p></li><li><p> 对下一代端自动化测试的思考</p></li></ol><p>前沿亮点：</p><ol><li><p> 语雀实战经验分享</p></li><li><p> 新思路分享</p></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2783">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h4 id="新兴编程语言"><a href="#新兴编程语言" class="headerlink" title="新兴编程语言"></a>新兴编程语言</h4><blockquote><p>在移动和前端领域，Swift、Kotlin、TypeScript和Dart等编程语言不断演进，本专题结合目前这些语言的应用情况，结合各自特性，分享典型实践。</p></blockquote><h5 id="《未来可期的-TypeScript》"><a href="#《未来可期的-TypeScript》" class="headerlink" title="《未来可期的 TypeScript》"></a>《未来可期的 TypeScript》</h5><p> 郭翔 / 腾讯 高级前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>郭翔，腾讯高级前端工程师，IMWEB 团队成员。2013年从澳大利亚 Monash University 取得硕士学位后加入 AWD 公司，从事 Web 前端领域的技术研究工作。2016年加入腾讯，先后负责手机 QQ 浏览器话题圈、信息流，企鹅辅导的前端架构与研发工作。工作之余，积极参与公司内外的开源协同工作。现阶段主要致力于通用可视化页面编辑系统的架构设计与研发工作。对跨端、可视化运营、前端工程化、设计师与前端协同系统等领域有着深入的研究和丰富的实践。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>2019年，越来越多的知名前端开源项目选择使用 TypeScript 做为其新版本的开发语言，TypeScript 的社区支持也日趋完善，VS Code + TypeScript 的组合拳让不少原本持怀疑，甚至抵制态度的前端开发者们不禁喊出&ldquo;真香！&rdquo;。本次，分享者将讲述自己从一名 TypeScript 抵制者转变为支持者的心路历程，以及 TypeScript 在腾讯在线教育团队中的实践经验，并对团队新项目是否该引入 TypeScript、如何快速搭建、以及现有项目如何向 TypeScript 迁移提供策略性建议与方案。</p><p>演讲提纲：</p><ol><li> TypeScript 简介，TypeScript 为前端编程带来了什么？<br /></li><li> 从语言层面探讨 TypeScript 从诞生之初不被看好，到近期逐渐成为行业主流的背景与原因。<br /></li><li> 以实际案例，讲解腾讯教育 IMWEB 团队在选择 TypeScript 做为主要编程语言过程中的思考，以及这次改变给团队带来的提升与挑战。<br /></li><li> 从新项目 TypeScript 的引入标准、步骤，到现有项目向 TypeScript 迁移的策略等方面讲解如何更平滑地在团队中引入 TypeScript。</li></ol><p>听众收益：</p><ol><li> 了解 TypeScript 的诞生，主要是为了解决哪些实际问题。<br /></li><li> 了解 TypeScript 在当下可以大行其道的背后原因。<br /></li><li> 通过实际案例，了解 TypeScript 在前端团队中有哪些收益、新项目 TypeScript 的引入标准，如何快速搭建一个 TypeScript 项目，以及现有项目的迁移方案。</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2763">下载</a></p></li></ul><h5 id="《Swift-on-Raspberry-Pi》"><a href="#《Swift-on-Raspberry-Pi》" class="headerlink" title="《Swift on Raspberry Pi》"></a>《Swift on Raspberry Pi》</h5><p> 宋旭陶（靛青K） /  SwiftGG Swift 爱好者</p><ul><li><p>讲师简介：</p><blockquote><p>宋旭陶（靛青K），热衷于 Swift 语言及各场景下的应用。参与 Swift 文档翻译、SwiftGG 文章翻译，开源 TransitionTreasury、Flix Swift 框架。对 Swift 生成代码应用上也有些许的实践，比如 RouterBuilder、Sketch2Code。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>在 Swift 发布之初，我们基本拿来开发 iOS/macOS 应用。如今 Swift 在服务端、机器学习领域有了不错的发展，现在我们可以在 ARM 架构下的 Linux 运行 Swift。Swift 拥有 C 级别的性能，又有作为高级语言的优势，那么，在 ARM 设备下又能有怎样的发挥？本次分享者将展示 Swift 在&ldquo;树莓派&rdquo;上的应用，分享一些实践经验，以及对 Swift 在 IoT 上发展的思考。</p><p>演讲提纲：</p><ol><li> Swift 在 Linux 发展得怎么样了<br /></li><li> 树莓派和 Swift<br /></li><li>为什么在树莓派上尝试 Swift<br /></li><li> 以实际案例分享 SwiftGPIO 和 SwiftNIO 在树莓派上的应用</li></ol><p>听众收益：</p><ol><li> 了解树莓派相关基本内容<br /></li><li> 了解如何在树莓派上进行 Swift 相关应用开发<br /></li><li> 了解 Swift 在嵌入式设备上优势</li></ol><p>知识储备：</p><ol><li> Swift 基础内容<br /></li><li> Swift Package Manager 使用</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2766">下载</a></p></li></ul><h5 id="《Dart-is-All-The-Things》"><a href="#《Dart-is-All-The-Things》" class="headerlink" title="《Dart is All The Things》"></a>《Dart is All The Things》</h5><p> 任晓帅 / DJI 高级工程师</p><ul><li><p>讲师简介：</p><blockquote><p>任晓帅（小德），DJI 高级工程师，《Flutter 完全手册》电子书作者，曾任职于阿里、腾讯。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>Dart 诞生于 2011 年，刚开始的定位是取代 JavaScript，但却以 Flutter 的编程语言出道而被人熟知，它是强类型语言却又同时支持类型推导，它支持 AOT 也支持 JIT，由于是第一个使用声明式 UI 的编程语言，也引发过很过争议。除了用于 Flutter，很少有人知道，Dart 也可以用于后台开发，Dart 甚至也可以和 C 直接交互，作为一门新语言，Dart 还有很多有待探索的部分在吸引着我们，本次分享者将为你带来 Dart 不止于 Flutter 的一面。</p><p>演讲提纲：</p><ol><li><p> Dart 语言的发展历史</p></li><li><p> 为什么称 Dart 为 UI 友好型语言</p></li><li><p> Dart 真的是单线程语言吗？它是如何实现异步的以及我们在使用过程中应该注意什么</p></li><li><p> Dart 助你提升编程效率</p></li><li><p> 全平台语言 Dart 以及充满想象的 dart:ffi</p></li></ol><p>听众收益：</p><ol><li><p> 了解 Dart 在关于 UI 上的发展</p></li><li><p> 了解 Dart 的异步机制</p></li><li><p> 了解 Dart 的全平台特性</p></li><li><p> 了解 dart:ffi 的发展潜力</p></li></ol><p>前沿亮点：</p><p>Dart  语言的新特性</p><p>知识储备：</p><ol><li><p> 有至少一门编程语言的使用经验</p></li><li><p> 知道或使用过 Flutter</p></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2767">下载</a></p></li></ul><h4 id="大前端工程化"><a href="#大前端工程化" class="headerlink" title="大前端工程化"></a>大前端工程化</h4><blockquote><p>大前端工程化是大前端业务以及技术架构复杂度提升导致的必行之路，然而工程化并不是普适的技术或者理论，业务类型、场景、技术架构甚至团队组织架构均是决定工程化具体形态的必要因素。换句话讲，工程化是与实践密不可分的。本专场我们通过分享业内一些经过实践检验的工程化方案，希望能够为大家在大前端工程化的探索道路上提供借鉴和帮助。</p></blockquote><h5 id="《通过前端工程化将-Apollo-引入现有-React-技术栈》"><a href="#《通过前端工程化将-Apollo-引入现有-React-技术栈》" class="headerlink" title="《通过前端工程化将 Apollo 引入现有 React 技术栈》"></a>《通过前端工程化将 Apollo 引入现有 React 技术栈》</h5><p> 朱林 / 腾讯 高级前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>朱林，腾讯高级前端工程师，腾讯 IVWEB 团队负责人之一。先后负责过 QQ 群活动、花样直播、NOW 直播、QQ 群视频等业务的前端开发和架构。在前端性能优化和 Node.js 方面有较深入的研究，对音视频相关的前端开发、服务端渲染、GraphQL 等技术栈有丰富的实践经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>GraphQL 作为一种新的通信协议自2015年 Facebook 开源之初，就逐渐开始受到技术社区的关注。 Apollo 作为目前较为成熟的 GraphQL Client 解决方案，成为了 NOW 直播 Web 业务的 GraphQL Client 选型方案。本次分享将会给听众阐述： GraphQL Client 解决的问题是什么？Apollo 的优势是什么 ？如何通过前端工程化将 Apoll 低成本地引入团队存量业务？</p><p>演讲提纲：</p><ol><li>什么是 GraphQL <br /></li><li>Apollo VS Relay<br /></li><li>通过构建改造现有项目<br /></li><li>通过脚手架在新项目中快速推广</li></ol><p>听众收益：</p><ol><li>了解 GraphQL 在实际项目中为业务带来的收益<br /></li><li>如何快速将团队现有技术栈适配 GraphQL 架构</li></ol><p>知识储备：</p><p>了解 GraphQL</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2791">下载</a></p></li></ul><h5 id="《可视化辅助编程在蚂蚁的探索之路》"><a href="#《可视化辅助编程在蚂蚁的探索之路》" class="headerlink" title="《可视化辅助编程在蚂蚁的探索之路》"></a>《可视化辅助编程在蚂蚁的探索之路》</h5><p> 陈成 / 蚂蚁金服 高级技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>陈成，花名云谦，蚂蚁金服高级技术专家，入职阿里已有10 年。之前在淘宝，负责过淘宝首页、宝贝详情、购物车、下单等很多重要业务的前端部分，然后转岗到支付宝，负责spm、支付宝开发者工具的开发，以及创建了 dva，roadhog，babel-plugin-import，umi 等。擅长的领域有工具、前端框架以及前端性能等，热衷于开源，大家可以在 <a href="https://github.com/sorrycc">https://github.com/sorrycc</a> 找到我。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>提效是企业级前端框架非常重要的目标之一，我们希望借助框架和工具能让一个人可以做十个人的事情，而要做10倍的提效，则要做一些能破局的事情。所以，我们尝试在 Pro Code 的基础上做可视化辅助编程（ Visual Assist Programming ），借助和框架、平台、组件和物料市场的互补，以及类微前端的架构方案来提供插件机制，以此来提升开发者的研发效率以及降低上手门槛。</p><p>演讲提纲：</p><ol><li> 为什么需要可视化辅助编程？ </li></ol><p>   (1) 现有开发方式的痛点<br /><br>   (2) 研发提效可能的破局点<br /><br>   (3) 本地工作台，唯一入口<br /><br>   (4) 和搭建方案的区别</p><ol start="2"><li> 可视化辅助编程在蚂蚁的实践：Umi UI</li></ol><p>   (1) 竞品分析<br /><br>   (2) Umi UI 的优势和挑战<br /><br>   (3) 部分功能演示</p><ol start="3"><li> 原理解析</li></ol><p>   (1) 类微前端的架构方案<br /><br>   (2) 插件体系<br /><br>   (3) AST 的重度使用<br /><br>   (4) 运行态交互能力<br /><br>   (5) 国际化、主题、通讯机制等</p><ol start="4"><li> 未来</li></ol><p>   (1) 规划<br /><br>   (2) 如何参与开发</p><p>听众收益：</p><ol><li> 了解我们在这条路上的实践，以及背后的深入思考；<br /></li><li> 了解可视化辅助编程的实现以及类微前端的架构方案；<br /></li><li> 了解可视化辅助编程如何结合数据流、路由、物料和组件市场、配置化表单、AI 表单、数据管理等来做研发提效。</li></ol><p>知识储备：</p><p>了解Vue UI 或 Umi UI 可以更好地理解这个主题</p><p><a href="https://github.com/sorrycc/blog/issues/86">https://github.com/sorrycc/blog/issues/86</a></p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2755">下载</a></p></li></ul><h5 id="《微保大型小程序的工程化实践》"><a href="#《微保大型小程序的工程化实践》" class="headerlink" title="《微保大型小程序的工程化实践》"></a>《微保大型小程序的工程化实践》</h5><p> 李锂 / 微保 高级架构师</p><ul><li><p>讲师简介：</p><blockquote><p>李锂，高级架构师。曾在腾讯搜搜、微信搜索团队等，主要做后台索引相关工作，以及参与微信搜索从无到有的搭建。后来经过两年的创业历练，成长为一名全栈工程师。现就职于微保，负责微保保险产品平台的前后端设计。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>&ldquo;微保&rdquo;小程序是微信钱包九宫格入口中的小程序，承载着大量不同形态的保险产品业务。面对日益多元化的业务内容，日益巨大的小程序体积，在如何分治解耦管理各项业务，如何进行小程序的持续集成开发，如何快速迭代等方面产生了很大挑战。通过采用小程序子包方案，代码分库管理，推动小程序 H5 化、产品模板化，自动化发布工具开发等手段，达成单周迭代，40+ 子仓库管理，定时自动化发布的目的。</p><p>演讲提纲：</p><ol><li> 微保小程序面对的挑战<br /></li><li> 微保小程序的架构设计<br /></li><li> 微保小程序的工程化方法</li></ol><p>听众收益：</p><ol><li> 如何优雅的管理较大型的小程序项目<br /></li><li> 庞大的小程序如何做到按特性发布</li></ol><p>知识储备：</p><ol><li> 小程序相关知识<br /></li><li> Node 相关知识</li></ol></blockquote></li><li><p>PPT链接：无</p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《百度-App-Tekes-研发一体化平台》"><a href="#《百度-App-Tekes-研发一体化平台》" class="headerlink" title="《百度 App Tekes 研发一体化平台》"></a>《百度 App Tekes 研发一体化平台》</h5><p> 郭金 / 百度 资深研发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>郭金，百度App资深研发工程师，2014年入职百度，先后负责社交化、基础性能等技术方向，目前负责百度App客户端工程与架构方向。在App复杂的背景和多样化的技术目标要求下，设计并完成百度App架构与工程能力升级，并着力于打造研发流程一体化平台，实现并行开发、快速迭代、高效复用。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>本议题主要介绍大型 App 通过工程拆解，组件二进制化、构建系统源码/二进制混合开发模式，并基于此建设的 Tekes 研发平台，实现二进制自动发布准入、依赖管理与多产品线支持，性能与组件化劣化管控等研发流程一体化，使用多种工程技术保障并行开发和研发效率，同时管控高速迭代过程的劣化。<br /></p><br />演讲提纲：<ol start="0"><li><p>背景：<br /><br>(1)   大型 App 工程拆分<br /><br>(2)  EasyBox 工具链(多仓库管理+二进制管理+构建系统)</p></li><li><p> 组件全量二进制的实施步骤及研发模式升级<br /></p></li><li><p> 编译成功率保障：中央仓库快照及源码二进制映射<br /></p></li><li><p> 组件二进制版本自动发布、准入机制<br /></p></li><li><p> 组件版本号规范的约束<br /></p></li><li><p> 依赖管理及多产品线支撑<br /></p></li><li><p> 性能准入流水线联结<br /></p></li><li><p> 依赖、接口劣化监控<br /></p></li><li><p> Tekes 研发一体化平台整体架构</p></li></ol><p>听众收益：</p><ol><li> 大型 App 架构设计与拆分方法<br /></li><li> 超级 App 高效工程能力保障方法<br /></li><li> 组件全量二进制实现路径<br /></li><li> 组件二进制自动发布的流程<br /></li><li> 矩阵产品工程孵化模式</li></ol><p>前沿亮点：</p><ol><li> 源码/二进制切换开发模式<br /></li><li> 研发流程一体化</li></ol><p>知识储备：</p><p>组件化、移动端端架构、移动端构建系统相关知识</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2757">下载</a></p></li></ul><h4 id="团队建设与管理"><a href="#团队建设与管理" class="headerlink" title="团队建设与管理"></a>团队建设与管理</h4><blockquote><p>大前端团队越来越倾向于年轻化，相关研发技术也日新月异。如何打造年轻化的技术团队，并应对各种技术选型，团队领导者应该怎么做？</p></blockquote><h5 id="《考拉前端团队演进之路》"><a href="#《考拉前端团队演进之路》" class="headerlink" title="《考拉前端团队演进之路》"></a>《考拉前端团队演进之路》</h5><p> 俞棋军 / 考拉海购 前端负责人</p><ul><li><p>讲师简介：</p><blockquote><p>俞棋军，考拉海购前端负责人，2005年毕业于浙江大学软件学院。2009年入职到网易杭研院，从事前端开发工作，参与的项目有网易博客、秀品、网易机票、易信 Web 版等。2013年梳理前端技术体系的相关内容，给公司的前端团队做技术培训，参与制作早期的网易教育前端课程。2015年参与到考拉的前端建设中，从考拉最初的6人团队，一路建设到100人左右的前端团队。现在他在考拉的业务建设主要分为两部分，一是从 0<del>1 的建设过程，二是从 1</del>全家桶的过程，包括离线方案、bff 建设、跨端建设以及页面性能监控等落地。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>前端团队在互联网行业里占据着很重要的职能地位，如何使这一职能发挥最大的岗位价值，是团队管理者需要深入思考的。TL（Team Leader） 需要按照产品的业务性质为不同的团队分工，建设合理的团队梯度；同时，也要在前端团队整体的发展过程中去思考标准化开发、一体化输出以及工程化建设。</p><p>本次分享会以考拉海购前端团队的建设过程为样本，以什么样的方式来建设前端团队，出于什么样的目的来建设前端团队方向，其中包括前端团队在的效能环节、体验环节及跨端建设上所做的工作。希望能为前端团队 TL 带来一些思路上的拓展和帮助。 </p><p>演讲提纲：</p><ol><li> 初创的前端团队所面临的问题</li></ol><p>   (1) 团队运作效率问题<br /><br>   (2) 团队成长瓶颈问题<br /><br>   (3) 成员招聘问题</p><ol start="2"><li> 前端团队问题升级为体验问题</li></ol><p>   (1)交互体验问题<br /><br>   (2) 性能体验问题<br /><br>   (3)站点统一风格问题（组件库）</p><ol start="3"><li> 团队参与产品 0~1 的职责问题</li></ol><p>   (1) 团队的职能问题<br /><br>   (2) 团队的管理模式<br /></p><pre><code>    业务的自然分工&lt;br /&gt;    事业部形式&lt;br /&gt;    矩阵式管理&lt;br /&gt;</code></pre><p>   (3) 团队的分工<br /></p><pre><code>    中后台开发&lt;br /&gt;    前台开发&lt;br /&gt;    运营工具开发&lt;br /&gt;</code></pre><p>   (4) 共公技术的综合开发</p><ol start="4"><li> 前端团队的进阶演化</li></ol><p>   (1) 公共技术的输出<br /><br>   (2) 标准化输出<br /></p><pre><code>    工程化&lt;br /&gt;    组件库&lt;br /&gt;    技术栈&lt;br /&gt;</code></pre><p>   (3) 线上性能监控的落地</p><ol start="5"><li> 前端团队的目标</li></ol><p>   (1) 以结果为导向的团队工作横量，从下游倒逼上游方案的高质量<br /><br>   (2) 减少不必要的流程提升能效<br /></p><pre><code>    数据环节&lt;br /&gt;    上线灵活性&lt;br /&gt;    分工明确&lt;br /&gt;</code></pre><p>   (3) 团队中的技术如何推进落地<br /></p><pre><code>    技术专项组&lt;br /&gt;    定期的专项组分享&lt;br /&gt;    客户端和前端配合提升体验提升</code></pre><ol start="6"><li> 前端团队的展望</li></ol><p>   (1) 以结果为导向<br /><br>   (2) 标准化的开发模式<br /><br>   (3) Cloud IDE 的开发体验<br /><br>   (4) 前端介入 Serverless 的接口编排</p><p>听众收益：</p><ol><li> 前端团队的建设途径，0<del>1及1</del>现在的工作内容<br /></li><li> 前端团队的在两阶段里的工作要点<br /></li><li> 前端团队如何进行技术落地</li></ol><p>知识储备：</p><p>了解前端团队 TL 相关知识</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2764">下载</a></p></li></ul><h5 id="《Teambition-研发团队成长历程》"><a href="#《Teambition-研发团队成长历程》" class="headerlink" title="《Teambition 研发团队成长历程》"></a>《Teambition 研发团队成长历程》</h5><p> 严清 / 阿里巴巴 Teambition 产品线研发总监</p><ul><li><p>讲师简介：</p><blockquote><p>严清，花名引光，阿里巴巴 Teambition 产品线研发总监。2013年加入 Teambition，有丰富的前后端开发经验，带领前后端团队进行整个产品线研发；六年时间，见证了 Teambition 产品从零到一、团队从十来人到两百余人的发展历程。<br /><br>严清作为程序员，擅长 Node.js、Go 开发，喜欢 Rust；作为架构师，目前在推动&ldquo;协同领域的基础 API 服务&rdquo;和&ldquo;开放能力建设&rdquo;的技术发展，希望能吸引更多参与者，一起打造企业应用生态，加速企业信息化进程。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>Teambition 是如何从十来人团队开发草根的小众产品，成长为两百人团队的协同工具创导者的？我将给大家分享 Teambition 研发团队成长历程与经验。</p><p>演讲提纲：</p><ol><li>  我的成长历程<br /></li><li>  我的团队及工作内容介绍<br /></li><li>  前端团队负责人的职责与成长规划<br /></li><li>  前端团队成员的培养<br /></li><li>  分工与协作：我们的研发管理<br /></li><li>  经验总结</li></ol><p>听众收益：</p><ol><li> 个人如何合理规划自己的成长路径？<br /></li><li> 研发团队会面临哪些问题？该如何解决？<br /></li><li> 一个非典型草根创业团队的成长故事。</li></ol><p>前沿亮点：</p><p>互联网数字时代的研发团队管理方式</p><p>知识储备：</p><p>有 Web 开发工作经验，最好有一定的团队或项目管理经验</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2769">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《中小前端团队-Team-Leader-的管理之路》"><a href="#《中小前端团队-Team-Leader-的管理之路》" class="headerlink" title="《中小前端团队 Team Leader 的管理之路》"></a>《中小前端团队 Team Leader 的管理之路》</h5><p> Scott / 宋小菜 前端负责人</p><ul><li><p>讲师简介：</p><blockquote><p>Scott，9 年工程师生涯，坚信创业是场修行。曾任职阿里巴巴前端工程师、Moveha|CR CTO，现任宋小菜前端团队负责人，搭建团队从 6 人到 20 人，专注供应链大前端的跨端工具工程化，专注年轻工程师的成长与潜力发掘。</p><p>2012 年开始接触编程教育领域，兼职参与加拿大编程教育平台 UULearn 创业孵化，2013 年入驻慕课网，推出 10 门课程，观看用户超过 50 万。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>中国互联网产业高速发展，数以万计的互联网创业公司应运而生，在带动前端行业蓬勃发展的同时，也伴随着成千上万的前端工程师的管理问题。如何在业务达成过程中帮助前端工程师更快成长，如何挖掘工程师的价值考验着每一位前端团队管理者。</p><p>庞大的中小型互联网公司中又包含成千上万个技术部门，附带着数以千计的中小规模的前端团队，团队虽小，五脏俱全，给许多的新晋前端管理者带来巨大的技术和管理挑战，这些新的技术和管理挑战与大公司的前端团队所处境况截然不同，解法也各有不同。</p><p>Scott 近五年活跃在创业公司和前端社区中，也活跃在编程知识领域与⼯程师能力领域中，伴随着成千上万的前端工程师走上管理岗位。在自己的团队中不断探索与实践，特别是针对工程师的年轻化，有独特的中小规模创业公司前端团队的管理视角和解法经验，本专题希望能帮助更多管理者解惑。</p><p>演讲提纲：</p><p>水温：中小前端团队当前的生存现状<br /><br>招式：如何带领年轻化的中小团队步入正轨 <br /><br>内功：新晋前端管理者在创业环境中如何自我规划 <br /><br>案例：小菜前端团队用两年时间到工程化的探索之路</p><p>听众收益：</p><ol><li> 面对中小前端团队如何管理<br /></li><li> 前端管理者能力的系统化分析<br /></li><li> 前端 TL （Team Leader）面对的问题和需具备的素质</li></ol><p>前沿亮点：</p><ol><li> 中小规模前端团队的系统化分享<br /></li><li> Scott 结合自己的近十年经验梳理了管理中的关键点</li></ol><p>知识储备：</p><p>最好有前端团队管理经验</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2768">下载</a></p></li></ul><h4 id="Flutter实战"><a href="#Flutter实战" class="headerlink" title="Flutter实战"></a>Flutter实战</h4><blockquote><p>Flutter作为革命性的跨终端解决方案，一经推出就获得了广泛关注。如何利用新技术为组织带来效率和体验的提升，为业务带来价值？本专场希望通过分享行业内基于Flutter技术落地的解决方案以及相关的技术创新，为更多企业和开发者提供启发和借鉴。</p></blockquote><h5 id="《MTFlutter：美团外卖Flutter容器化生态建设实践》"><a href="#《MTFlutter：美团外卖Flutter容器化生态建设实践》" class="headerlink" title="《MTFlutter：美团外卖Flutter容器化生态建设实践》"></a>《MTFlutter：美团外卖Flutter容器化生态建设实践》</h5><p> 陈航 / 美团点评 高级技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>陈航，专注于大前端开发领域10年。曾就职于雅虎北研和新浪微博，2015年加入美团，经历了外卖用户端和商家端发展的多个阶段，推动了外卖移动端架构演进、线上运维及终端技术栈融合等相关工作。现任美团外卖商家业务终端团队技术负责人，致力于提升终端团队研发效率与交付质量。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>与面向用户业务相比，中后台业务角色多、场景复杂、标准化程度低，流程差异大。并且由于中后台业务天生的生产工具属性，导致使用时长通常远远高于用户业务。这些典型业务特点使得中后台类App面临着迭代效率与稳定性的双重挑战。</p><p>为了更好的平衡终端团队的开发效率与稳定性，美团外卖终端团队在2018年着手调研并引入Flutter，先后在用户端和商家端的验证可行性，确认了其在中后台业务场景中具有实用价值。2019年团队进行了Flutter容器化生态及周边自动化工具的建设，作为面向中后台场景的容器化解决方案，MTFlutter在最新稳定版Flutter的基础上进行了修改适配，基于美团点评的移动端基建、开发生态做了定制，提供了工程模板、脚手架、基础能力插件、UI2Code/AI2Code、混合开发集成工具、Pub服务、打包构建、资源托管、监控运维等开发者能力，让拥有基本Flutter开发技能的业务团队，能够快速的将Flutter容器无缝引入到现有项目，或是快速构建独立的Flutter应用。作为源自美团外卖，服务于全公司的容器化方案，目前，MTFlutter已经在美团点评多个部门不同类型中后台业务大规模线上使用。</p><p>本次GMTC大会，将会分享一些我们的实践经验，希望能够为大家在Flutter容器化生态建设和大规模化使用Flutter上提供借鉴和思路。</p><p>演讲提纲：</p><ol><li> 业务背景</li></ol><p>(1)  O2O模式下的中后台业务特点<br /><br>(2)  跨平台技术的业务诉求与技术挑战</p><ol start="2"><li> Flutter的优势和挑战</li></ol><p>(1)  Flutter的原理和技术特点<br /><br>(2)  业务落地现实问题</p><ol start="3"><li> MTFlutter：Flutter容器化生态建设</li></ol><p>(1)  容器化技术全景图<br /><br>(2)  MTFlutter工作流及工程闭环<br /><br>(3)  容器化基础设施生态及周边工具链建设<br /><br>(4)  线上性能与异常监控运维能力<br /><br>(5)  UI2Code/AI2Code代码自动生成工具<br /><br>(6)  业务落地现状</p><ol start="4"><li> 展望和总结</li></ol><p>听众收益：</p><ol><li> 基于业务特点的跨平台技术选型思路<br /></li><li> 如何在规模化团队中推广使用Flutter<br /></li><li> 基于Flutter容器化解决方案建设思路</li></ol><p>知识储备：</p><p>有基本的Flutter编程经验即可</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2772">下载</a></p></li></ul><h5 id="《Flutter-在字节跳动的现状与工程实践》"><a href="#《Flutter-在字节跳动的现状与工程实践》" class="headerlink" title="《Flutter 在字节跳动的现状与工程实践》"></a>《Flutter 在字节跳动的现状与工程实践》</h5><p> 林帅斌 / 字节跳动 高级研发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>林帅斌，就职于字节跳动移动平台部，曾就职百度、阿里巴巴，参与过百度日文输入法、东南亚Lazada电商等重量级应用研发。目前负责 Flutter 应用框架层基础建设，主要的研究方向包括工程自动化接入、状态框架、组件容器化方案、研发流程等。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>Flutter 是跨平台技术上最火的技术，在提供极好的用户体验的同时能解决多端一致性的问题，而且还能有效的降低人力成本。</p><p>字节跳动希望把 Flutter 打造成下一代研发体系，支撑众多 App 的各种使用场景，为此，我们在 Flutter 上大力投入，覆盖了引擎技术、平台服务、开发框架等多个维度。本次分享将介绍一下字节跳动在 Flutter 技术上的进展。</p><p>在开发框架上，我们围绕着开发着服务、研发流程两个方向进行了较多的投入，致力于提供极好的开发者体验，让开发者更高效，更专注在业务开发。本次分享主要会涉及工程实践的三个内容：研发套件、容器化方案以及状态管理框架。</p><p>演讲提纲：</p><ol><li> Flutter 在字节跳动的进展</li></ol><p>   (1) 选择 Flutter 的原因<br /><br>   (2) 业务落地情况<br /><br>   (3) 建设现状与规划简介</p><ol start="2"><li>工程实践<br /><br>(1) Flutterw 研发套件<br /><pre><code>a. 背景&lt;br /&gt;b. 套件介绍</code></pre></li></ol><p>   (2) 容器化开发方案 <br /></p><pre><code>   a. 背景&lt;br /&gt;   b. 架构体系&lt;br /&gt;   c. 使用场景</code></pre><p>   (3) 状态管理方案<br /></p><pre><code>   a. 状态管理方案的选择&lt;br /&gt;   b. redux 的缺陷&lt;br /&gt;   c. ByteRedux 方案介绍</code></pre><ol start="3"><li>  结束语</li></ol><p>听众收益： </p><ol><li>了解字节跳动在 Flutter 实战上的进展<br /></li><li>了解一种创新的状态管理方案的实现原理<br /></li><li>了解 Flutter 工程实践的一些基础建设</li></ol><p>前沿亮点：   </p><ol><li> 研发套件、容器化方案能系统化的完善 Flutter 的开发周边，提供更好的开发者服务。<br /></li><li> ByteRedux 使用新的思路，在保证 Redux 的核心优势的同时解决它的一些问题，使其能更好的适应大中小型 Flutter 应用开发。</li></ol><p>知识储备：</p><p>无特殊要求</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2777">下载</a></p></li></ul><h5 id="《蚂蚁财富的-Flutter多业务开发实践》"><a href="#《蚂蚁财富的-Flutter多业务开发实践》" class="headerlink" title="《蚂蚁财富的 Flutter多业务开发实践》"></a>《蚂蚁财富的 Flutter多业务开发实践》</h5><p> 肖凯 / 蚂蚁金服 无线开发专家</p><ul><li><p>讲师简介：</p><blockquote><p>肖凯，花名楚斌。先前就职于网易有道，负责有道翻译官等端应用的开发工作，推进了第一代移动开发组件化建设。2017年加入蚂蚁金服，负责蚂蚁财富端开发工作。主要研究方向为工程提效，创新技术落地，以最大化释放技术生产力为目标。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>面对日趋丰富的无线技术生态，Flutter 的价值几何？面对高风险金融业务，Flutter 能否经得起业务考验?面对大厂内已经完善的基础建设，Flutter 如何平顺的融合落地？蚂蚁财富⽆线团队面对 Flutter 这门新技术时的独立思考以及使用 Flutter 的一些经验，为业务带来价值的同时通过工程化的方法将更优秀的技术能力辐射到其他业务部门。</p><p>演讲提纲：</p><ol><li>Flutter 之我见</li></ol><p> (1) 业务价值<br /><br> (2) 技术价值 </p><ol start="2"><li>工程体系的演进</li></ol><p> (1) 工坊时代 <br /><br> (2) 工业时代</p><ol start="3"><li>复杂生态与多团队下的技术体系建设 </li></ol><p> (1) 生态融合 - DartAPI<br /><br> (2) 一站式 Flutter 开发 - AFF<br /><br> (3) 业务赋能<br /><br> (4) 业务路由     <br /><br> (5) 线上数据大盘建设 </p><ol start="4"><li>使用 Flutter 的收益</li></ol><p>听众收益：</p><ol><li>了解 Flutter 的能力<br /></li><li>了解多业务协同方式<br /></li><li>了解 Flutter 和端的通信方式</li></ol><p>前沿亮点：</p><ol><li>多业务方视角 &mdash;&mdash;如何高效协同开发 <br /></li><li>无侵入路由方案 &mdash;&mdash;动态替换原生模块至 Flutter</li></ol><p>知识储备：</p><p>Flutter 入门<br /><br>了解 CLI</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2792">下载</a></p></li></ul><h5 id="《Flutter-在百度贴吧的落地实践》"><a href="#《Flutter-在百度贴吧的落地实践》" class="headerlink" title="《Flutter 在百度贴吧的落地实践》"></a>《Flutter 在百度贴吧的落地实践》</h5><p> 高飞 / 百度 资深研发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>高飞，百度贴吧客户端技术负责人，资深研发工程师，全栈技术实践者，2011年加入百度贴吧，一直服务于贴吧客户端，经历了移动技术发展的重要节点，研究技术主要有客户端工程建设、体验优化、动态化、IM、直播等，2018年下半年负责探索 Flutter 技术在贴吧的落地。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>Flutter 作为移动端新技术，具备跨端渲染、高效的开发体验和高性能等优势，能够提升人效，加速业务创新迭代。原理类似游戏引擎，且开源，虽然整体处于早期技术阶段，但是生态发展迅猛。贴吧在 Native 架构实践中有着丰富的经验，有许多经验和思路直接借鉴到 Flutter 中进行落地，目前应用在贴吧主 App 的混合开发当中，贴吧内部版（极速版）跨 Android、iOS、iPad已经上线。<br /></p><br />演讲提纲：<ol><li><p> 为何引入 Flutter</p></li><li><p> Flutter 落地想法和目标</p></li><li><p> 思路</p></li></ol><p>   (1) 技术全景<br /><br>   (2) 工程架构<br /><br>   (3) 业务框架<br /><br>   (4) 基础能力</p><ol start="4"><li><p> 落地情况与&ldquo;坑&rdquo;</p></li><li><p> 规划与总结</p></li></ol><p>听众收益：</p><ol><li> 了解 Flutter 在百度贴吧的实践过程<br /></li><li> Flutter 的模块化实践思路<br /></li><li> 了解实践中的一些&ldquo;坑&rdquo;</li></ol><p>知识储备：</p><ol><li> Flutter 入门知识<br /></li><li> 移动端模块化基础</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2773">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h4 id="大前端架构演进"><a href="#大前端架构演进" class="headerlink" title="大前端架构演进"></a>大前端架构演进</h4><blockquote><p>前端经过十几年的发展，已经有多个分支领域。前端和移动端也越来越复杂，要把大前端方方面面所涉及的技术细节都了解到，不是一件容易的事情，太泛则不精，我推荐的做法是了解前端架构发展的路径，抽象出其背后的原理，找到变革的驱动力，掌握技术发展的趋势。对个人而言，能找到适合自己深入发展的方向；对企业而言，能制定出最适合当前业务的技术方案，赋能企业高速发展。本专场借助几个行业具体的实践案例，谈谈对目前大前端发展趋势和架构演进的理解和展望，希望能给大家在技术方向选择和方案选型上，提供一些参考。</p></blockquote><h5 id="《云端一体新前端工程模式在淘系前端的实践》"><a href="#《云端一体新前端工程模式在淘系前端的实践》" class="headerlink" title="《云端一体新前端工程模式在淘系前端的实践》"></a>《云端一体新前端工程模式在淘系前端的实践》</h5><p> 王光（九十） / 阿里巴巴 高级前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>王光（九十），淘系前端团队高级前端技术专家，目前正尝试通过Serverless/FaaS 等新素材变革淘系前端研发模式。在阿里巴巴的六年时间里，陆续参与过 Weex 初期前端体系建设（React早期实践以及主导页面投放体系）、集团 Node.js 应用标准化治理和中间件体系建设等。技术兴趣较为广泛，对于技术浪潮自认为比较理性。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>近来云原生、Serverless/FaaS一类的新架构逐渐开始成熟，进而建立在线服务的成本越来越低。轻量的云端服务开发，已经逐渐成为前端工程的新标配。淘系前端以导购业务为切入，开始实践云端一体新工程模式。本次会议我将会分享到，我们如何整合既有的前端项目与新的云端FaaS 能力，让淘系前端可以借助业务中台能力独立完成业务需求。</p><p>演讲提纲：</p><ol><li>Serverless 技术浪潮与淘系导购业务背景<br /></li><li>云端一体新前端工程模式一窥<br /></li><li>相关 PaaS 平台配套设计与思考<br /></li><li>现场视频演示<br /></li><li>未来展望</li></ol><p>听众收益：</p><ol><li>新一代前端工程架构以及相关平台配套设计<br /></li><li>如何在一个既有业务领域落地前端云端一体工程</li></ol><p>前沿亮点：</p><ol><li>一体的前端工程规范<br /></li><li>如何融入原来只有 Java 语言的服务器端开发的环境<br /></li><li>新研发模式下建立的一些PaaS 平台（研发平台、中台服务管理消费的平台等）</li></ol><p>知识储备：</p><ol><li>前端工程方面<br /></li><li>基础 Node.js 开发</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2784">下载</a></p></li></ul><h5 id="《腾讯在线教育大前端架构演进之路》"><a href="#《腾讯在线教育大前端架构演进之路》" class="headerlink" title="《腾讯在线教育大前端架构演进之路》"></a>《腾讯在线教育大前端架构演进之路》</h5><p> 曹海歌 / 腾讯 前端高级工程师</p><ul><li><p>讲师简介：</p><blockquote><p>曹海歌，腾讯前端高级工程师，IMWeb 团队成员。2016 年加入腾讯，负责企鹅辅导前端架构设计、跨平台方向以及 Node 服务建设的工作，参与了从 React Native 到自研跨端框架 Plato 跨平台框架研发，对跨平台、Node.js 开发有丰富的经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>近年来，随着 jQuery 的落幕，三大框架的割据以及小程序的爆发，大前端的发展也经历了从静态页面到JavaScript跨时代的诞生，再从PC端到移动端的转向，以及由依赖后端到前后端分离的架构演变。</p><p>本次演讲主要分享腾讯在线教育前端团队近年来大前端技术架构演进历程，如 Hybird 方案、离线包方案、PWA 结合 SSR 方案、以及 RN 动态化方案的落地和执行。结合具体实例进行分析，阐述团队是如何进行业务性能优化以及为提升研发效率进行的前端工程化体系建设。</p><p>演讲提纲：</p><ol><li> 大前端技术架构演进     </li></ol><p>   (1) 浏览器新特性的发展 PC、H5<br /><br>   (2) 结合后台的技术方案 PWA 、SSR<br /><br>   (3) 结合终端的技术方案 RN、Flutter<br /><br>   (4) 小程序动态运营方案  微信小程序</p><ol start="2"><li> 在线教育大前端架构演进之路     </li></ol><p>   (1)  Hybird 、离线包方案<br /><br>   (2) RN 方案的业务落地<br /><br>   (3) PWA + SSR 项目实践<br /><br>   (4) Node.js 构件业务矩阵</p><ol start="3"><li> 大前端架构的未来展望     </li></ol><p>   (1)  效率工具规范化<br /><br>   (2) 基础能力服务化<br /><br>   (3) 领域模型智能化</p><p>听众收益：</p><ol><li> 深刻理解大前端技术架构的演进背景及现状，使团队在发展过程中更加理解前端工程化；<br /></li><li> 通过我们的实践案例充分思考，总结经验提升团队效率。</li></ol><p>前沿亮点：</p><ol><li> 理清前端产品化过程中的痛点；<br /></li><li> 如何在前端工程化中利用工具提升团队效率。</li></ol><p>知识储备：</p><p>有一定前端项目经验，对前端开发有一定的了解。</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2774">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《快手前端-H5-容器中台化实践》"><a href="#《快手前端-H5-容器中台化实践》" class="headerlink" title="《快手前端 H5 容器中台化实践》"></a>《快手前端 H5 容器中台化实践》</h5><p> 宋云路 / 快手 前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>宋云路，快手前端技术专家，2016 年加入快手，亲身经历了快手从千万级 DAU 到亿级 DAU 的前端架构演进全过程，目前主要负责快手主 App 相关的前端业务开发和架构优化。对前端中台、前端性能监控、 Node.js 开发运维等方面有比较丰富的实践经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>在中台化发展迅速的背景下，前端从业者也在积极探索搭建前端中台的落地点和可能性，并逐渐抽象了一些前端 H5 业务中台。然而受限于不同客户端 H5 环境的多样性和功能健全性等差异，导致一份代码很难直接在不同客户端中无缝运行，限制了 H5 业务中台化的发展。本次分享将阐述快手 App 前端业务中台化的背景和现状，以及如何通过搭建一个 H5 容器中台 SDK ，使得客户端仅需简单接入配置便可具备完善的 H5 常用核心能力的统一化封装，最终实现强依赖客户端能力的 H5 业务也能做到 0 修改即可在各客户端中无缝运行。实现中台的初衷，提高业务迭代效率。</p><p>演讲提纲：</p><ol><li><p> 快手 H5 业务中台化背景和现状</p></li><li><p> H5 容器中台架构设计</p></li></ol><p>   (1) 鉴权能力封装<br /><br>   (2) JS 通信及 API 设计<br /><br>   (3) 离线包能力设计<br /><br>   (4) 埋点监控设计  </p><ol start="3"><li><p> 经验总结沉淀</p></li><li><p> 对中台化思维的思考</p></li></ol><p>听众收益：</p><ol><li> 了解搭建 H5 容器中台的架构设计和实践经验<br /></li><li> 了解中台型 H5 容器与常规 H5 容器的区别<br /></li><li> 如何基于中台化思维对接业务需求</li></ol><p>知识储备：</p><p>客户端内 H5 开发基础知识</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2797">下载</a></p></li></ul><p>注：由于讲师所在企业限制，不对外公布</p><h5 id="《建设企业级微前端方案》"><a href="#《建设企业级微前端方案》" class="headerlink" title="《建设企业级微前端方案》"></a>《建设企业级微前端方案》</h5><p> 张浩 / 网易 资深前端开发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>张浩，网易资深前端开发工程师，严选数据产品前端负责人。先后负责过网易企业邮箱、网易有钱、网易严选等大型项目的前端架构设计及开发。当前致力于大前端与通用能力建设、工程化与效率工具、企业级应用架构等领域研究。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>传统的前端 SPA 开发模式，一方面随着系统迭代发展到一定的程度，规模非常庞大，通过项目内的模块化，已经无法解决业务膨胀的问题；另一方面随着应用框架的升级、变迁，多框架共存的状态无法避免，必须要有一种工程化方案，能对整个业务能进行合理拆分、组合。微前端作为新兴的技术方向，在前端开发模式方面必将带来一些变革。</p><p>演讲提纲：</p><ol><li> 传统前端 SPA 开发模式面临的问题</li></ol><p>   (1) 应用膨胀与臃肿<br /><br>   (2) 技术栈不断迭代与更新<br /><br>   (3) 大型项目涉及的人员与模块多，沟通成本高<br /><br>   (4) 微服务架构演进</p><ol start="2"><li> 微前端的定义与目标</li></ol><p>   (1) 定义<br /><br>   (2) 目标</p><ol start="3"><li> 严选微前端的方案设计与优势特点</li></ol><p>   (1) 方案设计<br /><br>   (2) 优势特点</p><ol start="4"><li> 严选微前端带来的变革</li></ol><p>   (1) 具体业务场景的落地实践<br /><br>   (2) 产生的效益与实际价值体现</p><ol start="5"><li> 面向未来的前端技术架构</li></ol><p>   (1) 复杂多变需求场景下的业务开发模式思考<br /><br>   (2) 新一代企业级前端开发模式的继任者</p><p>听众收益：</p><ol><li> 企业级微前端技术架构的应用场景和落地方案<br /></li><li> 在新型应用开发模式方面给大家带来一些思考启发<br /></li><li> 探索业务开发模式的优化方式，实现应用级别可复用的前端模式<br /></li><li> 大型项目如何解耦与分离，各模块做到独立开发部署和技术栈无关的应用无缝接入</li></ol><p>前沿亮点：</p><p>从设计方案、应用场景、项目收益等方面，介绍网易严选在微前端方面的探索、实践与总结，实际性地解决了大型前端 SPA 应用的开发痛点与难点，做到&ldquo;项目分离，运营聚合&rdquo;。</p><p>知识储备：</p><p>建议具有较好前端开发基础能力，负责过大型前端项目的开发，具备一定的模块分析与技术机构能力，同时对微前端技术有一定的了解和认识。<br /></p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2775">下载</a></p></li></ul><h4 id="大前端商业化"><a href="#大前端商业化" class="headerlink" title="大前端商业化"></a>大前端商业化</h4><blockquote><p>商业变现是互联网行业中非常核心的业务，大多数公司的绝对现金流来源。随着后移动时代的到来以及从流量运营到用户运营的思维变迁，大前端在其中的价值也越发突显，从广告的触发、展现、点击，再到最终的转化都有大前端发挥的空间。相比用户产品，商业变现中的大前端技术有更强的业务/效果导向，在这里不会一味的追求业界新技术，但一定会用数据证明任何细微优化的价值。本专题力争将商业化场景下的大前端最佳实践呈现给大家。</p></blockquote><h5 id="《商业增长的极致-Feedback》"><a href="#《商业增长的极致-Feedback》" class="headerlink" title="《商业增长的极致 Feedback》"></a>《商业增长的极致 Feedback》</h5><p> 伍星秦 / 腾讯 应用宝前端技术负责人</p><ul><li><p>讲师简介：</p><blockquote><p>伍星秦，2012年入职腾讯，参与开平 FusionAPI，主要负责手Q手空应用中心及应用宝商业化的前端业务工作。在 Web 性能优化、Node.js 调用有丰富经验。同时，关注和调研前端的前沿技术，驱动应用宝前端团队从前端到泛前端的转变，推动前端在广告流量拓展、前端样式实验、数据驱动策略、广告转化链路优化领域的落地。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>在商业化变现领域的核心就是&quot;交易&quot;，前接流量，后接转化成本。如何高效转化链路，是目前最关键的问题。高效转化链路的核心是在统一的指标下，建立优化目标和评估体系，基于前者的数据分析然后制定一系列的策略和实验高效迭代，快速找到关键变量并持续优化。本次分享主要是从指标建立开始，以灵活高效的落地页做承载，结合千人千面的广告推荐服务和用户理解，更好的吸引用户完成我们想要的目标，希望能给大家一些启发。</p><p>演讲提纲：</p><ol><li> 建立统一的评估体系衡量每次投放的价值<br /></li><li> 从前端到后端的落地页高效研发体系<br /></li><li> 落地页实验与策略实验运营化<br /></li><li> 用户理解与再次触达，释放 ROI 的空间<br /></li><li> 反作弊识别与能力完善</li></ol><p>听众收益：</p><ol><li> 数据指标制定和拆解<br /></li><li> 灵活高效的落地页架构<br /></li><li> 实验系统与落地页的结合<br /></li><li> 从技术角度去驱动项目</li></ol><p>前沿亮点：</p><ol><li> 落地页与实验结合<br /></li><li> 尝试建立用户统一标识，以此为基础理解用户</li></ol><p>知识储备：</p><ol><li> 广告相关的基础知识<br /></li><li> 实验系统的基础知识</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2790">下载</a></p></li></ul><h5 id="《移动端广告落地页预加载技术实践》"><a href="#《移动端广告落地页预加载技术实践》" class="headerlink" title="《移动端广告落地页预加载技术实践》"></a>《移动端广告落地页预加载技术实践》</h5><p> 张博 / 字节跳动 前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>张博，字节跳动前端工程师，主要负责提升字节跳动商业化广告制作、展示效率等方面工作。2018年加入字节跳动，曾就职于百度，参与了百度 H5 项目，并负责百度脑图。在 Web 复交互应用、前端性能优化等方面积累了一定的经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>相信大家肯定读到过很多加载速度和转化率之间的关系的文章，在商业化领域，广告落地页的加载速度会很大程度上影响最终的转化率，在性能优化到一定瓶颈之后，不得不借助一些额外的能力做进一步的优化，我们最终的目标是达到落地页的&ldquo;秒开&rdquo;。</p><p>我们先后尝试了基于静态资源列表、包、WebView 等预加载技术方案，并且通过对比实验，得出了一些结论，并积累了一些经验，当然这个过程中也踩了不少坑，关于预加载在落地页上的应用也有一些自己的思考，希望借此机会分享给大家。</p><p>演讲提纲：</p><ol><li><p> 落地页性能对广告的影响</p></li><li><p> 怎么做预加载</p></li></ol><p>   (1) 一些铺垫（将资源文件打进 App 代码/提前开 WebView 加载落地页）<br /><br>   (2) 基于资源列表的预加载<br /><br>   (3) 基于资源包的预加载<br /><br>   (4) 基于 WebView 的预加载</p><ol start="3"><li><p>怎么评判预加载</p><p> (1) A/B 测方案</p></li><li><p> 各方案性能数据对比</p></li></ol><p>   (1) 实验条件说明<br /><br>   (2) 技术指标<br /><br>   (3) 业务指标</p><p>5.下一步工作计划</p><p>听众收益：</p><ol><li> 常见的网页预加载技术方案<br /></li><li> 评价预加载效果方法和指标<br /></li><li> 预加载方案实施过程中会遇到常见的问题</li></ol><p>知识储备：</p><p>基础的广告业务知识</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2779">下载</a></p></li></ul><h5 id="《高效灵活易于演进的商业化场景-Node-js-架构实践》"><a href="#《高效灵活易于演进的商业化场景-Node-js-架构实践》" class="headerlink" title="《高效灵活易于演进的商业化场景 Node.js 架构实践》"></a>《高效灵活易于演进的商业化场景 Node.js 架构实践》</h5><p> 尚飞 / 百度 资深研发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>尚飞，现就职于百度原生商业部，热衷前端技术，对新技术有强烈的好奇心。曾将Facebook/GraphQL应用在百度原生商业体系的Node.js服务端，充分利用GraphQL技术特点和优势，构建了一套自省式、高效率、可演进的内嵌GraphQL的Node.js服务。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>大前端商业化进程中，始终围绕着技术创新和工程优化这样一个双核主题，即如何从用户运营中获得商业价值的同时，又能不断探索和激发用户运营的新动力，两者相辅相成，共同保证大前端商业化向着更加成熟的方向发展。我将通过百度原生商业部在 Node.js 服务端升级过程中，选用 GraphQL 升级 Restful API 的实践经验，介绍如何利用新技术的优势和特点，提出内置 GraphQL 的设计，区别于以往在 Restful API 之上搭建 GraphQL 的架构，完成服务端 GraphQL 化，以此应对商业化中瞬息万变的市场以及稍纵即逝的商机，相比客户端的诸多限制，如审核发版、技术闭环等，服务端不仅便于探索新业务，而且更适合频繁优化，提高研发效率，降低运营成本。</p><p>演讲提纲：</p><ol><li> 了解 GraphQL 在生产实践中的优劣势；<br /></li><li> 结合大前端商业化特点，改造 GraphQL 的运行模式，适配业务需求；<br /></li><li> 如何内嵌 GraphQL 建立自省式、高效率、可演进的 Node.js 服务；<br /></li><li> 依托 GraphQL 管理业务细节，建立高效简洁的沟通模式。</li></ol><p>听众收益：</p><ol><li> 了解 GraphQL 在生产实践中的优劣势；<br /></li><li> 使用内置 GraphQL 的设计，区别于以往在 Restful API 之上搭建 GraphQL 的架构；<br /></li><li> 在大商业背景下，自省式、高效率、可演进的 Node.js 服务带来了哪些优势。</li></ol><p>前沿亮点：</p><ol><li>在大流量下使用 GraphQL 的实践经验<br /></li><li>围绕 Facebook/GraphQL 建立的大数据测试<br /></li><li>在快速迭代中如何规范化管理业务细节</li></ol><p>知识储备：</p><ol><li>了解 Restful API 的局限性和 GraphQL 的背景<br /></li><li>对 Node.js 微服务有所了解</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2781">下载</a></p></li></ul><h5 id="《微信小程序小游戏广告形态体系建设》"><a href="#《微信小程序小游戏广告形态体系建设》" class="headerlink" title="《微信小程序小游戏广告形态体系建设》"></a>《微信小程序小游戏广告形态体系建设》</h5><p> 冼誉杰 / 腾讯 研发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>冼誉杰， 腾讯研发工程师，就职于腾讯微信广告部。目前负责微信小程序小游戏广告项目的研发工作，主要关注前端性能优化，以及跨平台开发的相关技术与框架等方向。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>微信小程序推出至今，小程序小游戏数据已超过100万，小程序小游戏的日活用户超过了2亿。同时，其他的小程序平台也在持续为其平台内小程序变现进行赋能，加快开发者商业变现能力。因为商业变现始终是互联网行业永恒的话题，不但可以让开发者持续获利，还能不断完善小程序的生态，让用户获得更好更便利的服务。本次分享我将会从如何提高多端的开发效率、如何快速迭代广告形态以及反作弊监控等方面去介绍微信小程序小游戏广告形态的体系建设，及其赋能形态快速迭代的相关实践。<br /></p><br />演讲提纲：<ol><li> 小程序小游戏整体框架介绍<br /></li><li> 广告形态多端同构<br /></li><li> 广告形态实验系统框架介绍<br /></li><li> 赋能形态快速迭代<br /></li><li> 广告形态性能优化实践<br /></li><li> 广告形态反作弊监控赋能优化广告效果</li></ol><p>听众收益：</p><ol><li> 提高广告商业变现的开发效率<br /></li><li> 快速迭代广告形态寻找优质广告展示形态<br /></li><li> 通过监控手段打击作弊行为<br /></li><li> 优化最终广告效果</li></ol><p>知识储备：</p><p>对客户端或前端或小程序开发有一定背景知识与开发经验</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2798">下载</a></p></li></ul><h4 id="Web-Performance"><a href="#Web-Performance" class="headerlink" title="Web Performance"></a>Web Performance</h4><blockquote><p>在移动互联网时代，由于设备资源受限、网络不稳等因素，Web性能优化显得尤为重要，从用户感知的首屏指标建立到关键耗时路径拆解和优化都有类似的经验可以借鉴。本专场将邀请在Web前端、渲染引擎和特定场景下有速度优化经验的技术专家，分享实践经验。</p></blockquote><h5 id="《面向全球用户的极致性能优化与挑战》"><a href="#《面向全球用户的极致性能优化与挑战》" class="headerlink" title="《面向全球用户的极致性能优化与挑战》"></a>《面向全球用户的极致性能优化与挑战》</h5><p> 易晓峰 / 阿里巴巴 高级前端专家</p><ul><li><p>讲师简介：</p><blockquote><p>易晓峰（花名林异），阿里巴巴高级前端专家，ICBU 性能架构师，负责无线前端&amp;架构团队。2018年主要负责性能优化，从网、云、端全方位优化三端性能，让海外用户的性能得到了极大幅度的提升，同时还建立起用户视角的国际化性能监测及度量体系。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着中国互联网的蓬勃发展，越来越多的企业势必要走向国际化，而性能是前端避不开的一个话题。大型电商网站的性能优化是一个非常复杂的事情，一是开发团队众多牵涉广；二是用户面向全球，用户分散、用户物理距离遥远、地区间发展不平衡。在白纸上画图是最容易的，小网站实在不行就整体重构，但我们很难对网站做整体重构，因为需要消耗巨量的人力资源。面对各种复杂的环境，我们如何发现及定位问题，如何找到适合用户的性能优化方案？</p><p>演讲提纲：</p><ol><li><p> 国际化性能优化的挑战</p></li><li><p> 国际化性能优化的度量与分析</p></li></ol><p>   (1) 首屏定义<br /><br>   (2) 秒开率、分位数、平均值、极值等分析方法对性能数据的影响<br /><br>   (3) 分析的维度(国家、设备、分层)、散点图、全球性能地图<br /><br>   (4) 利用数据来指导性能优化</p><ol start="3"><li> 国际化性能优化的方案</li></ol><p>   (1) 使用 AMP 优化来自 Google 的流量<br /><br>   (2) 利用边缘节点流式渲染解决首跳性能<br /><br>   (3) 快速将网站 SPA 化解决二跳的性能问题<br /><br>   (4) 异步渲染 API 的性能优化</p><p>听众收益：</p><ol><li>快速发现及定位问题<br /></li><li>在各种复杂的环境下找到适合于用户的性能优化方案</li></ol><p>前沿亮点：</p><ol><li> 面向全球用户的性能优化<br /></li><li> 大型电商网站的性能优化</li></ol><p>知识储备：</p><ol><li> 有一定的 Web 开发经验<br /></li><li> 有一定的性能优化的知识</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2785">下载</a></p></li></ul><h5 id="《百度App-H5页面性能监控和优化实践》"><a href="#《百度App-H5页面性能监控和优化实践》" class="headerlink" title="《百度App H5页面性能监控和优化实践》"></a>《百度App H5页面性能监控和优化实践》</h5><p> 阚光远 / 百度 资深研发工程师</p><ul><li><p>讲师简介：</p><blockquote><p>阚光远，百度App搜索性能优化技术负责人，曾就职于中兴通讯股份有限公司，负责中兴自研浏览器内核的研发工作。2013年加入百度，负责百度App搜索结果页和落地页的性能优化工作，对百度App T7内核渲染引擎做深度的定制化改造，是T7内核网页性能优化资深专家。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>通过对百度App H5网页速度数据做详细分析发现，H5页面展现时间超过4秒，毫无疑问，在这个用户体验至上的时代，H5展现速度会极大影响百度App的用户体验，而且数据显示57%的用户选择离开。因此，H5页面的首屏性能变得十分重要，要争取做到秒开。</p><p>本次分享，会详细介绍百度App性能监控体系的建立过程，包括通过监控及时发现线上H5页面打开慢的原因，并提供定位具体问题原因的能力。还将分享到百度T7内核网页渲染优化算法以及精准首屏标准化的推进。</p><p>演讲提纲：</p><p>1.性能监控体系的建立</p><p>（1）前端JS监控存在的问题<br /><br>（2）首屏指标的建立<br /><br>（3）辅助指标建设</p><p>2.百度T7内核网页渲染优化</p><p>（1）首屏关键路径拆解<br /><br>（2）渲染引擎布局算法存在的性能问题<br /><br>（3）精准首屏加速算法</p><p>3.精准首屏标准化</p><p>（1）首屏firstpaint标签定义<br /><br>（2）介绍网页开发者如何使用首屏标签</p><p>听众收益：</p><p>提高网页速度，提升H5浏览体验，进而可以带来网站流量增长</p><p>前沿亮点：</p><p>H5页面用户可感知速度监控和渲染引擎首屏速度优化</p></blockquote></li><li><p>PPT链接：无</p></li></ul><h5 id="《Google-效能工具的实践之路》"><a href="#《Google-效能工具的实践之路》" class="headerlink" title="《Google 效能工具的实践之路》"></a>《Google 效能工具的实践之路》</h5><p> 廖凯明 / 谷歌 移动技术解决方案顾问</p><ul><li><p>讲师简介：</p><blockquote><p>廖凯明，谷歌移动技术解决方案顾问，关注前端技术最新动态，为大型合作伙伴提供移动技术解决方案及推广移动技术（包含移动 Web ）。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>随着网络的飞速发展，大的网络环境越来越好，但是通过调研我们发现网站性能越来越差。如何通过真实用户体验来定义网站性能指标显得十分重要，本次主题将会分享 Google 性能工具如何定义效能指标。</p><p>同时，对于网络环境或硬件条件不佳的用户，开发人员通常使用不同装置基准(&ldquo;桌面&rdquo;&ldquo;移动&rdquo;)建构组件和路由。因为用户所处的环境通常更加细微，如：CPU 速度、网络速度变化、内存大小，所以常用的构建组建显得不符合时宜。那我们如何通过网络平台可用的信号来迅速满足客户的需求？希望本次分享能给你带来一些参考。</p><p>演讲提纲：</p><ol><li> Google 性能工具</li></ol><p>   (1) Google 性能指标定义及更新<br /><br>   (2) 有效利用 Lighthouse 的可拓展性<br /><br>   (3) 接入 Google 性能工具到持续集成内</p><ol start="2"><li> 自适应加载</li></ol><p>   (1) 自适应加载的重要性<br /><br>   (2) 前端框架如何实现自适应加载<br /><br>   (3) 如何根据不同硬件条件加载资源<br /><br>   (4) 大型公司如何采用自适应加载</p><p>听众收益：</p><ol><li> 如何定义效能指标及使用 Google 效能工具<br /></li><li> 根据网络环境及不同装置硬件采用自适应加</li></ol><p>知识储备:</p><ol><li> Web 开发经验<br /></li><li> 性能优化知识</li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2788">下载</a></p></li></ul><h4 id="深度培训"><a href="#深度培训" class="headerlink" title="深度培训"></a>深度培训</h4><blockquote></blockquote><h5 id="《Flutter-技术进阶与实战》"><a href="#《Flutter-技术进阶与实战》" class="headerlink" title="《Flutter 技术进阶与实战》"></a>《Flutter 技术进阶与实战》</h5><p> 李会超 / 美团点评 技术专家</p><ul><li><p>讲师简介：</p><blockquote><h6>李会超，美团点评技术专家。专注于大前端开发领域多年，曾就职于新浪微博，现任美团外卖商家业务 iOS 负责人，致力于提升研发效率与研发质量，为商家提供稳定可靠的生产力工具。在美团的四年时间，推进了商家业务移动端架构升级和基础设施建设，探索并大规模落地了多端复用的多重可行性方案，对 React Native 、Flutter 以及 Dart 编程拥有深刻的理解及丰富的项目实践经验，是美团点评最早落地 Flutter 线上大规模应用的实践者和推动者。</h6></blockquote></li><li><p>演讲简介：</p><blockquote><p>一、课程概述</p><p>Flutter 应用是如何运行起来的？Flutter 开发和 Dart 编程体验是怎样的？如何在企业应用中优雅地落地 Flutter ？Flutter 自发布后又有哪些核心迭代？用一套代码实现在 iOS、Android 平台上体验优良的应用，Flutter 值得我们学习。</p><p>本课程结合具体工程实例讲解，总结了企业应用落地实践过程和经验、应用底层技术，帮助团队快速了解 Flutter 开发核心技能，在低成本前提下实现业务的快速迭代。</p><p>二、课程大纲</p><ol><li><p> Flutter 基本框架及原理讲解</p></li><li><p> 开发调试与核心抽象</p></li><li><p> Dart 异步编程与编译模式</p></li><li><p> App 集成方案</p></li><li><p> 仓库管理及项目结构组织</p></li><li><p> 状态管理与常用框架原理</p></li><li><p> 企业级落地整体方案</p></li><li><p> Flutter 版本迭代和未来展望</p></li></ol><p>三、听众收益</p><ol><li><p> 了解 Flutter 开发框架及基本原理</p></li><li><p> 了解 Flutter 开发调试和 Dart 编程</p></li><li><p> 了解 Flutter 集成方案</p></li><li><p> 了解 Flutter 企业应用落地整体方案</p></li></ol><p>四、目标听众</p><ol><li><p> 前端开发团队</p></li><li><p> 快速迭代开发团队</p></li><li><p> 独立开发者</p></li><li><p> Flutter 爱好者</p></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2795">下载</a></p></li></ul><h5 id="《GraphQL-实践与应用》"><a href="#《GraphQL-实践与应用》" class="headerlink" title="《GraphQL 实践与应用》"></a>《GraphQL 实践与应用》</h5><p> 朱林 / 腾讯 高级前端工程师</p><ul><li><p>讲师简介：</p><blockquote><p>朱林，腾讯高级前端工程师，腾讯 IVWEB 团队负责人之一。先后负责过 QQ 群活动、花样直播、NOW 直播、QQ 群视频等业务的前端开发和架构。在前端性能优化和 Node.js 方面有较深入的研究，对音视频相关的前端开发、服务端渲染、GraphQL 等技术栈有丰富的实践经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>一、课程概述</p><p>GraphQL Server 是一个开源的 GraphQL 服务器，它可用于所有 Node.js HTTP 服务器框架：Express、Connect、Hapi、Koa 和 Restify。 它是如何运行起来的？GraphQL 作为新一代的通信协议，GraphQL 自发布以来有哪些核心迭代？使用 GraphQL 协议进行前后端联调的体验又怎么样的？如何在企业应用中优雅地落地 GraphQL ？</p><p>本课程结合具体工程实例讲解，总结了企业应用落地实践的过程和经验，以及应用底层技术，帮助团队快速了解 GraphQL 开发核心技能，实现业务的低成本接入和稳定运营。</p><p>二、课程大纲</p><ol><li><p> GraphQL 基本架构及原理讲解</p></li><li><p> 开发调试与核心抽象</p></li><li><p> 面向 Schema 的研发模式</p></li><li><p> GraphQL Server 仓库管理及项目结构组织</p></li><li><p> GraphQL Client状态管理与常用框架原理</p></li><li><p> 企业级落地整体方案</p></li><li><p> GraphQL 版本迭代和未来展望</p></li></ol><p>三、听众收益</p><ol><li><p> 了解 GraphQL Server 开发框架及基本原理</p></li><li><p> 了解 GraphQL 前后端 开发调试</p></li><li><p> 了解 GraphQL 技术栈 集成方案</p></li><li><p> 了解 GraphQL 技术栈企业应用落地整体方案</p></li></ol><p>四、目标听众</p><ol><li><p> 前端开发团队</p></li><li><p> 全栈开发团队</p></li><li><p> GraphQL 爱好者</p></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2794">下载</a></p></li></ul><h5 id="《Serverless-实战与进阶》"><a href="#《Serverless-实战与进阶》" class="headerlink" title="《Serverless 实战与进阶》"></a>《Serverless 实战与进阶》</h5><p> 陈仲寅（张挺） / 阿里 前端技术专家</p><ul><li><p>讲师简介：</p><blockquote><p>陈仲寅（张挺），阿里前端技术专家，长期耕耘于 Node.js 技术栈。他为淘宝和阿里其他业务部门提供框架和中间件解决方案，负责淘宝整体的 Node.js 体系基础建设，解决全栈开发的各种维护和稳定性问题；也同时负责 MidwayJs 系列内部和社区开源产品，包括Midway、Sandbox、Pandora、Injection等开源产品的开发、维护等工作。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p> 一、课程概述</p><p>在铺天盖地的 Serverless 宣传时期，各大厂商纷纷推出了自己的云平台，不遗余力的发展自己的用户，在各大厂商焦灼战争的同时，业界也开始了对 Serverless 业务形态的研究和探索。我们能看到 Serverless 的灵活性和优势，也能看到它的与众不同。但是直至今日，还未有标准化或者成熟的实践，让各大公司都秉持官网的态度，很少有能够利用或者真正的迁移到 Serverless 体系的方案。</p><p>前端 Node.js 热度不减，在不同的领域都有着无可比拟的优势，在 Serverless 场景下，个大厂商都将其作为第一梯队的语言，大力支持。本课程会结合阿里巴巴集团在一年中，使用 Node.js 在 Serverless 平台将业务快速迁移和搭建的实践，通过具体的实例，结合 TypeScript 标准化，最新的 Midway 体系，将现有 Serverless 的灵活性，可靠性，低成本展现给大家，也让大家在开发选型和迁移业务的过程中，能够充分的了解 Serverless 的优势和劣势，并带回到自己的真正实践中。</p><p>二、课程大纲</p><ol><li><p>业界现有的 Serverless 体系介绍</p></li><li><p>函数计算平台介绍</p></li><li><p>函数编程和传统编码的区别</p></li><li><p>标准化函数</p></li><li><p>使用函数编程框架编码</p></li><li><p>使用不同的触发器</p></li><li><p>尝试函数跨平台部署</p></li><li><p>传统应用和其他场景的处理</p></li><li><p>根据函数热度进行聚合或者拆分</p></li><li><p>私有化场景</p></li></ol><p>三、听众收益</p><ol><li><p> 学习 Serverless 在实际场景上的应用</p></li><li><p> 学习函数计算在不同商业化平台的区别</p></li><li><p> 学习使用不同的函数计算平台，搭建一个可扩展，可复用的应用</p></li><li><p> 学习如何扩展现有函数场景</p></li></ol><p>四、目标听众</p><ol><li><p> 想要尝试 Serverless 研发，在新场景中应用的团队</p></li><li><p> 需要突破前端领域现有桎梏的团队</p></li><li><p> 迁移现有的 Node.js 应用到 Serverless 场景的团队</p></li><li><p> 想要节省开支的独立开发者</p></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2796">下载</a></p></li></ul><h4 id="主题演讲"><a href="#主题演讲" class="headerlink" title="主题演讲"></a>主题演讲</h4><blockquote></blockquote><h5 id="《InfoQ粤港澳大湾区规划》"><a href="#《InfoQ粤港澳大湾区规划》" class="headerlink" title="《InfoQ粤港澳大湾区规划》"></a>《InfoQ粤港澳大湾区规划》</h5><p> 霍泰稳 / 极客邦科技  创始人&amp;CEO</p><ul><li><p>讲师简介：</p><blockquote><p>霍泰稳，极客邦科技创始人兼 CEO。2007年创立 InfoQ 中国，2014年创立极客邦科技，并于当年收购 了InfoQ 大中华地区所有业务。现在极客邦科技是集媒体、会议、电商、培训、咨询、图书、出版、社交等服务于一体的世界级 IT 知识服务平台。霍泰稳凭借创新的运营理念、前瞻性的业务布局，企业迅速从单一经营到实现产业链全方位覆盖，十年内为千万技术人，3000+ 中国企业提供服务，业务遍布中国各城市，以及美国、法国、德国、荷兰、以色列、日本等国家。致力于让创新技术推动社会进步。</p><p>此外，霍泰稳还积极参与社会组织，2016年7月1日起任EO全球创业家协会北京分会会长。</p></blockquote></li><li><p>演讲简介：</p><blockquote></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2752">下载</a></p></li></ul><h5 id="《InfoQ-大前端观察-amp-GMTC-参会指南》"><a href="#《InfoQ-大前端观察-amp-GMTC-参会指南》" class="headerlink" title="《InfoQ 大前端观察&amp; GMTC 参会指南》"></a>《InfoQ 大前端观察&amp; GMTC 参会指南》</h5><p> 臧秀涛 / 极客邦科技 技术会议负责人</p><ul><li><p>讲师简介：</p><blockquote><p>臧秀涛，极客邦科技技术会议负责人。曾作为 QCon 全球软件开发大会主编策划了多届大会。2010 年毕业于中国科学院计算技术研究所。曾先后在完美世界等公司从事软件开发工作。2014 年加入InfoQ。业余喜爱读书和翻译，曾翻译出版过《C++ API 设计》《Groovy 程序设计》《Java 性能权威指南》等技术图书。业余也维护了一个微信公众号&ldquo;开发资讯（dev-news）&rdquo;，欢迎关注。</p></blockquote></li><li><p>演讲简介：</p><blockquote></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2748">下载</a></p></li></ul><h5 id="《JavaScript-的困境与挑战》"><a href="#《JavaScript-的困境与挑战》" class="headerlink" title="《JavaScript 的困境与挑战》"></a>《JavaScript 的困境与挑战》</h5><p> 贺师俊 / 360 高级前端架构师</p><ul><li><p>讲师简介：</p><blockquote><p>贺师俊（网名 Hax），360 高级前端架构师，十多年来一直活跃在前端和 JavaScript 社区。对多项 Web 标准有微小贡献，对 Groovy 语言并间接对 Swift 语言有微小贡献，近年来参与了诸多 ECMAScript 新草案的讨论。曾设计和实现 Jedi 语言并用于生产环境，对自研编程语言略有一点实践经验。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>最近几年以来，伴随着各个端平台的迅猛发展，以 TypeScript、Swift、Kotlin 和 Dart 为代表的新一代应用编程语言纷纷浮现，群雄环伺之下，JavaScript 也在不断演进。本次演讲我将分析 JavaScript 目前面对的问题，以及分析它下一步的发展趋势。</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2750">下载</a></p></li></ul><h5 id="《用-WebAssembly-赋能-AI-硬件》"><a href="#《用-WebAssembly-赋能-AI-硬件》" class="headerlink" title="《用 WebAssembly 赋能 AI 硬件》"></a>《用 WebAssembly 赋能 AI 硬件》</h5><p> 吕艺 /   Second State 技术副总裁</p><ul><li><p>讲师简介：</p><blockquote><p>吕艺，在IT技术领域从业19年，从事过 CRM、CallCenter 的系统集成与架构设计，在亚信工作期间成为移动业务专家。</p><p>2012年，在掌阅科技带领团队完成系统向微服务化方向的演进。</p><p>2015年，加入5miles，任 CTO，5miles App 是一款在美国市场排名靠前的二手交易平台，系统基于 AWS 云进行部署运行，在运用 Docker、Lambda 等容器技术与 Serverless 等方面有丰富的经验。</p><p>2017年，成立 CyberMiles 团队，开始区块链领域的研究工作，并于2018年10月与团队完成公链的开发与上线。在区块链应用研究方面，组织开发了区块链交易网关，可以让中心化的应用系统快速接入多种区块链体系。</p><p>2019年上线的 <a href="http://openbay.io/" rel="noopener noreferrer nofollow" target="_blank">openbay.io</a> 系统是基于区块链智能合约的电商平台，这是区块链应用的一次重要的尝试。</p><p>2019年中，在新创业公司 Second State 任技术副总裁，进行 WebAssembly 与 AI 硬件以及 Serverless 应用方面的研究和实践。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>硬件加速的神经网络芯片可以极大提高 AI 应用的用户体验，如今，市场上的中低端手机大多已经预装 AI 加速的芯片，但是传统浏览器与 App 开发工具并不能直接触达这样的芯片层硬件功能。</p><p>WebAssembly 技术能让广大用户与开发者真正从 AI 加速获益。WebAssembly 是一个在前端设备上有广泛支持，为性能优化的虚拟机。通过 WASI 扩展接口，我们可以使用它支持的20多种编程语言直接调用硬件接口，WebAssembly 的模块化安全设计保证了虚拟机硬件调用的安全。</p><p>我将会为大家介绍与演示 Second State 与 Qualcomm（高通）公司合作的开源 WebAssembly 虚拟机 SSVM。SSVM 与高通骁龙处理器的神经网络加速器结合，让中端手机也可以快速在本地完成图像识别与人脸识别等重度 AI 工作。</p><p>当然，硬件加速的AI芯片不只应用于手机终端。在数据中心与服务端的AI应用也越来越多。SSVM 可以在云原生的服务端提供 Serverless 的 AI 微服务。</p><p>演讲提纲：</p><ol><li><p> WebAssembly 的介绍</p></li><li><p> 用 Rust 写 WebAssembly 应用程序</p></li><li><p> WASI 的介绍</p></li><li><p> 高通骁龙神经网络加速器的编程实践</p></li><li><p> WebAssembly 在服务端的应用与示例</p></li></ol><p>听众收益：</p><ol><li><p>WebAssembly 的基础知识</p></li><li><p> Rust 的编程入门</p></li><li><p> 开源 WebAssembly SSVM 的安装与使用</p></li><li><p> 用高级语言通过 SSVM 调用 AI 加速器</p></li><li><p> 用 RPC 调用服务端的 WebAssembly 微服务</p></li></ol></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2789">下载</a></p></li></ul><h5 id="《由体验驱动的全链路监控》"><a href="#《由体验驱动的全链路监控》" class="headerlink" title="《由体验驱动的全链路监控》"></a>《由体验驱动的全链路监控》</h5><p> 刘恒兵（河伯） / 腾讯 前端技术专家/总监，IVWEB团队负责人</p><ul><li><p>讲师简介：</p><blockquote><p>刘恒兵（河伯），腾讯前端技术专家/总监，IVWEB团队负责人，行业技术大会TLC发起人。2011年加入腾讯，现任腾讯互动视频产品部，腾讯直播、NOW直播等移动直播产品Web负责人，负责互动视频业务前端整体架构设计和开发。有着多年 Web &amp; H5 移动开发经验，对移动监控和优化有深入研究并专注于全栈技术架构优化，推动组件生态，致力于打造高复用、高效率的全栈开发体系。同时，IVWEB团队是腾讯专业前端团队之一，培养多位行业讲师和技术专家，团队致力于新技术研究及行业交流分享。</p></blockquote></li><li><p>演讲简介：</p><blockquote><p>全链路监控核心要解决的问题是提效。用户对产品体验要求不断提高的今天，企业如何进一步提效满足用户需求。由传统的被动监控变为主动监听的监控便是我们需要的全链路监控。通过全链路监控，能主动发现问题、能对问题主动聚类分析、能主动了解用户在体验中遇到的不顺畅等，这些都是对全链路监控的要求。</p><p>同时，从用户进入到产品的那一刻，到用户离开产品的这段期间，用户所有的操作触发的全链路过程能够清晰的记录，并对用户的不顺畅体验乃至错误能够敏感及主动发现，并且能够推动后续快速优化，这是全链路监控服务的目标。</p></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2749">下载</a></p></li></ul><h5 id="《Innovation-and-Creativity》"><a href="#《Innovation-and-Creativity》" class="headerlink" title="《Innovation and Creativity》"></a>《Innovation and Creativity》</h5><p> 于航 / PayPal Senior Software Engineer</p><ul><li><p>讲师简介：</p><blockquote><p>于航，曾在阿里巴巴本地生活、Tapatalk 等国内外企业工作，现在 PayPal 上海负责 Global GRT 平台相关的技术研发工作；FCC (FreeCodeCamp China) 上海技术社区负责人；多次 QCon、GMTC 大会讲师；WebAssembly 技术布道者，2017 年注册成为 W3C 官方 CG 成员，定期参与 CG 组织的各种在线视频研讨会议，在跟进 Wasm 最新发展情况的同时也为 Wasm 的标准化提出自己的建议和意见。2018 年深度参与到 Emscripten 编译器工具链项目的研发工作中，同年出版名为《深入浅出 WebAssembly》的国内第一本 Wasm 技术书籍，为推动国内 Wasm 技术的发展和落地实践做出了微小的贡献。研究领域主要为前端基础技术架构、 Serverless、WebAssembly、LLVM 及编译器等相关方向。</p></blockquote></li><li><p>演讲简介：</p><blockquote></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2751">下载</a></p></li></ul><h5 id="《大前端质量保障体系概览》"><a href="#《大前端质量保障体系概览》" class="headerlink" title="《大前端质量保障体系概览》"></a>《大前端质量保障体系概览》</h5><p> 张杰 / 美团App 客户端测试团队负责人</p><ul><li><p>讲师简介：</p><blockquote><p>张杰，美团测试专家，GMTC2019（北京）&ldquo;质量保证&rdquo;专场出品人。曾就职于搜狐、百度、搜狗等知名互联网企业。从业十余年，先后带领过后端、移动端、Web端等多个方向的测试团队。目前专注于前端质量保障和研发效率提升两个方向。</p></blockquote></li><li><p>演讲简介：</p><blockquote></blockquote></li><li><p>PPT链接：<a href="http://ppt.geekbang.org/slide/download?cid=55&pid=2747">下载</a></p></li></ul><h3 id="4、思考"><a href="#4、思考" class="headerlink" title="4、思考"></a>4、思考</h3><p>正如上述，观看演讲和PPT时，至少要看懂题目，如果没有看懂，就提前准备相关知识，否则有一些技术或专场可能完全听不懂！渐渐的学习未知的世界~</p><h3 id="2019-12-29-更新"><a href="#2019-12-29-更新" class="headerlink" title="2019-12-29 更新"></a>2019-12-29 更新</h3><p>经过在微信公众号与池老师私信后，关于《GMTC》的内容虽然是公开，但是并不授权引用内容，所以可能导致侵权的行为，所以，后续不在分享相关内容，大家如果感兴趣，可以自行在 Infoq 关注。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://gmtc.infoq.cn/2019/shenzhen/schedule">GMTC全球大前端技术大会(深圳站)2019</a></li><li><a href="https://ppt.infoq.cn/list/gmtcsz2019">GMTC深圳2019幻灯片下载合集</a></li><li><a href="https://gmtc.infoq.cn/2019/beijing/schedule">GMTC全球大前端技术大会（北京站）2019</a></li><li><a href="https://ppt.infoq.cn/list/gmtcbj2019">GMTC北京2019PPT下载合集</a></li><li><a href="https://myslide.cn/events/24468">GMTC 2019 全球前端技术大会 | MySlide - 专注PPT分享，追随SlideShare和SpeakerDeck的脚步</a></li><li><a href="https://www.zhihu.com/question/330261935">参加 GMTC 2019 全球大前端技术大会你有什么收获？ - 知乎</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h3&gt;&lt;p&gt;工作5年来，一直投身于 iOS 开发，而这5年来移动开发一直再追赶web前端和后端开发的技术栈和思想，近2年大家直接说：“大前端”，移动开发真正变成了“UI”前端的开发，而web前端借助 Node 开始转了后端开发？正是借着这些变化，我一直在思考，一直在疑问，直到看了一些 GMTC 课程，就像命悬一线的人一下子打通了任督二脉，练习武功不再于形式，需要提升认知的境界！这是一个神奇的世界，一个最好的时代！最“坏”的时代！&lt;/p&gt;</summary>
    
    
    
    <category term="induction" scheme="https://ihtcboy.com/categories/induction/"/>
    
    
    <category term="GMTC2019" scheme="https://ihtcboy.com/tags/GMTC2019/"/>
    
    <category term="GMTC" scheme="https://ihtcboy.com/tags/GMTC/"/>
    
    <category term="大前端" scheme="https://ihtcboy.com/tags/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    <category term="前端全栈" scheme="https://ihtcboy.com/tags/%E5%89%8D%E7%AB%AF%E5%85%A8%E6%A0%88/"/>
    
    <category term="移动开发" scheme="https://ihtcboy.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【学习总结】02 | App 启动速度怎么做优化与监控？</title>
    <link href="https://ihtcboy.com/2019/12/20/2019-12-20_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE02/"/>
    <id>https://ihtcboy.com/2019/12/20/2019-12-20_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE02/</id>
    <published>2019-12-20T12:20:20.000Z</published>
    <updated>2020-08-22T03:15:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>首先，我认为学习总结，要有所总，所结，就是有归纳后，能用<code>自己的话</code>告诉别人！有所结，就是有所收获输出，一般我认为是<code>思维导图</code>，所以，每篇文章前，我都会先给出文章的脑图：</p><p><img src="https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-02-App%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6%E6%80%8E%E4%B9%88%E5%81%9A%E4%BC%98%E5%8C%96%E4%B8%8E%E7%9B%91%E6%8E%A7%EF%BC%9F.png" alt="iOS开发高手课-02-App启动速度怎么做优化与监控？.png"></p><span id="more"></span><h2 id="2、正文"><a href="#2、正文" class="headerlink" title="2、正文"></a>2、正文</h2><blockquote><p>注意，本系列总结不会引用或提供原课程文章所有的内容或代码，只会作出思维导图，需要学习可购买课程 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> </p></blockquote><p>本文作为第一篇，脑图中包含了一些学习的方法论，这里就不展开了，具体可以查看 <a href="https://ihtcboy.com/2020/02/02/2020-02-02_%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/">如何建立你自己的开发知识体系 | iHTCboy’s blog</a></p><h3 id="学习原则"><a href="#学习原则" class="headerlink" title="学习原则"></a>学习原则</h3><p><strong>授人以鱼不如授人以渔</strong></p><p>就想学习英语一样，每一个字母都认识，但是串联起来就不认识了。学习也一样，可能整篇文章大家<code>都看懂</code>了，但是对于其中的词语或句子，可能是不懂的，比如，<code> rebase 指针</code>、<code>attribute((constructor)) </code>、<code>selector 唯一性检查</code>、<code>动态库加载</code>、<code> ReactiveCocoa框架</code>、<code>抓取主线程调用栈</code>、<code>Mach-O</code>、<code>lazy 和 non-lazy 符号</code>、<code>rebind_symbol</code>、等。或者，整篇文章都<code>没有看懂</code>，但是每个字都认识。</p><p>第一种情况，对于不认识的关键字，在搜索引擎就能找到很多，只能说是懒或恐惧心态，让你永远不去了解。第二种情况，一般多见于是抽象的文章，比如项目架构、编程思想等，大家都懂 <code>MVC</code>/<code>MVVM</code>，就是说不出懂什么的感觉，这种情况，还是建议多广义的学习，更多的实践，<code>很多东西，还是较难做到言传，只能意会！</code></p><p>还有一种情况，我认为就是文章大家都看懂了，也没有什么疑问，但是忽略了一个面的概念，<code>把问题想太简单</code>，不会把知识点串联起来，不会触类旁通、融会贯通。举个例子，做过开发的都应该知道<code>单例模式</code>，如果不知道，搜索引擎都能搜索出一堆教程，并且介绍了来由，用途等，大家就知了知了。操作系统任务管理器、回收站、文件系统是不是一个单例？数据库连接池呢？生活中的例子，比如主席、CTO，对一个国家或一个公司，都是唯一的。</p><p>所以，第三种情况，目前来看大多数人看文章学习都达不到的层次，需要借助大量的阅读或别人的传授或指点，才能悟出来。所以，这就是我要说的，<code>授人以鱼不如授人以渔</code>，尽自己最大的已知学习和分享，这是一件快乐的事~</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><ul><li>冷启动<br>App 点击启动前，它的进程不在系统里，需要系统新创建一个进程分配给它启动的情况。这是一次完整的启动过程。</li><li>热启动<br>App 在冷启动后用户将 App 退后台，在 App 的进程还在系统里的情况下，用户重新启动进入 App 的过程，这个过程做的事情非常少。</li></ul><p>文章中简单的提到了<code>冷启动</code>、<code>热启动</code>。可能大家也是一看而过。这个启动其实是很重要的概念，不知道大家有没有留意，<code>汽车发动机的冷启动和热启动</code>、<code>电脑的冷启动和热启动</code>？那么，手机是不是也有冷启动和热启动？iOS有冷启动和热启动，那么Android是不是也有冷启动和热启动？那么App有冷启动和热启动，那么微信的小程序是不是也有冷启动和热启动？</p><p>答案是肯定的！它们都有！为什么呢？？？似乎所有的系统都有冷启动和热启动！那么，冷启动和热启动，那么对汽车的伤害更大吗？冷启动和热启动那个对性能损耗(消耗)更大呢？答案也是肯定的，是<code>冷启动</code>！</p><p>我是希望通过这个例子，让大家更加明白，一个简单的概念，可能很普通，但是一定不要放过！那么，到这里，针对<code>App 启动速度怎么做优化</code>，冷启动和热启动的重要性是不是自然而然就出来了，我们应该关注 <code>App的冷启动和热启动，减少冷启动，尽量让App在后台时能通过热启动打开。</code>，怎么理解呢？对于 iOS，系统严管管控手机的内存，当发现内存不足时，系统会全局发通知，让大家把不要的内存释放出来，如果大家都不释放，后台的应用就会被干掉，当然前台的应用如果占用内存超过阈值的话也会被干掉（kill）。所以，解决 <code>App 启动速度怎么做优化</code>，我们在写代码时，能注意到 App 内存使用情况，节省内存空间，减少不必要的内存创建，及时的释放内存等，都是对优化起到举足轻重的作用。</p><p>以上，就是<code>冷启动和热启动</code>，希望大家能感受到我一直说的<code>触类旁通</code>、<code>融会贯通</code>的理念。</p><h3 id="App的启动主要包括三个阶段"><a href="#App的启动主要包括三个阶段" class="headerlink" title="App的启动主要包括三个阶段"></a>App的启动主要包括三个阶段</h3><ol><li>main() 函数执行前</li><li>main() 函数执行后</li><li>首屏渲染完成后</li></ol><p>文章中说的内容，这里就不打算详细展开，简单的看本文的思维导图就可以，另外，文章中的很多细节的内容，在后续的篇章中会慢慢的介绍，这里就不展开，否则说不完事，大家感兴趣的，可以提前自行搜索，网络上真的都有了！本文需要提的是，解答一下前面说的几个有意思的问题</p><h4 id="1、-load-方法和-initialize-方法"><a href="#1、-load-方法和-initialize-方法" class="headerlink" title="1、 +load() 方法和 +initialize() 方法"></a>1、 +load() 方法和 +initialize() 方法</h4><p><code>+load()</code> 方法和 <code>+initialize()</code> 方法，大家都需要了解它们的区别和特性，这样才能更好的做性能优化。这里不作详细介绍，<code>网络上能找到的，我这里不都不会说</code>，除非值得注意的内容。</p><h4 id="2、-attribute-constructor-修饰的函数的调用"><a href="#2、-attribute-constructor-修饰的函数的调用" class="headerlink" title="2、 attribute((constructor)) 修饰的函数的调用"></a>2、 attribute((constructor)) 修饰的函数的调用</h4><p>这个是C语言的函数属性，有2种类型：<code> __attribute__((constructor))</code>和<code>__attribute__((destructor)) </code></p><pre><code>1）函数属性功能`__attribute__ ((constructor))`：会使函数在 `main()函数`之前执行`__attribute__ ((destructor))`：会使函数在 `main()函数`之后执行2）功能范围函数属性`__attribute__((constructor))`和`__attribute__((destructor))`在可执行文件或者库文件里都可以生效3）与全局变量比较全局变量对象的构造函数和析构函数分别在`__attribute__((constructor))`和`__attribute__((destructor))`标志的函数之前调用。4）PRIORITY 优先级<figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__attribute__((<span class="function"><span class="keyword">constructor</span><span class="params">(PRIORITY)</span>))</span></span><br><span class="line"><span class="function">__<span class="title">attribute__</span><span class="params">((<span class="keyword">destructor</span>(PRIORITY)</span>))</span></span><br></pre></td></tr></table></figure>`__attribute__((constructor))` 按照优先级小到大执行，`__attribute__((destructor(PRIORITY)))` 则是从大到小执行。注意：1、可执行程序或库文件都可以使用此属性修饰函数2、同一个可执行程序或库文件允许多个函数被修饰，执行顺序由代码编写顺序或编译链接顺序有关</code></pre><p>引用来源：<a href="https://blog.csdn.net/tianmohust/article/details/45310349">函数属性__attribute__((constructor))和__attribute__((destructor)) - tianmo2010的专栏</a></p><h4 id="3、objc-msgSend-方法和-hook-内容"><a href="#3、objc-msgSend-方法和-hook-内容" class="headerlink" title="3、objc_msgSend 方法和 hook 内容"></a>3、objc_msgSend 方法和 hook 内容</h4><p><code>hook</code>的概率在很多的语言都有，因为安全和越狱等，针对 iOS 的 hook 网上也非常多，这里也不详细说了，后面的章节如果有相关安全的在说吧。相信大家网络上一定能找到很多资料！</p><h4 id="4、怎样获取主线程调用栈？"><a href="#4、怎样获取主线程调用栈？" class="headerlink" title="4、怎样获取主线程调用栈？"></a>4、怎样获取主线程调用栈？</h4><p>相信有好奇心的同学，在阅读文章时，一定对怎样获取主线程调用栈的问题产生兴趣，但可能如果之前没有接触过，一定觉得太难了！根本找不到方向或者感觉！但是，你仔细想想，是不是真的这么难？没有方向？其实并不是，只要搜索一下，网络上也是一堆一堆的。当然，你想通过一篇文章就掌握所有这些相关的知识，那可能不太现实！<code>你一定要明白，不劳而获永远是获得最少的！</code>，所以，还是要靠自己努力，另外，后续的章节还会有这方面的深入知识，到时候在解答吧。希望大家能利用自己的学习能力，习得不亦乐乎！</p><h4 id="5、监控耗时和耗时统计"><a href="#5、监控耗时和耗时统计" class="headerlink" title="5、监控耗时和耗时统计"></a>5、监控耗时和耗时统计</h4><p>这个问题也值得大家注意，后续章节在一起讨论。</p><h4 id="6、源码阅读"><a href="#6、源码阅读" class="headerlink" title="6、源码阅读"></a>6、源码阅读</h4><p>苹果公司已经开源了 Objective-C 的运行时代码。你可以在苹果公司的开源网站，找到 <a href="https://opensource.apple.com/source/objc4/objc4-723/runtime/Messengers.subproj/">objc_msgSend的源码</a>。</p><p>Facebook 开源了一个hook库，可以在 iOS 上运行的 Mach-O 二进制文件中动态地重新绑定符号，这个库叫 <a href="https://github.com/facebook/fishhook">fishhook</a>。</p><p>针对这种源码，大多数人一定说，我看不懂！我看不懂！我看不懂！</p><p>这个，与下面这个问题相似，一起来回答吧</p><h4 id="7、C语言、汇编语言-看不懂？！"><a href="#7、C语言、汇编语言-看不懂？！" class="headerlink" title="7、C语言、汇编语言 看不懂？！"></a>7、C语言、汇编语言 看不懂？！</h4><p>看不懂？看不懂？看不懂？</p><p>有没有发现，我们小时候也不懂中文，现在怎么就看懂了呢！学啊！学啊！学啊！</p><p>怎么学？ 从<code>入门</code>到放弃啊！怎么入门？</p><p>网络上有很多优秀的资源，大家如果真的感兴趣，一定要主动去了解，一味地抗拒永远不会得到结果和答案。<a href="http://www.ruanyifeng.com/blog/2018/01/assembly-language-primer.html">汇编语言入门教程 - 阮一峰的网络日志</a> ，汇编语言入门学习就是这样简单，<code>没有看不懂，只有不看懂！</code></p><p>人生苦短，我们努力吧~</p><h4 id="8、其它问题"><a href="#8、其它问题" class="headerlink" title="8、其它问题"></a>8、其它问题</h4><p>其它的还有很多问题，这里就不一一指出，比如 <code>Swift 有 main 函数吗</code>？希望大家 <code>多疑问，多思考，多总结！</code>，这样成长更快啦~</p><h2 id="3、总结"><a href="#3、总结" class="headerlink" title="3、总结"></a>3、总结</h2><p>回到本文的主题，“App 启动速度怎么做优化与监控？”，优化，不知道大家是否还记得之前的第一篇文章说到的，不记得的可以回去看看。监控的话，这里没有详细提到，因为<code>性能监控</code>只是<code>监控系统</code>的一小部分，后面的章节在细节展开吧。</p><p>这里先给出一个大纲，关于开发相关的工程优化，因为这也是我们从 <a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a> 来，我们要干什么？到那里去呢？</p><ul><li>可以做什么？</li></ul><ol><li>工程优化：代码、规范、性能、AOP、日志</li><li>工程监控：耗时、内存、网络、卡顿、崩溃、瘦身、耗电</li><li>工程效率：响应式框架、函数式编程、APM、监控系统</li><li>技术深研：RN、Flutter、小程序、动态化</li></ol><p>很多知识点，大家现在看到这篇文章感觉一气呵成，水到渠成的样子，但是其实是一点一点的思考和触想，可能有一个概念很久之前就有，但是怎么把这些知识串联一起，确实是需要非常深厚的功能，才能做到。所以，本次系列，我只能说尽量自己的力量，因为<code>我相信不管是后来者，还是以后的我，都一定超越现在的我！</code>，所以，如果未来可以，可以在重写此系列，也是一件令人愉快的事！</p><p>注：更多关于 iOS 开发和程序开发相关的内容，可以查看此系列，目前还在连载中 <a href="https://ihtcboy.com/2020/02/01/2020-02-01_iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/">【学习总结】iOS开发高手课 – (连载中)| iHTCboy’s blog</a>，以上，希望对你有用！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://gk.link/a/10fRy">《iOS开发高手课 - 极客时间》</a></li><li><a href="https://ming1016.github.io/">星光社 - 戴铭的博客</a></li></ul><p>WWDC:</p><ul><li><a href="https://developer.apple.com/videos/play/wwdc2016/406">WWDC2016-406-Optimizing App Startup Time</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2017/413">WWDC2017-413-App Startup Time:Past,Present,and Future</a></li></ul><p>Article:</p><ul><li><a href="https://www.jianshu.com/p/e7f8459aaf38">iOS 在循环中使用计算属性导致内存暴涨 - 简书</a></li><li><a href="https://www.jianshu.com/p/0ad9957e3716">可能碰到的iOS笔试面试题（6）–内存管理 - 简书</a></li><li><a href="https://juejin.im/post/5aca2b0a6fb9a028d700e1f8">iOS RunLoop详解 - 掘金</a></li><li><a href="https://www.jianshu.com/p/be413358cd45">dyld简介及加载过程分析 - 简书</a></li><li><a href="https://juejin.im/post/5c8e278d51882545b32e657f">App启动之Dyld在做什么 - 掘金</a></li><li><a href="https://github.com/facebook/fishhook">facebook/fishhook: A library that enables dynamically rebinding symbols in Mach-O binaries running on iOS.</a></li><li><a href="https://github.com/vsouza/awesome-ios">vsouza/awesome-ios: A curated list of awesome iOS ecosystem, including Objective-C and Swift Projects</a></li><li><a href="https://github.com/ming1016/GCDFetchFeed">ming1016/GCDFetchFeed: “已阅”新版，RSS阅读器，使用FMDB做存储，ReactiveCocoa处理数据流向</a></li><li><a href="https://github.com/ming1016/SMCheckProject">ming1016/SMCheckProject: 使用Swift3开发了个MacOS的程序可以检测出objc项目中无用方法，然后一键全部清理</a></li><li><a href="http://www.ruanyifeng.com/blog/2018/01/assembly-language-primer.html">汇编语言入门教程 - 阮一峰的网络日志</a></li><li><a href="https://www.jianshu.com/p/7a340cd87d04">UIApplicationMain函数 - 简书</a></li><li><a href="http://www.zoomfeng.com/blog/launch-time.html">iOS启动时间优化 - 第七章</a></li><li><a href="https://blog.automatic.com/how-we-cut-our-ios-apps-launch-time-in-half-with-this-one-cool-trick-7aca2011e2ea">How we cut our iOS app’s launch time in half (with this one cool trick)</a></li><li><a href="https://blog.csdn.net/Hello_Hwc/article/details/78317863">深入理解iOS App的启动过程</a></li><li><a href="https://www.jianshu.com/p/c14987eee107">如何精准度量iOSAPP启动时间</a></li><li><a href="http://yulingtianxia.com/blog/2016/10/30/Optimizing-App-Startup-Time/">优化 App 的启动时间-杨萧玉</a></li><li><a href="https://techblog.toutiao.com/2017/01/17/iosspeed/#more">iOS客户端启动速度优化-今日头条</a></li><li><a href="https://mp.weixin.qq.com/s/Kf3EbDIUuf0aWVT-UCEmbA">iOS App 启动性能优化-WiFi管家</a></li><li><a href="http://www.cocoachina.com/ios/20160104/14870.html">iOS App如何优化启动时间-Facebook</a></li><li><a href="https://juejin.im/post/5a31190751882559e225a775">一次立竿见影的启动时间优化</a></li><li><a href="https://objccn.io/issue-6-3/">obj中国-Mach-O 可执行文件</a></li><li><a href="https://zhuanlan.zhihu.com/p/38183046?from=1086193010&wm=3333_2001&weiboauthoruid=1690182120">iOS app启动速度研究实践</a></li><li><a href="https://mp.weixin.qq.com/s/jN3jaNrvXczZoYIRCWZs7w">iOS App冷启动治理：来自美团外卖的实践</a></li><li><a href="https://juejin.im/post/5b1f1d3a6fb9a01e6e2baded">iOS动态库的使用</a></li><li><a href="https://juejin.im/post/5c8e278d51882545b32e657f">App启动之Dyld在做什么</a></li><li><a href="https://blog.csdn.net/abc649395594/article/details/52350426">获取任意线程调用栈的那些事 - KT的iOS开发小站</a></li><li><a href="https://juejin.im/post/5c3c56eff265da614f708595">谈谈iOS获取调用链 - 掘金</a></li><li><a href="https://blog.csdn.net/tianmohust/article/details/45310349">函数属性__attribute__((constructor))和__attribute__((destructor)) - tianmo2010的专栏</a></li><li><a href="https://wetest.qq.com/lab/view/434.html">真香！iOS云真机全新上线！ - 腾讯WeTest</a></li><li><a href="https://testerhome.com/topics/20866">iOS 云真机实现原理 · TesterHome</a></li><li><a href="https://www.jianshu.com/p/c14987eee107">如何精确度量 iOS App 的启动时间 - 简书</a></li></ul><br><ul><li>如有侵权，联系必删！</li><li>如有不正确的地方，欢迎指导！</li><li>如有疑问，欢迎在评论区一起讨论！</li></ul><br><blockquote><p>注：本文首发于 <a href="https://ihtcboy.com/">iHTCboy’s blog</a>，如若转载，请注来源<br><br></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h2&gt;&lt;p&gt;首先，我认为学习总结，要有所总，所结，就是有归纳后，能用&lt;code&gt;自己的话&lt;/code&gt;告诉别人！有所结，就是有所收获输出，一般我认为是&lt;code&gt;思维导图&lt;/code&gt;，所以，每篇文章前，我都会先给出文章的脑图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/iHTCboy/iGallery/raw/master/BlogImages/2019/12/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE-02-App%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6%E6%80%8E%E4%B9%88%E5%81%9A%E4%BC%98%E5%8C%96%E4%B8%8E%E7%9B%91%E6%8E%A7%EF%BC%9F.png&quot; alt=&quot;iOS开发高手课-02-App启动速度怎么做优化与监控？.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technology" scheme="https://ihtcboy.com/categories/technology/"/>
    
    
    <category term="iOS开发高手课" scheme="https://ihtcboy.com/tags/iOS%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/"/>
    
    <category term="学习总结" scheme="https://ihtcboy.com/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    <category term="Optimize" scheme="https://ihtcboy.com/tags/Optimize/"/>
    
    <category term="冷启动" scheme="https://ihtcboy.com/tags/%E5%86%B7%E5%90%AF%E5%8A%A8/"/>
    
    <category term="热启动" scheme="https://ihtcboy.com/tags/%E7%83%AD%E5%90%AF%E5%8A%A8/"/>
    
    <category term="启动优化" scheme="https://ihtcboy.com/tags/%E5%90%AF%E5%8A%A8%E4%BC%98%E5%8C%96/"/>
    
    <category term="性能优化" scheme="https://ihtcboy.com/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    <category term="程序优化" scheme="https://ihtcboy.com/tags/%E7%A8%8B%E5%BA%8F%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
